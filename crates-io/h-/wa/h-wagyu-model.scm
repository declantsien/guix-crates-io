(define-module (crates-io h- wa h-wagyu-model) #:use-module (crates-io))

(define-public crate-h-wagyu-model-0.6.3 (c (n "h-wagyu-model") (v "0.6.3") (d (list (d (n "base58") (r "^0.1") (d #t) (k 0)) (d (n "base58-monero") (r "^0.2.0") (d #t) (k 0)) (d (n "bech32") (r "^0.6") (d #t) (k 0)) (d (n "byteorder") (r "^1") (k 0)) (d (n "crypto-mac") (r "^0.7.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.9.2") (k 0)) (d (n "failure") (r "^0.1.8") (f (quote ("derive"))) (k 0)) (d (n "ff") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (f (quote ("hmac"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand_core") (r "^0.5.1") (k 0)) (d (n "ripemd160") (r "^0.8") (k 0)) (d (n "rlp") (r "^0.4") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 0)) (d (n "sha2") (r "^0.8") (k 0)) (d (n "uint") (r "^0.8.3") (k 0)))) (h "0i1amz8gf6l1plkhgg52zfr0p2g6pw4j42bw688iycn028wvc03q") (f (quote (("std" "ff") ("default" "std"))))))

