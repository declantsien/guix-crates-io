(define-module (crates-io ns on nson) #:use-module (crates-io))

(define-public crate-nson-0.1.0 (c (n "nson") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)))) (h "1ghg173255qxgj008gbdc7ri3drmbhz4dmh9jf3bvyx9wsws72dp")))

(define-public crate-nson-0.1.1 (c (n "nson") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)))) (h "14k3xs6hqdd6wsnlhhwrdvjrkighdx79clxa648ybsdgadclaiim")))

(define-public crate-nson-0.1.2 (c (n "nson") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)))) (h "0rdk7qav9zpi4l2qc578c60vk7g3i9zkw8yli3mas8vd2f6hb847")))

(define-public crate-nson-0.1.3 (c (n "nson") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)))) (h "1ph6sx09g5g3q2jldwcg1k3m8s1ifm2r720xw6y8262q5akj9fns")))

(define-public crate-nson-0.2.0 (c (n "nson") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1wa4g22209vghr6chdg63yp1insz3szf8ix3fq91hdmcsw4yqryk")))

(define-public crate-nson-0.2.1 (c (n "nson") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "02hn3hg3hjmy11yrcydr9npp8sdbfc58h4jpx56n6baxli99h3n6")))

(define-public crate-nson-0.2.3 (c (n "nson") (v "0.2.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.10") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0wda9mvk5a4wap2glvdq6yskav009phkwx794mr1jknwhmj4hn2q")))

(define-public crate-nson-0.2.4 (c (n "nson") (v "0.2.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1zgsnhp45ppq5d8jbgfblpa3dd423zi39iicq31y253147g8hwyg")))

(define-public crate-nson-0.2.5 (c (n "nson") (v "0.2.5") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "03icgq8hyhypymkd1r1hczrynb6g81ql5b1camc7c53jn8vri2ik")))

(define-public crate-nson-0.2.6 (c (n "nson") (v "0.2.6") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1h19w6220m7dmmjlfmbp8rjqkgzz1x6h0nsdkvffrmqz50iz2l29")))

(define-public crate-nson-0.3.0 (c (n "nson") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "15dgvf20500nffag2svc4l5a16jwnckyyh7fl3d1mlpgirgxc24n")))

(define-public crate-nson-0.3.1 (c (n "nson") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1l4n6sv1pvax9mm7ipixncpd4vns5zgc8bb4x843vmh7kj6mblwx")))

(define-public crate-nson-0.3.2 (c (n "nson") (v "0.3.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "07m246jrv4ga3g0z42c2iaxzvm3d500ff002szxqn0cby9iglwjl")))

(define-public crate-nson-0.3.3 (c (n "nson") (v "0.3.3") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "09w40hvpyilkwl4mzgyffvnn8dhn6yq5la3psrndkddiqkjsq98z")))

(define-public crate-nson-0.3.4 (c (n "nson") (v "0.3.4") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "18l3fxf58y5cawc262f8999qgf5iigv0gadnb0maghx4jqi3njn4")))

(define-public crate-nson-0.3.5 (c (n "nson") (v "0.3.5") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1wypcq80ildv6645f903p047yipsbslyscjvdnrff2g59dyhsy64")))

(define-public crate-nson-0.3.6 (c (n "nson") (v "0.3.6") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0maazd3l0zc5s4dkx1hi183l72600w2v8bpxzrrmw4cq862jqwiz")))

(define-public crate-nson-0.3.7 (c (n "nson") (v "0.3.7") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0wxyvw7m2q72cca0xcwnzwag0rzwrm5n96idfx3hkjwd0y6symiz")))

(define-public crate-nson-0.3.8 (c (n "nson") (v "0.3.8") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0pskjbyqpzyz2xlyivyaf0pnzj8gp26bn2rjgy1wz7ww5r0pvb5g")))

(define-public crate-nson-0.4.0 (c (n "nson") (v "0.4.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0azadvxybhcdzwq50165dj8vwx8valpxdcb001s693gg2mzgiy50")))

(define-public crate-nson-0.5.0 (c (n "nson") (v "0.5.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0jk491gf579amahc31p8vpfsq89y00kf1b3n1xyiny2qk234qasr")))

(define-public crate-nson-0.5.1 (c (n "nson") (v "0.5.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0ps2x58m5xlzfgpmib0jqsa0cynwqp716hs16lmms3d2ra44sxrb")))

(define-public crate-nson-0.6.0 (c (n "nson") (v "0.6.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0ikisyb1vdzyabkvwq0bla0n53bw19zyzpr6zw80lahvhsnsdhnm")))

(define-public crate-nson-0.6.1 (c (n "nson") (v "0.6.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0ca51v2x6vjy4cmsb0ng4ilzzjjv85qs4rvb4m6idcmbxw2a878p")))

(define-public crate-nson-0.7.0 (c (n "nson") (v "0.7.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0f4m7lkbvj372b68wndqqg5pr4qsmzs0z4qg3qiy9m83908v9vqk")))

(define-public crate-nson-0.7.1 (c (n "nson") (v "0.7.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1cbkrw0sbmvag2bkzk5qbz7lrcqfxlyn0456cd100sksp5m01hc3")))

(define-public crate-nson-0.8.0 (c (n "nson") (v "0.8.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0irs6nm2jj7313n442j08afjwh4c9r19f1r1is2zvygda64am762")))

(define-public crate-nson-0.8.2 (c (n "nson") (v "0.8.2") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1bqg5xdyzr9hrp6spm7z51qyrdbb1qmmqb7790xal0vp4xylfs47")))

(define-public crate-nson-0.8.3 (c (n "nson") (v "0.8.3") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0jigkhdrs9cbfjzvszvyrmsjw2ilqm5jw5rym0jmmmd25dcvd1p6")))

(define-public crate-nson-0.8.4 (c (n "nson") (v "0.8.4") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0y9wnk7kcrsz6bbxz6js42k6i313n8syzffznv028k1bnwysxls8")))

(define-public crate-nson-0.8.6 (c (n "nson") (v "0.8.6") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0kg3b44n09nxlkmm58hs6pij0rbfz8sinf7y0394y7rp3h95aqjx")))

(define-public crate-nson-0.9.0 (c (n "nson") (v "0.9.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0dk4mxy347ljn0jarqv1xwajg4jl5qr5wnpa59wxgyq6svxhmpyr") (y #t)))

(define-public crate-nson-0.9.1 (c (n "nson") (v "0.9.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0jgjhjbzm6m4g4chdyqvc73r2x2i4jzp1mwhrgbll01hs9c5safh")))

(define-public crate-nson-0.10.0 (c (n "nson") (v "0.10.0") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1qachclzaygn1xs4r5ac99022m3rpnmlpv9828mxabs17zkigj5c")))

(define-public crate-nson-0.10.1 (c (n "nson") (v "0.10.1") (d (list (d (n "base64") (r "^0.12") (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1zvv432dy06g9nqwvv8i473pcnwsvk898583r9f4zjjjjzl3fnjj")))

(define-public crate-nson-0.11.0 (c (n "nson") (v "0.11.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1kk63jmm9w1gsmy2fqmjdfqsr6jj24kk5bp9gj0mf6xihwix5xy8")))

(define-public crate-nson-0.12.0 (c (n "nson") (v "0.12.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0qk6f1i28s2gsdq3z0d02xqkxyk21sbkbpbhicnwwq15g38bxifp")))

(define-public crate-nson-0.12.1 (c (n "nson") (v "0.12.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "01ydxr25wddszz7dqpx3wcsvyifwkhvvnr7wbrw7p60j6fkbxm96")))

(define-public crate-nson-0.14.0-rc1 (c (n "nson") (v "0.14.0-rc1") (d (list (d (n "base64") (r "^0.22") (o #t) (k 0)) (d (n "embedded-io") (r "^0.6") (o #t) (k 0)) (d (n "hash32") (r "^0.3") (o #t) (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (k 0)))) (h "1jgwy4ggsrlml3fvvdq4zdj3c3y8nzc7219i48k8chv6742693ci") (f (quote (("no_std" "alloc" "serde" "json" "embedded") ("json" "serde_json" "base64") ("embedded" "embedded-io") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "indexmap/std" "rand/std" "rand/std_rng" "hex/std" "once_cell/std" "serde/std" "serde_bytes/std" "serde_json?/std" "base64?/std") ("serde" "dep:serde" "serde_bytes") ("alloc" "hex/alloc" "once_cell/alloc" "hash32" "serde?/alloc" "serde_bytes?/alloc" "serde_json?/alloc" "base64?/alloc" "embedded-io?/alloc"))))))

(define-public crate-nson-0.14.0-rc2 (c (n "nson") (v "0.14.0-rc2") (d (list (d (n "base64") (r "^0.22") (o #t) (k 0)) (d (n "hash32") (r "^0.3") (o #t) (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (k 0)))) (h "08blycg2v4hw2xjzyvg83cn40db8sp936v0i4l87llxck3avzyjd") (f (quote (("json" "serde" "serde_json" "base64") ("default" "std" "serde")))) (s 2) (e (quote (("std" "indexmap/std" "rand/std" "rand/std_rng" "hex/std" "once_cell/std" "serde?/std" "serde_bytes?/std" "serde_json?/std" "base64?/std") ("serde" "dep:serde" "serde_bytes") ("alloc" "hex/alloc" "once_cell/alloc" "hash32" "serde?/alloc" "serde_bytes?/alloc" "serde_json?/alloc" "base64?/alloc"))))))

(define-public crate-nson-0.14.0-rc3 (c (n "nson") (v "0.14.0-rc3") (d (list (d (n "base64") (r "^0.22") (o #t) (k 0)) (d (n "hash32") (r "^0.3") (o #t) (k 0)) (d (n "hex") (r "^0.4") (k 0)) (d (n "indexmap") (r "^2.2") (f (quote ("serde"))) (k 0)) (d (n "once_cell") (r "^1.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (k 0)))) (h "0gjwphihvvv753h1ciyggfkq6hqr15n1s8480zdi8faqzzv64qfv") (f (quote (("json" "serde" "serde_json" "base64") ("default" "alloc" "serde")))) (s 2) (e (quote (("std" "alloc" "indexmap/std" "rand/std" "rand/std_rng" "hex/std" "once_cell/std" "serde?/std" "serde_bytes?/std" "serde_json?/std" "base64?/std") ("serde" "dep:serde" "serde_bytes") ("alloc" "hex/alloc" "once_cell/alloc" "hash32" "serde?/alloc" "serde_bytes?/alloc" "serde_json?/alloc" "base64?/alloc"))))))

