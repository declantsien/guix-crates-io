(define-module (crates-io ic -w ic-wasm-bindgen) #:use-module (crates-io))

(define-public crate-ic-wasm-bindgen-0.2.87 (c (n "ic-wasm-bindgen") (v "0.2.87") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "=0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-macro") (r "=0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "=0.3.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test-crate-a") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-test-crate-b") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "00mjqrlx6w64h2fn4w2x0zbdgpxv6b7689hd5805viylab740ai3") (f (quote (("xxx_debug_only_print_generated_code" "wasm-bindgen-macro/xxx_debug_only_print_generated_code") ("strict-macro" "wasm-bindgen-macro/strict-macro") ("std") ("spans" "wasm-bindgen-macro/spans") ("serde-serialize" "serde" "serde_json" "std") ("gg-alloc" "wasm-bindgen-test/gg-alloc") ("enable-interning" "std") ("default" "spans" "std")))) (r "1.56")))

