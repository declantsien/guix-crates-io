(define-module (crates-io ic u_ icu_list) #:use-module (crates-io))

(define-public crate-icu_list-0.0.1 (c (n "icu_list") (v "0.0.1") (h "1vxmyf8zl45b5x82rp220ww4va94mfjnbl1bnws8cqpkv4wj6lbl")))

(define-public crate-icu_list-0.6.0 (c (n "icu_list") (v "0.6.0") (d (list (d (n "crabbake") (r "^0.4") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "deduplicating_array") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.6") (d #t) (k 2)) (d (n "icu_locid") (r "^0.6") (d #t) (k 0)) (d (n "icu_provider") (r "^0.6") (f (quote ("macros"))) (d #t) (k 0)) (d (n "postcard") (r "^0.7") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.4") (d #t) (k 0)) (d (n "zerovec") (r "^0.7") (f (quote ("yoke"))) (d #t) (k 0)))) (h "0p1c28x3q9b1qgf584b8llzli0xz99ac86llnvf6l3yyp1sd0i61") (f (quote (("std" "icu_provider/std" "icu_locid/std" "regex-automata/std" "regex-automata/alloc") ("serde_human" "serde" "regex-automata/alloc") ("datagen" "serde" "std" "crabbake")))) (s 2) (e (quote (("serde" "dep:serde" "icu_provider/serde" "zerovec/serde" "deduplicating_array"))))))

(define-public crate-icu_list-1.0.0-beta1 (c (n "icu_list") (v "1.0.0-beta1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "databake") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "deduplicating_array") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.7") (d #t) (k 2)) (d (n "icu_locid") (r "^1.0.0-beta1") (d #t) (k 0)) (d (n "icu_provider") (r "^1.0.0-beta1") (f (quote ("macros"))) (d #t) (k 0)) (d (n "postcard") (r "^1.0.0-alpha.4") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.4") (d #t) (k 0)) (d (n "zerovec") (r "^0.8") (f (quote ("yoke"))) (d #t) (k 0)))) (h "0fdjsdl1si3m2jhrmymbd53si97hsl76bji71ncy9y8zcvlscvs6") (f (quote (("std" "icu_provider/std" "icu_locid/std" "regex-automata/std" "regex-automata/alloc") ("serde_human" "serde" "regex-automata/alloc") ("datagen" "serde" "std" "databake") ("bench")))) (s 2) (e (quote (("serde" "dep:serde" "icu_provider/serde" "zerovec/serde" "deduplicating_array"))))))

(define-public crate-icu_list-1.0.0 (c (n "icu_list") (v "1.0.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "databake") (r "^0.1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "deduplicating_array") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.7") (d #t) (k 2)) (d (n "icu_locid") (r "^1.0.0") (d #t) (k 0)) (d (n "icu_provider") (r "^1.0.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.5") (d #t) (k 0)) (d (n "zerovec") (r "^0.9") (f (quote ("yoke"))) (d #t) (k 0)))) (h "1cb807va16f03jsdrhrd9irhcyv4jm9pqdchy69l8708bwkih0n4") (f (quote (("std" "icu_provider/std" "icu_locid/std" "regex-automata/std" "regex-automata/alloc") ("serde_human" "serde" "regex-automata/alloc") ("datagen" "serde" "std" "databake") ("bench")))) (s 2) (e (quote (("serde" "dep:serde" "icu_provider/serde" "zerovec/serde" "deduplicating_array"))))))

(define-public crate-icu_list-1.1.0 (c (n "icu_list") (v "1.1.0") (d (list (d (n "databake") (r "^0.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "deduplicating_array") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_provider") (r "^1.1.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (d #t) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.5.1") (d #t) (k 0)))) (h "11ppqs1i1rhakmflkpc5wkqhjjp8lvm5ij35w73k6z5prbq5z9h1") (f (quote (("std" "icu_provider/std") ("serde_human" "serde" "regex-automata/alloc") ("bench")))) (s 2) (e (quote (("serde" "dep:deduplicating_array" "dep:serde" "icu_provider/serde") ("datagen" "serde" "std" "dep:databake" "regex-automata/alloc"))))))

(define-public crate-icu_list-1.2.0 (c (n "icu_list") (v "1.2.0") (d (list (d (n "databake") (r "^0.1.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "deduplicating_array") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_provider") (r "^1.2.0") (f (quote ("macros"))) (d #t) (k 0)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.5.1") (d #t) (k 0)))) (h "144z5ispb0n21jjipn0gk0s9j8paab21gkpxsj4vcdcj5m2afyzx") (f (quote (("std" "icu_provider/std") ("serde_human" "serde" "regex-automata/alloc") ("bench")))) (s 2) (e (quote (("serde" "dep:deduplicating_array" "dep:serde" "icu_provider/serde") ("datagen" "serde" "std" "dep:databake" "regex-automata/alloc"))))))

(define-public crate-icu_list-1.3.0 (c (n "icu_list") (v "1.3.0") (d (list (d (n "databake") (r "^0.1.6") (f (quote ("derive"))) (o #t) (k 0)) (d (n "deduplicating_array") (r "^0.1.5") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_list_data") (r "~1.3.0") (o #t) (k 0)) (d (n "icu_locid_transform") (r "~1.3.0") (f (quote ("compiled_data"))) (o #t) (k 0)) (d (n "icu_provider") (r "~1.3.0") (f (quote ("macros"))) (k 0)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.5.3") (k 0)))) (h "1a5yf64dh3saa3x13p5x2fw7ianf75al6cmq0x70sryrzb77j148") (f (quote (("std" "icu_provider/std") ("serde_human" "serde" "regex-automata/alloc") ("default" "compiled_data") ("bench")))) (s 2) (e (quote (("serde" "dep:deduplicating_array" "dep:serde" "icu_provider/serde") ("datagen" "serde" "std" "dep:databake" "regex-automata/alloc") ("compiled_data" "dep:icu_list_data" "dep:icu_locid_transform")))) (r "1.66")))

(define-public crate-icu_list-1.3.2 (c (n "icu_list") (v "1.3.2") (d (list (d (n "databake") (r "^0.1.6") (f (quote ("derive"))) (o #t) (k 0)) (d (n "deduplicating_array") (r "^0.1.5") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_list_data") (r "~1.3.2") (o #t) (k 0)) (d (n "icu_locid_transform") (r "~1.3.2") (f (quote ("compiled_data"))) (o #t) (k 0)) (d (n "icu_provider") (r "~1.3.2") (f (quote ("macros"))) (k 0)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.5.3") (k 0)))) (h "145x1kal66a540fr12j35d0c2ppp8d5xvmzransyg9vpxnxl86nw") (f (quote (("std" "icu_provider/std") ("serde_human" "serde" "regex-automata/alloc") ("default" "compiled_data") ("bench")))) (s 2) (e (quote (("serde" "dep:deduplicating_array" "dep:serde" "icu_provider/serde") ("datagen" "serde" "std" "dep:databake" "regex-automata/alloc") ("compiled_data" "dep:icu_list_data" "dep:icu_locid_transform")))) (r "1.66")))

(define-public crate-icu_list-1.4.0 (c (n "icu_list") (v "1.4.0") (d (list (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (o #t) (k 0)) (d (n "deduplicating_array") (r "^0.1.5") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_list_data") (r "~1.4.0") (o #t) (k 0)) (d (n "icu_locid_transform") (r "~1.4.0") (f (quote ("compiled_data"))) (o #t) (k 0)) (d (n "icu_provider") (r "~1.4.0") (f (quote ("macros"))) (k 0)) (d (n "postcard") (r "^1.0.0") (f (quote ("use-std"))) (k 2)) (d (n "regex-automata") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "writeable") (r "^0.5.4") (k 0)))) (h "0m4zyppj3xc0m3qr83rlv4rha2pq0544s5j7zgdsq6xdf7n08v7y") (f (quote (("std" "icu_provider/std") ("serde_human" "serde" "regex-automata/alloc") ("default" "compiled_data") ("bench")))) (s 2) (e (quote (("serde" "dep:deduplicating_array" "dep:serde" "icu_provider/serde") ("datagen" "serde" "std" "dep:databake" "regex-automata/alloc") ("compiled_data" "dep:icu_list_data" "dep:icu_locid_transform")))) (r "1.67")))

(define-public crate-icu_list-1.5.0 (c (n "icu_list") (v "1.5.0") (d (list (d (n "databake") (r "^0.1.8") (f (quote ("derive"))) (o #t) (k 0)) (d (n "deduplicating_array") (r "^0.1.6") (o #t) (k 0)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_list_data") (r "~1.5.0") (o #t) (k 0)) (d (n "icu_locid_transform") (r "~1.5.0") (f (quote ("compiled_data"))) (o #t) (k 0)) (d (n "icu_provider") (r "~1.5.0") (f (quote ("macros"))) (k 0)) (d (n "postcard") (r "^1.0.1") (f (quote ("use-std"))) (k 2)) (d (n "regex-automata") (r "^0.2.0") (k 0)) (d (n "rmp-serde") (r "^1.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.110") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.45") (d #t) (k 2)) (d (n "writeable") (r "^0.5.5") (k 0)))) (h "0rf3czrm7831i7hmdasnxn8rlmaa61i7b2sfvn759dkmfwfxmzmv") (f (quote (("std" "icu_provider/std") ("serde_human" "serde" "regex-automata/alloc") ("default" "compiled_data") ("bench")))) (s 2) (e (quote (("serde" "dep:deduplicating_array" "dep:serde" "icu_provider/serde") ("datagen" "serde" "std" "dep:databake" "regex-automata/alloc") ("compiled_data" "dep:icu_list_data" "dep:icu_locid_transform")))) (r "1.67")))

