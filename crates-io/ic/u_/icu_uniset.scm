(define-module (crates-io ic u_ icu_uniset) #:use-module (crates-io))

(define-public crate-icu_uniset-0.1.0 (c (n "icu_uniset") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)))) (h "1yw883hms76z341rbcm0y70m01f3aawy88kd7hwlvx6zyrra5q9i") (f (quote (("default") ("bench")))) (y #t)))

(define-public crate-icu_uniset-0.2.0 (c (n "icu_uniset") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "icu_benchmark_macros") (r "^0.2") (d #t) (k 2)) (d (n "icu_provider") (r "^0.2") (d #t) (k 0)) (d (n "litemap") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tinystr") (r "^0.4.5") (d #t) (k 0)))) (h "1df295jg64lrddz0ch615ljqcni56f6as6gsrsdd1g2w5ihkqxb6") (f (quote (("provider_serde" "serde") ("default" "provider_serde") ("bench")))) (y #t)))

(define-public crate-icu_uniset-0.3.0 (c (n "icu_uniset") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.3") (d #t) (k 2)) (d (n "icu_provider") (r "^0.3") (f (quote ("macros"))) (d #t) (k 0)) (d (n "litemap") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinystr") (r "^0.4.10") (f (quote ("alloc"))) (k 0)))) (h "0qlxynnj754v2s3rdjqzwq1xaikc7ii2pxdmpg8qirhpdmjdghf4") (f (quote (("std" "icu_provider/std") ("provider_serde" "serde") ("default" "provider_serde") ("bench")))) (y #t)))

(define-public crate-icu_uniset-0.4.0 (c (n "icu_uniset") (v "0.4.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.3") (d #t) (k 2)) (d (n "litemap") (r "^0.2") (d #t) (k 0)) (d (n "postcard") (r "^0.7") (f (quote ("use-std" "alloc"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinystr") (r "^0.4.10") (f (quote ("alloc"))) (k 0)) (d (n "yoke") (r "^0.3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zerovec") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)))) (h "14v75hjxbmqrxk2kwlzci3yglc58r9c4zbzrl6qamgqhlqzq7rl4") (f (quote (("provider_serde" "serde") ("bench")))) (y #t)))

(define-public crate-icu_uniset-0.4.1 (c (n "icu_uniset") (v "0.4.1") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.4") (d #t) (k 2)) (d (n "litemap") (r "^0.3.0") (d #t) (k 0)) (d (n "postcard") (r "^0.7") (f (quote ("use-std" "alloc"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinystr") (r "^0.4.10") (f (quote ("alloc"))) (k 0)) (d (n "yoke") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zerovec") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rnv0m576ljyz0g6gvva1mv7ah3y5ak3gdyp92ly1y2lkqckzs0c") (f (quote (("provider_serde" "serde") ("bench")))) (y #t)))

(define-public crate-icu_uniset-0.5.0 (c (n "icu_uniset") (v "0.5.0") (d (list (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "displaydoc") (r "^0.2.3") (k 0)) (d (n "icu_benchmark_macros") (r "^0.6") (d #t) (k 2)) (d (n "postcard") (r "^0.7") (f (quote ("use-std" "alloc"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tinystr") (r "^0.6.0") (f (quote ("alloc"))) (k 0)) (d (n "yoke") (r "^0.5.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zerofrom") (r "^0.1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zerovec") (r "^0.7") (f (quote ("yoke"))) (d #t) (k 0)))) (h "1aabs645x6b5jmpyy6y1zlygwz6844pycl335vi5mmzgnrcjip7c") (f (quote (("serde_serialize" "serde" "zerovec/serde_serialize") ("bench")))) (y #t) (s 2) (e (quote (("serde" "dep:serde" "zerovec/serde"))))))

