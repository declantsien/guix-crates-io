(define-module (crates-io ic rc icrc-ledger-types) #:use-module (crates-io))

(define-public crate-icrc-ledger-types-0.1.0 (c (n "icrc-ledger-types") (v "0.1.0") (d (list (d (n "candid") (r "^0.8.4") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "0x5dc4ba6k7gii468dqmpgrlp2xysdik3225p0vn4nkd9l357jcg") (f (quote (("experimental-api"))))))

(define-public crate-icrc-ledger-types-0.1.1 (c (n "icrc-ledger-types") (v "0.1.1") (d (list (d (n "candid") (r "^0.9.5") (f (quote ("parser"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "0rc8w3c4gadgx6z410p1gz5gxvblhvlb1ipwhp7p2yh7mc5i5vk9") (f (quote (("experimental-api"))))))

(define-public crate-icrc-ledger-types-0.1.2 (c (n "icrc-ledger-types") (v "0.1.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "candid") (r "^0.9.5") (f (quote ("parser"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "00ndw4ypj1b67bczz6jm9w1yllf4kjj5rlv2pl8ia5ncjspb0dq0") (f (quote (("experimental-api"))))))

(define-public crate-icrc-ledger-types-0.1.3 (c (n "icrc-ledger-types") (v "0.1.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "candid") (r "^0.9.9") (f (quote ("parser"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "074nfxq20i7z0ksbwqn91zb7pf46hxbcm7h7bjzxgx1447d4dbdl")))

(define-public crate-icrc-ledger-types-0.1.4 (c (n "icrc-ledger-types") (v "0.1.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "candid") (r "^0.9.10") (f (quote ("parser"))) (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "12s1v2qm0hn29fxmy8w239gjpdxh7fhlwlrglg6j4a02i3bcdzfs")))

(define-public crate-icrc-ledger-types-0.1.5 (c (n "icrc-ledger-types") (v "0.1.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "candid") (r "^0.10.2") (d #t) (k 0)) (d (n "crc32fast") (r "^1.2.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "0iq436hzsn4p6kh08srzjyw3xxsry08flp52c0b10ljnz4mqjk40")))

