(define-module (crates-io ic el icelake) #:use-module (crates-io))

(define-public crate-icelake-0.0.0 (c (n "icelake") (v "0.0.0") (h "0l37ml525akis34zkrdfpzndhly9ar7xh688dcqjxwxnn0lj4l4c")))

(define-public crate-icelake-0.0.1 (c (n "icelake") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "opendal") (r "^0.37.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)))) (h "0isbp0ngm6r8zfl3n3wn5h375k6ccqgl24rc23889jkr41v34zcm")))

(define-public crate-icelake-0.0.2 (c (n "icelake") (v "0.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opendal") (r "^0.37") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "0chj7wln1zz1rclcr2zrknhcklsvm9yfgyx3bdiskp53nrdis2ql")))

(define-public crate-icelake-0.0.3 (c (n "icelake") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opendal") (r "^0.37") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "0r6pymafmgmd0jva5v2vhgmndkirlmi6j7jjgb9z3iylngp3g4yc")))

(define-public crate-icelake-0.0.4 (c (n "icelake") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opendal") (r "^0.37") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "19lym32zp2iwx7y376q0nln5pbw6vc1f0lq63vgi3pia2zy0gfdy") (s 2) (e (quote (("arrow" "dep:arrow"))))))

(define-public crate-icelake-0.0.5 (c (n "icelake") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opendal") (r "^0.37") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "1r0dzca6zwlvlsbij2fz3pk149lm161bwbjiap96s4z0q9629sy2") (s 2) (e (quote (("arrow_schema" "dep:arrow-schema"))))))

(define-public crate-icelake-0.0.6 (c (n "icelake") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow-array") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "opendal") (r "^0.37") (d #t) (k 0)) (d (n "parquet") (r ">=40") (f (quote ("async"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)))) (h "154p0mnml48jx1cr6w6a33xblm2frl35r9kb93pg3chr5i9sfbba") (s 2) (e (quote (("io_parquet" "arrow_schema" "dep:parquet" "dep:arrow-array") ("arrow_schema" "dep:arrow-schema"))))))

(define-public crate-icelake-0.0.7 (c (n "icelake") (v "0.0.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow-array") (r ">=40, <43") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40, <43") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "faster-hex") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "opendal") (r ">=0.37, <0.39") (d #t) (k 0)) (d (n "parquet") (r ">=40, <43") (f (quote ("async"))) (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "01xzd0qjp1iy4h3bw41rj8v6s1r1zcjxfzqgwm3zqpszwj62s940") (s 2) (e (quote (("io_parquet" "arrow_schema" "dep:parquet" "dep:arrow-array") ("arrow_schema" "dep:arrow-schema"))))))

(define-public crate-icelake-0.0.8 (c (n "icelake") (v "0.0.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow-array") (r ">=40, <44") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40, <44") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "faster-hex") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "opendal") (r ">=0.37, <0.39") (d #t) (k 0)) (d (n "parquet") (r ">=40, <44") (f (quote ("async"))) (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "11y2na28al4fddafp8gqm3a4gg1qnmcr6kg3sjihmd8gyxlkfssa") (s 2) (e (quote (("io_parquet" "arrow_schema" "dep:parquet" "dep:arrow-array") ("arrow_schema" "dep:arrow-schema"))))))

(define-public crate-icelake-0.0.9 (c (n "icelake") (v "0.0.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow-array") (r ">=40, <45") (d #t) (k 0)) (d (n "arrow-schema") (r ">=40, <45") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "faster-hex") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opendal") (r ">=0.37, <0.40") (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parquet") (r ">=40, <45") (f (quote ("async"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1423i03lxqfqzgrdprl1ycsjs05ib50q4z3r7g5v8y8g3bdvpx37")))

(define-public crate-icelake-0.0.10 (c (n "icelake") (v "0.0.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "apache-avro") (r "^0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "arrow-arith") (r ">=46") (d #t) (k 0)) (d (n "arrow-array") (r ">=46") (d #t) (k 0)) (d (n "arrow-buffer") (r ">=46") (d #t) (k 0)) (d (n "arrow-csv") (r ">=46") (d #t) (k 2)) (d (n "arrow-row") (r ">=46") (d #t) (k 0)) (d (n "arrow-schema") (r ">=46") (d #t) (k 0)) (d (n "arrow-select") (r ">=46") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "confique") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "faster-hex") (r "^0.8.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "murmur3") (r "^0.5.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opendal") (r ">=0.37, <0.40") (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parquet") (r ">=46") (f (quote ("async"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1.30") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "urlencoding") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "085rnq1mfgpvqbhs6md9rgbzv8ppq6w0lijpdjcadpjf8ma6njwh")))

