(define-module (crates-io ic ed iced_native) #:use-module (crates-io))

(define-public crate-iced_native-0.0.0 (c (n "iced_native") (v "0.0.0") (h "0nv7dkwr8vimwcscma3cd3ih7whz006rfr492ryc1h4vw18pvf05")))

(define-public crate-iced_native-0.1.0 (c (n "iced_native") (v "0.1.0") (d (list (d (n "iced_core") (r "^0.1.0") (f (quote ("command"))) (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (d #t) (k 0)))) (h "0z5kw03j1dbqlf4629ymaxcx3d3qk9bn9vlcmwdisxd51lkikylp")))

(define-public crate-iced_native-0.2.0 (c (n "iced_native") (v "0.2.0") (d (list (d (n "iced_core") (r "^0.2") (d #t) (k 0)) (d (n "iced_futures") (r "^0.1") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "1x55hnlh7540zcw89sr4mj1yagf81x771plcd9cxrqzlcfxxa55g")))

(define-public crate-iced_native-0.2.1 (c (n "iced_native") (v "0.2.1") (d (list (d (n "iced_core") (r "^0.2") (d #t) (k 0)) (d (n "iced_futures") (r "^0.1") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "0xw0pxmxplkx0nw9yzimrbl90hia01jgd1fxcs90hwg6rmfahn96")))

(define-public crate-iced_native-0.2.2 (c (n "iced_native") (v "0.2.2") (d (list (d (n "iced_core") (r "^0.2") (d #t) (k 0)) (d (n "iced_futures") (r "^0.1") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "0g696z44mjbp4f1n08fiqk9qkyffdh5s410hrm6xk3zja2b52vi0")))

(define-public crate-iced_native-0.3.0 (c (n "iced_native") (v "0.3.0") (d (list (d (n "iced_core") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "iced_futures") (r ">=0.2.0, <0.3.0") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "num-traits") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "twox-hash") (r ">=1.5.0, <2.0.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r ">=1.6.0, <2.0.0") (d #t) (k 0)))) (h "0g4546sn154a02279b8cnlsd82jfd7c4cix35v72fbd4mx18fq1d") (f (quote (("debug"))))))

(define-public crate-iced_native-0.4.0 (c (n "iced_native") (v "0.4.0") (d (list (d (n "iced_core") (r "^0.4") (d #t) (k 0)) (d (n "iced_futures") (r "^0.3") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "01ncwcq311aciclqwq2681msrwx2cjv7mvnxxmwqps30s4v0f0rm") (f (quote (("debug"))))))

(define-public crate-iced_native-0.5.0 (c (n "iced_native") (v "0.5.0") (d (list (d (n "iced_core") (r "^0.5") (d #t) (k 0)) (d (n "iced_futures") (r "^0.4") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "1id4vdlxzjwqnpn5l694k3iah53h2v198lsnn6dmg82lqzkyggdp") (f (quote (("debug"))))))

(define-public crate-iced_native-0.5.1 (c (n "iced_native") (v "0.5.1") (d (list (d (n "iced_core") (r "^0.5") (d #t) (k 0)) (d (n "iced_futures") (r "^0.4") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "06km4hkdab1r527q86gwv15xbnzhik1daf5fzhpslp9sd7a798cc") (f (quote (("debug"))))))

(define-public crate-iced_native-0.6.0 (c (n "iced_native") (v "0.6.0") (d (list (d (n "iced_core") (r "^0.6") (d #t) (k 0)) (d (n "iced_futures") (r "^0.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "18s8pbk0703mp7ybpfpl2d4c3x1gxgp144ril1xhx907wzqwbpd9") (f (quote (("debug"))))))

(define-public crate-iced_native-0.6.1 (c (n "iced_native") (v "0.6.1") (d (list (d (n "iced_core") (r "^0.6") (d #t) (k 0)) (d (n "iced_futures") (r "^0.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.5") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "02zcv37ggm4aw8nz3j5g98g6z0jnarn782sb37k8xxb7v76lm5k1") (f (quote (("debug"))))))

(define-public crate-iced_native-0.7.0 (c (n "iced_native") (v "0.7.0") (d (list (d (n "iced_core") (r "^0.6") (d #t) (k 0)) (d (n "iced_futures") (r "^0.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.5.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "11b69lb2cm83v2w3v5xjqgxw4s0g21cy3wiccjx333iszbagcj2p") (f (quote (("debug"))))))

(define-public crate-iced_native-0.8.0 (c (n "iced_native") (v "0.8.0") (d (list (d (n "iced_core") (r "^0.7") (d #t) (k 0)) (d (n "iced_futures") (r "^0.5") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "0qs5xngcs1ww7rlyjsr9knpp8niyn08mbxgrsiahrsbjhs77rmbr") (f (quote (("debug"))))))

(define-public crate-iced_native-0.9.0 (c (n "iced_native") (v "0.9.0") (d (list (d (n "iced_core") (r "^0.8") (d #t) (k 0)) (d (n "iced_futures") (r "^0.6") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "18svjmhcxkzy4py4zjsmcmahvhcfzz8xgm4jvqli8x9dgjhwzikx") (f (quote (("debug"))))))

(define-public crate-iced_native-0.9.1 (c (n "iced_native") (v "0.9.1") (d (list (d (n "iced_core") (r "^0.8") (d #t) (k 0)) (d (n "iced_futures") (r "^0.6") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.7") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "1rwbqy7cc8yya55rcgvzxl1nndma88cp4n75m8bfi4c5szf2r55r") (f (quote (("debug"))))))

(define-public crate-iced_native-0.10.0 (c (n "iced_native") (v "0.10.0") (d (list (d (n "iced_core") (r "^0.9") (d #t) (k 0)) (d (n "iced_futures") (r "^0.6") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "14r1nmi5nbvkxgwxgin2yrw490ay318h9vjlrwgj79wcaiyaxbbk") (f (quote (("debug")))) (y #t)))

(define-public crate-iced_native-0.10.1 (c (n "iced_native") (v "0.10.1") (d (list (d (n "iced_core") (r "^0.9") (d #t) (k 0)) (d (n "iced_futures") (r "^0.6") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "1zl4cf764y7nj87jsmcks1b6jxdvxymkbbr8l3h1wgxl64kx8g9b") (f (quote (("debug"))))))

(define-public crate-iced_native-0.10.2 (c (n "iced_native") (v "0.10.2") (d (list (d (n "iced_core") (r "^0.9") (d #t) (k 0)) (d (n "iced_futures") (r "^0.6") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "09r0kkcpsi9vr9zw9i0v8bzpkp9bgjbhshi3mpygrpx8b1289vvn") (f (quote (("debug"))))))

(define-public crate-iced_native-0.10.3 (c (n "iced_native") (v "0.10.3") (d (list (d (n "iced_core") (r "^0.9") (d #t) (k 0)) (d (n "iced_futures") (r "^0.6") (f (quote ("thread-pool"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "twox-hash") (r "^1.5") (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)))) (h "05h62ybfpz8q0v9vkv7jbkrl75ns40f74favd5mf83s9v83fn4nh") (f (quote (("debug"))))))

