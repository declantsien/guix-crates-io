(define-module (crates-io ic ed iced_style_config) #:use-module (crates-io))

(define-public crate-iced_style_config-0.1.0 (c (n "iced_style_config") (v "0.1.0") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "iced") (r "^0.4") (d #t) (k 0)) (d (n "iced") (r "^0.4") (d #t) (k 2)) (d (n "iced_futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "toml") (r "^0.5.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "0314lnb3sxpdqwzlsk4f2bbda9iwjyxrhp8mwdpsq68sn08q98k1") (f (quote (("svg" "iced/svg") ("schema" "schemars") ("qr_code" "iced/qr_code") ("image" "iced/image") ("hot-reloading" "async-stream" "futures-util" "iced_futures" "notify" "tokio" "tracing") ("default" "hot-reloading") ("canvas" "iced/canvas"))))))

(define-public crate-iced_style_config-0.2.0 (c (n "iced_style_config") (v "0.2.0") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "iced") (r "^0.4") (f (quote ("image" "svg" "canvas" "qr_code"))) (o #t) (d #t) (k 0)) (d (n "iced") (r "^0.4") (d #t) (k 2)) (d (n "iced_futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "iced_graphics") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "iced_native") (r "^0.5") (d #t) (k 0)) (d (n "iced_style") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "=5.0.0-pre.15") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "toml") (r "^0.5.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "0p3qc9id9d43m4hq7b2xqqylzii343506wp8vivq7rqxv985vk1c") (f (quote (("schema" "schemars") ("qr_code" "iced_graphics/qr_code") ("hot-reloading" "async-stream" "futures-util" "iced_futures" "notify" "tokio" "tracing") ("default" "hot-reloading") ("canvas" "iced_graphics/canvas"))))))

(define-public crate-iced_style_config-0.2.1 (c (n "iced_style_config") (v "0.2.1") (d (list (d (n "async-stream") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "iced") (r "^0.4") (f (quote ("image" "svg" "canvas" "qr_code"))) (o #t) (d #t) (k 0)) (d (n "iced") (r "^0.4") (d #t) (k 2)) (d (n "iced_futures") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "iced_graphics") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "iced_native") (r "^0.5") (d #t) (k 0)) (d (n "iced_style") (r "^0.4") (d #t) (k 0)) (d (n "notify") (r "^5") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "scoped-tls") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "toml") (r "^0.5.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1.6") (f (quote ("std"))) (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "0jd68zagdmx5yvdjglsc7pwdisw9hsq13h6m6ii5giwn71pa1nw5") (f (quote (("schema" "schemars") ("qr_code" "iced_graphics/qr_code") ("hot-reloading" "async-stream" "futures-util" "iced_futures" "notify" "tokio" "tracing") ("default" "hot-reloading") ("canvas" "iced_graphics/canvas"))))))

