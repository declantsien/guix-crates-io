(define-module (crates-io kn ys knyst) #:use-module (crates-io))

(define-public crate-knyst-0.1.0 (c (n "knyst") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.9") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1l8id0ka374q5cry267b49qhbqmlzih26ki994yq3jn9c4jwjsyl")))

(define-public crate-knyst-0.2.0 (c (n "knyst") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dasp_sample") (r "^0.11") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.9") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v2kycifs2ng1hc9a8dr659545qfcxi4jvaajshqa7cxb46jh99z")))

(define-public crate-knyst-0.3.0 (c (n "knyst") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.9") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ckpx78lq7vavm9jabyzdbpkxdjp4ykpby4m3v610vwwglsryb85")))

(define-public crate-knyst-0.3.1 (c (n "knyst") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.9") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.5") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qgrx4h5wvik5qcfvr6hj7qikmly6is0734dwxrz0hb4vizbhixr")))

(define-public crate-knyst-0.4.0 (c (n "knyst") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_no_alloc") (r "^1.1.2") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.9") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.5") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rfd") (r "^0.11.1") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "termion") (r "^2.0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0fls0y1ya9sdkgnfj7a6n8639kg3q97kfrdk1y9lb984wh3q5c3d") (f (quote (("default" "cpal") ("debug-warn-on-alloc" "assert_no_alloc/warn_debug")))) (s 2) (e (quote (("serde-derive" "dep:serde"))))))

(define-public crate-knyst-0.4.1 (c (n "knyst") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_no_alloc") (r "^1.1.2") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.9") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.5") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rfd") (r "^0.11.1") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "termion") (r "^2.0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0dnkq3h3jhd5sqkk3265ilwrhh54sbglal62dq1nabbgjb2zfvfv") (f (quote (("default" "cpal") ("debug-warn-on-alloc" "assert_no_alloc/warn_debug")))) (s 2) (e (quote (("serde-derive" "dep:serde"))))))

(define-public crate-knyst-0.4.2 (c (n "knyst") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_no_alloc") (r "^1.1.2") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.13") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.5") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rfd") (r "^0.11.1") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "termion") (r "^2.0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "06qzb4wda3aqwc9anhi1qn7qsrciik16rgwry0n2sz69b5hvf5g2") (f (quote (("default" "cpal") ("debug-warn-on-alloc" "assert_no_alloc/warn_debug")))) (s 2) (e (quote (("serde-derive" "dep:serde"))))))

(define-public crate-knyst-0.4.3 (c (n "knyst") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_no_alloc") (r "^1.1.2") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^1.4.1") (d #t) (k 0)) (d (n "fundsp") (r "^0.13") (d #t) (k 2)) (d (n "jack") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "loom") (r "^0.5") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rfd") (r "^0.11.1") (d #t) (k 2)) (d (n "rtrb") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "termion") (r "^2.0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0c190n2j1jfh6an1z6ps7jl32z69nl35hvkpf0ky1kii5kg7yp6g") (f (quote (("unstable") ("default" "cpal") ("debug-warn-on-alloc" "assert_no_alloc/warn_debug")))) (s 2) (e (quote (("serde-derive" "dep:serde"))))))

(define-public crate-knyst-0.5.0 (c (n "knyst") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_no_alloc") (r "^1.1.2") (d #t) (k 0)) (d (n "cpal") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "dialog") (r "^0.3") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "fastapprox") (r "^0.3") (d #t) (k 0)) (d (n "fastrand") (r "^2.0.1") (d #t) (k 0)) (d (n "hound") (r "^3.5.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "jack") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "knyst_macro") (r "^0.5.0") (d #t) (k 0)) (d (n "loom") (r "^0.7") (f (quote ("checkpoint"))) (d #t) (t "cfg(loom)") (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rfd") (r "^0.12") (d #t) (k 2)) (d (n "rtrb") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "slotmap") (r "^1.0") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3"))) (d #t) (k 0)) (d (n "termion") (r "^2.0.3") (d #t) (t "cfg(unix)") (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("rt" "time" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "17ccd8b4qlgg72cdiw4dq61h4nyrkd308pjn48q4qa85cszm3fcw") (f (quote (("unstable") ("default" "cpal" "jack") ("debug-warn-on-alloc" "assert_no_alloc/warn_debug")))) (s 2) (e (quote (("serde-derive" "dep:serde"))))))

