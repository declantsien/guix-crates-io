(define-module (crates-io cu st custos) #:use-module (crates-io))

(define-public crate-custos-0.1.0 (c (n "custos") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1z9dz0mhbs9b5pmb2f9ih00bws1z4lwl8zrjjdgfkgfmfrx665rw") (f (quote (("safe") ("opencl") ("default" "opencl") ("cuda"))))))

(define-public crate-custos-0.1.1 (c (n "custos") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1rrn15d5198gp6wsqaicrssmik0jc1wlxmqib802kbvg6k8w06ba") (f (quote (("safe") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.1.2 (c (n "custos") (v "0.1.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "0ilzgx7f0qv0xg52i6i0gfk1s1wx78mmwswki4gm608jbjpl9vck") (f (quote (("safe") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.1.3 (c (n "custos") (v "0.1.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "0flb81aywmgbvja94f5n7xlmfgv3zm8ignz8zpf73yf2y5l3hv0h") (f (quote (("safe") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.1.4 (c (n "custos") (v "0.1.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "19k3i7ra1n3izmqx7zvv3pmyp27zcrrwblar17ddmj7r9wbn2yyv") (f (quote (("safe") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.1.5 (c (n "custos") (v "0.1.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1sxd3cg9xsfq220caqjcg040yq01c9dd7dsjkh5zn626sa44wd1g") (f (quote (("safe") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.2.0 (c (n "custos") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "05wqbfqzj68izdkq3hqz7l0y32wgnxqa5513nfgcc5b5j4jha114") (f (quote (("opencl") ("default" "opencl" "cuda") ("cuda")))) (y #t)))

(define-public crate-custos-0.2.1 (c (n "custos") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1q1ky843ihvzkxs6r8z3igjbjnwwmvywyy84cs5sqkhga770hzkz") (f (quote (("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.3.0 (c (n "custos") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1rk9f5a0psswvx3907hiy323121mkb4wh5d1w0zif0ad7fcm85yx") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.4.0 (c (n "custos") (v "0.4.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "14xa5lmijhirhi32cmchgi5n5mi8fcmz5wir4qgj8ya029qfg6r5") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda")))) (y #t)))

(define-public crate-custos-0.4.1 (c (n "custos") (v "0.4.1") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "0kr6h7rcv0c4h07jnvdrqkvi3k1v0sdz2gc681kv67cly4qllfsb") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda")))) (y #t)))

(define-public crate-custos-0.4.2 (c (n "custos") (v "0.4.2") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1xddvfk7wrk4c9zmkr448dxy7y0i9y97k3z2gyf2z8znw9gkvvc0") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda")))) (y #t)))

(define-public crate-custos-0.4.3 (c (n "custos") (v "0.4.3") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1jz8y4b0g830i23il24052yf0bn6vrq1j2z0pg2k1hv7avqz7b2r") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.4.4 (c (n "custos") (v "0.4.4") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "0fq4hxsdq812b0pkasm137kypdyyypjs9dxr1miqay2llbi5s48k") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.4.5 (c (n "custos") (v "0.4.5") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "0bjldzd2f35a1a3f8z1f8ymb8czpf6i6wqxv9gb8an8smflgxlrx") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.4.6 (c (n "custos") (v "0.4.6") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)))) (h "1p8if595zzmn3shn6d7kwipi3g9cwfp47ncmvgjaj2ynnw8dlfz5") (f (quote (("realloc") ("opencl") ("default" "opencl" "cuda") ("cuda"))))))

(define-public crate-custos-0.5.0 (c (n "custos") (v "0.5.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)))) (h "11hlpw3dr0015adgg0pm1ch4vsajfi2v6jh7vjd7w0zvd38fwsx8") (f (quote (("realloc") ("opt-cache") ("default" "opt-cache" "opencl" "cuda") ("cuda")))) (s 2) (e (quote (("opencl" "dep:lazy_static"))))))

(define-public crate-custos-0.6.0 (c (n "custos") (v "0.6.0") (d (list (d (n "custos-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "custos-macro") (r "^0.1.0") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 1)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (o #t) (d #t) (k 0)))) (h "0qqj5v4ab8yk7dydlqiilkw9b0nk8wvbf5vbxivhin3rs1q3yvmg") (f (quote (("static-api") ("stack") ("realloc") ("opt-cache") ("default" "cpu" "cuda" "opencl" "static-api" "blas" "macro") ("cuda") ("cpu") ("blas")))) (y #t) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:pollster" "dep:futures-intrusive") ("opencl" "dep:min-cl" "cpu") ("no-std" "stack" "dep:libm") ("macro" "dep:custos-macro")))) (r "1.65")))

(define-public crate-custos-0.6.1 (c (n "custos") (v "0.6.1") (d (list (d (n "custos-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "custos-macro") (r "^0.1.0") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 1)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (o #t) (d #t) (k 0)))) (h "1lx0p1z45dxnb466kjlrlgi1s0qlg5yf245zibrkm9lnjryh4j8d") (f (quote (("static-api") ("stack") ("realloc") ("opt-cache") ("default" "cpu" "cuda" "opencl" "static-api" "blas" "macro") ("cuda") ("cpu") ("blas")))) (y #t) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:pollster" "dep:futures-intrusive") ("opencl" "dep:min-cl" "cpu") ("no-std" "stack" "dep:libm") ("macro" "dep:custos-macro")))) (r "1.65")))

(define-public crate-custos-0.6.2 (c (n "custos") (v "0.6.2") (d (list (d (n "custos-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "custos-macro") (r "^0.1.0") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 1)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (o #t) (d #t) (k 0)))) (h "1y3ya8ri5vix7dm76b1xzfdv5xsxwy5spk0p1q426srv0nza6qag") (f (quote (("static-api") ("stack") ("realloc") ("opt-cache") ("default" "cpu" "cuda" "opencl" "static-api" "blas" "macro") ("cuda") ("cpu") ("blas")))) (y #t) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:pollster" "dep:futures-intrusive") ("opencl" "dep:min-cl" "cpu") ("no-std" "stack" "dep:libm") ("macro" "dep:custos-macro")))) (r "1.65")))

(define-public crate-custos-0.6.3 (c (n "custos") (v "0.6.3") (d (list (d (n "custos-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "custos-macro") (r "^0.1.0") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.1.2") (o #t) (d #t) (k 1)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (o #t) (d #t) (k 0)))) (h "0dvam9awagnjl3ryfm6596jsfr73aawgfn12xxk1ic9xcp90fkxb") (f (quote (("static-api") ("stack") ("realloc") ("opt-cache") ("default" "stack" "cpu" "opt-cache" "blas" "static-api" "opencl") ("cuda") ("cpu") ("blas")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:pollster" "dep:futures-intrusive") ("opencl" "dep:min-cl" "cpu") ("no-std" "stack" "dep:libm") ("macro" "dep:custos-macro")))) (r "1.65")))

(define-public crate-custos-0.7.0 (c (n "custos") (v "0.7.0") (d (list (d (n "custos-macro") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "custos-macro") (r "^0.1.1") (d #t) (k 2)) (d (n "futures-intrusive") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "min-cl") (r "^0.2.0") (o #t) (d #t) (k 1)) (d (n "pollster") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (o #t) (d #t) (k 0)))) (h "1wwan9x5g8q7mhhjxhbdpxscdf124azh4m87g2lvbk16gx55jjpn") (f (quote (("static-api") ("stack") ("realloc") ("opt-cache") ("default" "blas" "cpu" "stack" "static-api" "opencl" "macro" "autograd") ("cuda") ("cpu") ("blas") ("autograd")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "dep:pollster" "dep:futures-intrusive") ("opencl" "dep:min-cl" "cpu") ("no-std" "stack" "dep:libm") ("macro" "dep:custos-macro")))) (r "1.65")))

