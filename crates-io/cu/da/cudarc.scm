(define-module (crates-io cu da cudarc) #:use-module (crates-io))

(define-public crate-cudarc-0.1.0 (c (n "cudarc") (v "0.1.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)))) (h "1k0nxjknmzf32glj81am8lkcd3d981l3n1m5b6hr3v7bm5lbjdv9")))

(define-public crate-cudarc-0.2.0 (c (n "cudarc") (v "0.2.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)))) (h "192zygiff6bvw92j3lc3lpi3hj4a9a9x0z8qr2paxw2mg1967i1p")))

(define-public crate-cudarc-0.3.0 (c (n "cudarc") (v "0.3.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "1vc4czd5ra701j5m3mz5qa4xsmxg2cmh6dhml0av8y1n1k4qkk64") (f (quote (("std" "no-std-compat/std") ("default" "std"))))))

(define-public crate-cudarc-0.4.0 (c (n "cudarc") (v "0.4.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)))) (h "0s06mqdx41k9yw42v7dfl7s4vbranr6745p0sg25mbg17jx4338p") (f (quote (("std" "no-std-compat/std") ("default" "std"))))))

(define-public crate-cudarc-0.5.0 (c (n "cudarc") (v "0.5.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "06qryz3h7md0qhaqihxr56nw5pnmpkc0ncii46jrv48092smlvp7") (f (quote (("std" "no-std-compat/std") ("default" "std"))))))

(define-public crate-cudarc-0.5.1 (c (n "cudarc") (v "0.5.1") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "07fcmfmz5xd6wnspk41pwb2hxzccfqa5myghhzx018b2ccm6glzr") (f (quote (("std" "no-std-compat/std") ("default" "std"))))))

(define-public crate-cudarc-0.6.0 (c (n "cudarc") (v "0.6.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "1ixbk5wmf215bxk9x1r9v7w0ng6a9a66k7r1zqw20ydcl5gjxp59") (f (quote (("std" "no-std-compat/std") ("default" "std"))))))

(define-public crate-cudarc-0.6.1 (c (n "cudarc") (v "0.6.1") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "04bnkqz8vl267mp5y0k4sh302f44zfw1c34nd9npkjw2b0mj0lmv") (f (quote (("std" "no-std-compat/std") ("default" "std"))))))

(define-public crate-cudarc-0.7.0 (c (n "cudarc") (v "0.7.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "14ygaazb0fhv5283wrkqqs77m06a1ifdbzy43ndp3q1i5n2szchg") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16"))))))

(define-public crate-cudarc-0.7.1 (c (n "cudarc") (v "0.7.1") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "16f2jfbpk3bis2560zv15dmbpy8y5n1w1a8h4rnazb6fkg7rpmxv") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16") ("ci-check"))))))

(define-public crate-cudarc-0.7.2 (c (n "cudarc") (v "0.7.2") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "05kadz7jq61xmg3a3fcws2d1b8gj8ahjvh82r8kbydnhr95yc6kw") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16") ("ci-check"))))))

(define-public crate-cudarc-0.7.3 (c (n "cudarc") (v "0.7.3") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "1w0mcxh5xhi6hdprh43g107j4ydppdahhnwbps4ymkinpmmf97c8") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16") ("ci-check"))))))

(define-public crate-cudarc-0.7.4 (c (n "cudarc") (v "0.7.4") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "13frazbnd00rnmcjliq706m3bmhqz7l86gakz8qjbhczf2hy9zpr") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16") ("ci-check"))))))

(define-public crate-cudarc-0.7.5 (c (n "cudarc") (v "0.7.5") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "1ffigpzc4vswbl2sinvccj2f002g8prsmwj7md31wwdmgkclrcyw") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16") ("ci-check"))))))

(define-public crate-cudarc-0.8.0 (c (n "cudarc") (v "0.8.0") (d (list (d (n "find_cuda_helper") (r "^0.2.0") (d #t) (k 1)) (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (k 0)))) (h "1kjs4xa2swn38l8rs119spgwhzjzrs8wc32d0rhlzla2wg2rkcgf") (f (quote (("std" "no-std-compat/std") ("f16" "half") ("default" "std" "f16") ("ci-check"))))))

(define-public crate-cudarc-0.9.0 (c (n "cudarc") (v "0.9.0") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1r4jp9jvx7zlfpwdqh7ng7rh30mb0abpcfgshpkkx6dyijb8yqnh") (f (quote (("std") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand") ("cublas") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.1 (c (n "cudarc") (v "0.9.1") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0vbfqzp7xkmps5kds9k0k4jkhdl2bf9xikqjf8hgzfxg3663nwww") (f (quote (("std") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand") ("cublas") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.2 (c (n "cudarc") (v "0.9.2") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0z9qphz5y1xxwz9m8nb9bfm7ssz8vp79x3m6sp02x7xz7l0c4mzn") (f (quote (("std") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand") ("cudnn") ("cublas") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.3 (c (n "cudarc") (v "0.9.3") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1gwfw2m5h6xqakfypmh2i3gsrhifwzbx7r4dn87pr5c8g5slrbf2") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand") ("cudnn") ("cublas") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.4 (c (n "cudarc") (v "0.9.4") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "13vl2v032lqh2a359vhl6c3aj5rlb9r17gpqplnxvl9hash804pz") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand") ("cudnn") ("cublas") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.5 (c (n "cudarc") (v "0.9.5") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0mwax3n668lbjipz28kc7gzhylp7rwkj00ww0z3hkjkb790f0zv3") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand") ("cudnn") ("cublas") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.6 (c (n "cudarc") (v "0.9.6") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "10wpvdamrnxv6zi6rr0ld3mrcf0m4zhvka7zivspicf7ljsli8fx") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.7 (c (n "cudarc") (v "0.9.7") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "17r83b2vgvfqlmbfy2wy7my2fryrzj84mnvm08p1iav0xqqrz2cd") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.8 (c (n "cudarc") (v "0.9.8") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.4") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0900xz39j8dsf29xh77jkg2va1kk69i8mlzdpj62bvjjfy624hnp") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.9 (c (n "cudarc") (v "0.9.9") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1a5ddz0jwi3phnsahzy400vz4rag7my1j4a8bbis0y88k4y1mlsy") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.10 (c (n "cudarc") (v "0.9.10") (d (list (d (n "half") (r "^2.2.1") (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0fym9ibyjbkjw2agwwirxrnlxgc4k65rlnqc0rk2zwa9ipzw9lyh") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.11 (c (n "cudarc") (v "0.9.11") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0rvbrqmg8y50b5ys6s8ar91qdi1c1hg7i1pf518m4llmz7292cza") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.12 (c (n "cudarc") (v "0.9.12") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1d689l80w4y5avn6x03f98s1bs1g5gpq0yx8ax3i127jnpj3nd6b") (f (quote (("std") ("static-linking") ("nvrtc") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.13 (c (n "cudarc") (v "0.9.13") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1bghps5sqn28k3jszifr3wqyzxsx4ya8qfkmcx4w39ff1bq3vl7k") (f (quote (("std") ("static-linking") ("nvrtc") ("nccl" "driver") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.14 (c (n "cudarc") (v "0.9.14") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "18fji6lx3q5xw3lsvs98wmijlx2i8lm2j5gh24138cja1wwsnk6w") (f (quote (("std") ("static-linking") ("nvrtc") ("nccl" "driver") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.9.15 (c (n "cudarc") (v "0.9.15") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0lj5w59ry34yz0nal0wrpy1md62rj5qnm2c5l9k3z6ib3a8im1zi") (f (quote (("std") ("static-linking") ("nvrtc") ("nccl" "driver") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublaslt" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.10.0 (c (n "cudarc") (v "0.10.0") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1cbq2bzaz0x1flc310jxkkxhigq2cfnkbk3r9rk8amlrmc6dz5ck") (f (quote (("std") ("static-linking") ("nvrtc") ("nccl" "driver") ("driver" "nvrtc") ("default" "std" "driver" "nvrtc" "cublas" "curand") ("curand" "driver") ("cudnn" "driver") ("cublaslt" "driver") ("cublas" "driver") ("ci-check")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.11.0 (c (n "cudarc") (v "0.11.0") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "libloading") (r "^0.8.3") (d #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1247bdbwyv9b5362558g4lp0yll8kb1wniq71r5z45xdivky2rqf") (f (quote (("std") ("nvrtc") ("nccl" "driver") ("dynamic-linking") ("driver" "nvrtc") ("default" "std" "cublas" "cublaslt" "cudnn" "curand" "driver" "nccl" "nvrtc") ("curand" "driver") ("cudnn" "driver") ("cuda-version-from-build-system") ("cuda-12030") ("cuda-12020") ("cuda-12010") ("cuda-12000") ("cuda-11080") ("cuda-11070") ("cublaslt" "driver") ("cublas" "driver")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.11.1 (c (n "cudarc") (v "0.11.1") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "libloading") (r "^0.8.3") (d #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "0ynym1zwqzvd1dyigb58pnb1lnkfmq5ymkp3d02lxgghar6g45f4") (f (quote (("std") ("nvrtc") ("nccl" "driver") ("dynamic-linking") ("driver" "nvrtc") ("default" "std" "cublas" "cublaslt" "cudnn" "curand" "driver" "nccl" "nvrtc") ("curand" "driver") ("cudnn" "driver") ("cuda-version-from-build-system") ("cuda-12040") ("cuda-12030") ("cuda-12020") ("cuda-12010") ("cuda-12000") ("cuda-11080") ("cuda-11070") ("cublaslt" "driver") ("cublas" "driver")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

(define-public crate-cudarc-0.11.2 (c (n "cudarc") (v "0.11.2") (d (list (d (n "half") (r "^2.3.1") (f (quote ("num-traits" "rand_distr"))) (o #t) (k 0)) (d (n "libloading") (r "^0.8.3") (d #t) (k 0)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "spin") (r "^0.9.8") (f (quote ("rwlock"))) (o #t) (k 0)))) (h "1v2wi2sx1mkbgnhjb0mp330ymiz4ylll42a8yyr7vknjw2m17s1p") (f (quote (("std") ("nvrtc") ("nccl" "driver") ("dynamic-linking") ("driver" "nvrtc") ("default" "std" "cublas" "cublaslt" "cudnn" "curand" "driver" "nccl" "nvrtc") ("curand" "driver") ("cudnn" "driver") ("cuda-version-from-build-system") ("cuda-12050") ("cuda-12040") ("cuda-12030") ("cuda-12020") ("cuda-12010") ("cuda-12000") ("cuda-11080") ("cuda-11070") ("cublaslt" "driver") ("cublas" "driver")))) (s 2) (e (quote (("no-std" "no-std-compat/std" "dep:spin") ("f16" "dep:half"))))))

