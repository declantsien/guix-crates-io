(define-module (crates-io cu rv curv-lsc) #:use-module (crates-io))

(define-public crate-curv-lsc-0.1.0 (c (n "curv-lsc") (v "0.1.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 2)) (d (n "cryptoxide") (r "^0.1.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff-zeroize") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "old_sha2") (r "^0.8") (d #t) (k 0) (p "sha2")) (d (n "p256") (r "^0.11.1") (f (quote ("ecdsa" "ecdsa-core"))) (d #t) (k 0)) (d (n "pairing-plus") (r "^0.19") (d #t) (k 0)) (d (n "paste") (r "^1.0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_legacy") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "rust-gmp-kzen") (r "^0.5") (f (quote ("serde_support"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typenum") (r "^1.13") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "02s95l7wi5vmkn6nlfkxpkzybf44mnqd3hk6frx62b64rf60qr73") (f (quote (("default" "num-bigint"))))))

(define-public crate-curv-lsc-0.1.2 (c (n "curv-lsc") (v "0.1.2") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 2)) (d (n "cryptoxide") (r "^0.1.2") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "ff-zeroize") (r "^0.6.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hmac") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.7.1") (d #t) (k 0)) (d (n "merkle-cbt") (r "^0.3") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "old_sha2") (r "^0.8") (d #t) (k 0) (p "sha2")) (d (n "p256") (r "^0.11.1") (f (quote ("ecdsa" "ecdsa-core"))) (d #t) (k 0)) (d (n "pairing-plus") (r "^0.19") (d #t) (k 0)) (d (n "paste") (r "^1.0.2") (d #t) (k 2)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_legacy") (r "^0.6") (d #t) (k 0) (p "rand")) (d (n "rust-gmp-kzen") (r "^0.5") (f (quote ("serde_support"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "sha3") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "typenum") (r "^1.13") (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0llfvzxgiprbif6n9ax5mz0f8vdiivxdm9gcvp9r1i88m4mjsnc9") (f (quote (("default" "num-bigint"))))))

