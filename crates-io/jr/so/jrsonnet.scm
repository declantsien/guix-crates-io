(define-module (crates-io jr so jrsonnet) #:use-module (crates-io))

(define-public crate-jrsonnet-1.0.0 (c (n "jrsonnet") (v "1.0.0") (d (list (d (n "annotate-snippets") (r "^0.8.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (f (quote ("std" "derive"))) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^1.0.0") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^1.0.0") (d #t) (k 0)))) (h "118l97grhmbnjm6g9a4qiv44x76iz9dxx3jgpn281k23lfjpc8ir") (y #t)))

(define-public crate-jrsonnet-0.5.0-pre6 (c (n "jrsonnet") (v "0.5.0-pre6") (d (list (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.4") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lsbr2wra3kchim7p3sg9km1qbzla82ja6bxg53w1652zqqsdkpr") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-destruct" "jrsonnet-evaluator/exp-destruct"))))))

(define-public crate-jrsonnet-0.5.0-pre7 (c (n "jrsonnet") (v "0.5.0-pre7") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13yhls56i3kv0m6x1v60y5x6z2nqh40y957rn96522s6ivl37rh8") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-destruct" "jrsonnet-evaluator/exp-destruct") ("exp-bigint" "jrsonnet-evaluator/exp-bigint" "jrsonnet-cli/exp-bigint"))))))

(define-public crate-jrsonnet-0.5.0-pre8 (c (n "jrsonnet") (v "0.5.0-pre8") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11d4mka7nfwh5zg6b0xcf5m2ls7i0nqkgvvxrj1b4ha5cxrzgh8b") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-destruct" "jrsonnet-evaluator/exp-destruct") ("exp-bigint" "jrsonnet-evaluator/exp-bigint" "jrsonnet-cli/exp-bigint"))))))

(define-public crate-jrsonnet-0.5.0-pre9 (c (n "jrsonnet") (v "0.5.0-pre9") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0a08ivaymabhy8gzad6531yasjr9m6im12ni3s44nr3kmc2g73ag") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-destruct" "jrsonnet-evaluator/exp-destruct") ("exp-bigint" "jrsonnet-evaluator/exp-bigint" "jrsonnet-cli/exp-bigint"))))))

(define-public crate-jrsonnet-0.5.0-pre91 (c (n "jrsonnet") (v "0.5.0-pre91") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0k7f5x5xbdi2mpbsnm47sjkrkpwah7qdp6fdsfi957rcvqa8p904") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-destruct" "jrsonnet-evaluator/exp-destruct") ("exp-bigint" "jrsonnet-evaluator/exp-bigint" "jrsonnet-cli/exp-bigint"))))))

(define-public crate-jrsonnet-0.5.0-pre94 (c (n "jrsonnet") (v "0.5.0-pre94") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jhbqbalkq8si375y2pz7z7xg6bv39ix5kkx9pxxhvdv4sakkbnm") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct" "exp-null-coaelse" "exp-object-iteration" "exp-bigint" "exp-apply") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-null-coaelse" "jrsonnet-evaluator/exp-null-coaelse" "jrsonnet-parser/exp-null-coaelse") ("exp-destruct" "jrsonnet-evaluator/exp-destruct") ("exp-bigint" "jrsonnet-evaluator/exp-bigint" "jrsonnet-cli/exp-bigint") ("exp-apply"))))))

(define-public crate-jrsonnet-0.5.0-pre95 (c (n "jrsonnet") (v "0.5.0-pre95") (d (list (d (n "clap") (r "^4.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1") (d #t) (k 0)) (d (n "jrsonnet-cli") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "jrsonnet-evaluator") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.6") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1fk3wdzifk9cvmcvl8pcq38vcyd7jkdmbikaim7l7s6azyll6z2f") (f (quote (("nightly" "jrsonnet-evaluator/nightly") ("mimalloc" "mimallocator") ("legacy-this-file" "jrsonnet-cli/legacy-this-file") ("experimental" "exp-preserve-order" "exp-destruct" "exp-null-coaelse" "exp-object-iteration" "exp-bigint" "exp-apply") ("exp-preserve-order" "jrsonnet-evaluator/exp-preserve-order" "jrsonnet-cli/exp-preserve-order") ("exp-object-iteration" "jrsonnet-evaluator/exp-object-iteration") ("exp-null-coaelse" "jrsonnet-evaluator/exp-null-coaelse" "jrsonnet-parser/exp-null-coaelse" "jrsonnet-cli/exp-null-coaelse") ("exp-destruct" "jrsonnet-evaluator/exp-destruct") ("exp-bigint" "jrsonnet-evaluator/exp-bigint" "jrsonnet-cli/exp-bigint") ("exp-apply"))))))

