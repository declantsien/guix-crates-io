(define-module (crates-io jr so jrsonnet-evaluator) #:use-module (crates-io))

(define-public crate-jrsonnet-evaluator-1.0.0 (c (n "jrsonnet-evaluator") (v "1.0.0") (d (list (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "closure") (r "^0.3.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.4.0") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^1.0.0") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^1.0.0") (f (quote ("dump" "serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^1.0.0") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^1.0.0") (d #t) (k 1)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (d #t) (k 1)) (d (n "structdump") (r "^0.1.2") (d #t) (k 1)))) (h "140r2h4frd55x7y2013hzxbm3i7hsnhx3hlxjskq8y86i76f12nc") (f (quote (("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("faster") ("default" "serialized-stdlib" "faster") ("codegenerated-stdlib")))) (y #t)))

(define-public crate-jrsonnet-evaluator-0.3.0 (c (n "jrsonnet-evaluator") (v "0.3.0") (d (list (d (n "annotate-snippets") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "closure") (r "^0.3.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.5.1") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.0") (f (quote ("dump" "serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.3.0") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.3.0") (d #t) (k 1)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "structdump") (r "^0.1.2") (d #t) (k 1)))) (h "1vb8b88j5w96qka9clwr28imjxa57m4fhnfinjp631s16mpvvcd3") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("faster") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "faster" "explaining-traces" "serde-json") ("codegenerated-stdlib"))))))

(define-public crate-jrsonnet-evaluator-0.3.1 (c (n "jrsonnet-evaluator") (v "0.3.1") (d (list (d (n "annotate-snippets") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "closure") (r "^0.3.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.1") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.0") (f (quote ("dump" "serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.3.1") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.3.0") (d #t) (k 1)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "structdump") (r "^0.1.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1nxh2jlshl1xdsxp3v2iw63p343yhcm5ckc9j563xzix6pri70w1") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("faster") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "faster" "explaining-traces" "serde-json") ("codegenerated-stdlib"))))))

(define-public crate-jrsonnet-evaluator-0.3.2 (c (n "jrsonnet-evaluator") (v "0.3.2") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "closure") (r "^0.3.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.6.0") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.2") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.0") (f (quote ("dump" "serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.3.2") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.3.0") (d #t) (k 1)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.117") (d #t) (k 1)) (d (n "serde_json") (r "^1.0.59") (o #t) (d #t) (k 0)) (d (n "structdump") (r "^0.1.2") (d #t) (k 1)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "09hywfabar565338izs3rck4yyaqpr3blydh4cw0f1zz2vv0ccwr") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("faster") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "faster" "explaining-traces" "serde-json") ("codegenerated-stdlib"))))))

(define-public crate-jrsonnet-evaluator-0.3.6 (c (n "jrsonnet-evaluator") (v "0.3.6") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "closure") (r "^0.3.0") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.3.6") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.6") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.6") (f (quote ("serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.3.6") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.3.6") (d #t) (k 1)) (d (n "jrsonnet-types") (r "^0.3.6") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1m6gh7jsnkwzi8ng89kg4316sijy09d7jwiznxzhd7p2bx5a314g") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("faster") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "faster" "explaining-traces" "serde-json") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.3.8 (c (n "jrsonnet-evaluator") (v "0.3.8") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "closure") (r "^0.3.0") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.3.8") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.8") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.3.8") (f (quote ("serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.3.8") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.3.8") (d #t) (k 1)) (d (n "jrsonnet-types") (r "^0.3.8") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1dhsqls84wmxl38sfy6cdh3is29yl4gk46y221ib23la5gm1006b") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("faster") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "faster" "explaining-traces" "serde-json") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.4.1 (c (n "jrsonnet-evaluator") (v "0.4.1") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "jrsonnet-gc") (r "^0.4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.4.1") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.4.1") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.4.1") (f (quote ("serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.4.1") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.4.1") (d #t) (k 1)) (d (n "jrsonnet-types") (r "^0.4.1") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c9knna3b05fq5zxfmfbpw3iyp7lkl6yx3j9rxjgiab230x64b2r") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "explaining-traces" "serde-json") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.4.2 (c (n "jrsonnet-evaluator") (v "0.4.2") (d (list (d (n "annotate-snippets") (r "^0.9.0") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 1)) (d (n "jrsonnet-gc") (r "^0.4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.4.2") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.4.2") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.4.2") (f (quote ("serialize" "deserialize"))) (d #t) (k 1)) (d (n "jrsonnet-stdlib") (r "^0.4.2") (d #t) (k 0)) (d (n "jrsonnet-stdlib") (r "^0.4.2") (d #t) (k 1)) (d (n "jrsonnet-types") (r "^0.4.2") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 1)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "04l7jkf6npw25cwibnwmw58p4132n2nl62qjgsrh2jn4v8309rpy") (f (quote (("unstable") ("serialized-stdlib" "serde" "bincode" "jrsonnet-parser/deserialize") ("serde-json" "serde" "serde_json") ("explaining-traces" "annotate-snippets") ("default" "serialized-stdlib" "explaining-traces" "serde-json") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre6 (c (n "jrsonnet-evaluator") (v "0.5.0-pre6") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.4") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre6") (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "01i15p2nqndm7wcny0ckk5770p1axdj01hbxndkigz6sy7k0q42d") (f (quote (("nightly" "hashbrown/nightly") ("friendly-errors" "strsim") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("default" "explaining-traces" "friendly-errors") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre7 (c (n "jrsonnet-evaluator") (v "0.5.0-pre7") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre7") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dcf9czkcgdjmiky344b4pwhsrf8vslrhgl039kg11xl74bdcf7n") (f (quote (("nightly" "hashbrown/nightly") ("friendly-errors" "strsim") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint") ("default" "explaining-traces" "friendly-errors") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre8 (c (n "jrsonnet-evaluator") (v "0.5.0-pre8") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre8") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10nr92l6g5mhgfmihldsfr48has3jy22x745lbchyxxyxyz32h62") (f (quote (("nightly" "hashbrown/nightly") ("friendly-errors" "strsim") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces" "friendly-errors") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre9 (c (n "jrsonnet-evaluator") (v "0.5.0-pre9") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre9") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0s6sadl20hqh5y0kndrd84wdw9d81aqs87s75vhqw8jsx6zzr0cw") (f (quote (("nightly" "hashbrown/nightly") ("friendly-errors" "strsim") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces" "friendly-errors") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre10 (c (n "jrsonnet-evaluator") (v "0.5.0-pre10") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre10") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre10") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre10") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre10") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0qq47pp9zjxf7lz5i6y131mbchpcd37xryy6az965pz1fcpxz2wf") (f (quote (("nightly" "hashbrown/nightly") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre11 (c (n "jrsonnet-evaluator") (v "0.5.0-pre11") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre11") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre11") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre11") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre11") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1hysbmv3b0xs38qz5zagcvr6wwzar5a9l5z0wam1h4w403hjcvf5") (f (quote (("nightly" "hashbrown/nightly") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre91 (c (n "jrsonnet-evaluator") (v "0.5.0-pre91") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre91") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1w6s1jd231rx6ba5nhgvp1znhbdvql870r9ra56ni7g92za24lw3") (f (quote (("nightly" "hashbrown/nightly") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre94 (c (n "jrsonnet-evaluator") (v "0.5.0-pre94") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.5") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre94") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jr23wp8jryzs161fr6mxyc3sglvcr0ghdgblzsshcd3aidwvwgm") (f (quote (("nightly" "hashbrown/nightly") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-null-coaelse" "jrsonnet-parser/exp-null-coaelse") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

(define-public crate-jrsonnet-evaluator-0.5.0-pre95 (c (n "jrsonnet-evaluator") (v "0.5.0-pre95") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.60") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "jrsonnet-gcmodule") (r "^0.3.6") (d #t) (k 0)) (d (n "jrsonnet-interner") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "jrsonnet-macros") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "jrsonnet-parser") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "jrsonnet-types") (r "^0.5.0-pre95") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "172zymnnzwy7wi1qjx66nz95i634ndwjg76l3v3g6blqxq3g4l89") (f (quote (("nightly" "hashbrown/nightly") ("explaining-traces" "annotate-snippets") ("exp-preserve-order") ("exp-object-iteration") ("exp-null-coaelse" "jrsonnet-parser/exp-null-coaelse") ("exp-destruct" "jrsonnet-parser/exp-destruct") ("exp-bigint" "num-bigint" "jrsonnet-types/exp-bigint") ("default" "explaining-traces") ("async-import" "async-trait") ("anyhow-error" "anyhow"))))))

