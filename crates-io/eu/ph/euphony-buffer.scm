(define-module (crates-io eu ph euphony-buffer) #:use-module (crates-io))

(define-public crate-euphony-buffer-0.1.0 (c (n "euphony-buffer") (v "0.1.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "rustls-tls"))) (o #t) (k 0)) (d (n "rubato") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)))) (h "1dk3b8f9whibqgq2hdll11yvw0q3psgmb6msaaml91yslhv5v2ih") (f (quote (("resample" "rubato") ("http" "reqwest") ("default" "http"))))))

(define-public crate-euphony-buffer-0.1.1 (c (n "euphony-buffer") (v "0.1.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "euphony-command") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "rustls-tls"))) (o #t) (k 0)) (d (n "rubato") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rubato") (r "^0.12") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)))) (h "0xlm8g4m5jblgdi4i1pvzli5497rf4mcmw7dw6hgd5siddqh23wx") (f (quote (("resample" "rubato") ("http" "log" "reqwest") ("host" "http" "resample" "decode") ("default" "host") ("decode" "symphonia"))))))

