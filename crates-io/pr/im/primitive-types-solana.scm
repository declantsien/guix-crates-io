(define-module (crates-io pr im primitive-types-solana) #:use-module (crates-io))

(define-public crate-primitive-types-solana-0.1.0 (c (n "primitive-types-solana") (v "0.1.0") (d (list (d (n "fixed-hash") (r "^0.8") (k 0)) (d (n "impl-codec") (r "^0.6.0") (o #t) (k 0)) (d (n "impl-num-traits") (r "^0.1.0") (o #t) (k 0)) (d (n "impl-rlp") (r "^0.3") (o #t) (k 0)) (d (n "impl-serde") (r "^0.4.0") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "scale-info-crate") (r ">=0.9, <3") (f (quote ("derive"))) (o #t) (k 0) (p "scale-info")) (d (n "schemars") (r ">=0.8.12") (o #t) (d #t) (k 0)) (d (n "uint") (r "^0.9.5") (k 0)))) (h "0c5is6ml2zsbas5qiffckiq71563sv38xhxgi7q33qp81vzprj9p") (f (quote (("serde_no_std" "impl-serde") ("serde" "std" "impl-serde" "impl-serde/std") ("scale-info" "codec" "scale-info-crate") ("rustc-hex" "fixed-hash/rustc-hex") ("rlp" "impl-rlp") ("num-traits" "impl-num-traits") ("fp-conversion" "std") ("default" "std") ("codec" "impl-codec") ("byteorder" "fixed-hash/byteorder") ("arbitrary" "fixed-hash/arbitrary" "uint/arbitrary")))) (s 2) (e (quote (("std" "uint/std" "fixed-hash/std" "impl-codec?/std") ("json-schema" "dep:schemars")))) (r "1.60.0")))

