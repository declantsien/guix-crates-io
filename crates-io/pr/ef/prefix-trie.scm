(define-module (crates-io pr ef prefix-trie) #:use-module (crates-io))

(define-public crate-prefix-trie-0.2.0 (c (n "prefix-trie") (v "0.2.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ipnet") (r "^2.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)))) (h "1q6vdngxwvizz12sfxawgnyslviqq6ns9r4iinhwslk8jz5jg8wf") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-prefix-trie-0.2.1 (c (n "prefix-trie") (v "0.2.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ipnet") (r "^2.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)))) (h "05r8d0vpj1qg88azk7wcpri5gd6f2921bfv02ppxxqp6sj42hn76") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-prefix-trie-0.2.2 (c (n "prefix-trie") (v "0.2.2") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ipnet") (r "^2.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "take_mut") (r "^0.2.2") (d #t) (k 0)))) (h "1vzr15ybykjzyfm5m3krj4h0qk56212n6hl9f7nqkj75rl9mya1a") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-prefix-trie-0.2.3 (c (n "prefix-trie") (v "0.2.3") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 2)) (d (n "ipnet") (r "^2.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)))) (h "0wrmyyhvi5cmrnws839gd88ki53dzb2wgmca8l1gnq3crm43kwcz") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-prefix-trie-0.2.4 (c (n "prefix-trie") (v "0.2.4") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 2)) (d (n "ipnet") (r "^2.6.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)))) (h "04jqvvfsvqskyni2g6xs8ihzvlvzdxy30c1vwj9q5dqqz6wc6yp2") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-prefix-trie-0.2.5 (c (n "prefix-trie") (v "0.2.5") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 2)) (d (n "ipnet") (r "^2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)))) (h "064ljbs84j6z4pakag8272kw9r6v50qdc0qd7l9cyvvfkvr4izl5") (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-prefix-trie-0.3.0 (c (n "prefix-trie") (v "0.3.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 2)) (d (n "ipnet") (r "^2") (o #t) (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)))) (h "12z75vlwqmfr3v84bidb39zzzbzfrii148k5a9d9mmh78ig0djq4") (f (quote (("default" "ipnet")))) (s 2) (e (quote (("serde" "dep:serde") ("ipnetwork" "dep:ipnetwork") ("ipnet" "dep:ipnet"))))))

(define-public crate-prefix-trie-0.4.0 (c (n "prefix-trie") (v "0.4.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 2)) (d (n "ipnet") (r "^2") (o #t) (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)))) (h "1459vp0wy24wl5b3fbbyip7s6wvl1c5l572l7di22ikxj3mz2vyx") (f (quote (("default" "ipnet")))) (s 2) (e (quote (("serde" "dep:serde") ("ipnetwork" "dep:ipnetwork") ("ipnet" "dep:ipnet"))))))

(define-public crate-prefix-trie-0.4.1 (c (n "prefix-trie") (v "0.4.1") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "ip_network_table-deps-treebitmap") (r "^0.5.0") (d #t) (k 2)) (d (n "ipnet") (r "^2") (o #t) (d #t) (k 0)) (d (n "ipnetwork") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.10") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)))) (h "0v87d9fdr35afwxgjkwcjp9lv0ppmmy2w23w61x0v0r28wgkb98w") (f (quote (("default" "ipnet")))) (s 2) (e (quote (("serde" "dep:serde") ("ipnetwork" "dep:ipnetwork") ("ipnet" "dep:ipnet"))))))

