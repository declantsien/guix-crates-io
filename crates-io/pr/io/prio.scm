(define-module (crates-io pr io prio) #:use-module (crates-io))

(define-public crate-prio-0.1.0 (c (n "prio") (v "0.1.0") (d (list (d (n "aes-ctr") (r "^0.4.0") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16.15") (d #t) (k 0)))) (h "014xdnj0b91ywv4vj963bwf7zgj3a757dmgphxg128c12rd13vyy") (y #t)))

(define-public crate-prio-0.1.1 (c (n "prio") (v "0.1.1") (d (list (d (n "aes-ctr") (r "^0.4.0") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16.15") (d #t) (k 0)))) (h "0i83i32dpvzhxc516z4cynn7rma72h8l0bwlhvwh619ip4irpixm")))

(define-public crate-prio-0.2.0 (c (n "prio") (v "0.2.0") (d (list (d (n "aes-ctr") (r "^0.4.0") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (d #t) (k 0)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wpvaariinraz8w4pdzl31vg217jdpbi8kpimnpwkdls5pir7hkl")))

(define-public crate-prio-0.3.0 (c (n "prio") (v "0.3.0") (d (list (d (n "aes-ctr") (r "^0.4.0") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12amnqwayl5ka9wq6qn5zkd7fskj6djfim4amwyww3wxf3igrvfz")))

(define-public crate-prio-0.4.0 (c (n "prio") (v "0.4.0") (d (list (d (n "aes-ctr") (r "^0.4.0") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.6.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.12.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "ring") (r "^0.16.15") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gldq5ndyr87v1wn3hrdlj5ix30b3yrby0jwb9xpmbd3r5l8sb9s")))

(define-public crate-prio-0.5.0 (c (n "prio") (v "0.5.0") (d (list (d (n "aes") (r "^0.7.5") (f (quote ("ctr"))) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "blake3") (r "^1.0.0") (d #t) (k 0)) (d (n "cipher") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1jbzhfjr4ky3qp0vwf8hssl13jkpdb7fdwz66j34q9v2i0kcqwi0") (f (quote (("test-vector" "rand" "serde_json"))))))

(define-public crate-prio-0.6.1 (c (n "prio") (v "0.6.1") (d (list (d (n "aes") (r "^0.7.5") (f (quote ("ctr"))) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "blake3") (r "^1.2.0") (d #t) (k 0)) (d (n "cipher") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15yqnj9j9dab9913763kwsyyhkadrpq4wrsxqrbsymsjrjrm6gmi") (f (quote (("test-vector" "rand" "serde_json"))))))

(define-public crate-prio-0.7.0 (c (n "prio") (v "0.7.0") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cipher") (r "^0.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.5") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10sspx2m44scjv68nyxdzjcg0bjwblciv8vgaqsm8f4dkw0122ld") (f (quote (("test-vector" "rand" "serde_json") ("multithreaded" "rayon")))) (r "1.58")))

(define-public crate-prio-0.7.1 (c (n "prio") (v "0.7.1") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cipher") (r "^0.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1a0s5dpgqklivvm19adq8w6pky02q6ap543lzzmv8yy18awcdpil") (f (quote (("test-vector" "rand" "serde_json") ("multithreaded" "rayon")))) (r "1.58")))

(define-public crate-prio-0.8.0 (c (n "prio") (v "0.8.0") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cipher") (r "^0.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "085pxf11b2dcq9w2jmlrg4v8dkdy067kv9ij8vv0ywzdkq544n3f") (f (quote (("test-vector" "rand" "serde_json") ("multithreaded" "rayon")))) (r "1.58")))

(define-public crate-prio-0.8.2 (c (n "prio") (v "0.8.2") (d (list (d (n "aes") (r "^0.8.1") (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cipher") (r "^0.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zkni2ikc24zw0b043gs4av3yq1c6gbrd1xisbxrasnkizbhixfj") (f (quote (("test-vector" "rand" "serde_json") ("prio2") ("multithreaded" "rayon")))) (r "1.58")))

(define-public crate-prio-0.8.3 (c (n "prio") (v "0.8.3") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h9zn2pcbknpmzj4j0a593j3y64h6acrz6wxdsrwn626s5rh8qzg") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.58")))

(define-public crate-prio-0.8.4 (c (n "prio") (v "0.8.4") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lq43gz3p9dd3yach6zfijqa329v2ii62p1czyqra3pjizy4gms1") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.58")))

(define-public crate-prio-0.9.0 (c (n "prio") (v "0.9.0") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nd0bgqmlw4ydk5k9nb61lal1fl7z9yzgr6gc7qsdi2y5yk6grwi") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.58")))

(define-public crate-prio-0.8.5 (c (n "prio") (v "0.8.5") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0lcynq1zj09f8zjdcg1qk8alj73x8ifwz70nbnsrn5n947qfrr56") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.58")))

(define-public crate-prio-0.10.0 (c (n "prio") (v "0.10.0") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.19") (d #t) (k 0)) (d (n "fixed-macro") (r "^1.1.1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v28ahivv7ppw9crl3fskmhliv4s5y0ivavslvwqmx7jqlg3wid0") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.61")))

(define-public crate-prio-0.9.1 (c (n "prio") (v "0.9.1") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gnzc3cw9d8mbq1y8nzjia1l0kz9w20mhbk6irf75vhwhbmzhx65") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.58")))

(define-public crate-prio-0.11.0 (c (n "prio") (v "0.11.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "1gz9545qkcvbzkg7m0lfriv4fs06kawp3r1g28v6p20r5rbs68s2") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac" "sha3")))) (r "1.61")))

(define-public crate-prio-0.11.1 (c (n "prio") (v "0.11.1") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "02n6r9lv4qxpdqwkl9n6bsqyqbgyyp8k0rm4mckz1a27a531aawl") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac" "sha3")))) (r "1.61")))

(define-public crate-prio-0.12.0 (c (n "prio") (v "0.12.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.19") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "085fg0v0wa1rnc6n0rapfqqwskvg3m0my0jl5gqbdym3zbws2alw") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac" "sha3")))) (r "1.61")))

(define-public crate-prio-0.12.1 (c (n "prio") (v "0.12.1") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.8") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "1xx6vbavjf6r2hq21xwvlvh6vpgs6cy6rcbp3y32ngvily9x0x9n") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.61")))

(define-public crate-prio-0.12.2 (c (n "prio") (v "0.12.2") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.9") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "0n6bvj053328gb09i64dlrwr04fifc2c4cb9dmy68sxsm6msha4h") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.61")))

(define-public crate-prio-0.13.0 (c (n "prio") (v "0.13.0") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "08n9v7rnq46gm4p2yllz08510kdy3dhq927l1zkq1hq612jp7mhn") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.14.0 (c (n "prio") (v "0.14.0") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statest") (r "^0.2.2") (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.0") (d #t) (k 2)))) (h "0wsjcrys752mw13xvh4avrz64nn21j63agwmfvjag45aq2br04z1") (f (quote (("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.10.1 (c (n "prio") (v "0.10.1") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0spd0f30lp75ymg4fj51agplmrfnzaqcgh9b1457yhz734kblvx5") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.14.1 (c (n "prio") (v "0.14.1") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statest") (r "^0.2.2") (d #t) (k 2)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "0qfcadsw2hp5rydmjgrsa7bqcfpkmnpml44ca6wfqbvvam55r9p4") (f (quote (("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.15.0 (c (n "prio") (v "0.15.0") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.3") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "0ckkwp3xv3i3v576kqs7ndzqxqy9dfpmsflb5ycql2njaaqr2xgy") (f (quote (("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr")))) (r "1.64")))

(define-public crate-prio-0.15.1 (c (n "prio") (v "0.15.1") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "152mq0krlhp9hv28k0l49fyym3fsn1xsmj090c9f4601b3f4drg2") (f (quote (("test-util" "rand") ("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr")))) (r "1.64")))

(define-public crate-prio-0.12.3 (c (n "prio") (v "0.12.3") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "0d6qfvanrw1wgav8mmgzw74d5zxdzqy6gwp5llxrr6ad7kizpmjn") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.10.2 (c (n "prio") (v "0.10.2") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0s810myplybz2c076wvkpn2pcs2v1xlnvwk48a1n3b2w9niz0l83") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.15.2 (c (n "prio") (v "0.15.2") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "05qjq03pm78bps2ma1m5a7rfrw955njgy6m1r5m1734zym63s0h6") (f (quote (("test-util" "rand") ("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr")))) (r "1.64")))

(define-public crate-prio-0.10.3 (c (n "prio") (v "0.10.3") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0ng3163s4d518zm3z0kivaj9ijbpsvrk11yinhpdblfnn07d1c5r") (f (quote (("test-util" "rand" "serde_json") ("prio2" "aes-gcm" "ring") ("multithreaded" "rayon") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.12.4 (c (n "prio") (v "0.12.4") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "0nwsi7glq0vxc74761kmwrwpciv7bxs2g7hjgfh7g9d99y0kvlg3") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.64")))

(define-public crate-prio-0.15.3 (c (n "prio") (v "0.15.3") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.4") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.10") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "11wkrgwbmlhri65w454xa0vhk304bq7m2x3bmg3hig6qnwcks5mk") (f (quote (("test-util" "rand") ("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr")))) (r "1.64")))

(define-public crate-prio-0.16.0 (c (n "prio") (v "0.16.0") (d (list (d (n "aes") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.6") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.11") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "0g58vq69szcqr2ayi2a9564glnj11820disxxxcpc24q7hg1a5is") (f (quote (("test-util" "hex" "rand" "serde_json") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "hmac" "sha2")))) (r "1.64")))

(define-public crate-prio-0.15.4 (c (n "prio") (v "0.15.4") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.25") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "0bjns0p8vvyajwfb80mdn8rbbacfv9v5ima12kd413vkf9y2nbb5") (f (quote (("test-util" "rand") ("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr")))) (r "1.71")))

(define-public crate-prio-0.16.1 (c (n "prio") (v "0.16.1") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.25") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "1a4g3y1vfg3amadwn7aac2xkjmffnyl8r5dabqzqvij5hr34flha") (f (quote (("test-util" "hex" "rand" "serde_json") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "hmac" "sha2")))) (r "1.71")))

(define-public crate-prio-0.12.5 (c (n "prio") (v "0.12.5") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.25") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "09mlgkjdfxjm8273mbdrm8jvag4y0gnf7z7k0mdrvy18v7w7bdna") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.71")))

(define-public crate-prio-0.12.6 (c (n "prio") (v "0.12.6") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "cmac") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "16mijamxyk65xs39zgrb6548a9cd3dafaqbx5zdbs0wqpaqx2d94") (f (quote (("test-util" "rand" "serde_json") ("prio2" "crypto-dependencies" "aes-gcm" "ring") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "cmac")))) (r "1.71")))

(define-public crate-prio-0.15.5 (c (n "prio") (v "0.15.5") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (d #t) (k 2)))) (h "1q2pgmffphhb7abcsa3vx0x5ygdcgq33b4nz2qjjda93nmnih8mx") (f (quote (("test-util" "rand") ("prio2" "crypto-dependencies" "hmac" "sha2") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr")))) (r "1.71")))

(define-public crate-prio-0.16.2 (c (n "prio") (v "0.16.2") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.26") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.12") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (o #t) (d #t) (k 0)))) (h "1bi4hv27rsm52as22g7q9z2qhpk29knjhjz39fklxvlfsaq5xv2w") (f (quote (("test-util" "hex" "rand" "serde_json" "zipf") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter" "rand") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "hmac" "sha2")))) (r "1.71")))

(define-public crate-prio-0.16.3 (c (n "prio") (v "0.16.3") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.27") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.44") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.18") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (o #t) (d #t) (k 0)))) (h "1fv01mwpfhpkcqdi0idyxg0wwpbr67c7s13gihdmij1fdsljy4s5") (f (quote (("test-util" "hex" "serde_json" "zipf") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "hmac" "sha2")))) (r "1.71")))

(define-public crate-prio-0.16.4 (c (n "prio") (v "0.16.4") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.8") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.27") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.15") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.4") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (o #t) (d #t) (k 0)))) (h "0f72w5klffj59wrafivd8c95jn14phwn6j5gw4pgxx53liz7d88m") (f (quote (("test-util" "hex" "serde_json" "zipf") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "hmac" "sha2")))) (r "1.71")))

(define-public crate-prio-0.16.5 (c (n "prio") (v "0.16.5") (d (list (d (n "aes") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bitvec") (r "^1.0.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ctr") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "fiat-crypto") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "fixed") (r "^1.27") (o #t) (d #t) (k 0)) (d (n "fixed-macro") (r "^1.2.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2.14") (f (quote ("std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "modinverse") (r "^0.1.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4.5") (f (quote ("rand" "serde"))) (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.5") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.46") (o #t) (d #t) (k 0)) (d (n "num-iter") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.19") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.4") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.10.8") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 2)) (d (n "subtle") (r "^2.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zipf") (r "^7.0.1") (o #t) (d #t) (k 0)))) (h "1hkb36zg7cc2s7dvkbwapxfqwndz6ywyjfvgmzyrvys0c4v1zn18") (f (quote (("wasm-compat" "getrandom/js") ("test-util" "hex" "serde_json" "zipf") ("multithreaded" "rayon") ("experimental" "bitvec" "fiat-crypto" "fixed" "num-bigint" "num-rational" "num-traits" "num-integer" "num-iter") ("default" "crypto-dependencies") ("crypto-dependencies" "aes" "ctr" "hmac" "sha2")))) (r "1.71")))

