(define-module (crates-io pr io prioritized-metered-channel) #:use-module (crates-io))

(define-public crate-prioritized-metered-channel-0.1.0 (c (n "prioritized-metered-channel") (v "0.1.0") (h "1a0bg2nznh0wpd26zrk35a2adq5yds44wnnlj6qlr30himfjw72s") (y #t)))

(define-public crate-prioritized-metered-channel-0.2.0 (c (n "prioritized-metered-channel") (v "0.2.0") (d (list (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (f (quote ("wyrand"))) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)))) (h "1i09y96cfq8gpdrs531am04bfssa6wwd87hq1cnq7316ibj9h9iq")))

(define-public crate-prioritized-metered-channel-0.4.0 (c (n "prioritized-metered-channel") (v "0.4.0") (d (list (d (n "async-channel") (r "^1.8.0") (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "nanorand") (r "^0.7.0") (f (quote ("wyrand"))) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1zrr2ckahqxl6n23nbmlwp5x8ydvdr8xv1zspmyfga4clxrfzjm3")))

(define-public crate-prioritized-metered-channel-0.5.0 (c (n "prioritized-metered-channel") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "nanorand") (r "^0.7.0") (f (quote ("wyrand"))) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (f (quote ("log"))) (d #t) (k 2)))) (h "02lyq8xy4lzxr35vpvpn3gagp02s05js0n3ma59xb4cqhkm5cf7m") (f (quote (("futures_channel") ("default" "async_channel")))) (s 2) (e (quote (("async_channel" "dep:async-channel"))))))

(define-public crate-prioritized-metered-channel-0.5.1 (c (n "prioritized-metered-channel") (v "0.5.1") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "nanorand") (r "^0.7.0") (f (quote ("wyrand"))) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (f (quote ("log"))) (d #t) (k 2)))) (h "0hp38x6bw375pzn1378pw7kwfyqz6m4vjjjanjm97ww8pn4hr7z9") (f (quote (("futures_channel") ("default" "async_channel")))) (s 2) (e (quote (("async_channel" "dep:async-channel"))))))

(define-public crate-prioritized-metered-channel-0.6.1 (c (n "prioritized-metered-channel") (v "0.6.1") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "coarsetime") (r "^0.1.22") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("thread-pool"))) (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "nanorand") (r "^0.7.0") (f (quote ("wyrand"))) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (f (quote ("log"))) (d #t) (k 2)))) (h "1b97g7y0rakvxy3b4sjpp99xmh6cxjyflcj2037z4c9jc36fcwm1") (f (quote (("futures_channel") ("default" "async_channel")))) (s 2) (e (quote (("async_channel" "dep:async-channel"))))))

