(define-module (crates-io pr oc proc-macro-assertions) #:use-module (crates-io))

(define-public crate-proc-macro-assertions-0.0.1 (c (n "proc-macro-assertions") (v "0.0.1") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0bl15nwip9y2xiqrqb2anm1dgba2pkmxih2g1b1md1vw93q6qkdw") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.0.2 (c (n "proc-macro-assertions") (v "0.0.2") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.107") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "047xd0maq5d9d3jyg44h0l1h5hdravk4ywdln9mpsgffcyk320ga") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.0.3 (c (n "proc-macro-assertions") (v "0.0.3") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1addxabhh96spcfmdlp6blgrjwp7bs0ykck5qilr9sjbmn5r55xx") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.0.4 (c (n "proc-macro-assertions") (v "0.0.4") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0apv749383nv4drynl06akvl8f0sm0srhw93h7sx1rm4vri2alw3") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.0.5 (c (n "proc-macro-assertions") (v "0.0.5") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0gih235fjsjfxkc5sfa4p6pqirxqyfvsp2jjjkkq66zkw408f946") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.0.6 (c (n "proc-macro-assertions") (v "0.0.6") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0gcvws83cswywa81vvjw3yl1x47sngzjrwdglanv6qfcap4yrmv4") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.0.7 (c (n "proc-macro-assertions") (v "0.0.7") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0lzj3wcx51ib47mzdzazqwmp84q039yj713zdwi99vjxvkvzn63r") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.1.0 (c (n "proc-macro-assertions") (v "0.1.0") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0qlwr30ai6zx3favl3jf2sa08s03086q1ycrxm1cvzswxbi5xasc") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.1.1 (c (n "proc-macro-assertions") (v "0.1.1") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "03fil6irl91kgcdi32kj5smhl9cwy190b79y0c3s6a72k8xh16b0") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.1.2 (c (n "proc-macro-assertions") (v "0.1.2") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0mldmjpvprqpdg030pfl1jiwjhm92j4dghi2kpvzjiysa36dh076") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.1.3 (c (n "proc-macro-assertions") (v "0.1.3") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1vkrwv20kff5252d9fnpd8bjjn9blh81rx1jrbbxbkqpmry9iygh") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.1.4 (c (n "proc-macro-assertions") (v "0.1.4") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0188igw87c3w3qba38cas7np7rc2lswgrz0h15q098hkppc4x4x1") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

(define-public crate-proc-macro-assertions-0.1.5 (c (n "proc-macro-assertions") (v "0.1.5") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.51") (d #t) (k 0)) (d (n "quote") (r "^1.0.23") (d #t) (k 0)) (d (n "sealed") (r "^0.5.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.28") (f (quote ("full" "extra-traits" "printing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1svh36jyq26n4k6vyqwwpdbb8dvfw3r4g8dn3w03rd9gywn4xlq3") (f (quote (("mock_ident_gen")))) (s 2) (e (quote (("uuid_ident_gen" "dep:uuid"))))))

