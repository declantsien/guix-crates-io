(define-module (crates-io pr oc proc_qq) #:use-module (crates-io))

(define-public crate-proc_qq-0.1.0 (c (n "proc_qq") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "0y9k8q2jpz9rrmxi0rwrc792kx9n65zq7kg5qhvwwjfg80dc6c7q")))

(define-public crate-proc_qq-0.1.1 (c (n "proc_qq") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "0g3wqk5f4aki6b0g8yw89n0nj9zbp06yf88mp0ilscnz7p1ymk1n")))

(define-public crate-proc_qq-0.1.2 (c (n "proc_qq") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "1w8g0dkqzlwmzn8sz76ds7n5zmnp7gikl92n8a9i7qjc21wpmfh9")))

(define-public crate-proc_qq-0.1.3 (c (n "proc_qq") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "11xdn3hp3jk8xs2dcw3bmdf399m704qmk2p8vw9sni4rygfas5zp")))

(define-public crate-proc_qq-0.1.4 (c (n "proc_qq") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "1ifib47kpwi8yyvahni2sidrg27gcgd6f6xd1gcwzb9bjva27zf5")))

(define-public crate-proc_qq-0.1.5 (c (n "proc_qq") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "0k9amm4v8g78qg6h6yarny6ks52hkc622nsjgzrfv9yz7dn9gszw")))

(define-public crate-proc_qq-0.1.6 (c (n "proc_qq") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "1d4j63845i6zvssi2d7c9vncpkiki6c7cck4p3v8ha7difpqmjsg")))

(define-public crate-proc_qq-0.1.7 (c (n "proc_qq") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.14") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.14") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "11yz2fgf9rj1h3ai4498lp08x8s20d4ig53jf8w13rhr5ddhyjwp")))

(define-public crate-proc_qq-0.1.8 (c (n "proc_qq") (v "0.1.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.15") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.15") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "00bz0f3lmcf13fjxflbi7yhnw2ayz6j7x2rg8bj6nnlf329c8nwb")))

(define-public crate-proc_qq-0.1.9 (c (n "proc_qq") (v "0.1.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.15") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.15") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "0b8jqi4q1csl5wfc62slbal0sqyzdv3zf5hnjshwqsh3n8nrf3id")))

(define-public crate-proc_qq-0.1.10 (c (n "proc_qq") (v "0.1.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.16") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)))) (h "1rhvzakvprpkq7895agsmvlw1g03p5lqsrmmfgk9ygi75kdm98wv")))

(define-public crate-proc_qq-0.1.11 (c (n "proc_qq") (v "0.1.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.16") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "0i4ni2rlnk1fxddgvns4k3z3d4k0z69l323gcb2wi7ygdlkznzfb") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.12 (c (n "proc_qq") (v "0.1.12") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.16") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "1fzsa5l5yj5wkgdv60x7zbigfinwclabbifsrvlgiswnal154nhw") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.13 (c (n "proc_qq") (v "0.1.13") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.16") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "1aqxqmgid1h1h3bgn4nk2liyw5jvg8b2cxqg0nw3nmi0qiw7vx58") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.14 (c (n "proc_qq") (v "0.1.14") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.16") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "1hilycf5hnkap7rlrx5dyzy4vazkbs3ppp7s8f580cksm2568hjl") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.15 (c (n "proc_qq") (v "0.1.15") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.17") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.17") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "11hqic15vf2g4fnk59lfcy0sdjc4y27xj9wc0b7bwisml0v3w53l") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.16 (c (n "proc_qq") (v "0.1.16") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.17") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.17") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "1z4x58wflfn1zp6cw7hnqi35wrs2jhhgb60mfr0hiniva33ci9ng") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.17 (c (n "proc_qq") (v "0.1.17") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0") (d #t) (k 0)) (d (n "ricq") (r "^0.1.17") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.17") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"macos\"))") (k 0)))) (h "02pz08s3n0ch63xz7g8fwpwj41rghrqapa5346w3jwq6cfavv90z") (f (quote (("default" "pop_window_slider")))) (s 2) (e (quote (("pop_window_slider" "dep:wry"))))))

(define-public crate-proc_qq-0.1.18 (c (n "proc_qq") (v "0.1.18") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.7") (d #t) (k 0)) (d (n "qr2term") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.17") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.17") (d #t) (k 0)) (d (n "rqrr") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "1yf89clyxxyvgcdxjx9wxqpf7b1hs7hbb11x81jqg1iar3ghbyrc") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:qr2term" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.19 (c (n "proc_qq") (v "0.1.19") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.7") (d #t) (k 0)) (d (n "qr2term") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.17") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.17") (d #t) (k 0)) (d (n "rqrr") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "1rwdsah8y0byh6lcfxka30rap68vbcyfnr635c09anzjqbixqp8l") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.20 (c (n "proc_qq") (v "0.1.20") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.7") (d #t) (k 0)) (d (n "qr2term") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.17") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.17") (d #t) (k 0)) (d (n "rqrr") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "16y3bpkyhkh4w4lvdq56j9yrg76az8dwrmainvhix2yhsxbgmm2s") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.21 (c (n "proc_qq") (v "0.1.21") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.0") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5.0") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.38") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.7") (d #t) (k 0)) (d (n "qr2term") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.19.0") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "0z4ryvhk42sdpkgyl6g599zmm8d3p9k8551bbn5xw0sh2jg53lgm") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.22 (c (n "proc_qq") (v "0.1.22") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.8") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "1p265w8hp9vvf8096sv9pjfm5kpv5x09hr1vahyd4dvsl61w8lrk") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.23 (c (n "proc_qq") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.9") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "0hzirf6nc9qzp3kb3xd3c6xmpz6d274xsfpj508s3n3vvdg22ifm") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.24 (c (n "proc_qq") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.9") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1hbyipj8mxh9k15gsw76pqlnw55i9jd9n5qh0w40b0xrkbc8hsqy") (f (quote (("default" "pop_window_slider" "console_qr")))) (s 2) (e (quote (("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.25 (c (n "proc_qq") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.9") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "002l8bz6kcjzgjfshz7sg8jnjyvjbq7h66w55a499m1m26qf2fn0") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.26 (c (n "proc_qq") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.10") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1kgrhm1fm8sp35k9xaspa8rak569bv74n9wcfmdn9rn54maq85kb") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.27 (c (n "proc_qq") (v "0.1.27") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.10") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "109pcrf5fdfbbwjscfjskci53mbvdarhbxxfjpx51w5mw2ql9lkw") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.28 (c (n "proc_qq") (v "0.1.28") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.10") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1rab128wzj5g2rfdswrlf8gc8rqizhnmy7pcl1kwfkymigj7w8sh") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.29 (c (n "proc_qq") (v "0.1.29") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.10") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "15dk0h6dsyp0gl9pzq40d6ssx98znxinkrwf4gzbc6pkwwwh26l9") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.30 (c (n "proc_qq") (v "0.1.30") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.10") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "15fy46yrxqgqh03smvl8m1vf1p6adlzwi7nf04a83lfzggvfw4d8") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.31 (c (n "proc_qq") (v "0.1.31") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.10") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "1r78cpravwp4a3gb1jmsimqz3f7adbjb75fzvbyp5qlb0x0pqj45") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.32 (c (n "proc_qq") (v "0.1.32") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.11") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "123bgy2gx1krby564f2h439zm9i27n5sw5hj9x0gdbqvhlbnxh9d") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.33 (c (n "proc_qq") (v "0.1.33") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.12") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "0dbqqw65sj77wmd54w7713dj29655a9fbj2mrk2zdk9k9ir3ciza") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.34 (c (n "proc_qq") (v "0.1.34") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "proc_qq_codegen") (r "^0.1.12") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)))) (h "193r3ika9b145nffkwimkzhgc49ihjg0q88kkxpmws504zj09iy8") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.35 (c (n "proc_qq") (v "0.1.35") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.13") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "1pd967b9rqlwimc12wxbf3dv9asliqx8a5x760z5vdki61f2qdhz") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

(define-public crate-proc_qq-0.1.36 (c (n "proc_qq") (v "0.1.36") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "image") (r "^0.24.5") (f (quote ("png" "jpeg" "bmp" "gif" "webp"))) (o #t) (d #t) (k 0)) (d (n "opener") (r "^0.5") (d #t) (t "cfg(any(target_os = \"windows\", target_os = \"linux\", target_os = \"macos\"))") (k 0)) (d (n "openssl") (r "^0.10.45") (f (quote ("vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "proc_qq_codegen") (r "^0.1.14") (d #t) (k 0)) (d (n "qr2term") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "ricq") (r "^0.1.19") (d #t) (k 0)) (d (n "ricq-core") (r "^0.1.19") (d #t) (k 0)) (d (n "rqrr") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-socks") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "wry") (r "^0.23") (o #t) (d #t) (t "cfg(any(target_os = \"windows\"))") (k 0)))) (h "16zxymg60ihl32wj5482ss1kvp9fizfq1ymbrlnh2zglypij174w") (f (quote (("default" "pop_window_slider" "console_qr") ("connect_handler")))) (s 2) (e (quote (("proxy" "connect_handler" "dep:tokio-socks" "dep:trust-dns-resolver" "dep:url") ("pop_window_slider" "dep:wry") ("console_qr" "dep:rqrr" "dep:image"))))))

