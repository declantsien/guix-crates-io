(define-module (crates-io pr oc procs) #:use-module (crates-io))

(define-public crate-procs-0.1.0 (c (n "procs") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.2") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0yx704w7vbrpzym4fv6dbb62hx7nrpwg1cv7icnbdzfv04hnma04") (f (quote (("udp"))))))

(define-public crate-procs-0.2.0 (c (n "procs") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1wgsp31phncdm0ab5m1vm6n7fy90fajzbkv11rjjy2y2md2rma45")))

(define-public crate-procs-0.2.1 (c (n "procs") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1wmdrm2186mhl60a13gmjh0s3kpfswz9jwndkw38z8921vlmyipb")))

(define-public crate-procs-0.2.2 (c (n "procs") (v "0.2.2") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1gdxcmv0i2sdvhhadhqcd8rdzix51xhr2iwkxnk3bdy1ambzgv02")))

(define-public crate-procs-0.3.0 (c (n "procs") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0fshrkylp06dl1avs6q8qslz4srf9375ga8r77vbhx8gnfqrf6gw")))

(define-public crate-procs-0.3.1 (c (n "procs") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0d6wwl23kr7ni3x7rg1p730ipnwaqa573l7gg4a2kxv85w8djjgs")))

(define-public crate-procs-0.3.2 (c (n "procs") (v "0.3.2") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0lypzp549h8n26s30h169gabjys3hd1lb43qrgc0dvzs8vgbi3gh")))

(define-public crate-procs-0.3.3 (c (n "procs") (v "0.3.3") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "158yqf48y3d8vi7c386lb2dv4vaxiwlcshff3nnwax5ghdk6adqh")))

(define-public crate-procs-0.3.4 (c (n "procs") (v "0.3.4") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1z2k0crh0p97zlxp4myy3413pksi1jla97zwkhsd76np3nvxwq4s")))

(define-public crate-procs-0.3.5 (c (n "procs") (v "0.3.5") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "02hws3s9hsyas1924fqb6rzan5m1dc8zmh0cg8ammz0zsig9q4g3")))

(define-public crate-procs-0.4.0 (c (n "procs") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0a8rc3l7j2h2iwk9s7gvk5m6qs8q33pr5q7qk7ggdcdr1gn7gkd4")))

(define-public crate-procs-0.4.1 (c (n "procs") (v "0.4.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "13xpb71spw9ka535km52xfp10hvmgr3yj2bcrfzsrn2542mf0z50")))

(define-public crate-procs-0.4.2 (c (n "procs") (v "0.4.2") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0xnbaz5rbv4kakbf13qpdfq915qf7cz9r9lrbvvzc0rg5pxkb5l9")))

(define-public crate-procs-0.4.3 (c (n "procs") (v "0.4.3") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0dqj3m67sasrq7mwy79hks74ikhsp74b3ahard35406s1wja389d")))

(define-public crate-procs-0.4.4 (c (n "procs") (v "0.4.4") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.3") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "10fmxygkp6hqa2gmc999q2nayna9pzrkvfw42r30w4v79as7mw2m")))

(define-public crate-procs-0.4.5 (c (n "procs") (v "0.4.5") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.5") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1s6b7saylbq3hmbvykd12jlygajla0ns7rnyxk4pcdvd7k4x5h1c")))

(define-public crate-procs-0.4.6 (c (n "procs") (v "0.4.6") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.5") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0hy4drgfv1ji4qhd6xdn1w5zq2gcc88naa56xi24wr9fx7pfb7hh")))

(define-public crate-procs-0.4.7 (c (n "procs") (v "0.4.7") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "00znyz9rbqszm8xrj5nz9223hwvqdbvsd7d3kyqcpnxawi252gd0")))

(define-public crate-procs-0.4.8 (c (n "procs") (v "0.4.8") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "14hzy3qf0i7lqacg6574yda5bpqz7a38wgf12xw3ipqcnv589yks")))

(define-public crate-procs-0.5.0 (c (n "procs") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "libproc") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0fw60paf0n0qq76syngligccnfx5wsmk522d9ldj15nr57dyh4gf")))

(define-public crate-procs-0.5.1 (c (n "procs") (v "0.5.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "libproc") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1qj5l8xhw14d6smjxi151k09sxfiij6javw8315d1jdyhdpf0q0b")))

(define-public crate-procs-0.5.2 (c (n "procs") (v "0.5.2") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0lqsmjs00x0rx3ldfdasnw2q8mbq0jjacvwis2gp084fxwbydaac")))

(define-public crate-procs-0.5.3 (c (n "procs") (v "0.5.3") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "19f4lgd2b1ln20m9vnii6wqm74qm4sfn4vp8m1i0n0ihzj7j95qc")))

(define-public crate-procs-0.5.4 (c (n "procs") (v "0.5.4") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "09q2mx6y73fzg0pzan0i00psrgb2b8q0yk33syyhqcbcd3zwh71d")))

(define-public crate-procs-0.5.5 (c (n "procs") (v "0.5.5") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0ps42dhmy6rfl3g6vdgfahp2v90yiglyl69h982xw1wc4dzzlvm1")))

(define-public crate-procs-0.5.6 (c (n "procs") (v "0.5.6") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0f0n873x44dvrf609phfzavzjd2mz041n6955dmbsqn6may2bhz9")))

(define-public crate-procs-0.5.7 (c (n "procs") (v "0.5.7") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "1sgi1rp1msmrcf4rgrr840ig9zpg496hh6qrqjrf4d6mvagahny0")))

(define-public crate-procs-0.5.8 (c (n "procs") (v "0.5.8") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "0hwnsyjbh1n0h6l6b1x81ph2n3bj90gw5dkpch8ih2k0kw21v6iy")))

(define-public crate-procs-0.6.0 (c (n "procs") (v "0.6.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (k 0)))) (h "06nskdz7srpdjnv2zh02ind33fyv57n3mi677ayd89fym53ckgzz")))

(define-public crate-procs-0.7.0 (c (n "procs") (v "0.7.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.1.0") (d #t) (k 1)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1w9aqvkdz8h4zxkh67dcn7nbx7vgccvhkil01bv2mph4jwy41swj")))

(define-public crate-procs-0.7.1 (c (n "procs") (v "0.7.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.1.0") (d #t) (k 1)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qp1aiikskli5zd7w3cj2l6xmyy1dvf7dzw7qnp0zfywmsnf2hal")))

(define-public crate-procs-0.7.2 (c (n "procs") (v "0.7.2") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.1.0") (d #t) (k 1)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1vvym654hghhcynwiiprns0wlyvcm38gby7zr3h8vprss2yv4h62")))

(define-public crate-procs-0.7.3 (c (n "procs") (v "0.7.3") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.1.0") (d #t) (k 1)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "01wpkg3f354lk7sk4zgf36k8pvy5haqn4i4byjpvwmi3fr6phmpb")))

(define-public crate-procs-0.7.4 (c (n "procs") (v "0.7.4") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "dirs") (r "^1.0.4") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fs_extra") (r "^1.1.0") (d #t) (k 1)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12nf9h65a4v5rdb70bapm6xbxqcq9xwy2f8401w0xmlxfbf58nd0")))

(define-public crate-procs-0.7.5 (c (n "procs") (v "0.7.5") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1j7fcny4rij7ybyzrjgz4fhphmfsvhgypxbl6z9zh6bmpmxrnr9k")))

(define-public crate-procs-0.7.6 (c (n "procs") (v "0.7.6") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "088qj46wg59vq0ik9ddcz9089j2rmqvl85jkaxijjbczyvwpx4xv")))

(define-public crate-procs-0.8.0 (c (n "procs") (v "0.8.0") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ydwjwwp493qqxi5pnz4kald88z2s4acv99xlm6s5hr8i9skzssj")))

(define-public crate-procs-0.8.1 (c (n "procs") (v "0.8.1") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.4.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19p35jyflcm6mqams9fp6zlnawh8dzzgaqmkwdr5bw7b5z373k06")))

(define-public crate-procs-0.8.2 (c (n "procs") (v "0.8.2") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1nzdp41bvsfvsimskbdkyrh3bwmqx3y3yf9bn8q4hp9aw65c1i3x")))

(define-public crate-procs-0.8.3 (c (n "procs") (v "0.8.3") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "00bgljjjbjmxnf88j4mdscf2cqvii8dnbk0w1w0wg2mfcjqb5iji")))

(define-public crate-procs-0.8.4 (c (n "procs") (v "0.8.4") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "palaver") (r "^0.2.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "palaver") (r "^0.2.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1scqz0alib775namq5p7rpphh9j1990s5a6564jkgpsrqffk10sy")))

(define-public crate-procs-0.8.5 (c (n "procs") (v "0.8.5") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "palaver") (r "^0.2.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "palaver") (r "^0.2.1") (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0w7vwz1ip375j1sdbx310j7fg3grv9qarm6wyq4hl4g6frk40llm")))

(define-public crate-procs-0.8.6 (c (n "procs") (v "0.8.6") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.5") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nf90i983vpgz7blrhyyp7cl9vwi3vj8b6dj6xwiv3ffsgk0xa7g")))

(define-public crate-procs-0.8.7 (c (n "procs") (v "0.8.7") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.6") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.8.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1caqwl1924lql0sgv65q44xr0b1qs6a6igchhw0kknar639hvipg")))

(define-public crate-procs-0.8.8 (c (n "procs") (v "0.8.8") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.6") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1s4bl4nk9nwb7s76zikf13x5b453fyipwc910a1x3mdrkf2skgws")))

(define-public crate-procs-0.8.9 (c (n "procs") (v "0.8.9") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.6") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rrp3jpgdn77b3392j6rsarrk47jxx8ibac8nj8kyh2c07208hs2")))

(define-public crate-procs-0.8.10 (c (n "procs") (v "0.8.10") (d (list (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "console") (r "^0.7.6") (d #t) (k 0)) (d (n "directories") (r "^1.0.2") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.8") (d #t) (k 0)) (d (n "errno") (r "^0.1.8") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "getch") (r "^0.2.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.48") (d #t) (k 0)) (d (n "libproc") (r "^0.5.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.33") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.33") (d #t) (k 0)) (d (n "structopt") (r "^0.2.14") (d #t) (k 0)) (d (n "toml") (r "^0.4.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.5") (d #t) (k 0)) (d (n "users") (r "^0.9.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "000xdwiffqxb4v8yk3ll5n7pk3xg5spjs38skm6y1imlsfvszlrp")))

(define-public crate-procs-0.8.11 (c (n "procs") (v "0.8.11") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.5.4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0awy4i3js4mr65cmm0gcjqxx72nqrpwl9xn61y8wvlq7qicppw6z")))

(define-public crate-procs-0.8.12 (c (n "procs") (v "0.8.12") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.6") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1if5vabwvvv8f2ix913yanq30wxafnx2rhc0wz0v1754wffbr135")))

(define-public crate-procs-0.8.13 (c (n "procs") (v "0.8.13") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0zqaqcsc7z1m23y29bxkdgvxi0r9bbrhsz3cxwa3l64pmd00ab8z")))

(define-public crate-procs-0.8.14 (c (n "procs") (v "0.8.14") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0g2qlga84iglh83w9jdhs6arr742g58ch221ymq0dvbpp51l57c5")))

(define-public crate-procs-0.8.15 (c (n "procs") (v "0.8.15") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1yr228k54fr9x01k3hz5nzgv992j0nfvg16rfpx3iq81l4hzhlmp")))

(define-public crate-procs-0.8.16 (c (n "procs") (v "0.8.16") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1mhiwa2wqznn95pcvfq24fga4prkrwrmpf5x352prw4ij6jazh95")))

(define-public crate-procs-0.9.0 (c (n "procs") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0kk0fdcfcsdjg58xwcgd0v9ak49zjwnp3mh6sjb6cghz2frnbrwa")))

(define-public crate-procs-0.9.1 (c (n "procs") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0837xpmm181ncvabarpz7ybirklk0z203lxq6s6wqj0aay49d0zr")))

(define-public crate-procs-0.9.2 (c (n "procs") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "193wqx79sa0ihlqhr8vbz6aml2692l1bqzpz8xl234chprq0fjbw")))

(define-public crate-procs-0.9.3 (c (n "procs") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "155z3y98dy4c2kmi6gx4w5p1y38h8fmbyyhm5pcimlslzvcqjsan")))

(define-public crate-procs-0.9.4 (c (n "procs") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "runas") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1r1q6r8ywz938jwblmcncim4hpr4ls1zbv0zq0jvzb9ichbsvp59")))

(define-public crate-procs-0.9.5 (c (n "procs") (v "0.9.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "12dpfzz4jdlgk6bizqgca5plnl5577k3gjgi80qkyb6frpyr5km8")))

(define-public crate-procs-0.9.6 (c (n "procs") (v "0.9.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0zw7bl1x8adxcgc4vck0bv50fyb77rr304glpfvhf4gpiaxpybqw")))

(define-public crate-procs-0.9.7 (c (n "procs") (v "0.9.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07r6mbmld2pj71kcdrcy18fmn31lrj18z6fvqr11wvl0dy2akf8d")))

(define-public crate-procs-0.9.8 (c (n "procs") (v "0.9.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1g0jn14q3vk1y02diga1bm4h9l82p6jk3zycjmc0w7zad5k87ndd")))

(define-public crate-procs-0.9.9 (c (n "procs") (v "0.9.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quale") (r "^1.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unbytify") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0xf5p2qixy9cyy2bp88cwgai8cx94hdyabl7xq7ajzbjh43ni5md")))

(define-public crate-procs-0.9.10 (c (n "procs") (v "0.9.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1qy6clz1zfhrl5gyzmxcwsa9a2yj8sym2mcsy89qf2k71f2msngb") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.11 (c (n "procs") (v "0.9.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19h4l12bk5jydhkdmxdizr5c8qil3bvb3pz2mik0ajibb4s47ylp") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.12 (c (n "procs") (v "0.9.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qbsd9bfrkd0i2p548r6637d4kil5p7mc5hl0s9m7cs5zax12q13") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.13 (c (n "procs") (v "0.9.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "029dmjjzw2n3hb48pbmpxs7q87phbfyr0abfbaxk5ah31fw2a2dp") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.14 (c (n "procs") (v "0.9.14") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0pq1bz8q6n5mvqwlm0m5ykjf4ryvk3dda50xpprdd0db3lbl74il") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.15 (c (n "procs") (v "0.9.15") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qzslymdlk6ijxybzc1d9mj1cp8k5ly8hr3jvvv51j4yhwxpbr0p") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.16 (c (n "procs") (v "0.9.16") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0lmadjav43csb0l3j49c8wi54x4p7v9p2br8kmhwr6dzpf0fa3qb") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.17 (c (n "procs") (v "0.9.17") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1yr56ys88h291j30wbzgf0i4x4sg9wymb2fhkkpi8rydymlq5kad") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.18 (c (n "procs") (v "0.9.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "quote") (r "= 1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "05pzlw930f54zbs01ra2ihq2syprll56sqmg0fzvnzll2zrlg3j4") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.19 (c (n "procs") (v "0.9.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "19yvv3fnplv3hs3h2b0h8z3bsiqj02hbkb2y29b70rqqiryk6d6y") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.9.20 (c (n "procs") (v "0.9.20") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nm45r7amqbmvj0hy8d9wcib7g2gywfgasccxb48m416jiyww33p") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.0 (c (n "procs") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "11bq17gp6gnfkq7mfx6fhxly744nc3qjj7d553j31bcksmy33zxj") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.1 (c (n "procs") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1qaccwqjq51gd90qvhbfscycwkhwwm438hzfq2cb8889x8bpdhdg") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.2 (c (n "procs") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0n8yypvcvfb1lyx2ik015s41jwb0c7ksxr54brwgmvkgx190v8wm") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.3 (c (n "procs") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.9.2") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.15") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "process_path") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ll4r3swz2p9anyd71v07g791nm74p8fsd97zbxsks4jqkzq501w") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.4 (c (n "procs") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0pd3m80yf64p0n7jvgl3w21kbl5c81iilq63qhny6p1wlh4zaig8") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.5 (c (n "procs") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0wza4swqp4np8y8d2nkg35wqyiqknqsgw4zr4znjfsv0zp91aw2l") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.6 (c (n "procs") (v "0.10.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1v1gdlq2h51zffb0vfnahmh5myl0wrv0jgb0gis4gkpw2wlv1ivz") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.7 (c (n "procs") (v "0.10.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^3") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.12") (d #t) (k 0)) (d (n "directories") (r "^2.0") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.18") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.7.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1lhls5zn0wgbrc3ac3aw5yf40g7j50saiq0qpbc83zr23cfi5abc") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.8 (c (n "procs") (v "0.10.8") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "byte-unit") (r ">=3.0.0, <4.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "console") (r ">=0.12.0, <0.13.0") (d #t) (k 0)) (d (n "directories") (r ">=2.0.0, <3.0.0") (d #t) (k 0)) (d (n "dockworker") (r ">=0.0.18, <0.0.19") (o #t) (d #t) (k 0)) (d (n "errno") (r ">=0.2.0, <0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "libproc") (r ">=0.5.0, <0.6.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r ">=0.16.0, <0.17.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r ">=0.16.0, <0.17.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r ">=0.7.1, <0.8.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "structopt") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "toml") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "unicode-width") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "users") (r ">=0.10.0, <0.11.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r ">=0.10.0, <0.11.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r ">=4.0.0, <5.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r ">=4.0.0, <5.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r ">=0.3.0, <0.4.0") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16rqizfpdc3zr0bddgc79ql5y39cargvzqpqxwd0klps6ixnwi2d") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.9 (c (n "procs") (v "0.10.9") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "byte-unit") (r ">=4.0.0, <5.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "console") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "directories") (r ">=3.0.0, <4.0.0") (d #t) (k 0)) (d (n "dockworker") (r ">=0.0.19, <0.0.20") (o #t) (d #t) (k 0)) (d (n "errno") (r ">=0.2.0, <0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "libproc") (r ">=0.9.0, <0.10.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r ">=0.16.0, <0.17.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r ">=0.16.0, <0.17.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r ">=0.9.0, <0.10.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "structopt") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "toml") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "unicode-width") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "users") (r ">=0.11.0, <0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r ">=0.11.0, <0.12.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r ">=4.0.0, <5.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r ">=4.0.0, <5.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r ">=0.3.0, <0.4.0") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1nf0n5mv6prn3pp61sgqcra6pn56a5xingr57hyzmd3fm1dvnayb") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.10.10 (c (n "procs") (v "0.10.10") (d (list (d (n "anyhow") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "byte-unit") (r ">=4.0.0, <5.0.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "console") (r ">=0.13.0, <0.14.0") (d #t) (k 0)) (d (n "directories") (r ">=3.0.0, <4.0.0") (d #t) (k 0)) (d (n "dockworker") (r ">=0.0.19, <0.0.20") (o #t) (d #t) (k 0)) (d (n "errno") (r ">=0.2.0, <0.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.2.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "libproc") (r ">=0.9.0, <0.10.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r ">=0.16.0, <0.17.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r ">=0.16.0, <0.17.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r ">=0.9.0, <0.10.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "structopt") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "toml") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "unicode-width") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "users") (r ">=0.11.0, <0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r ">=0.11.0, <0.12.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r ">=4.0.0, <5.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r ">=4.0.0, <5.0.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r ">=0.3.0, <0.4.0") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hgm99k5i4gahphqk58z72xw068swy6n4z0dxdm2yf5nj73zy70v") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.0 (c (n "procs") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1n6nb1pdn939z2b6i6cjfly64ya1fs7d65qyjxmhcn5hxvrmhxvg") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.1 (c (n "procs") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15s7g5k61w5lgn31qks8wzn6mr096lx1ypbafkqfdarsrs2ir1si") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.2 (c (n "procs") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0j2p82fjkcsbxqyrk1hzcn1kifjhb9cx7wj9gfw2rdrvx0869p0k") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.3 (c (n "procs") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0skdhk1a8x2byzraxkax3y1asvj4dhi7kxmnd6caip66ydq4snc8") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.4 (c (n "procs") (v "0.11.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rdz9j6h6nsdmnysy6fqp96an04gm18jpfv3zk034zbg4v2hkp8h") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.5 (c (n "procs") (v "0.11.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "06xlszyqy66fxwwr65iygkg94jy8i0i2n8b5pjqnrg0dcbmf2mg4") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.6 (c (n "procs") (v "0.11.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.2") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1xsl84a8ngwh1gij1d319rbagkh49l9vfv1b59hn9vl626gnlj3j") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.7 (c (n "procs") (v "0.11.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.2.3") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1bxfyd1gv6iszx1x9r2ri4r7sv5pamm9psrqnzwv1ps2mlmjdgdv") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.8 (c (n "procs") (v "0.11.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.22") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "16zgp4v8qfp6h5rc90j6cziqsf2nz6czkymvf1haiv8hnmx7i53y") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.9 (c (n "procs") (v "0.11.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.14") (d #t) (k 0)) (d (n "directories") (r "^3") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.9") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.9") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1jqgw5wp1anylkrdp6mdy8plms14vglpwphgm64z9f0wbm63zybz") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.10 (c (n "procs") (v "0.11.10") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.11.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1hd0lyx2czzail6d9ymgapiq4fkp85vdmm7kif7lk2wc95mcbs88") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.11 (c (n "procs") (v "0.11.11") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rhfdfwcqkn4z7x3cqlgxxiind68ih8i4l1q65q5c4xl17frlylr") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.12 (c (n "procs") (v "0.11.12") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "04lgcpy5v6g6dz0ym868zinmbri8lgmp9m4bfl99163bwq39aw1s") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.11.13 (c (n "procs") (v "0.11.13") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "071blgn90i75sbl3igz13kgxmy4lpn367z8dvxj9knndi3m4fzh3") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.12.0 (c (n "procs") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.0.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.3.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0q5n2pkv7gbkxa4bk1hsnlqf0bfkswhdlfn8fk4i794jmzcnzzaw") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.12.1 (c (n "procs") (v "0.12.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.12") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.0.5") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.10") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "10dchxbxhpb7awmlsdmdxlg94ddwpjfgjbq6d6kz5mv94pd6jskj") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.12.2 (c (n "procs") (v "0.12.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.3") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.0") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1l1ajvz8jzi122dylich8hq1wvbv3hi3hp7hfnid056h93h4gqqw") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.12.3 (c (n "procs") (v "0.12.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.1.4") (d #t) (k 0)) (d (n "console") (r "^0.15.0") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.23") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.12.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1i8m20x5h1dzd3w6cjsr86in0vihhhpi6f34iy3wcrfb2rkdq15b") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.13.0 (c (n "procs") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.3") (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.13.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "03rask25hy2kdlfd2s5vkixk2bh2zsvway2c24vi656lx4pyrb6s") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.13.1 (c (n "procs") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.1") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "procfs") (r "^0.14.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0s51yijlzcnz4r3kilmjfpqpg3jr7w9nv05qy4v7s4wz45d04syz") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.13.2 (c (n "procs") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "procfs") (r "^0.14.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "180cdyin8mxdsrbmxg8654bgxh0n8d2vdfgh53m9wj6pmbic64d1") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.13.3 (c (n "procs") (v "0.13.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.2.22") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.2") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.0.24") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.25.0") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "procfs") (r "^0.14.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.1") (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0qi2gpz0x6fvg6qx5z5yjlp8hgnlzrnrix4rlcl4cf1h2r48c2y7") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.13.4 (c (n "procs") (v "0.13.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.12") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "procfs") (r "^0.14.2") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.1") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ac49wck272k4rr3jpi0dcvb4ppkylkl2jjvc51fdnf2812qh36g") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.14.0 (c (n "procs") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.5") (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "minus") (r "^5.2") (f (quote ("static_output" "search"))) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.3") (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1rhv31mpm09n5dkiq553mgbn207j8p0qjqvwd5la61mx465k1mlb") (f (quote (("docker" "dockworker") ("default" "docker"))))))

(define-public crate-procs-0.14.1 (c (n "procs") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.2.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "minus") (r "^5.4") (f (quote ("static_output" "search"))) (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.3") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "users") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0dbmwawllrlrwb74s6jckq88q9igfnfxhc7vsai93y0z0rwnrf7n") (f (quote (("docker" "dockworker" "tokio") ("default" "docker"))))))

(define-public crate-procs-0.14.2 (c (n "procs") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bsd-kvm") (r "^0.1.0") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "bsd-kvm-sys") (r "^0.1.0") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.2.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "minus") (r "^5.4") (f (quote ("static_output" "search"))) (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.3") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "which") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "07ac93p0yrkdlzlsqkvb8y3zqjqnn60pkqy5435aqyycca97cmv0") (f (quote (("docker" "dockworker" "tokio") ("default" "docker"))))))

(define-public crate-procs-0.14.3 (c (n "procs") (v "0.14.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bsd-kvm") (r "^0.1.2") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "bsd-kvm-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.2.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "minus") (r "^5.4") (f (quote ("static_output" "search"))) (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "procfs") (r "^0.15.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.3") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^5") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "which") (r "^5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0flxkzppx4kg7yqhpqf5zbpsj5ai11yx988prh02nf88gi4w3c1l") (f (quote (("docker" "dockworker" "tokio") ("default" "docker")))) (r "1.67")))

(define-public crate-procs-0.14.4 (c (n "procs") (v "0.14.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bsd-kvm") (r "^0.1.3") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "bsd-kvm-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "byte-unit") (r "^4") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^3.2.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "console") (r "^0.15.7") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "minus") (r "^5.4") (f (quote ("static_output" "search"))) (d #t) (k 0)) (d (n "nix") (r "^0.27.1") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "procfs") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.4.3") (d #t) (k 0)) (d (n "tokio") (r "^1.34") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^5") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^5") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "which") (r "^5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1qqpx4cjgciir1pp0xqpiwmpsqj3nvw3a0h860h9kh4sdlrwbgjg") (f (quote (("docker" "dockworker" "tokio") ("default" "docker")))) (r "1.67")))

(define-public crate-procs-0.14.5 (c (n "procs") (v "0.14.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bsd-kvm") (r "^0.1.5") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "bsd-kvm-sys") (r "^0.2.0") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "byte-unit") (r "^5.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.4") (d #t) (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "dockworker") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "errno") (r "^0.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "getch") (r "^0.3.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "libproc") (r "^0.14") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "minus") (r "^5.5") (f (quote ("static_output" "search"))) (d #t) (k 0)) (d (n "nix") (r "^0.28.0") (f (quote ("process"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pager") (r "^0.16") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "pager") (r "^0.16.1") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "procfs") (r "^0.16.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "regex") (r "^1.10") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "termbg") (r "^0.5.0") (d #t) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "uzers") (r "^0.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "which") (r "^6") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "which") (r "^6") (d #t) (t "cfg(target_os = \"freebsd\")") (k 0)) (d (n "which") (r "^6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("handleapi" "minwindef" "psapi" "securitybaseapi" "tlhelp32" "winbase" "winnt" "iphlpapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ixl4912md5spanasf4kj0js35j6ff2rpwxbj9q15699cj5di8x4") (f (quote (("docker" "dockworker" "tokio") ("default" "docker")))) (r "1.70")))

