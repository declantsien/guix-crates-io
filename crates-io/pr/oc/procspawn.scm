(define-module (crates-io pr oc procspawn) #:use-module (crates-io))

(define-public crate-procspawn-0.1.0 (c (n "procspawn") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)))) (h "0iclwj59ym34ljy8sv2gmpglc4vhjddjs7di5s3fs8mla0jhdar9") (f (quote (("test-support" "ctor") ("default" "backtrace"))))))

(define-public crate-procspawn-0.2.0 (c (n "procspawn") (v "0.2.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)))) (h "1z87rxyzcmhrbnv0qb3ijw7nng98bnr0vk8mps44pqf3q6s4qsz1") (f (quote (("test-support" "ctor") ("default" "backtrace"))))))

(define-public crate-procspawn-0.3.0 (c (n "procspawn") (v "0.3.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)))) (h "05w5lk2dx6l43bqn64wqzfjnd7n03mv2q2a2h53gn1i8dl381lld") (f (quote (("test-support" "ctor") ("default" "backtrace"))))))

(define-public crate-procspawn-0.4.0 (c (n "procspawn") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "0ln3rqj6mqdrqyrynxqyd8kn2mgi3r3538hw3i9br7lbz6jjq66i") (f (quote (("test-support" "ctor") ("json" "serde_json") ("default" "backtrace"))))))

(define-public crate-procspawn-0.5.0 (c (n "procspawn") (v "0.5.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "13hyglswid5gndr0knx0b9lk6izzg7y2rbl22kzf54r4m1wy5pmg") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries"))))))

(define-public crate-procspawn-0.6.0 (c (n "procspawn") (v "0.6.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "02pihq9qnqdp3vhpgl3dlpwxkrjak1xdi5q6n2mz5shccs8ys1zg") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries"))))))

(define-public crate-procspawn-0.7.0 (c (n "procspawn") (v "0.7.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "0rwlicbnrnmrhahxpyhx8gzlz5216jq6v0a2kmqklygr5vvxfj2w") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries") ("async-executor" "async" "futures/executor") ("async" "futures"))))))

(define-public crate-procspawn-0.8.0 (c (n "procspawn") (v "0.8.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "0497mp2gnkvzxbamiamcbdzw138wgsblvzkz7w5163mcjzk6vr3d") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries") ("async-executor" "async" "futures/executor") ("async" "futures"))))))

(define-public crate-procspawn-0.8.1 (c (n "procspawn") (v "0.8.1") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "0naa9kzgbmvygwpn711jn0hprwcbicj84drwzvs5hsd34avakdh3") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries") ("async-executor" "async" "futures/executor") ("async" "futures"))))))

(define-public crate-procspawn-0.8.2 (c (n "procspawn") (v "0.8.2") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "04r672zfjfx1w2f0f1djfwzlpk96h403mz2dmsvfzgqg5h7429j7") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries") ("async-executor" "async" "futures/executor") ("async" "futures"))))))

(define-public crate-procspawn-0.8.3 (c (n "procspawn") (v "0.8.3") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.14.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "0m48vnpggc0vn15hqncxqxh09y3xc8pwmcq9qycj3bs4kdqhbhvy") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries") ("async-executor" "async" "futures/executor") ("async" "futures"))))))

(define-public crate-procspawn-0.8.4 (c (n "procspawn") (v "0.8.4") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.14.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "15irbrnn436l03ddavzjwsj9fhlqhcyfjsv7dh2ji0jbkclqd3mn") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries") ("async-executor" "async" "futures/executor") ("async" "futures"))))))

(define-public crate-procspawn-0.9.0 (c (n "procspawn") (v "0.9.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.12") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.14.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "1dprgchgxsfbd56iqq8flmbl0z2pzi7nar3vm9c7qxra1y7n5m12") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries"))))))

(define-public crate-procspawn-0.10.0 (c (n "procspawn") (v "0.10.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "ipc-channel") (r "^0.15.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "173d1mgjkdcg9zgg4xx3fzc8392nx60dgk3f4818gvx4f2rm7sp7") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries"))))))

(define-public crate-procspawn-0.10.1 (c (n "procspawn") (v "0.10.1") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.15.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "15w9k58kmvkkj5awrz3j2nspmr4mpkyqqclrdq53f20fa2r96qkh") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries"))))))

(define-public crate-procspawn-0.10.2 (c (n "procspawn") (v "0.10.2") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.16.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)))) (h "10qfd2xwlvlyj5xqf9jbf8cawpbbfisr2cxhk1scf214fw6nhnjw") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries")))) (r "1.42.0")))

(define-public crate-procspawn-0.10.3 (c (n "procspawn") (v "0.10.3") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.16.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("errhandlingapi" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1y7gzz89hr9h6pby2sr6avylkhhspwhw9x09nwgi0c62lmvjdj44") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries")))) (r "1.65.0")))

(define-public crate-procspawn-1.0.0 (c (n "procspawn") (v "1.0.0") (d (list (d (n "backtrace") (r "^0.3.43") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "ctor") (r "^0.1.20") (o #t) (d #t) (k 0)) (d (n "findshlibs") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "ipc-channel") (r "^0.16.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.47") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("errhandlingapi" "processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0sxf5csg8d5w6h6qjhhbszh0gfi2w3gzi79d02bfs7ivqqaz2ncd") (f (quote (("test-support" "ctor") ("safe-shared-libraries" "findshlibs") ("json" "serde_json") ("default" "backtrace" "safe-shared-libraries")))) (r "1.65.0")))

