(define-module (crates-io pr os prosto) #:use-module (crates-io))

(define-public crate-prosto-0.1.0 (c (n "prosto") (v "0.1.0") (d (list (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.2") (d #t) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0y80rxcgb240vh50yhpgy78a1iy0yfk3zafqjj2fd4gxzrkzcm9c") (f (quote (("enable-tokio" "tokio") ("default"))))))

(define-public crate-prosto-0.1.1 (c (n "prosto") (v "0.1.1") (d (list (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "01866wb1bna9cm1fwmkcfw6j90kdskqfm2yk59aw4b3j9lxam2xb") (f (quote (("enable-tokio" "tokio") ("default"))))))

(define-public crate-prosto-0.1.2 (c (n "prosto") (v "0.1.2") (d (list (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0cfzdnjfdrsgbs5z1vhpg6051f5f29x0cvwj131d0avvkz596wzz") (f (quote (("enable-tokio" "tokio") ("default"))))))

(define-public crate-prosto-0.1.3 (c (n "prosto") (v "0.1.3") (d (list (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0xds7nnf9wsvz125rla6019bkhjggpx7smbgwzlfnp15hllacllw") (f (quote (("enable-tokio" "tokio") ("default"))))))

(define-public crate-prosto-0.1.4 (c (n "prosto") (v "0.1.4") (d (list (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "1xd08gz4xcnxri6yfmz2hcikk04x409awhv1yxc7il1r315bisdc") (f (quote (("enable-tokio" "tokio") ("default"))))))

(define-public crate-prosto-0.2.0 (c (n "prosto") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "1pizk8nfmb6677vyn2wb65qxqswg6h9q1wnjxs2albs3j4ppcl1j") (f (quote (("enable-async" "futures") ("default"))))))

(define-public crate-prosto-0.2.1 (c (n "prosto") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 2)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0hskar4h6dk8sqyjzx61spgj2g2pn9j6xn8bfdzg9dkjm0sk3k00") (f (quote (("enable-async" "futures") ("default"))))))

(define-public crate-prosto-0.3.0 (c (n "prosto") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 2)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0ipsa5m7hifh6c74symb3vg1kch13sqdwiyydad2hazsbzs7vmhp") (f (quote (("enable-async" "futures") ("default" "enable-async"))))))

(define-public crate-prosto-0.4.0 (c (n "prosto") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 2)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0avlv64fqhd50qrz2gqn41gqhjmgy32zl19w1zqld2dy2sk07hy4") (f (quote (("enable-async" "futures") ("default" "enable-async"))))))

(define-public crate-prosto-0.4.1 (c (n "prosto") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 2)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0k2nsd7mjsygqjcwgps8zq34f3hndci3vm3vflrzwvj94qzbycj1") (f (quote (("enable-async" "futures") ("default" "enable-async"))))))

(define-public crate-prosto-0.4.2 (c (n "prosto") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2") (d #t) (k 2)) (d (n "tonic-build") (r "^0.2") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "1s9bwyxgb0rlpbc48xpd28w0b4zbakhxnp0gibd46w1dbw6p3s0a") (f (quote (("enable-async" "futures") ("default" "enable-async"))))))

(define-public crate-prosto-0.4.3 (c (n "prosto") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (d #t) (k 2)) (d (n "tonic-build") (r "^0.3") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0djqhnv6njkp6mrwqpw10841ddr1qs8xdp7g3a59nbxi9059dcjy") (f (quote (("enable-async" "futures") ("default" "enable-async"))))))

(define-public crate-prosto-0.4.4 (c (n "prosto") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^0.10") (d #t) (k 2)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "sync"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (d #t) (k 2)) (d (n "tonic-build") (r "^0.3") (f (quote ("transport" "prost"))) (k 1)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 2)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0md7qxfvar16b2zi2qix0wb5xafi4s74c5c45p5h6yhr7jjih33n") (f (quote (("enable-async" "futures") ("default" "enable-async"))))))

(define-public crate-prosto-0.4.5 (c (n "prosto") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.6") (d #t) (k 0)) (d (n "prost-types") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0jrm40jgwz7dndr6p2z0cd1c023796clsxas5hw9fbzyldhi630f") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

(define-public crate-prosto-0.5.0 (c (n "prosto") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.6") (d #t) (k 0)))) (h "0630r2sf458pfr2za4m89k2w5h4bcm69lmw74i6v9bg7s4xsvas3") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

(define-public crate-prosto-0.6.0 (c (n "prosto") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "prost-types") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.7") (d #t) (k 0)))) (h "1bd6rxxw6sr9b95hs9fa16k7al42z33qqz0jcc9n84wsb519j2wi") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

(define-public crate-prosto-0.6.1 (c (n "prosto") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (d #t) (k 0)))) (h "1xixbjlmy2ndd3f3xi1sbq854xgkpn1vbn0v9l0rr1gamghprh2j") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

(define-public crate-prosto-0.6.2 (c (n "prosto") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (d #t) (k 0)))) (h "0j6g7zjs9w0dvn13gkd5aymcv4n8brnrx6n78s0j3145g0aq1ih4") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

(define-public crate-prosto-0.6.3 (c (n "prosto") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (d #t) (k 0)))) (h "0vr3px78nigbqxyzj3i1syi4dxnaxn8y1wm8fgra8fr09n5b3hpf") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

(define-public crate-prosto-0.6.4 (c (n "prosto") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "prost-types") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (d #t) (k 0)))) (h "1l2wgr8kvwclc0z1kg6nvam7klhmzfgmnni3cp1q3d0r0v4gw010") (f (quote (("enable-async" "futures" "anyhow") ("default" "enable-async"))))))

