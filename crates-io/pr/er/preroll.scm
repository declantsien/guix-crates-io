(define-module (crates-io pr er preroll) #:use-module (crates-io))

(define-public crate-preroll-0.0.0 (c (n "preroll") (v "0.0.0") (d (list (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)))) (h "1w2bq4miksk9f1c27766m1z70cmx6ww4l3x3igmknqf2nbqyr3m9")))

(define-public crate-preroll-0.1.0 (c (n "preroll") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.15.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.3.1") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0p80wx7a1cpfni9qj7y126df1yryfbqq30kq3k5ca1n5w2ly2rbp") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.1.1 (c (n "preroll") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.15.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.3.1") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "13fnalqggj834asbq1n944n6lgc74aaaapfjajb7fckrpgxd67fv") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.1.2 (c (n "preroll") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.15.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.3.1") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0jk8w96sx22mj0ci21ynkv5dm1jlbzbax5f13k9wpvqh65dmza6g") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.2.0 (c (n "preroll") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.15.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.3.1") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "129xvvjv8fsrqnvmr0c2mayygl5xja6sqqrh7dxnm88k6ah9i9vb") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.3.0 (c (n "preroll") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.15.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.3.1") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "16hihbsfmprfw0p5ynp3p3k29m7kc1hf28lrh5kllxbqbwmdgr0m") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.4.0 (c (n "preroll") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.4.0") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0201f65rip1ngd2milqvi9bfm961j1067al0mm5kdcn4rgfbq9jc") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.4.1 (c (n "preroll") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.4.0") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1is4cicd9sny55f54a86gpw8c9qsk7jh22bwb0ybn4g4w11q4im8") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.4.2 (c (n "preroll") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.4.0") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0ca9phiw1vfv8mnkv16vwhrsdgsyfpdqh792raln1s5vlsb3a1rx") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.4.3 (c (n "preroll") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.1") (d #t) (k 0)) (d (n "gethostname") (r "^0.2.1") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.58") (d #t) (k 0)) (d (n "sqlx") (r "^0.4.1") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1.0") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16.0") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.4.0") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1.22") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1zj26hlki3jadx7pll74nai4c3kfwhp4pwwbd0frgrhziwylbqqr") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.0 (c (n "preroll") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.5") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0p7hf0xb8gxrwv6ddxqbqk7v98ss3s5niqi7425xcjp1q7id5avg") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.1 (c (n "preroll") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.2") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.5") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1c0bwf8zrxsw7lfygywb36nycws4cn6wzjgwc95g3165xdhy5hnc") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.2 (c (n "preroll") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.5") (f (quote ("native-tls" "postgres"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1p694akz61bpz4q0lcapvy1m6n189lbqqrcim4mfr9gyq96f9bdg") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.3 (c (n "preroll") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0mj8hwd8vc658kxqh7b5im1gn4n422brn76fpxmcwmgb79x8gbhg") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.4 (c (n "preroll") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.5") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1wmwijkajn3ls64jy9ck0wjs1hha94y0caqln0v8mn8lg7ys6576") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.5 (c (n "preroll") (v "0.5.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.6") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0yz5w94l24kj7cch6k2ms9w8jxjsqpyv8ykjh6ms24dp6sxkyw2f") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.6 (c (n "preroll") (v "0.5.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.7") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "10342hc6w4470wi520v8p7j6shx6hzw5ir9v8ac9zz5x0fgf3xmx") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.5.7 (c (n "preroll") (v "0.5.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "eaze-tracing-honeycomb") (r "^0.2.1-eaze.7") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "06gl700n41ymlmrw3bwq6g9wn8nyshqp5dq5p5i8aws4v5y9gwpc") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "eaze-tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.6.0 (c (n "preroll") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("curl-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0x64yj6axvksmi9qnym5z0ip61mhvcvcrn4dd4jvzkdkk0ixxlkw") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.7.0 (c (n "preroll") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.4.0") (f (quote ("unstable-config"))) (d #t) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-native-tls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.1") (f (quote ("h1-client" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("native-tls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1fa7z4xvschicrdha684n6rfqz3yx16x80z1wnqlmg9jk4l4afy7") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.8.0 (c (n "preroll") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.4.0") (f (quote ("h1_client" "rustls" "unstable-config"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1p7pwlanizfv62dnmrwp6afklbrgqa6bkx85fn6w8v77j7x0cm97") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.8.1 (c (n "preroll") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.4.0") (f (quote ("h1_client" "rustls" "unstable-config"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1kq9mlh1nipsyvranv66vylp2dhkqv7b9m9n3c3glp6dn2wn3xpx") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.8.2 (c (n "preroll") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.4.0") (f (quote ("h1_client" "rustls" "unstable-config"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1fpmcrkp1n6wnjqhy9k8846qf6q6ypjfvkri0gjzi3y8qqkk9dji") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.8.3 (c (n "preroll") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.4.0") (f (quote ("h1_client" "rustls" "unstable-config"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.2") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "05xi8fid3pw75cc2a4572zsxf7pnrid5k84w7hc5z4607y2paz9n") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.8.4 (c (n "preroll") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.5.1") (f (quote ("h1_client" "rustls"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0xr4gmnw28gx0snf0f07r36rif4zmnpz4wwlnrlahpfwv97qk0nh") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.8.5 (c (n "preroll") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.5.1") (f (quote ("h1_client" "rustls"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0xpbpq0b1va760jyyph9yn38323vgl89g7kx6hdrpxy6h8yrma4k") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.9.0 (c (n "preroll") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.5.1") (f (quote ("h1_client" "rustls"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "petname") (r "^1.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0vdcx29rfmbnc6zg1rf9mzka27ac3xird9c7fz5b36gl2fipgbji") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.10.0 (c (n "preroll") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.5.1") (f (quote ("h1_client" "rustls"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "petname") (r "^1.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0al053vp406i05y5f3jnmwv4q4m0yyq9c96m55h3dbjdcxwd252s") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

(define-public crate-preroll-0.10.1 (c (n "preroll") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.8") (f (quote ("attributes" "std" "async-global-executor" "async-io" "futures-lite" "kv-log-macro" "log" "num_cpus" "pin-project-lite"))) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cargo-husky") (r "^1") (f (quote ("user-hooks"))) (k 2)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.5") (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "gethostname") (r "^0.2") (d #t) (k 0)) (d (n "http-client") (r "^6.5.1") (f (quote ("h1_client" "rustls"))) (k 0)) (d (n "kv-log-macro") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libhoney-rust") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "petname") (r "^1.1.2") (f (quote ("std_rng" "default_dictionary"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-async-std-rustls" "postgres" "json" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tide") (r "^0.16") (f (quote ("h1-server"))) (k 0)) (d (n "tide-lambda-listener") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tide-sqlx") (r "^0.6") (f (quote ("rustls" "postgres" "tracing"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-honeycomb") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "registry"))) (o #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "10dzgn44nq4vz49zp9s63f9p2jqgyn01f993gbbmws9whika5hra") (f (quote (("test") ("postgres" "sqlx" "tide-sqlx") ("panic-on-error") ("lambda-http" "tide-lambda-listener") ("honeycomb" "_beeline" "_tracing" "libhoney-rust") ("docs" "all") ("custom_middleware") ("all" "honeycomb" "postgres") ("_tracing" "tracing" "tracing-futures" "tracing-honeycomb" "tracing-subscriber") ("_beeline" "base64" "thiserror"))))))

