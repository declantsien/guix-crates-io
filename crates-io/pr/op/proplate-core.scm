(define-module (crates-io pr op proplate-core) #:use-module (crates-io))

(define-public crate-proplate-core-0.3.0 (c (n "proplate-core") (v "0.3.0") (d (list (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "proplate-errors") (r "^0.2.0") (d #t) (k 0)) (d (n "proplate-integration") (r "^0.2.0") (d #t) (k 0)) (d (n "proplate-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "07rmnrbgzdg8rs1crzza1ml10azkgffdx3kjgdvcy32avyjkc6b9")))

(define-public crate-proplate-core-0.4.0 (c (n "proplate-core") (v "0.4.0") (d (list (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "proplate-errors") (r "^0.2.0") (d #t) (k 0)) (d (n "proplate-integration") (r "^0.2.0") (d #t) (k 0)) (d (n "proplate-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "05qr9y4nrxcvm0s6y4kjjg6ydng5d8xglwacvzh2d3ida7qv544h")))

(define-public crate-proplate-core-0.4.1 (c (n "proplate-core") (v "0.4.1") (d (list (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "proplate-errors") (r "^0.2.0") (d #t) (k 0)) (d (n "proplate-integration") (r "^0.2.0") (d #t) (k 0)) (d (n "proplate-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "0v6avadchgjfd8mpnax9gf40vzdfzqg0zpl49m4hgl1fq396109y")))

(define-public crate-proplate-core-0.5.0 (c (n "proplate-core") (v "0.5.0") (d (list (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "proplate-errors") (r "^0.3.0") (d #t) (k 0)) (d (n "proplate-integration") (r "^0.3.0") (d #t) (k 0)) (d (n "proplate-tui") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "0mhx5g2fchpkxfzvjaijissgc7imw4a7vah19dgwffg9lsgqrj7n")))

(define-public crate-proplate-core-0.5.1 (c (n "proplate-core") (v "0.5.1") (d (list (d (n "inquire") (r "^0.6.2") (d #t) (k 0)) (d (n "proplate-errors") (r "^0.4.0") (d #t) (k 0)) (d (n "proplate-integration") (r "^0.3.1") (d #t) (k 0)) (d (n "proplate-tui") (r "^0.3.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "05syag93vrjldnrhxlhxw8bzwnd5y4ij6jglzdq2y5z85f1zk26p")))

