(define-module (crates-io pr ot protokit_proto) #:use-module (crates-io))

(define-public crate-protokit_proto-0.0.1 (c (n "protokit_proto") (v "0.0.1") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.0.1") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "1rrr2xrxh2vb2sxkap023sd8b34wmddg5vpidg6m0lrg8w973nmh") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.0.2 (c (n "protokit_proto") (v "0.0.2") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.0.2") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "0cxk66689fv1wqmh8a2iap3acivmkgm94m55k1x6h3anzl4pac9v") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.0.3 (c (n "protokit_proto") (v "0.0.3") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.0.3") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "170mxz4ynhg0lvsipbslv4by9l4rc2j5dm6y8gvhqihy11ixfb0l") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.1.1 (c (n "protokit_proto") (v "0.1.1") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.1.1") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "17ahwl7hmxyw06c6j8xb3h9lihwggggj10fm8zw3qxywldjhxjh8") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.1.2 (c (n "protokit_proto") (v "0.1.2") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.1.2") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "1r6vhr95pmvhh6qyn5h66p2m1kh3lswxgvnnivgz6pfm5q56wxb4") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.1.3 (c (n "protokit_proto") (v "0.1.3") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.1.3") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.1.3") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "0iw6mmdlsb3hn9zgml1yijyf0kpg8ipsvjy3gd5lrlln30xxax2m") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.1.4 (c (n "protokit_proto") (v "0.1.4") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.1.4") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.1.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "00mg71k3h90hrpbqgmrghmbkj423l8rx9kbpfcg8n309l9839cmf") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

(define-public crate-protokit_proto-0.2.0 (c (n "protokit_proto") (v "0.2.0") (d (list (d (n "glob") (r "^0.3.0") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lex_core") (r "^0.8.5") (f (quote ("parse-integers" "power-of-two"))) (d #t) (k 0) (p "lexical-core")) (d (n "lex_float") (r "^0.2.1") (d #t) (k 0) (p "minimal-lexical")) (d (n "miette") (r "^5.5.0") (f (quote ("fancy-no-backtrace"))) (k 0)) (d (n "nom") (r "^7.1.1") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (d #t) (k 0)) (d (n "nom_locate") (r "^4.0.0") (d #t) (k 0)) (d (n "protokit_desc") (r "^0.2.0") (d #t) (k 0)) (d (n "protokit_textformat") (r "^0.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 2)))) (h "03nbh4vqj4p605vswzlp0jxfmnpph2xdd8zi9aqq4rjbj3g0q7pg") (f (quote (("descriptors" "protokit_desc/descriptors") ("default"))))))

