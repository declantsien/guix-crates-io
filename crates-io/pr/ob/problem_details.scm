(define-module (crates-io pr ob problem_details) #:use-module (crates-io))

(define-public crate-problem_details-0.1.0 (c (n "problem_details") (v "0.1.0") (d (list (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0xh7iiplx23x6l5hq1q4s0yxh9vx32qf4z3n2fvy7vbzvwnj66xc") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:http-serde"))))))

(define-public crate-problem_details-0.2.0 (c (n "problem_details") (v "0.2.0") (d (list (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-serde") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "116s0yb7p6vfkfn0xwcwjh1ibhwqhywkykf5wi4zjlv1zgfknwbg") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:http-serde"))))))

(define-public crate-problem_details-0.3.0 (c (n "problem_details") (v "0.3.0") (d (list (d (n "axum") (r "^0.6") (f (quote ("json" "headers"))) (o #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-serde") (r "^1.1") (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "03cddzq1hj5hcm32am6k9xyiml7qsgjcndd9yribxiavrds6m50j") (f (quote (("default" "serde")))) (s 2) (e (quote (("xml" "dep:quick-xml" "serde") ("serde" "dep:serde" "dep:http-serde") ("axum" "dep:axum" "serde"))))))

(define-public crate-problem_details-0.4.0 (c (n "problem_details") (v "0.4.0") (d (list (d (n "axum") (r "^0.6") (f (quote ("json" "headers"))) (o #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-serde") (r "^1.1") (o #t) (k 0)) (d (n "poem") (r "^1.3") (o #t) (k 0)) (d (n "poem") (r "^1.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "11g2ayihd83gwinlhf49zihxlpcchhns4ff8j8v792l8bs8caz26") (f (quote (("default" "serde")))) (s 2) (e (quote (("xml" "dep:quick-xml" "serde" "poem?/xml") ("serde" "dep:serde" "dep:http-serde") ("poem" "dep:poem" "serde") ("axum" "dep:axum" "serde"))))))

(define-public crate-problem_details-0.5.0 (c (n "problem_details") (v "0.5.0") (d (list (d (n "axum") (r "^0.6") (f (quote ("json" "headers"))) (o #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-serde") (r "^1.1") (o #t) (k 0)) (d (n "poem") (r "^1.3") (o #t) (k 0)) (d (n "poem") (r "^1.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "11fl6zhl5zwmd9x96f9a001bb01n8bm011h5xnnr0hf9i9y8gdpr") (f (quote (("default" "serde")))) (s 2) (e (quote (("xml" "dep:quick-xml" "serde" "poem?/xml") ("serde" "dep:serde" "dep:http-serde") ("poem" "dep:poem" "serde") ("axum" "dep:axum" "serde"))))))

(define-public crate-problem_details-0.5.1 (c (n "problem_details") (v "0.5.1") (d (list (d (n "axum") (r "^0.6") (f (quote ("json" "headers"))) (o #t) (k 0)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "http-serde") (r "^1.1") (o #t) (k 0)) (d (n "poem") (r "^1.3") (o #t) (k 0)) (d (n "poem") (r "^1.3") (d #t) (k 2)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.33") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "17fa5mpidsmk16q50y1ddyiqrkibglfvbv7skh55rj0q1zh0rhq9") (f (quote (("default" "serde")))) (s 2) (e (quote (("xml" "dep:quick-xml" "serde" "poem?/xml") ("serde" "dep:serde" "dep:http-serde") ("poem" "dep:poem" "serde") ("axum" "dep:axum" "serde"))))))

(define-public crate-problem_details-0.6.0 (c (n "problem_details") (v "0.6.0") (d (list (d (n "axum") (r "^0.7") (f (quote ("json"))) (o #t) (k 0)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "http") (r "^1.0") (d #t) (k 0)) (d (n "http-serde") (r "^2.0") (o #t) (k 0)) (d (n "poem") (r "^2.0") (o #t) (k 0)) (d (n "poem") (r "^2.0") (d #t) (k 2)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tokio") (r "^1.35") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "01syvfgv0swirjn9c4hwbjfslb96lzcnzfznrsd8laxk227flnr7") (f (quote (("default" "serde" "json")))) (s 2) (e (quote (("xml" "serde" "dep:quick-xml") ("serde" "dep:serde" "dep:http-serde") ("poem" "dep:poem") ("json" "serde" "dep:serde_json") ("axum" "dep:axum"))))))

