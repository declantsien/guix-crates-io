(define-module (crates-io pr ob probminhash) #:use-module (crates-io))

(define-public crate-probminhash-0.1.0 (c (n "probminhash") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_debug" "release_max_level_info"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)) (d (n "wyhash") (r "^0.4") (d #t) (k 0)))) (h "1x8pn9rbicmi8gd7w5ms5bjvk05snpggqsj84j0s6mjpsbcs719s")))

(define-public crate-probminhash-0.1.1 (c (n "probminhash") (v "0.1.1") (d (list (d (n "env_logger") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "fnv") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "fxhash") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "indexmap") (r ">=1.6.0, <2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "rand_xorshift") (r ">=0.2.0, <0.3.0") (d #t) (k 0)) (d (n "rand_xoshiro") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "time") (r ">=0.2.0, <0.3.0") (d #t) (k 0)))) (h "1d02hbj03n4y2ajk4aigsm85wzs7rlv84c4rb22nc2yibb8l7cf4")))

(define-public crate-probminhash-0.1.2 (c (n "probminhash") (v "0.1.2") (d (list (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)))) (h "03l9fmpn16gi0wpmhgnyj7s9zz8wpj00wf7bf3gb62l6rq2fszry")))

(define-public crate-probminhash-0.1.3 (c (n "probminhash") (v "0.1.3") (d (list (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_distr") (r "^0.3") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.4") (d #t) (k 0)) (d (n "time") (r "^0.2") (d #t) (k 0)))) (h "000a7b2w5q153lxyksn8vvb9r3brh31rmy46bjhixar0ab0wab8r")))

(define-public crate-probminhash-0.1.4 (c (n "probminhash") (v "0.1.4") (d (list (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)))) (h "1ck6lw1z9g6mk6954cni29cdmjj46spsq66h2p6dbnadb5kx3fnd")))

(define-public crate-probminhash-0.1.5 (c (n "probminhash") (v "0.1.5") (d (list (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)))) (h "1mn8bisn84alyh5kyxhvzvpn4f7n9r11nwqja3diwz8vbffchmdj")))

(define-public crate-probminhash-0.1.6 (c (n "probminhash") (v "0.1.6") (d (list (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)))) (h "1jbmpbrnadp4p5wvvc93n8rh6kdbsggpgjq1pivl08wrbci8iy92")))

(define-public crate-probminhash-0.1.7 (c (n "probminhash") (v "0.1.7") (d (list (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "wyhash") (r "^0.5") (d #t) (k 0)))) (h "19xfbkjiklxmicpsd7j81f1xl1k5daqlaccvi1v86600nrch0dif")))

(define-public crate-probminhash-0.1.8 (c (n "probminhash") (v "0.1.8") (d (list (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "katexit") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6") (d #t) (k 0)) (d (n "wyhash") (r "^0.5") (d #t) (k 0)))) (h "1af3iqph5xr1yvxhbknvx2kfq63py92pks2rjxzp3vls0bjfxkc3") (f (quote (("sminhash2") ("default"))))))

(define-public crate-probminhash-0.1.9 (c (n "probminhash") (v "0.1.9") (d (list (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "katexit") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6") (d #t) (k 0)) (d (n "wyhash") (r "^0.5") (d #t) (k 0)))) (h "0b1g1a2rrvlm9jlhdr0sm03ab3cww9rmwm2vrqdc27fr4g5lij5p") (f (quote (("sminhash2") ("default"))))))

(define-public crate-probminhash-0.1.10 (c (n "probminhash") (v "0.1.10") (d (list (d (n "argmin") (r "^0.8.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "katexit") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "murmur3") (r "^0.5") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6") (d #t) (k 0)) (d (n "wyhash") (r "^0.5") (d #t) (k 0)))) (h "0mvyi81897y7v5d1qcpd5zjbnzbk3imgch87dnl3jggpsqcfbqsa") (f (quote (("sminhash2") ("default"))))))

(define-public crate-probminhash-0.1.11 (c (n "probminhash") (v "0.1.11") (d (list (d (n "argmin") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "indexmap") (r "^2.2") (d #t) (k 0)) (d (n "katexit") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "murmur3") (r "^0.5") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "twox-hash") (r "^1.6") (d #t) (k 0)) (d (n "wyhash") (r "^0.5") (d #t) (k 0)))) (h "1kl0vdq7kk6fj9zqj9hgrmkj0lcpnm4g4jncnlwgi7wwqycj2v74") (f (quote (("sminhash2") ("default"))))))

