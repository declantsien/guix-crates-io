(define-module (crates-io pr ob probably) #:use-module (crates-io))

(define-public crate-probably-0.0.1 (c (n "probably") (v "0.0.1") (d (list (d (n "bit-vec") (r "^0.4.3") (d #t) (k 0)) (d (n "bytecount") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "farmhash") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3") (o #t) (d #t) (k 0)))) (h "00xl9hdpmc2794khws13rnvgkjn8w63wjvsafp95i15mlqi4mvjc") (f (quote (("with_serde" "serde/std" "serde_json" "serde_bytes") ("std" "bytecount" "rand" "siphasher") ("default" "std"))))))

(define-public crate-probably-0.2.0 (c (n "probably") (v "0.2.0") (d (list (d (n "bit-vec") (r ">=0.4.3, <0.5.0") (d #t) (k 0)) (d (n "bytecount") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r ">=1.3.4, <2.0.0") (d #t) (k 0)) (d (n "farmhash") (r ">=1.1.5, <2.0.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r ">=1.0.7, <2.0.0") (d #t) (k 0)) (d (n "quickcheck") (r ">=0.5.0, <0.6.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.0, <0.8.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r ">=0.11.5, <0.12.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "siphasher") (r ">=0.3.0, <0.4.0") (o #t) (d #t) (k 0)))) (h "01kady5r3r4ar36f42j4fb7fzvfv82yr5q5ywvrzcanyvvddjbix") (f (quote (("with_serde" "serde/std" "serde_json" "serde_bytes") ("std" "bytecount" "rand" "siphasher") ("default" "std"))))))

(define-public crate-probably-0.3.0 (c (n "probably") (v "0.3.0") (d (list (d (n "bit-vec") (r "^0.4.3") (d #t) (k 0)) (d (n "bytecount") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "farmhash") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "quickcheck") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0pkb568726q9vb8i1apkmfj00rlxap0h83l0icdm8a4k5jxwjgc1") (f (quote (("with_serde" "serde/std" "serde_json" "serde_bytes") ("std" "bytecount" "rand" "siphasher") ("default" "std"))))))

(define-public crate-probably-0.3.1 (c (n "probably") (v "0.3.1") (d (list (d (n "bit-vec") (r "^0.4.3") (d #t) (k 0)) (d (n "bytecount") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.4") (d #t) (k 0)) (d (n "farmhash") (r "^1.1.5") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "quickcheck") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "siphasher") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0fg49g75bwynvm73myfq7xx66accksrs7h4g1laqpsaalwjm621f") (f (quote (("with_serde" "serde/std" "serde_json" "serde_bytes") ("std" "bytecount" "rand" "siphasher") ("default" "std"))))))

