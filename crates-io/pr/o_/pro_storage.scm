(define-module (crates-io pr o_ pro_storage) #:use-module (crates-io))

(define-public crate-pro_storage-0.0.0 (c (n "pro_storage") (v "0.0.0") (h "04zc156y7pb0ij209cd46s1bwhc6w8rl6925dqj4mpxdhsrzf5ls")))

(define-public crate-pro_storage-3.0.0-rc2 (c (n "pro_storage") (v "3.0.0-rc2") (d (list (d (n "array-init") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pro_env") (r "^3.0.0-rc2") (k 0)) (d (n "pro_metadata") (r "^3.0.0-rc2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "pro_prelude") (r "^3.0.0-rc2") (k 0)) (d (n "pro_primitives") (r "^3.0.0-rc2") (k 0)) (d (n "pro_storage_derive") (r "^3.0.0-rc2") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "scale") (r "^2.0.1") (f (quote ("derive" "full"))) (k 0) (p "tetsy-scale-codec")) (d (n "tetsy-scale-info") (r "^0.5.1") (f (quote ("derive"))) (o #t) (k 0)))) (h "0wsqljzxqf2pzv5im8qmvghsbga8gh3ayi46ckfzm2dqy5d3r030") (f (quote (("std" "criterion" "pro_metadata" "pro_metadata/std" "pro_env/std" "pro_prelude/std" "pro_primitives/std" "scale/std" "tetsy-scale-info" "tetsy-scale-info/std") ("pro-fuzz-tests" "std") ("default" "std"))))))

