(define-module (crates-io pr es presenterm) #:use-module (crates-io))

(define-public crate-presenterm-0.1.0 (c (n "presenterm") (v "0.1.0") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comrak") (r "^0.18") (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "syntect") (r "^5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7.1") (d #t) (k 0)))) (h "1vggjij7bksj6zqkxvr0l9mapcqb4p89ygrda46f4dk120kivz2s") (f (quote (("sixel" "viuer/sixel") ("default"))))))

(define-public crate-presenterm-0.2.0 (c (n "presenterm") (v "0.2.0") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7.1") (d #t) (k 0)))) (h "17x9d1n6bkyi0vvf4mymgra75gl5gpih368fqfh2hi1b1ncgl2jf") (f (quote (("sixel" "viuer/sixel") ("default"))))))

(define-public crate-presenterm-0.2.1 (c (n "presenterm") (v "0.2.1") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_with") (r "^3.3") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7.1") (d #t) (k 0)))) (h "03nlv5nya8fw7aa5xjnjilawkmkq6lhgb4gw5vbkqsib8c6xanf0") (f (quote (("sixel" "viuer/sixel") ("default"))))))

(define-public crate-presenterm-0.3.0 (c (n "presenterm") (v "0.3.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (f (quote ("parsing" "default-themes" "regex-onig"))) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7") (d #t) (k 0)))) (h "1jip8d47cn4sl8q63949yd2nmib557fcrms2xpjpvmb86zxpyb90") (f (quote (("sixel" "viuer/sixel") ("default"))))))

(define-public crate-presenterm-0.4.0 (c (n "presenterm") (v "0.4.0") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (f (quote ("parsing" "default-themes" "regex-onig" "plist-load"))) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7") (d #t) (k 0)))) (h "15gw45lppqdnnp20flbv72a25ixfm2a68cg6x8498mlw5yvbydmb") (f (quote (("sixel" "viuer/sixel") ("default"))))))

(define-public crate-presenterm-0.4.1 (c (n "presenterm") (v "0.4.1") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.19") (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (f (quote ("parsing" "default-themes" "regex-onig" "plist-load"))) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7") (d #t) (k 0)))) (h "0pfakncb3y331mmaldfmld5qsgpppqcwmah2y0s2lx1xj1bsdzr1") (f (quote (("sixel" "viuer/sixel") ("default"))))))

(define-public crate-presenterm-0.5.0 (c (n "presenterm") (v "0.5.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.20") (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sixel-rs") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (f (quote ("parsing" "default-themes" "regex-onig" "plist-load"))) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "viuer") (r "^0.7") (d #t) (k 0)))) (h "1bd7v56jgyimnmaj2dcwdmb6g6grqqq9ydhj4f4my53j40gvzy6d") (f (quote (("sixel" "sixel-rs") ("default"))))))

(define-public crate-presenterm-0.6.0 (c (n "presenterm") (v "0.6.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.21") (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sixel-rs") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (f (quote ("parsing" "default-themes" "regex-onig" "plist-load"))) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "171jp601qlyxqbnqgbf37k2km5br7j33n05frx4y60f2lx2a5f7z") (f (quote (("sixel" "sixel-rs") ("default"))))))

(define-public crate-presenterm-0.6.1 (c (n "presenterm") (v "0.6.1") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.21") (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.4") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sixel-rs") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.1") (f (quote ("parsing" "default-themes" "regex-onig" "plist-load"))) (k 0)) (d (n "tempfile") (r "^3.9") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "00pc69d7vnkbr68dspynl97dph4czr0r43b5h0sq0fn4z4kxnm8r") (f (quote (("sixel" "sixel-rs") ("default"))))))

(define-public crate-presenterm-0.7.0 (c (n "presenterm") (v "0.7.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "comrak") (r "^0.21") (k 0)) (d (n "console") (r "^0.15.8") (d #t) (k 0)) (d (n "crossterm") (r "^0.27") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "image") (r "^0.24") (f (quote ("gif" "jpeg" "jpeg_rayon" "png" "webp"))) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "merge-struct") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (k 2)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^3.6") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sixel-rs") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "syntect") (r "^5.2") (f (quote ("parsing" "default-themes" "regex-onig" "plist-load"))) (k 0)) (d (n "tempfile") (r "^3.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)))) (h "0n6fm54cr0ihdb936bzi6d4pkbkz2f70phnwbs3hciid70d5f3fm") (f (quote (("sixel" "sixel-rs") ("default"))))))

