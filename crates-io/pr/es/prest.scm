(define-module (crates-io pr es prest) #:use-module (crates-io))

(define-public crate-prest-0.0.1 (c (n "prest") (v "0.0.1") (h "189a34ljc6b8fpk86g3ykgrqnsm77r0jgkir83ily7y59lz4s5rq") (y #t)))

(define-public crate-prest-0.1.0 (c (n "prest") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("query" "form" "matched-path" "original-uri" "tokio" "http2" "tracing"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("query" "form" "matched-path" "original-uri"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itoa") (r "^1.0.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "prest-embed-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "prest-embed-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "prest-html-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "rt-multi-thread" "net" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.5.0") (f (quote ("trace" "catch-panic" "compression-br" "limit"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console" "FetchEvent" "Request" "ReadableStream" "ReadableStreamDefaultReader" "Headers" "ResponseInit" "Response" "ServiceWorkerGlobalScope" "WorkerGlobalScope" "WorkerLocation"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1c4h2w96discbgjcj433z3adg5n0qik2p5pgq4jq9618sqkzsfrq") (f (quote (("lazy-embed" "prest-embed-macro/lazy-embed" "prest-embed-utils/lazy-embed"))))))

(define-public crate-prest-0.1.1 (c (n "prest") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.67") (d #t) (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("query" "form" "matched-path" "original-uri" "tokio" "http2" "tracing"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.7.1") (f (quote ("query" "form" "matched-path" "original-uri"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "itoa") (r "^1.0.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "prest-embed-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "prest-embed-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "prest-html-macro") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "rt-multi-thread" "net" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.5.0") (f (quote ("trace" "catch-panic" "compression-br" "limit"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console" "FetchEvent" "Request" "ReadableStream" "ReadableStreamDefaultReader" "Headers" "ResponseInit" "Response" "ServiceWorkerGlobalScope" "WorkerGlobalScope" "WorkerLocation"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1q9amhcqpyf19mg6ccl77hfvk4wd4vy89ifxk7h3214h1nl1dmcb") (f (quote (("lazy-embed" "prest-embed-macro/lazy-embed" "prest-embed-utils/lazy-embed"))))))

(define-public crate-prest-0.2.0 (c (n "prest") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.77") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.3") (f (quote ("query" "form" "matched-path" "original-uri"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "axum") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-login") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gluesql") (r "^0.15") (f (quote ("sled-storage" "shared-memory-storage"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gluesql") (r "^0.15") (f (quote ("shared-memory-storage"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "openidconnect") (r "^3.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "password-auth") (r "^1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prest-db-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-embed-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-embed-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-html-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt" "rt-multi-thread" "net" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("catch-panic" "compression-br" "limit"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-sessions") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "chrono" "env-filter"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "time"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-web") (r "^0.1.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde" "js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console" "FetchEvent" "Request" "ReadableStream" "ReadableStreamDefaultReader" "Headers" "ResponseInit" "Response" "ServiceWorkerGlobalScope" "WorkerGlobalScope" "WorkerLocation"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wry") (r "^0.35") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00cyj7k9fvvzbp3n2zapdgp9a8s8n85gsmcvk4gfbqfs2abd5v5h") (f (quote (("webview" "wry" "tao") ("traces" "tracing-subscriber" "tracing-web" "tower-http/trace" "axum/tracing") ("lazy-embed" "embed" "prest-embed-macro/lazy-embed" "prest-embed-utils/lazy-embed") ("https" "axum-server/tls-rustls") ("html" "prest-html-macro") ("embed" "prest-embed-macro" "prest-embed-utils" "hex") ("default" "db" "embed" "html" "traces") ("db" "gluesql" "prest-db-macro") ("auth" "tower-sessions" "axum-login" "openidconnect" "password-auth" "db"))))))

(define-public crate-prest-0.3.0 (c (n "prest") (v "0.3.0") (d (list (d (n "ansi-to-html") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.77") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (f (quote ("query" "form" "json" "matched-path" "original-uri"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-htmx") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "axum-login") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.6") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-valid") (r "^0.14") (f (quote ("form" "json" "query" "422"))) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "directories") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gluesql") (r "^0.15") (f (quote ("sled-storage" "shared-memory-storage"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gluesql") (r "^0.15") (f (quote ("shared-memory-storage"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "openidconnect") (r "^3.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "password-auth") (r "^1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prest-build") (r "^0.2") (k 1)) (d (n "prest-db-macro") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "prest-embed-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-embed-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-html-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "russh") (r "^0.43") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "russh-keys") (r "^0.43") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "russh-sftp") (r "^2.0.0-beta.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-acme") (r "^0.10") (f (quote ("axum"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "net" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio_schedule") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.5.1") (f (quote ("catch-panic" "compression-br" "limit" "normalize-path"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-sessions") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "chrono" "env-filter"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "time"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-web") (r "^0.1.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde" "js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console" "FetchEvent" "Request" "ReadableStream" "ReadableStreamDefaultReader" "Headers" "ResponseInit" "Response" "ServiceWorkerGlobalScope" "WorkerGlobalScope" "WorkerLocation"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wry") (r "^0.35") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1fiykqj9b01pn02p7zywdi76ggiz7mvbcd6dlxwiax085d0mibz7") (f (quote (("webview" "wry" "tao") ("validify" "axum-valid/full_validify") ("validator" "axum-valid/full_validator") ("traces" "tracing-subscriber" "tracing-web" "tower-http/trace" "axum/tracing" "ansi-to-html") ("lazy-embed" "embed" "prest-embed-macro/lazy-embed" "prest-embed-utils/lazy-embed") ("html" "prest-html-macro") ("garde" "axum-valid/full_garde") ("embed" "prest-embed-macro" "prest-embed-utils" "hex") ("default" "db" "embed" "html" "traces") ("db" "gluesql" "prest-db-macro") ("auth" "tower-sessions" "axum-login" "openidconnect" "password-auth" "db"))))))

(define-public crate-prest-0.3.1 (c (n "prest") (v "0.3.1") (d (list (d (n "ansi-to-html") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.77") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.4") (f (quote ("query" "form" "json" "matched-path" "original-uri"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "axum") (r "^0.7.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-htmx") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "axum-login") (r "^0.12") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-server") (r "^0.6") (f (quote ("tls-rustls"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-valid") (r "^0.14") (f (quote ("form" "json" "query" "422"))) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "directories") (r "^5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gluesql") (r "^0.15") (f (quote ("sled-storage" "shared-memory-storage"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "gluesql") (r "^0.15") (f (quote ("shared-memory-storage"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.58") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "openidconnect") (r "^3.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "password-auth") (r "^1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "prest-build") (r "^0.2") (k 1)) (d (n "prest-db-macro") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "prest-embed-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-embed-utils") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "prest-html-macro") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "russh") (r "^0.43") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "russh-keys") (r "^0.43") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "russh-sftp") (r "^2.0.0-beta.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rustls-acme") (r "^0.10") (f (quote ("axum"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tao") (r "^0.24") (f (quote ("rwh_05"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "rt-multi-thread" "net" "sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio_schedule") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.8") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.5.1") (f (quote ("catch-panic" "compression-br" "limit" "normalize-path"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-livereload") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-sessions") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "chrono" "env-filter"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("fmt" "time"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing-web") (r "^0.1.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "serde" "js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console" "FetchEvent" "Request" "ReadableStream" "ReadableStreamDefaultReader" "Headers" "ResponseInit" "Response" "ServiceWorkerGlobalScope" "WorkerGlobalScope" "WorkerLocation"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wry") (r "^0.35") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0z3hak4s1c48pavx7p7xkhlqqjcb57wnqydbas4qf7v9il7p6x7h") (f (quote (("webview" "wry" "tao") ("validify" "axum-valid/full_validify") ("validator" "axum-valid/full_validator") ("traces" "tracing-subscriber" "tracing-web" "tower-http/trace" "axum/tracing" "ansi-to-html") ("lazy-embed" "embed" "prest-embed-macro/lazy-embed" "prest-embed-utils/lazy-embed") ("html" "prest-html-macro") ("garde" "axum-valid/full_garde") ("embed" "prest-embed-macro" "prest-embed-utils" "hex") ("default" "db" "embed" "html" "traces") ("db" "gluesql" "prest-db-macro") ("auth" "tower-sessions" "axum-login" "openidconnect" "password-auth" "db"))))))

