(define-module (crates-io pr ql prql-compiler) #:use-module (crates-io))

(define-public crate-prql-compiler-0.1.2 (c (n "prql-compiler") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.15.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0p65y64bnnswhyijh7hqg99cpn6xw0f2wcdsm1qpx03ak09g9pi1") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.0 (c (n "prql-compiler") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.15.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1nl8dsajs6amdjyf14ibm4iy0m1fikm88h5dscmh7bnbjhdhbaqr") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.1 (c (n "prql-compiler") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.15.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1sap2nsjhr2095k61ydmyl6l79pkbbnjl3x1l23aar9bi4ylkxhb") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.2 (c (n "prql-compiler") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "duckdb") (r "^0.4.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.15.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.27.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "009fx381jd748ng5j37pz3xsw9sl0r047q57x7206f56w6w372py") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.3 (c (n "prql-compiler") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "duckdb") (r "^0.4.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.16.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "10hlbmszyjg7r2zy5p0jd9shs7zqc4imx9kn2swmfvc0mghi0v0r") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.4 (c (n "prql-compiler") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "duckdb") (r "^0.4.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.17.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.24") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.18.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0zhvgy7xyhnbksk1s5mv9pkb02xrjccg3inbcwnfn4vwg17l2l98") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.5 (c (n "prql-compiler") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "duckdb") (r "^0.4.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.17.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0w3mi7wy9ay4r2hr4dvzlcjj3k9jwc0hsy3bpc0vxi7js3p5322j") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.6 (c (n "prql-compiler") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "duckdb") (r "^0.4.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.17.0") (f (quote ("colors" "glob"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.2.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.2.1") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.19.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0b2qz2p5ca0g60rwk9phyiia91dn3dybc5sh5s37awv6mr9hn49q") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.7 (c (n "prql-compiler") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.2.3") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.5.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.19.0") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.3.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.3.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.23.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0lk8na0w7i855yrbmr9sh684ndg44h484jkzz6wjymw2z51j8334") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.59.0")))

(define-public crate-prql-compiler-0.2.8 (c (n "prql-compiler") (v "0.2.8") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.4") (f (quote ("clap-parse"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.5.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.21.0") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.25.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "1khhsl7zcz5ks36qzvn5g324hg648k6farfswi7gpnlajlfglx2b") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.60.0")))

(define-public crate-prql-compiler-0.2.9 (c (n "prql-compiler") (v "0.2.9") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.4") (f (quote ("clap-parse"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.5.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.21.0") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.25.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "11myfz0zssrmzv01rr7mhrb7qrbl2kgl6y4ag07vvblwjdh182mb") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.60.0")))

(define-public crate-prql-compiler-0.2.11 (c (n "prql-compiler") (v "0.2.11") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.4") (f (quote ("clap-parse"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.5.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.21.0") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.25.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0myi2zdf8dr1h1qiv7lzcvax84zf1b4xy02vc2awmys5aaspimnz") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.60.0")))

(define-public crate-prql-compiler-0.3.0 (c (n "prql-compiler") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.4") (f (quote ("clap-parse"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.6.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (f (quote ("termcolor"))) (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.21.0") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.27.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "15nzdr37886y1smmq264vpy4srbah238cqrsbxb9f6z5pakvx4qr") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.60.0")))

(define-public crate-prql-compiler-0.3.1 (c (n "prql-compiler") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.0.9") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.4") (f (quote ("clap-parse"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.6.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (f (quote ("termcolor"))) (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.21.0") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.27.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "0d31xlnhb337yyqfxvmrscc55fsy65029kg24aa5i4fjicgxv71q") (f (quote (("default" "anyhow/backtrace" "cli") ("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.60.0")))

(define-public crate-prql-compiler-0.4.0 (c (n "prql-compiler") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^4.1.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "clio") (r "^0.2.4") (f (quote ("clap-parse"))) (o #t) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "duckdb") (r "^0.6.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (f (quote ("termcolor"))) (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.26") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.1") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "03zwg5b56vj4ybp1ig3vmmk8c093n008pywp3jni8lz5dzrnywiv") (f (quote (("cli" "clio" "atty" "clap" "color-eyre")))) (r "1.60.0")))

(define-public crate-prql-compiler-0.4.1 (c (n "prql-compiler") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "duckdb") (r "^0.6.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "globset") (r "^0.4.8") (d #t) (k 2)) (d (n "insta") (r "^1.26") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.9.1") (d #t) (k 2)) (d (n "pulldown-cmark-to-cmark") (r "^10.0.1") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "similar") (r "^2.2.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (d #t) (k 2)))) (h "059m1si8i5mrlhs3vy8ybv1hcn7piwsj61mga7cr09h33f1pjwz3") (r "1.65.0")))

(define-public crate-prql-compiler-0.4.2 (c (n "prql-compiler") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "duckdb") (r "^0.6.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.26") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "137pmi8nc890qgbrf7rcgcsxsnjcbbvll6m8rpczrmkhnj71lp39") (r "1.65.0")))

(define-public crate-prql-compiler-0.5.0 (c (n "prql-compiler") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "duckdb") (r "^0.6.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.26") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "1lfskda8ynvmn2w20r4jplpmyvjxj18nmcrz9nlwgbkxdrm7jbq0") (r "1.65.0")))

(define-public crate-prql-compiler-0.5.1 (c (n "prql-compiler") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.28") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "1y6z6ymdi4y9xdqyrwdclqi2dlk2c5s9hxlfbiy97251w775f7v2") (r "1.65.0")))

(define-public crate-prql-compiler-0.5.2 (c (n "prql-compiler") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.8.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.28") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pest") (r "^2.5.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.30.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "1gsa2wwiln2s7bhnwz9lc9rfgbw0q7224sn8bkncc72rgjx9vvja") (r "1.65.0")))

(define-public crate-prql-compiler-0.6.0 (c (n "prql-compiler") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.9.0") (f (quote ("ahash" "std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "chumsky") (r "^0.9.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.28") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.31.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "0bhi20hbadkib7laci1pa6w1ixgbg0i5q1s6qvwfql0mjii0mlil") (r "1.65.0")))

(define-public crate-prql-compiler-0.6.1 (c (n "prql-compiler") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.9.2") (f (quote ("ahash" "std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "chumsky") (r "^0.9.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.28") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.28.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.32.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "1k85cmqh3smjnsbxv4zbd471k5qk861n1wvshk92ry5z9s99hl1w") (r "1.65.0")))

(define-public crate-prql-compiler-0.7.0 (c (n "prql-compiler") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.2.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.9.2") (f (quote ("ahash" "std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "chumsky") (r "^0.9.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "csv") (r "^1.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.29") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^23") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "postgres") (r "^0.19.3") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.32.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)))) (h "1vn49phy02j2d8pmcn2kjnd216bzkzs432fhzgxdvpmync940qjq") (r "1.65.0")))

(define-public crate-prql-compiler-0.7.1 (c (n "prql-compiler") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.2.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.9.2") (f (quote ("ahash" "std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "chumsky") (r "^0.9.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "csv") (r "^1.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.29") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^23") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "postgres") (r "^0.19") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.32.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)))) (h "046cy7sgjp129ks31i5jxkc0nb7a623d90lc0yib5wx6kcprdyfj") (f (quote (("test-external-dbs")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.8.0 (c (n "prql-compiler") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.2.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.9.2") (f (quote ("ahash" "std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "chumsky") (r "^0.9.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "csv") (r "^1.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.29") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^23") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "postgres") (r "^0.19") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.33.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)))) (h "0gxsqz9fa4idgys6q69sflsz6mk1zw2j4mqj6kmsx98qk79h3fcg") (f (quote (("test-external-dbs")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.8.1 (c (n "prql-compiler") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.2.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "chumsky") (r "^0.9.2") (f (quote ("ahash" "std"))) (t "cfg(target_family = \"wasm\")") (k 0)) (d (n "chumsky") (r "^0.9.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "csv") (r "^1.2") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "duckdb") (r "^0.7.0") (f (quote ("bundled" "chrono"))) (d #t) (t "cfg(not(any(target_family = \"windows\", target_family = \"wasm\")))") (k 2)) (d (n "enum-as-inner") (r "^0.5.0") (d #t) (k 0)) (d (n "insta") (r "^1.29") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^23") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "postgres") (r "^0.19") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.33.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)))) (h "1zy9ygp1vnjsxzg18srr3mn54c2filpkqafjdll7zb0280am56y9") (f (quote (("test-external-dbs")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.9.2 (c (n "prql-compiler") (v "0.9.2") (d (list (d (n "anstream") (r "^0.3.2") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.8.1") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.31") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "prql-ast") (r "^0.9.2") (d #t) (k 0)) (d (n "prql-parser") (r "^0.9.2") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.0") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "1v90arwpp5qsx2fpj7sg5c2p3bwsskw29p2faidbzm5r889gv2pd") (f (quote (("test-dbs-external" "chrono" "duckdb" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "rusqlite" "tokio") ("default")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.9.3 (c (n "prql-compiler") (v "0.9.3") (d (list (d (n "anstream") (r "^0.3.2") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.8.1") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.31") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "prql-ast") (r "^0.9.3") (d #t) (k 0)) (d (n "prql-parser") (r "^0.9.3") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "0kx49fa6xh3r2b95y3jz072jbgm3r88mr9v7qmy25r0vif1qxwjz") (f (quote (("test-dbs-external" "chrono" "duckdb" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "rusqlite" "tokio") ("default")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.9.4 (c (n "prql-compiler") (v "0.9.4") (d (list (d (n "anstream") (r "^0.3.2") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.57") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.8.1") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.31") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "prql-ast") (r "^0.9.4") (d #t) (k 0)) (d (n "prql-parser") (r "^0.9.4") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.14") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.1") (d #t) (k 0)) (d (n "sqlparser") (r "^0.36.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.0") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "00zidwjxysfa82nbn41l2wq50hxwka045vj2zbj08mk1sd1laln7") (f (quote (("test-dbs-external" "chrono" "duckdb" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "rusqlite" "tokio") ("default")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.9.5 (c (n "prql-compiler") (v "0.9.5") (d (list (d (n "anstream") (r "^0.3.2") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 2)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "duckdb") (r "^0.8.1") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "insta") (r "^1.31") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "prql-ast") (r "^0.9.5") (d #t) (k 0)) (d (n "prql-parser") (r "^0.9.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.18") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.2") (d #t) (k 0)) (d (n "sqlparser") (r "^0.37.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.2") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)))) (h "0g3sghc7bvkh53z8piy5872fv44yznk6vfqzlfx1mkrgadjnimgl") (f (quote (("test-dbs-external" "chrono" "duckdb" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "rusqlite" "tokio") ("default")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.10.0 (c (n "prql-compiler") (v "0.10.0") (d (list (d (n "anstream") (r "^0.3.2") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.9.1") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "insta") (r "^1.34") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "prqlc-ast") (r "^0.10.0") (d #t) (k 0)) (d (n "prqlc-parser") (r "^0.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.2") (d #t) (k 0)) (d (n "sqlparser") (r "^0.38.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "tiberius") (r "^0.12") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)))) (h "1rb0g2vnbw6cxi9xb357p36gsqwkp8rb20850cvjkkinwfmm8pi4") (f (quote (("test-dbs-external" "chrono" "duckdb" "glob" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "glob" "rusqlite" "tokio") ("default")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.10.1 (c (n "prql-compiler") (v "0.10.1") (d (list (d (n "anstream") (r "^0.3.2") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (o #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.9.1") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "insta") (r "^1.34") (f (quote ("colors" "glob" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "prqlc-ast") (r "^0.10.1") (d #t) (k 0)) (d (n "prqlc-parser") (r "^0.10.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.2") (d #t) (k 0)) (d (n "sqlparser") (r "^0.38.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "tiberius") (r "^0.12.2") (f (quote ("sql-browser-tokio" "bigdecimal" "time"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)))) (h "1dbn69f4f1crpn5q4phfnaj1hbakk9qry43bvndmckpdx1898dl9") (f (quote (("test-dbs-external" "chrono" "duckdb" "glob" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "glob" "rusqlite" "tokio") ("default")))) (r "1.65.0")))

(define-public crate-prql-compiler-0.11.0 (c (n "prql-compiler") (v "0.11.0") (d (list (d (n "anstream") (r "^0.6.5") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.9.2") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "insta") (r "^1.34") (f (quote ("colors" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "prqlc-ast") (r "^0.11.0") (d #t) (k 0)) (d (n "prqlc-parser") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.3") (d #t) (k 0)) (d (n "sqlparser") (r "^0.40.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "test_each_file") (r "^0.3.0") (d #t) (k 2)) (d (n "tiberius") (r "^0.12.2") (f (quote ("sql-browser-tokio" "bigdecimal" "time" "rustls" "tds73"))) (o #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)))) (h "1cpvr8pkc4gymzhn99inyr7hc0i2ncir04asa8yd53770xcmz3ck") (f (quote (("test-dbs-external" "duckdb" "glob" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "glob" "rusqlite" "tokio") ("default")))) (r "1.70.0")))

(define-public crate-prql-compiler-0.11.1 (c (n "prql-compiler") (v "0.11.1") (d (list (d (n "anstream") (r "^0.6.5") (f (quote ("auto"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.76") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 2)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "duckdb") (r "^0.9.2") (f (quote ("bundled" "chrono"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "enum-as-inner") (r "^0.6.0") (d #t) (k 0)) (d (n "glob") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "insta") (r "^1.34") (f (quote ("colors" "yaml"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mysql") (r "^24") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "pg_bigdecimal") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "postgres") (r "^0.19") (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "prqlc-ast") (r "^0.11.1") (d #t) (k 0)) (d (n "prqlc-parser") (r "^0.11.1") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled" "csvtab"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "semver") (r "^1.0.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.3.0") (d #t) (k 2)) (d (n "similar-asserts") (r "^1.5.0") (d #t) (k 2)) (d (n "sqlformat") (r "^0.2.3") (d #t) (k 0)) (d (n "sqlparser") (r "^0.41.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strum") (r "^0.25.0") (f (quote ("std" "derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.25.3") (d #t) (k 0)) (d (n "test_each_file") (r "^0.3.0") (d #t) (k 2)) (d (n "tiberius") (r "^0.12.2") (f (quote ("sql-browser-tokio" "bigdecimal" "time" "rustls" "tds73"))) (o #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (o #t) (d #t) (t "cfg(not(target_family=\"wasm\"))") (k 0)))) (h "0q6qrkspi3pssd21lp4lk4xgjhzw6w4bc7g9har0ijyvf43fjmsx") (f (quote (("test-dbs-external" "duckdb" "glob" "mysql" "pg_bigdecimal" "postgres" "rusqlite" "tiberius" "tokio" "tokio-util") ("test-dbs" "duckdb" "glob" "rusqlite" "tokio") ("default")))) (r "1.70.0")))

(define-public crate-prql-compiler-0.11.2 (c (n "prql-compiler") (v "0.11.2") (d (list (d (n "prqlc") (r "^0.11.2") (k 0)))) (h "0zn3j02yx70pzz6dblls9wcdjz8dfqxxv9lh2dh031cp1hrqqir8") (r "1.70.0")))

(define-public crate-prql-compiler-0.11.3 (c (n "prql-compiler") (v "0.11.3") (d (list (d (n "prqlc") (r "^0.11.3") (k 0)))) (h "184154y6f43djw8y0r0x3n22kblqim608z5bxym0j0n8xi46yafa") (r "1.70.0")))

