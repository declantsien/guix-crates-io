(define-module (crates-io ev m- evm-interpreter) #:use-module (crates-io))

(define-public crate-evm-interpreter-0.1.0 (c (n "evm-interpreter") (v "0.1.0") (h "1fpl15n4p3g39m8yzy1c7s9ynnkzmbgssq8jihqmi3wcqqny4q5q")))

(define-public crate-evm-interpreter-1.0.0-alpha.1 (c (n "evm-interpreter") (v "1.0.0-alpha.1") (d (list (d (n "auto_impl") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive" "full"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "18qfwwkmsr4hm882p1q7j8rvxp9r01bq1nb3rv8w1y53wwmdl5zr") (f (quote (("with-serde" "serde" "primitive-types/impl-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/impl-codec") ("std" "primitive-types/std" "serde/std" "scale-codec/std" "scale-info/std" "bytes/std" "rlp/std") ("default" "std"))))))

(define-public crate-evm-interpreter-1.0.0-alpha.2 (c (n "evm-interpreter") (v "1.0.0-alpha.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12") (f (quote ("rlp"))) (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "scale-codec") (r "^3.2") (f (quote ("derive" "full"))) (o #t) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha3") (r "^0.10") (k 0)))) (h "0wg70ziyfiacplri1rbm965fc0m3xhmyyxp04jmrhrqkdxzrl9w1") (f (quote (("with-serde" "serde" "primitive-types/impl-serde") ("with-codec" "scale-codec" "scale-info" "primitive-types/impl-codec") ("std" "primitive-types/std" "rlp/std" "serde/std" "scale-codec/std" "scale-info/std" "sha3/std") ("default" "std"))))))

