(define-module (crates-io ev m- evm-coder) #:use-module (crates-io))

(define-public crate-evm-coder-0.3.2 (c (n "evm-coder") (v "0.3.2") (d (list (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.3.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0i0qfm62zaa99wsw6zsh4jjai6d6gfcmsc78rih88mhvh2mm9r62") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-evm-coder-0.3.3 (c (n "evm-coder") (v "0.3.3") (d (list (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.3.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "15ja2dzdafx05x9kaj2nfdhkcs0p74jk41yv0sw1ajdkk5dcm1k0") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-evm-coder-0.3.5 (c (n "evm-coder") (v "0.3.5") (d (list (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.3.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0ckk036ggv3n29arhb531dw3ch35zivpa674795f83z1i3iz6g88") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std"))))))

(define-public crate-evm-coder-0.3.6 (c (n "evm-coder") (v "0.3.6") (d (list (d (n "bondrewd") (r "^0.1.14") (f (quote ("derive"))) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.3.6") (d #t) (k 0)) (d (n "evm-coder-procedural") (r "^0.3.6") (f (quote ("bondrewd"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1f4samh2njf9y15w07zhfv7gyqksrsn4asv1rp551qdfacwwzqas") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std") ("bondrewd" "evm-coder-procedural/bondrewd"))))))

(define-public crate-evm-coder-0.4.0 (c (n "evm-coder") (v "0.4.0") (d (list (d (n "bondrewd") (r "^0.1.14") (f (quote ("derive"))) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.4.0") (d #t) (k 0)) (d (n "evm-coder-procedural") (r "^0.4.0") (f (quote ("bondrewd"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "0g8n1lxqw5fala1kilhi35z06n2pwm3abj9jrc6jsnabwxgm5p98") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std") ("bondrewd" "evm-coder-procedural/bondrewd"))))))

(define-public crate-evm-coder-0.4.1 (c (n "evm-coder") (v "0.4.1") (d (list (d (n "bondrewd") (r "^0.1.14") (f (quote ("derive"))) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.4.1") (d #t) (k 0)) (d (n "evm-coder-procedural") (r "^0.4.1") (f (quote ("bondrewd"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "10c3illrwnqg4gsvpwgsw8bp19jbhh9fxc2jpz9hz1pfkjaahjwb") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std") ("bondrewd" "evm-coder-procedural/bondrewd"))))))

(define-public crate-evm-coder-0.4.2 (c (n "evm-coder") (v "0.4.2") (d (list (d (n "bondrewd") (r "^0.1.14") (f (quote ("derive"))) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.14.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.4.2") (d #t) (k 0)) (d (n "evm-coder-procedural") (r "^0.4.2") (f (quote ("bondrewd"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1m3sgwzsfjn6q2878aafdwddhmmwjvrjvpf0b7pxzsg796jfb2mq") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std") ("bondrewd" "evm-coder-procedural/bondrewd"))))))

(define-public crate-evm-coder-0.4.3 (c (n "evm-coder") (v "0.4.3") (d (list (d (n "bondrewd") (r "^0.1.14") (f (quote ("derive"))) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 2)) (d (n "ethereum") (r "^0.15.0") (k 0)) (d (n "evm-coder-procedural") (r "^0.4.3") (d #t) (k 0)) (d (n "evm-coder-procedural") (r "^0.4.3") (f (quote ("bondrewd"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "impl-trait-for-tuples") (r "^0.2.2") (d #t) (k 0)) (d (n "primitive-types") (r "^0.12.1") (k 0)) (d (n "sha3-const") (r "^0.1.1") (k 0)) (d (n "similar-asserts") (r "^1.4") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)))) (h "1sky1y9x300nd8yszr7q7m38cv6hwxsjjm2dizymy1gipxbrv8ai") (f (quote (("stubgen") ("std" "ethereum/std" "primitive-types/std") ("default" "std") ("bondrewd" "evm-coder-procedural/bondrewd"))))))

