(define-module (crates-io ev m_ evm_arithmetization) #:use-module (crates-io))

(define-public crate-evm_arithmetization-0.1.0 (c (n "evm_arithmetization") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mpt_trie") (r "^0.1.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "plonky2") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_util") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "starky") (r "^0.2.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (d #t) (k 0)))) (h "16qck76nwiflzixq9n1n5wq51q5b25pzfd1d33kdsfcbr4g8103x") (f (quote (("parallel" "plonky2/parallel" "plonky2_maybe_rayon/parallel" "starky/parallel") ("default" "parallel") ("asmtools" "hex"))))))

(define-public crate-evm_arithmetization-0.1.1 (c (n "evm_arithmetization") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mpt_trie") (r "^0.1.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "plonky2") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_util") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "starky") (r "^0.2.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (d #t) (k 0)))) (h "14zssrcy0kg0sn1y24bm6pyk45lxzwhmxpzm9p4h8zqlbdgzcapg") (f (quote (("parallel" "plonky2/parallel" "plonky2_maybe_rayon/parallel" "starky/parallel") ("default" "parallel") ("asmtools" "hex"))))))

(define-public crate-evm_arithmetization-0.1.2 (c (n "evm_arithmetization") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mpt_trie") (r "^0.2.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "plonky2") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_util") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "starky") (r "^0.2.1") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (d #t) (k 0)))) (h "0p5m94yz3nqyrs234fbqs0n3yhl149x5p7yxnjm9ic613pnhyipq") (f (quote (("parallel" "plonky2/parallel" "plonky2_maybe_rayon/parallel" "starky/parallel") ("default" "parallel") ("asmtools" "hex"))))))

(define-public crate-evm_arithmetization-0.1.3 (c (n "evm_arithmetization") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.1") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "keccak-hash") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mpt_trie") (r "^0.2.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "plonky2") (r "^0.2.2") (d #t) (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (d #t) (k 0)) (d (n "plonky2_util") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (d #t) (k 0)) (d (n "rlp-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "starky") (r "^0.4.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (d #t) (k 0)))) (h "0g1dmlma2ycmbh3rkj9x7qw2xqfixp2rpkilsyr1kpx05nxvssmz") (f (quote (("parallel" "plonky2/parallel" "plonky2_maybe_rayon/parallel" "starky/parallel") ("default" "parallel") ("asmtools" "hex"))))))

