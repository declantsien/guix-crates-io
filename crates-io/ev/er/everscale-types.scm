(define-module (crates-io ev er everscale-types) #:use-module (crates-io))

(define-public crate-everscale-types-0.1.0-pre.0 (c (n "everscale-types") (v "0.1.0-pre.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rjg03j2v8x62iqr9priblndssjrpq7n5nnw0sbq6bzqrp6d7vrf") (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.1 (c (n "everscale-types") (v "0.1.0-pre.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0l0gwxcmmm7c759rp6jjb0yga0fmff6xv2n0gkvhxigarrgdnqlc") (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.2 (c (n "everscale-types") (v "0.1.0-pre.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v6xciyj8ay6r2hm1aisglphb1df3h54rlif82aykfj57w1aiaxn") (f (quote (("default" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.3 (c (n "everscale-types") (v "0.1.0-pre.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1180vih4h21zvl0jn6wa9phwf4bnk60fp7i9pw0wkiivbj78rj1m") (f (quote (("stats") ("models") ("default" "base64" "serde" "models")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.4 (c (n "everscale-types") (v "0.1.0-pre.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12dngpa3lyqqkvbaq3803lcw3jq5bvm784azkcza5k1pbzpkd6wr") (f (quote (("stats") ("models") ("default" "base64" "serde" "models")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.5 (c (n "everscale-types") (v "0.1.0-pre.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "everscale-types-proc") (r "=0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12kfalpjwl266x59557rf1936dnbq2kpzjwmmyfff6vqlgpdwl1b") (f (quote (("stats") ("models") ("default" "base64" "serde" "models")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.6 (c (n "everscale-types") (v "0.1.0-pre.6") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "everscale-types-proc") (r "=0.1.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1b0pq2zqqj3xwl3jifwpdk9pjskkkzph0qpwgngs7snq9bq9q68j") (f (quote (("stats") ("models") ("default" "base64" "serde" "models")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.7 (c (n "everscale-types") (v "0.1.0-pre.7") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "everscale-types-proc") (r "=0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1m0ypsy7imrlyd40ri941l57bqk60yc3n32hqj4rb99q2c3asf5m") (f (quote (("stats") ("models") ("default" "base64" "serde" "models")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.8 (c (n "everscale-types") (v "0.1.0-pre.8") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "everscale-types-proc") (r "=0.1.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1h5kg0jwzm43vq7djgw20gls2lm3awp4700nhxq59afyqksrmj6z") (f (quote (("stats") ("models") ("default" "base64" "serde" "models")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-pre.9 (c (n "everscale-types") (v "0.1.0-pre.9") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "everscale-types-proc") (r "=0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0pwk9nxp38cvkmxacynpl7z24ng3gazzfvyi4h3vnlgmh2nwdk1f") (f (quote (("sync") ("stats") ("models") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.0 (c (n "everscale-types") (v "0.1.0-rc.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "everscale-crypto") (r "^0.2.0-pre.1") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "01vykhqh8qs7d8ikl2bz68dkbb5i3w2spbybbfc7591vwbyi1q7b") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.1 (c (n "everscale-types") (v "0.1.0-rc.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "everscale-crypto") (r "^0.2.0-pre.1") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "139c2abv1l13b99bpdkcixjjg80b0s4b5fdkalh7zlmv4dpk2364") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.2 (c (n "everscale-types") (v "0.1.0-rc.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "everscale-crypto") (r "^0.2.0-pre.1") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1a24wj0pfqxnp492pgs1iwrr3zxzvy17rj93dgmzbp3ysxqa5clb") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.3 (c (n "everscale-types") (v "0.1.0-rc.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "bitflags") (r "^2.3") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "everscale-crypto") (r "^0.2") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "001cpdh0bj4lcn3dpxbnq3p91in5fwna2h0qiaqsrk8dgc3l7s8r") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.4 (c (n "everscale-types") (v "0.1.0-rc.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "bitflags") (r "^2.3") (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "everscale-crypto") (r "^0.2") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1k2n277svb799vdl7lzk3wjpnap8swkfpnmaiyc0fwd6dkkyb7wz") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.5 (c (n "everscale-types") (v "0.1.0-rc.5") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "bitflags") (r "^2.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "everscale-crypto") (r "^0.2") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "01zd5phrn62nl2fplyxx2g8k8wxf61az33s73002l43kpkwblsf1") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "abi" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto") ("abi" "dep:anyhow" "dep:bytes" "dep:ed25519-dalek" "dep:num-bigint" "dep:num-traits" "dep:serde" "models")))) (r "1.65")))

(define-public crate-everscale-types-0.1.0-rc.6 (c (n "everscale-types") (v "0.1.0-rc.6") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "bitflags") (r "^2.3") (d #t) (k 0)) (d (n "bytes") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "crc32c") (r "^0.6") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "ed25519-dalek") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "everscale-crypto") (r "^0.2") (f (quote ("tl-proto"))) (o #t) (d #t) (k 0)) (d (n "everscale-types-proc") (r "=0.1.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.9") (f (quote ("union"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tl-proto") (r "^0.4") (o #t) (d #t) (k 0)))) (h "14afv7lk2f52q49s4x227w61pqqmjx4a5j0bl56l3ddx0y5hag7z") (f (quote (("venom") ("sync") ("stats") ("default" "base64" "serde" "models" "sync")))) (s 2) (e (quote (("serde" "dep:serde" "base64") ("models" "dep:everscale-crypto" "dep:tl-proto") ("abi" "dep:anyhow" "dep:bytes" "dep:ed25519-dalek" "dep:num-bigint" "dep:num-traits" "dep:serde" "models")))) (r "1.65")))

