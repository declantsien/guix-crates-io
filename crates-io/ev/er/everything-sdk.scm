(define-module (crates-io ev er everything-sdk) #:use-module (crates-io))

(define-public crate-everything-sdk-0.0.2 (c (n "everything-sdk") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "everything-sdk-sys") (r "^0.0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging" "Win32_Graphics_Gdi" "Win32_Storage_FileSystem"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1gs6mjrx2sxf3dff1gac4j9xf32ffi6ryfrw6k0qryfnj6v3z021") (f (quote (("raw") ("default")))) (s 2) (e (quote (("async" "dep:futures"))))))

(define-public crate-everything-sdk-0.0.3 (c (n "everything-sdk") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "everything-sdk-sys") (r "^0.0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging" "Win32_Graphics_Gdi" "Win32_Storage_FileSystem"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0bv4sfar1ijb54kgnlmvvrrkcwkh5x5jbnyrwviag1qj9lhznzy1") (f (quote (("raw") ("default")))) (s 2) (e (quote (("async" "dep:futures"))))))

(define-public crate-everything-sdk-0.0.4 (c (n "everything-sdk") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "everything-sdk-sys") (r "^0.0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging" "Win32_Graphics_Gdi" "Win32_Storage_FileSystem"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0n80ma04lfgvhx8wk6akvcf7hixgi86cjk70mgm9y0b38n02rchj") (f (quote (("raw") ("default")))) (s 2) (e (quote (("async" "dep:futures"))))))

(define-public crate-everything-sdk-0.0.5 (c (n "everything-sdk") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "everything-sdk-sys") (r "^0.0.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation" "Win32_System_LibraryLoader" "Win32_UI_WindowsAndMessaging" "Win32_Graphics_Gdi" "Win32_Storage_FileSystem"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1cbfx1af3dx0ayi8sma9f0206ri0fss1ach4lb5y2a5qvdbrsp5y") (f (quote (("raw") ("default")))) (s 2) (e (quote (("async" "dep:futures"))))))

