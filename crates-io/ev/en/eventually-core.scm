(define-module (crates-io ev en eventually-core) #:use-module (crates-io))

(define-public crate-eventually-core-0.3.0 (c (n "eventually-core") (v "0.3.0") (d (list (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0n3x635q7x8fwrapk55wc0yq5ijwr7iy2rqhp3g2qzkjwazyv2al")))

(define-public crate-eventually-core-0.4.0-alpha.1 (c (n "eventually-core") (v "0.4.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "18vzl6iphqcg7c2kbij43x4xyv593scq02j52mpy1xjp5mkyvfab") (f (quote (("full" "serde") ("default"))))))

(define-public crate-eventually-core-0.4.0-alpha.2 (c (n "eventually-core") (v "0.4.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)))) (h "131aa68bm3agkd8ksy9yn7iyz28i9h854a3my0vgsrrbxb1zmmpa") (f (quote (("with-tracing" "tracing" "tracing-futures") ("full" "serde" "with-tracing") ("default")))) (y #t)))

(define-public crate-eventually-core-0.4.0-alpha.3 (c (n "eventually-core") (v "0.4.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1kqvsig4wyvmycyn6ajpw2jjb8xwxwmv74vagg91x1yy58npscy5") (f (quote (("with-tracing" "tracing" "tracing-futures") ("full" "serde" "with-tracing") ("default"))))))

(define-public crate-eventually-core-0.4.0 (c (n "eventually-core") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)))) (h "10qc8hdy9njlh1jnslv403jr90bkhpsd67mqkghd7zwj25nfl5z4") (f (quote (("with-tracing" "tracing" "tracing-futures") ("full" "serde" "with-tracing") ("default"))))))

