(define-module (crates-io ev en eventually) #:use-module (crates-io))

(define-public crate-eventually-0.1.1 (c (n "eventually") (v "0.1.1") (h "0mdx723k9b9dnwr53idml9df9nhsapb75dfhjsxnic10iyi5886v")))

(define-public crate-eventually-0.2.0 (c (n "eventually") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "tokio-test") (r "^0.2") (d #t) (k 2)))) (h "11hzza3ic3cm5j6x2fwm5rgf2k3cvkrx4baiqx055ha4cghzfn0p")))

(define-public crate-eventually-0.3.0 (c (n "eventually") (v "0.3.0") (d (list (d (n "eventually-core") (r "^0.3.0") (d #t) (k 0)) (d (n "eventually-util") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.2") (d #t) (k 2)))) (h "0kj9zhfg3lnkpn1x1al52g90q9fjalilgpc4qnxky6px6ccck5sa") (f (quote (("tokio" "eventually-util/tokio") ("serde" "eventually-util/serde") ("full" "serde" "tokio") ("default"))))))

(define-public crate-eventually-0.4.0-alpha.1 (c (n "eventually") (v "0.4.0-alpha.1") (d (list (d (n "eventually-core") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "eventually-postgres") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0-alpha.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.2") (d #t) (k 2)))) (h "1fzrcl5b5pq146h83sl2q9h6lg3z20npfq0gaa7bfgs24p4yvimb") (f (quote (("serde" "eventually-core/serde") ("postgres" "eventually-postgres") ("full" "serde" "postgres") ("default"))))))

(define-public crate-eventually-0.4.0-alpha.2 (c (n "eventually") (v "0.4.0-alpha.2") (d (list (d (n "eventually-core") (r "^0.4.0-alpha.2") (d #t) (k 0)) (d (n "eventually-postgres") (r "^0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0-alpha.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.2") (d #t) (k 2)))) (h "1lf66qi6czz884ah0kh6y4a874xwrw2gyai03sfnh9zl5xdzg4p4") (f (quote (("tracing" "eventually-core/with-tracing" "eventually-util/with-tracing" "eventually-postgres/with-tracing") ("serde" "eventually-core/serde") ("postgres" "eventually-postgres") ("full" "serde" "tracing" "postgres") ("default")))) (y #t)))

(define-public crate-eventually-0.4.0-alpha.3 (c (n "eventually") (v "0.4.0-alpha.3") (d (list (d (n "eventually-core") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "eventually-postgres") (r "^0.2.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0-alpha.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.2") (d #t) (k 2)))) (h "09q32n6jjzdkdzka1bnrlrmqb7j9f6w4frd5j5kk84fa0yhhprxy") (f (quote (("tracing" "eventually-core/with-tracing" "eventually-util/with-tracing" "eventually-postgres/with-tracing") ("serde" "eventually-core/serde") ("postgres" "eventually-postgres") ("full" "serde" "tracing" "postgres") ("default"))))))

(define-public crate-eventually-0.4.0 (c (n "eventually") (v "0.4.0") (d (list (d (n "eventually-core") (r "^0.4.0") (d #t) (k 0)) (d (n "eventually-postgres") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.2") (d #t) (k 2)))) (h "0wnvn5d59z4hpkkpkqjsqlkk8m6gxqyjv06353n7pcf5inp65ibw") (f (quote (("tracing" "eventually-core/with-tracing" "eventually-util/with-tracing" "eventually-postgres/with-tracing") ("serde" "eventually-core/serde") ("postgres" "eventually-postgres") ("full" "serde" "tracing" "postgres") ("default"))))))

