(define-module (crates-io ev en eventio) #:use-module (crates-io))

(define-public crate-eventio-0.3.0 (c (n "eventio") (v "0.3.0") (d (list (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "pcap-file") (r "^0.10") (d #t) (k 2)) (d (n "pcap-parser") (r "^0.8") (f (quote ("data"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1r06zssm2asq1pxar3w7a7qgzffqkp2nbpn4ijbjr1d6iz18wvn5")))

(define-public crate-eventio-0.3.1 (c (n "eventio") (v "0.3.1") (d (list (d (n "crossbeam-channel") (r "^0.3") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.8") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "08r71s52vaxlfld7mwrr6yzn83zyb41hxanawd9jdqjdbcgj0r0r")))

(define-public crate-eventio-0.3.2 (c (n "eventio") (v "0.3.2") (d (list (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.8") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1kqqizf2wbbldn0l3b7v7nr7g7wmdfiny9sgm9plpabg25jcgkzh")))

(define-public crate-eventio-0.3.3 (c (n "eventio") (v "0.3.3") (d (list (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.8") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1rr2fmcg89z63cic0bmrywyqm88zg31nqmpgcr7zg64n1jp1bl7r")))

(define-public crate-eventio-0.3.4 (c (n "eventio") (v "0.3.4") (d (list (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.8.1") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1vm77g0grr98j1sczdvhrd7dg44vkccssaixwhn2a763gslh3267")))

(define-public crate-eventio-0.3.5 (c (n "eventio") (v "0.3.5") (d (list (d (n "crossbeam-channel") (r "^0.4") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.8.1") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "15c36lphv9yxngm66qvpi4jll92v9rwggl0chd66d75la65fr7v1")))

(define-public crate-eventio-0.4.0 (c (n "eventio") (v "0.4.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^5") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.9") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0rx29p01kwsvva50nfjkg4l9879fzikpl2wh0ypcn2nvgcssqhaz")))

(define-public crate-eventio-0.5.0 (c (n "eventio") (v "0.5.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.9") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "148c6p97in3as2p9h7g3fcnhjmg10jvklalcj4zbz3w0ja9j4lvc")))

(define-public crate-eventio-0.5.1 (c (n "eventio") (v "0.5.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (d #t) (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.10") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "179l82vb1kg5352cxf0phgs3mnz82mxndjnd21fb4w6jvs9bplpf")))

(define-public crate-eventio-0.6.0 (c (n "eventio") (v "0.6.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (k 0)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.11") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0s3wkkp0i4chlcqlbynkpkyy8zh84v386w8ywszbjqlzvryrmnml")))

(define-public crate-eventio-0.6.1 (c (n "eventio") (v "0.6.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.8") (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.11") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "16lp0lazlxhs52kaxy1jp7fswncg2h87vvncawb0hhvqsrcz0qc7")))

(define-public crate-eventio-0.7.0 (c (n "eventio") (v "0.7.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.9") (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.14") (f (quote ("data" "serialize"))) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "01rhp6ja65vgfhbzngpsipmkhnv9bw3qwh4shs99dqhhpyx19y5v") (f (quote (("matrix" "ndarray") ("default")))) (r "1.56")))

(define-public crate-eventio-0.8.0 (c (n "eventio") (v "0.8.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.9") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.14") (f (quote ("data" "serialize"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "1964kc5dgsm95sjna1ffzhf1r4psn7p3sldmb03lfg6s6vr1dmch") (f (quote (("pcap" "pcap-parser") ("default")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("kafka" "dep:kafka")))) (r "1.60")))

(define-public crate-eventio-0.9.0 (c (n "eventio") (v "0.9.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.9") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.14") (f (quote ("data" "serialize"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "0iw02jv2pvk1xw8x5p91bc1p3hf4jd239s6lf7c6fzzwaa2pzrg0") (f (quote (("pcap" "pcap-parser") ("default")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("kafka" "dep:kafka")))) (r "1.60")))

(define-public crate-eventio-0.10.0 (c (n "eventio") (v "0.10.0") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.9") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.14") (f (quote ("data" "serialize"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "072lfbkv0rwrlhr0h4a2x2a73k68xc1h6vif8by3n48472xsyaf3") (f (quote (("pcap" "pcap-parser") ("default")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("kafka" "dep:kafka")))) (r "1.60")))

(define-public crate-eventio-0.10.1 (c (n "eventio") (v "0.10.1") (d (list (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "kafka") (r "^0.9") (o #t) (k 0)) (d (n "ndarray") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "pcap-parser") (r "^0.14") (f (quote ("data" "serialize"))) (o #t) (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)))) (h "11ix9s4iz21nr3jhgmf5fbc3czpi7vcnqn174aixh33pcfjnxscz") (f (quote (("pcap" "pcap-parser") ("default")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("kafka" "dep:kafka")))) (r "1.60")))

