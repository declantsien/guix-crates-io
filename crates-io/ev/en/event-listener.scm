(define-module (crates-io ev en event-listener) #:use-module (crates-io))

(define-public crate-event-listener-1.0.0 (c (n "event-listener") (v "1.0.0") (h "11ccxxgqmzizq9dkpzc5ija8vhphr44c4i71cczmk0gw2rlaljc6")))

(define-public crate-event-listener-1.0.1 (c (n "event-listener") (v "1.0.1") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0gcpkb9h81ddvd7l7pwjvx8az6k187613a5238g6z5hafdnv6wq1")))

(define-public crate-event-listener-1.1.0 (c (n "event-listener") (v "1.1.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "027wa31ihds0l40cjdcnfcf7ns1lb4y0bq3il4pdh4yimfr5psq4")))

(define-public crate-event-listener-1.1.1 (c (n "event-listener") (v "1.1.1") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "1dl136ibmy7vgrlq73hndixs5x8p3qyixw62fkbbw1p88528q1wz")))

(define-public crate-event-listener-1.1.2 (c (n "event-listener") (v "1.1.2") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "1idkagc9zwlqrcqrk0y7d50yiz0lsfkkb0ywzqxhwlm8k07bhsg7")))

(define-public crate-event-listener-1.2.0 (c (n "event-listener") (v "1.2.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "1mwma0g8676cy3ckz5n2apxachxnxgs3h6nkmqv1r8yx2yk22g84")))

(define-public crate-event-listener-2.0.0 (c (n "event-listener") (v "2.0.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "1v6kzwar8gr0j49w8xzm2q54djjlp86s5i9krvwnvnf5mrmjcgmf")))

(define-public crate-event-listener-2.0.1 (c (n "event-listener") (v "2.0.1") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "018ma328c1gv2bjkh6hcj3kq3hy7hd4aplcg14jdn3pqkfnlic85")))

(define-public crate-event-listener-2.1.0 (c (n "event-listener") (v "2.1.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0qj7rap7qfbghz64ydvr2ygqxzqiapb31rzfhlzb6mqq0fq09yky")))

(define-public crate-event-listener-2.2.0 (c (n "event-listener") (v "2.2.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0xi9pj6965adjy48m5c9y0vh3358vxvhysvy07db8whvby3q97b9")))

(define-public crate-event-listener-2.2.1 (c (n "event-listener") (v "2.2.1") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "040daf4qr87af5h9yvvcq16rzgyqm8jgckvww6pcdfyp3cvr95l2")))

(define-public crate-event-listener-2.3.0 (c (n "event-listener") (v "2.3.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0gcj33kzhdf6dwqaac4bv5bhkbs8afismvvap169n7acn31h13r9")))

(define-public crate-event-listener-2.3.1 (c (n "event-listener") (v "2.3.1") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "1x9j4b2mxzbkf19vc4r2sipjacfcp60pbzm00gjq6ybpjw6zlz2s")))

(define-public crate-event-listener-2.3.2 (c (n "event-listener") (v "2.3.2") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "06f7ypd0kp6ya320j31c24viag24yi6nv8fyrpkpr1jqyj1j2238")))

(define-public crate-event-listener-2.3.3 (c (n "event-listener") (v "2.3.3") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0yjwh1h0bcr3hhdp1dw4wdl2nivmjsx245lmhw51ac04krm6853z")))

(define-public crate-event-listener-2.4.0 (c (n "event-listener") (v "2.4.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "03nvvvq4fqh0hjnjv4d3jgy2m2dsx9ijyc22pm5p7r7719243kg1")))

(define-public crate-event-listener-2.5.0 (c (n "event-listener") (v "2.5.0") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0rb0fg1wvyjdzbq7w4i502vhkccgfwh3z0ksghh592kn9dax3rff")))

(define-public crate-event-listener-2.5.1 (c (n "event-listener") (v "2.5.1") (d (list (d (n "futures") (r "^0.3.5") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1.0.0") (d #t) (k 2)))) (h "0ndyp41pb2cx7gxijqh4ymnc47nyrvhvir7rvjlw6x09ayb10lzp")))

(define-public crate-event-listener-2.5.2 (c (n "event-listener") (v "2.5.2") (d (list (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)))) (h "0wgbyhw4piqrrln6s61y3sc06wd3liwzzz18hazji3wk2ya31wvp") (r "1.36")))

(define-public crate-event-listener-2.5.3 (c (n "event-listener") (v "2.5.3") (d (list (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)))) (h "1q4w3pndc518crld6zsqvvpy9lkzwahp2zgza9kbzmmqh9gif1h2") (r "1.36")))

(define-public crate-event-listener-3.0.0 (c (n "event-listener") (v "3.0.0") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "09d3vqhjk7qrqsa2739xyp0qhg32nhkp1iykgyyc350dy2265r99") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.59")))

(define-public crate-event-listener-3.0.1 (c (n "event-listener") (v "3.0.1") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^1.12.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "18dfvwglfwvn8ivvvqn8hhbsiyvrsh1yj03gxqlzgzra5hjw1kh1") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.59")))

(define-public crate-event-listener-3.1.0 (c (n "event-listener") (v "3.1.0") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "1hihkg6ihvb6p9yi7nq11di8mhd5y0iqv81ij6h0rf0fvsy7ff6r") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.59")))

(define-public crate-event-listener-4.0.0 (c (n "event-listener") (v "4.0.0") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "1bmsj83d3rsq5w4qgl04g83rl6gkay8ghnqzsq899ndm9619c3bp") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.59")))

(define-public crate-event-listener-4.0.1 (c (n "event-listener") (v "4.0.1") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "04k7qbi5kgs36s905gxijj41kcr78xs2s6cp6vbg50254z7wvwl4") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.61")))

(define-public crate-event-listener-4.0.2 (c (n "event-listener") (v "4.0.2") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "1mahwlc83wlrnb6s210kv0lkk65a06wndyz94j84dqfcf028g2i1") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.61")))

(define-public crate-event-listener-4.0.3 (c (n "event-listener") (v "4.0.3") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "0vk4smw1vf871vi76af1zn7w69jg3zmpjddpby2qq91bkg21bck7") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.60")))

(define-public crate-event-listener-5.0.0 (c (n "event-listener") (v "5.0.0") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "try-lock") (r "^0.2.5") (d #t) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "1h90kw1hy7yxn3rd992psh13gf9p9vr4ppa94jmbpyi40205f9dp") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.60")))

(define-public crate-event-listener-5.1.0 (c (n "event-listener") (v "5.1.0") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "try-lock") (r "^0.2.5") (d #t) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "09wb5krf6aaxjni4pzcz9jiafrv5vgv306jlv7baq4yfhpb6zbdp") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.60")))

(define-public crate-event-listener-5.2.0 (c (n "event-listener") (v "5.2.0") (d (list (d (n "concurrent-queue") (r "^2.2.0") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "try-lock") (r "^0.2.5") (d #t) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "14fcnjgpfl22645nhc3hzkdq3a1v0srqacc3kfassg7sjj8vhprb") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (r "1.60")))

(define-public crate-event-listener-5.3.0 (c (n "event-listener") (v "5.3.0") (d (list (d (n "concurrent-queue") (r "^2.4.0") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "loom") (r "^0.7") (o #t) (d #t) (t "cfg(loom)") (k 0)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.1.4") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "try-lock") (r "^0.2.5") (d #t) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "091a6bgxzjnycqa10l2sqwzzy0j9vpw7a1w0nbglqlqkraw496bd") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate") ("default" "std")))) (s 2) (e (quote (("loom" "concurrent-queue/loom" "parking?/loom" "dep:loom")))) (r "1.60")))

(define-public crate-event-listener-5.3.1 (c (n "event-listener") (v "5.3.1") (d (list (d (n "concurrent-queue") (r "^2.4.0") (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("cargo_bench_support"))) (k 2)) (d (n "futures-lite") (r "^2.0.0") (d #t) (k 2)) (d (n "loom") (r "^0.7") (o #t) (d #t) (t "cfg(loom)") (k 0)) (d (n "parking") (r "^2.0.0") (o #t) (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "pin-project-lite") (r "^0.2.12") (d #t) (k 0)) (d (n "portable-atomic-util") (r "^0.2.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "portable_atomic_crate") (r "^1.2.0") (o #t) (k 0) (p "portable-atomic")) (d (n "try-lock") (r "^0.2.5") (d #t) (k 2)) (d (n "waker-fn") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_family = \"wasm\")") (k 2)))) (h "1fkm6q4hjn61wl52xyqyyxai0x9w0ngrzi0wf1qsf8vhsadvwck0") (f (quote (("std" "concurrent-queue/std" "parking") ("portable-atomic" "portable-atomic-util" "portable_atomic_crate" "concurrent-queue/portable-atomic") ("default" "std")))) (s 2) (e (quote (("loom" "concurrent-queue/loom" "parking?/loom" "dep:loom")))) (r "1.60")))

