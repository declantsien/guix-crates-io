(define-module (crates-io ev en eventually-postgres) #:use-module (crates-io))

(define-public crate-eventually-postgres-0.1.0 (c (n "eventually-postgres") (v "0.1.0") (d (list (d (n "eventually") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)))) (h "0740s5l64qwldq9sbiwcd4d00d5fkk63zkn1pcq34ymjyj164fvl")))

(define-public crate-eventually-postgres-0.1.1 (c (n "eventually-postgres") (v "0.1.1") (d (list (d (n "eventually") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)))) (h "0vrdvhgcqm847iyzdp6jrh64iaxqfrjbajd218c66y1pg3ynqsdx")))

(define-public crate-eventually-postgres-0.1.2 (c (n "eventually-postgres") (v "0.1.2") (d (list (d (n "eventually") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)))) (h "0yq5v3jdd03q172vx1d3hg6q40hidvihzc5sm7p6p7a3pjpv1m0y")))

(define-public crate-eventually-postgres-0.2.0-alpha.1 (c (n "eventually-postgres") (v "0.2.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "eventually-core") (r "^0.4.0-alpha.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "refinery") (r "^0.3.0") (f (quote ("tokio-postgres"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "testcontainers") (r "^0.9") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "stream"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "macros"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)))) (h "09xf8glwd7bqcr1iyjbz4wax52ppmammnzfljp08kri8yhasjl5f")))

(define-public crate-eventually-postgres-0.2.0-alpha.2 (c (n "eventually-postgres") (v "0.2.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "eventually-core") (r "^0.4.0-alpha.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0-alpha.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "refinery") (r "^0.3.0") (f (quote ("tokio-postgres"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "testcontainers") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "stream"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "macros"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1p1bwzgrcbvz3l9iic0z34f107yipp0qhvm285hpzp49s1qjl8y0") (f (quote (("with-tracing" "tracing" "tracing-futures") ("full" "with-tracing") ("default")))) (y #t)))

(define-public crate-eventually-postgres-0.2.0-alpha.3 (c (n "eventually-postgres") (v "0.2.0-alpha.3") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "eventually-core") (r "^0.4.0-alpha.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0-alpha.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "refinery") (r "^0.3.0") (f (quote ("tokio-postgres"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "testcontainers") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "stream"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "macros"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)))) (h "008kwj8d0f5dinz20gwkra9q08dhal597w679axxkcbyw2lccpgd") (f (quote (("with-tracing" "tracing" "tracing-futures") ("full" "with-tracing") ("default"))))))

(define-public crate-eventually-postgres-0.2.0 (c (n "eventually-postgres") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "eventually-core") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "eventually-util") (r "^0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "refinery") (r "^0.3.0") (f (quote ("tokio-postgres"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "testcontainers") (r "^0.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "stream"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("sync" "macros"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.5") (f (quote ("with-serde_json-1"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (o #t) (d #t) (k 0)))) (h "1q9kc1y1m24n93pfynsqq1dnnj4cdx3z5i1hczsg98g14vs5yd1r") (f (quote (("with-tracing" "tracing" "tracing-futures") ("full" "with-tracing") ("default"))))))

