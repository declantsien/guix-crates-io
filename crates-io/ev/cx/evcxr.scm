(define-module (crates-io ev cx evcxr) #:use-module (crates-io))

(define-public crate-evcxr-0.1.0 (c (n "evcxr") (v "0.1.0") (d (list (d (n "backtrace") (r "^0.3.9") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "libloading") (r "^0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4.9") (k 0)) (d (n "rand") (r "^0.5.4") (d #t) (k 0)) (d (n "regex") (r "^1.0.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (k 0)) (d (n "syn") (r "^0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "^3.0.3") (d #t) (k 0)))) (h "1zivypbslsgwmcwf8lp63r2j45zabrrzhk7xfxw8brq12adiczzn")))

(define-public crate-evcxr-0.1.1 (c (n "evcxr") (v "0.1.1") (d (list (d (n "backtrace") (r "= 0.3.9") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.0.2") (d #t) (k 0)) (d (n "libc") (r "= 0.2.40") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.9") (k 0)) (d (n "rand") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "= 1.0.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (k 0)) (d (n "syn") (r "= 0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.3") (d #t) (k 0)))) (h "1asb04fmj34s15cv09910v8dzjdbz8d1hr9sj8dq4abijfsrnrai")))

(define-public crate-evcxr-0.1.2 (c (n "evcxr") (v "0.1.2") (d (list (d (n "backtrace") (r "= 0.3.9") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.0.2") (d #t) (k 0)) (d (n "libc") (r "= 0.2.40") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.9") (k 0)) (d (n "rand") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "= 1.0.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (k 0)) (d (n "syn") (r "= 0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.3") (d #t) (k 0)))) (h "0xk77rr2s8iamjgc1gsinwxnfpnhb7cpkxzwhzh12gil7ydslnjj")))

(define-public crate-evcxr-0.2.0 (c (n "evcxr") (v "0.2.0") (d (list (d (n "backtrace") (r "= 0.3.9") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.0.2") (d #t) (k 0)) (d (n "libc") (r "= 0.2.40") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.9") (k 0)) (d (n "rand") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "= 1.0.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (k 0)) (d (n "syn") (r "= 0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.3") (d #t) (k 0)))) (h "18avwd5r4whl34g7r0mj4s1rb1gbs9nwc03glfnlkg415zydivx6")))

(define-public crate-evcxr-0.3.0 (c (n "evcxr") (v "0.3.0") (d (list (d (n "backtrace") (r "= 0.3.9") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.0.2") (d #t) (k 0)) (d (n "libc") (r "= 0.2.40") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.9") (k 0)) (d (n "rand") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "= 1.0.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.3") (d #t) (k 0)))) (h "09m8yf5mmvdcldyv5z9xr49p7hhljq50zn7p8bcm12nb3cwsl0hc")))

(define-public crate-evcxr-0.3.1 (c (n "evcxr") (v "0.3.1") (d (list (d (n "backtrace") (r "= 0.3.9") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.0.2") (d #t) (k 0)) (d (n "libc") (r "= 0.2.40") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.9") (k 0)) (d (n "rand") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "= 1.0.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.3") (d #t) (k 0)))) (h "05k5796b67c2qz391gmww5h52kp2ab42gv0l25g93xs0bp0i6fk5")))

(define-public crate-evcxr-0.3.2 (c (n "evcxr") (v "0.3.2") (d (list (d (n "backtrace") (r "^0.3.13") (d #t) (k 0)) (d (n "failure") (r "= 0.1.1") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.9") (k 0)) (d (n "rand") (r "= 0.5.4") (d #t) (k 0)) (d (n "regex") (r "= 1.0.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.1") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.3") (d #t) (k 0)))) (h "18096abk1sy4c4dag2zas9cp56ply629cbk1gsar2ndr0m7nrl4g")))

(define-public crate-evcxr-0.3.3 (c (n "evcxr") (v "0.3.3") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "rand") (r "= 0.6.5") (d #t) (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "1299p5pvqpg5qjkrxrpf37l83i160r6nfypd978cjldjq486bdc3")))

(define-public crate-evcxr-0.3.4 (c (n "evcxr") (v "0.3.4") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "rand") (r "= 0.6.5") (d #t) (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "1qx1scqnbwb35jkid8y0b159i47g3913sw0kdxxggvcmp39y8x0l")))

(define-public crate-evcxr-0.3.5 (c (n "evcxr") (v "0.3.5") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "rand") (r "= 0.6.5") (d #t) (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "0j1gyil8d0fjqfkn7hlc3n37nfgkbwkln0r1k21adaccxzx1d9ah")))

(define-public crate-evcxr-0.4.0 (c (n "evcxr") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "07qgda5ki9s0y16zzb9y5x1bnslswlfd12nw9wxn7i88i2669094")))

(define-public crate-evcxr-0.4.1 (c (n "evcxr") (v "0.4.1") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "10s55g89am0d6y6vndyzrd2ryc8yfc9lkfynnmmd1k1nwcrycdg1")))

(define-public crate-evcxr-0.4.2 (c (n "evcxr") (v "0.4.2") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "0xj9chwj777z80bglm981r3rdjwaxd0ymfpn0qk0binvh0w8v84k")))

(define-public crate-evcxr-0.4.3 (c (n "evcxr") (v "0.4.3") (d (list (d (n "backtrace") (r "^0.3.14") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "= 0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "= 0.11.13") (d #t) (k 0)) (d (n "lazy_static") (r "= 1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.49") (d #t) (k 0)) (d (n "libloading") (r "= 0.5.0") (d #t) (k 0)) (d (n "proc-macro2") (r "= 0.4.27") (k 0)) (d (n "regex") (r "= 1.1.2") (d #t) (k 0)) (d (n "sig") (r "= 1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "= 0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "= 3.0.7") (d #t) (k 0)))) (h "1rc442x0cydwvq5iywdqp9y887xkhiyhpqwxrmvqwy27nzic2clb")))

(define-public crate-evcxr-0.4.4 (c (n "evcxr") (v "0.4.4") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4.27") (k 0)) (d (n "regex") (r "^1.2.1") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "^0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "0snc4ifn5ylnl2vw11fpz5r5nw9snhw05i6zq5rjyq0xgpvpcafv")))

(define-public crate-evcxr-0.4.5 (c (n "evcxr") (v "0.4.5") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4.27") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "^0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1b9q7japb4338dx41qpb7n4wa3hsyf1nawrv6k0aqi5lf2g0l463")))

(define-public crate-evcxr-0.4.6 (c (n "evcxr") (v "0.4.6") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4.27") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "^0.15.27") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1n5a135yrcxgv2gmkh4ggj0dvxv9pzpn1j291cavrv8aqw185hgn")))

(define-public crate-evcxr-0.4.7 (c (n "evcxr") (v "0.4.7") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.6") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "^1.0.11") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits" "visit"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1cs87yp3igkd65k880nlm5gb3qicy637av31dyxjpw3jjvcfvql6")))

(define-public crate-evcxr-0.5.0 (c (n "evcxr") (v "0.5.0") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.6") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "^1.0.11") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits" "visit"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1q9lvnzd3gg8awwlmfdbcx0apm8679w9ccbhg6k3gwky5va60k6q")))

(define-public crate-evcxr-0.5.1 (c (n "evcxr") (v "0.5.1") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.6") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(unix)") (k 0)) (d (n "syn") (r "^1.0.11") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits" "visit"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "14ipf04phl7f8jyhicsb1lmbmwl4vy069jrlc7y778ky7q7ylmr5")))

(define-public crate-evcxr-0.5.2 (c (n "evcxr") (v "0.5.2") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.6") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "syn") (r "^1.0.11") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits" "visit"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1v3rplx34i5b3yy4kgmr8mv8wh26kdqkll07bhss8nnvb7zqq12f")))

(define-public crate-evcxr-0.5.3 (c (n "evcxr") (v "0.5.3") (d (list (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^2.0.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (f (quote ("std"))) (k 0)) (d (n "json") (r "^0.11.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.6") (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "syn") (r "^1.0.11") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits" "visit"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^2.0.1") (d #t) (k 0)))) (h "1119q5dvf6zqmipaskrvnzbs37gy3jp1h1b52qiiqyymmvxnmdv9")))

(define-public crate-evcxr-0.6.0 (c (n "evcxr") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.24") (k 0)) (d (n "ra_ap_base_db") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.22") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.22") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "syn") (r "^1.0.48") (f (quote ("parsing" "full" "printing" "clone-impls" "extra-traits" "visit"))) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "1awfw4gnfx3pp64fl5ypjxg49whxhpms2gzsprx5dwlm2ws4ay7g")))

(define-public crate-evcxr-0.7.0 (c (n "evcxr") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.30") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "17svvhvvx06bz3dxg5g8f6hs63yr9xppj01p7xla2q21gwmih2qk")))

(define-public crate-evcxr-0.8.0 (c (n "evcxr") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.30") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.30") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "05rlvy0nvgjxvgh7di9qwglrxgf174hbf27zaqkn4bn9hz7sh721")))

(define-public crate-evcxr-0.8.1 (c (n "evcxr") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.37") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.37") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "08fiy2hmgvmrnnsf5mgbn7vv2q7fq00vhhm867pbwa1w4k4lq8pn")))

(define-public crate-evcxr-0.9.0 (c (n "evcxr") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.45") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.45") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "rowan") (r "=0.13.0-pre.3") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "1zjjqzlsl4lg2m7p3f7q7scjz7qvn6z58n486rxp6v7p769flzjv")))

(define-public crate-evcxr-0.10.0 (c (n "evcxr") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.57") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.57") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "12rxryp06sbj7sfghfvglwgn599aj9w48dp6a59yl5869cai98zc")))

(define-public crate-evcxr-0.11.0 (c (n "evcxr") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.66") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.66") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "14vmqdy453pwxf41sw7ljxvbfpsh724fliz76xk41jinzp2447wh")))

(define-public crate-evcxr-0.12.0 (c (n "evcxr") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^3.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.76") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.76") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.1") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "1yidgifr0djjc8k4vbj0iyg0czpivnzhxmxpksf0bag27xn88hjb")))

(define-public crate-evcxr-0.13.0 (c (n "evcxr") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.120") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.120") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "1kkz15qy3i9hiycl67pndabs37v2lxkbj8l8mjs9imjfz45y5i3g") (r "1.59")))

(define-public crate-evcxr-0.14.0 (c (n "evcxr") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.129") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.129") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "1dybjxwyilymg8ilc08i53q0lya4vqla52jhlkfxj094swh1vylj") (r "1.63")))

(define-public crate-evcxr-0.14.1 (c (n "evcxr") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.136") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.136") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "1j8diqqsxch50kvm1vzf137y3bghmd45snlhihps9nwig5vj1k76") (r "1.63")))

(define-public crate-evcxr-0.14.2 (c (n "evcxr") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.1.5") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_hir") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_ide") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_paths") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "=0.0.145") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "=0.0.145") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)))) (h "0hwp9agxxs7cbg3m0mapxiryn1bvgw5mgxbgvpm8iyfcabhm12pq") (r "1.65")))

(define-public crate-evcxr-0.15.0 (c (n "evcxr") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.2.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_hir") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_ide") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_paths") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "^0.0.159") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (f (quote ("parse"))) (k 0)) (d (n "triomphe") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 1)))) (h "0l4xi9gym0djycikr2lfqkwsbcl0bmg24gf989msrvdqqj6s59bc") (r "1.67")))

(define-public crate-evcxr-0.15.1 (c (n "evcxr") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.2.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "ra_ap_base_db") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_hir") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_ide") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_paths") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "^0.0.159") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "^0.0.159") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "toml") (r "^0.7.3") (f (quote ("parse"))) (k 0)) (d (n "triomphe") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 1)))) (h "1vinxz1ag4imihr29mg38834yh1wcv1j7qjgjmwcmgz8y4qzld0h") (r "1.67")))

(define-public crate-evcxr-0.16.0 (c (n "evcxr") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (f (quote ("simd"))) (k 0)) (d (n "ra_ap_base_db") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_hir") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_ide") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_paths") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "^0.0.181") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "^0.0.181") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "salsa") (r "=0.17.0-pre.2") (d #t) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.0") (f (quote ("parse"))) (k 0)) (d (n "triomphe") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 0)) (d (n "which") (r "^4.0.2") (d #t) (k 1)))) (h "058pdznrlcs53c7d5srd3lr1fr34azwp9y405spz5jf28ynckvyy") (r "1.70")))

(define-public crate-evcxr-0.17.0 (c (n "evcxr") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0.33") (d #t) (k 0)) (d (n "ariadne") (r "^0.3.0") (d #t) (k 0)) (d (n "backtrace") (r "^0.3.35") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "crossbeam-channel") (r "^0.5.5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "evcxr_input") (r "^1.0.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.13") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "json") (r "^0.12.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.80") (d #t) (k 0)) (d (n "libloading") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.5.2") (d #t) (k 0)) (d (n "pulldown-cmark") (r "^0.9.3") (f (quote ("simd"))) (k 0)) (d (n "ra_ap_base_db") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_hir") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_ide") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_ide_db") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_paths") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_project_model") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_syntax") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_vfs") (r "^0.0.189") (d #t) (k 0)) (d (n "ra_ap_vfs-notify") (r "^0.0.189") (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "sig") (r "^1.0.0") (d #t) (t "cfg(all(unix, not(target_os = \"freebsd\")))") (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "toml") (r "^0.8.0") (f (quote ("parse"))) (k 0)) (d (n "triomphe") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7.1") (d #t) (k 0)) (d (n "which") (r "^5.0.0") (d #t) (k 0)) (d (n "which") (r "^5.0.0") (d #t) (k 1)))) (h "1w4w4j9a8rmqxw33w41cmbm3a5xca0hkbddclhpaz6ir3xs99jgq") (r "1.74")))

