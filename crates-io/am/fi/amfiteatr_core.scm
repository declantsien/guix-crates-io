(define-module (crates-io am fi amfiteatr_core) #:use-module (crates-io))

(define-public crate-amfiteatr_core-0.1.0 (c (n "amfiteatr_core") (v "0.1.0") (d (list (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "1bcwwr17brcyji71jz2zr7pqmm5hx7y8mqx9gmhw01wj62j4bdm0") (f (quote (("demo")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde"))))))

(define-public crate-amfiteatr_core-0.2.0 (c (n "amfiteatr_core") (v "0.2.0") (d (list (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0zglhbcm97xjrd1sg7f6a1f4xz0pbkhk15cx2qfvfgb3qmj0jimi") (f (quote (("demo")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde"))))))

(define-public crate-amfiteatr_core-0.2.1 (c (n "amfiteatr_core") (v "0.2.1") (d (list (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "0w8w4imr8lmhr2g4349lwfa3bpf5xig2adg5l9zm916a3vplfd69") (f (quote (("demo")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde"))))))

(define-public crate-amfiteatr_core-0.3.0 (c (n "amfiteatr_core") (v "0.3.0") (d (list (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)))) (h "1627avnvgki33synvx0ax866b94wmzpqic3gi8gksh4g029q65vi") (f (quote (("demo")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde"))))))

(define-public crate-amfiteatr_core-0.4.0 (c (n "amfiteatr_core") (v "0.4.0") (d (list (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "1aickyg5svfwny3lshfia16iszbnh68gf5xm2gi0i7krrr0qyhi5") (f (quote (("log_warn" "log_error") ("log_trace" "log_debug") ("log_info" "log_warn") ("log_debug" "log_info") ("demo")))) (y #t) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("log_error" "dep:log"))))))

(define-public crate-amfiteatr_core-0.4.1 (c (n "amfiteatr_core") (v "0.4.1") (d (list (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "0kdp0slw8c90i820a13fvsk6a58jx83gndyrsvx5vcwxf9lv9gi3") (f (quote (("log_warn" "log_error") ("log_trace" "log_debug") ("log_info" "log_warn") ("log_debug" "log_info") ("demo")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("log_error" "dep:log"))))))

(define-public crate-amfiteatr_core-0.5.0 (c (n "amfiteatr_core") (v "0.5.0") (d (list (d (n "log") (r "^0.4.21") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ron") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "speedy") (r "^0.8.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)))) (h "0ym9ldgs6zsmpkqqz2dj91sw6fzzgc4kn2n5shbazp2y1x5qrppp") (f (quote (("log_warn" "log_error") ("log_trace" "log_debug") ("log_info" "log_warn") ("log_debug" "log_info") ("demo")))) (s 2) (e (quote (("speedy" "dep:speedy") ("serde" "dep:serde") ("log_error" "dep:log"))))))

