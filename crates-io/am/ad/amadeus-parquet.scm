(define-module (crates-io am ad amadeus-parquet) #:use-module (crates-io))

(define-public crate-amadeus-parquet-0.1.1 (c (n "amadeus-parquet") (v "0.1.1") (d (list (d (n "amadeus-core") (r "^0.1") (d #t) (k 0)) (d (n "amadeus-types") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.6.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.12.0") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "04dfj36f508hdgc0zsqgg02636wdxb357mwhpk71wyghdyvak8wh")))

(define-public crate-amadeus-parquet-0.1.2 (c (n "amadeus-parquet") (v "0.1.2") (d (list (d (n "amadeus-core") (r "= 0.1.2") (d #t) (k 0)) (d (n "amadeus-types") (r "= 0.1.2") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.6.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.12.0") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1hzq7m4v518mjnb4xgqcfmkn8r0wh6psadmhq7d5w990ird2xwqv")))

(define-public crate-amadeus-parquet-0.1.3 (c (n "amadeus-parquet") (v "0.1.3") (d (list (d (n "amadeus-core") (r "= 0.1.3") (d #t) (k 0)) (d (n "amadeus-types") (r "= 0.1.3") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.6.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.12.0") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "10f6qc4j8qrlx6hff9096bb028gj787ksdi366r9l7qg225fvrkl") (f (quote (("doc"))))))

(define-public crate-amadeus-parquet-0.1.4 (c (n "amadeus-parquet") (v "0.1.4") (d (list (d (n "amadeus-core") (r "= 0.1.4") (d #t) (k 0)) (d (n "amadeus-types") (r "= 0.1.4") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0ra7bvlif6xavpxxsx9b2x82jravxi5wdf3ajhc554jcz1gml16j") (f (quote (("doc"))))))

(define-public crate-amadeus-parquet-0.1.5 (c (n "amadeus-parquet") (v "0.1.5") (d (list (d (n "amadeus-core") (r "= 0.1.5") (d #t) (k 0)) (d (n "amadeus-types") (r "= 0.1.5") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1z9cjwlph2lh1vq3hwyd2bj5nq4grj6jv5qzgsw27d6czqjs92nn") (f (quote (("doc"))))))

(define-public crate-amadeus-parquet-0.1.6 (c (n "amadeus-parquet") (v "0.1.6") (d (list (d (n "amadeus-core") (r "= 0.1.6") (d #t) (k 0)) (d (n "amadeus-types") (r "= 0.1.6") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "08v9x5ffvgb3ywsqfgkn5vm6r5jivs0v1k0hra6x3h19h23jwdy9") (f (quote (("doc"))))))

(define-public crate-amadeus-parquet-0.1.7 (c (n "amadeus-parquet") (v "0.1.7") (d (list (d (n "amadeus-core") (r "= 0.1.7") (d #t) (k 0)) (d (n "amadeus-types") (r "= 0.1.7") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0gnh51awzxvbhg5zxhvbiw4np0809ffcynrfg9r8d3m1pxhbh86r") (f (quote (("doc"))))))

(define-public crate-amadeus-parquet-0.2.0 (c (n "amadeus-parquet") (v "0.2.0") (d (list (d (n "amadeus-core") (r "=0.2.0") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0lpizlad5m1v6ia0rv69msdib27yjfrb9p8idzbn9varnpkkrqy6") (f (quote (("doc" "amadeus-core/doc"))))))

(define-public crate-amadeus-parquet-0.2.1 (c (n "amadeus-parquet") (v "0.2.1") (d (list (d (n "amadeus-core") (r "=0.2.1") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1q5f1hli4mw69nzq2xas5rr1z38dddms9vvlpf40m2ycd18iibl0") (f (quote (("doc" "amadeus-core/doc"))))))

(define-public crate-amadeus-parquet-0.2.2 (c (n "amadeus-parquet") (v "0.2.2") (d (list (d (n "amadeus-core") (r "=0.2.2") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.2.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0nchr2qjic45vzcm4vhqgx62wsky9ikxxibg35lzwwf6hggamvcs")))

(define-public crate-amadeus-parquet-0.2.3 (c (n "amadeus-parquet") (v "0.2.3") (d (list (d (n "amadeus-core") (r "=0.2.3") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.2.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0m3h38dpgg00qblra6i17k861cs2jl5c77c65vkzmvgfc9a2idkr")))

(define-public crate-amadeus-parquet-0.2.4 (c (n "amadeus-parquet") (v "0.2.4") (d (list (d (n "amadeus-core") (r "=0.2.4") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.2.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0y6r0vfcf3ypj3g78igpjnhfgylqv0qbmba8d5hx6yi3b3lzs44a")))

(define-public crate-amadeus-parquet-0.2.5 (c (n "amadeus-parquet") (v "0.2.5") (d (list (d (n "amadeus-core") (r "=0.2.5") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.2.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1h2g0df53yjkrpgc307h9cp6rmzjx9nmdnqpfzcd6x1xq1b60asl")))

(define-public crate-amadeus-parquet-0.3.0 (c (n "amadeus-parquet") (v "0.3.0") (d (list (d (n "amadeus-core") (r "=0.3.0") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1s7qapjmv55chl08f1hpbivpq0yn853kv2lb08pcz38qx9p1k437")))

(define-public crate-amadeus-parquet-0.3.1 (c (n "amadeus-parquet") (v "0.3.1") (d (list (d (n "amadeus-core") (r "=0.3.1") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1ziihgpc9n08jaizvlqm65zm9ci9xq1kk4r71kx3a8ns5g8s53rx")))

(define-public crate-amadeus-parquet-0.3.2 (c (n "amadeus-parquet") (v "0.3.2") (d (list (d (n "amadeus-core") (r "=0.3.2") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "082kv0yd5qkzvgjy7458656rxfvsx6haf77230rci849s188bfql")))

(define-public crate-amadeus-parquet-0.3.3 (c (n "amadeus-parquet") (v "0.3.3") (d (list (d (n "amadeus-core") (r "=0.3.3") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1vkznbz57d7cp2fp8x8flzby60dfid5h85wmyklxf8712hc3xgla")))

(define-public crate-amadeus-parquet-0.3.4 (c (n "amadeus-parquet") (v "0.3.4") (d (list (d (n "amadeus-core") (r "=0.3.4") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "07s6l96mjawkvhs0r87hmcl2sx38cyslcjaz155rh63adz35lmm2")))

(define-public crate-amadeus-parquet-0.3.5 (c (n "amadeus-parquet") (v "0.3.5") (d (list (d (n "amadeus-core") (r "=0.3.5") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "1qdn7diivq1461p5gj25rm4ybvzf7awfpl2qm0yqbarpyd0zcra9")))

(define-public crate-amadeus-parquet-0.3.6 (c (n "amadeus-parquet") (v "0.3.6") (d (list (d (n "amadeus-core") (r "=0.3.6") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "1bnvkr0ngkc3kyz3k2crq0i8rznrrwwa9nq850v4g0vw78352gbc")))

(define-public crate-amadeus-parquet-0.3.7 (c (n "amadeus-parquet") (v "0.3.7") (d (list (d (n "amadeus-core") (r "=0.3.7") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.3.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "0wpwr0qrwcxwjihzk3k6886zlfr98zp7wyfixh2383xibvrm67fr")))

(define-public crate-amadeus-parquet-0.4.0 (c (n "amadeus-parquet") (v "0.4.0") (d (list (d (n "amadeus-core") (r "=0.4.0") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.4.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1") (d #t) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "1x3nqg1l42rwcfinb21dqqdah7gkpwgzbs2lyq17qav4vd68zirs")))

(define-public crate-amadeus-parquet-0.4.1 (c (n "amadeus-parquet") (v "0.4.1") (d (list (d (n "amadeus-core") (r "=0.4.1") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.4.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1.7") (f (quote ("2" "3"))) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "11hpmg42r07insay0i522dh401m60x7q3vl5vhb2r97rgms0yfay")))

(define-public crate-amadeus-parquet-0.4.2 (c (n "amadeus-parquet") (v "0.4.2") (d (list (d (n "amadeus-core") (r "=0.4.2") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.4.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "hashlink") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1.7") (f (quote ("2" "3"))) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "0drx7kkjcjz79i9pxldzkh22nd0sisji7al5cjsw33x84jd80gbr")))

(define-public crate-amadeus-parquet-0.4.3 (c (n "amadeus-parquet") (v "0.4.3") (d (list (d (n "amadeus-core") (r "=0.4.3") (d #t) (k 0)) (d (n "amadeus-types") (r "=0.4.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (f (quote ("rust_backend"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "hashlink") (r "^0.5") (d #t) (k 0)) (d (n "lz-fear") (r "^0.1") (d #t) (k 0)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rustversion") (r "^1.0") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "sum") (r "^0.1.7") (f (quote ("2" "3"))) (k 0)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (f (quote ("wasm"))) (d #t) (k 0)))) (h "1c20y0lz8dn6sfmnvki1p3mh2051y3wwywjzc09s2is2ic43gr1g")))

