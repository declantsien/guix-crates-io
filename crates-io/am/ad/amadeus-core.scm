(define-module (crates-io am ad amadeus-core) #:use-module (crates-io))

(define-public crate-amadeus-core-0.1.1 (c (n "amadeus-core") (v "0.1.1") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.1") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "0vp0jm3siy2hsczm13fa5mwiwk7lp4ll2yk28qirfs36jlxi2x1n")))

(define-public crate-amadeus-core-0.1.2 (c (n "amadeus-core") (v "0.1.2") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.1") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "1ngb8l0r989vfj6yzmwfgwaw1sm8zlfzfxakvzfk0xcs933vzzkb")))

(define-public crate-amadeus-core-0.1.3 (c (n "amadeus-core") (v "0.1.3") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "1l2n1zj9c1kgrdbqq28748p9ci5yvqwam5ihn4pbqmhm8z82anvy")))

(define-public crate-amadeus-core-0.1.4 (c (n "amadeus-core") (v "0.1.4") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures-preview") (r "= 0.3.0-alpha.19") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "1x07v2igwws6w2bph3ir13ii4jj3znjhy3h80yfyfkscdp5bdpnr")))

(define-public crate-amadeus-core-0.1.5 (c (n "amadeus-core") (v "0.1.5") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "14mhfiprd1naqlsz9j1411wqnm4nc7xmvd74xb1y0laizdrlvbyi")))

(define-public crate-amadeus-core-0.1.6 (c (n "amadeus-core") (v "0.1.6") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "05598yi7w2zhhhwd4y7b7km82qxhjx7fp2sa2wl2kyxjfvf3q4f7")))

(define-public crate-amadeus-core-0.1.7 (c (n "amadeus-core") (v "0.1.7") (d (list (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "1zcgf1i15m7xsn5iab2mkz3y0drb5d77xwccjpx37fwfrfqcl80j")))

(define-public crate-amadeus-core-0.2.0 (c (n "amadeus-core") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.1") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)))) (h "0wg23qh85bgx9dlin2ib8v79nymnyncyis1yayyg9ifij6z9w796") (f (quote (("doc"))))))

(define-public crate-amadeus-core-0.2.1 (c (n "amadeus-core") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "06lhqka6yczkx9fk2fnpclklhlvqd1ka00779yjdmhaim98wbgkc") (f (quote (("doc"))))))

(define-public crate-amadeus-core-0.2.2 (c (n "amadeus-core") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "12k77i61wkfx0134bzrdd10qczgbw3l6hwj4js1y2242i8w7l078")))

(define-public crate-amadeus-core-0.2.3 (c (n "amadeus-core") (v "0.2.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "05kj7sp821xy8hv8xq6acb0hd9fw13d091d1szskf4higx7mls4s")))

(define-public crate-amadeus-core-0.2.4 (c (n "amadeus-core") (v "0.2.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "14jwmw7i9mssivwf0dxaqbl07h9gi7k65c2q3jhsbbssb0a77ij5")))

(define-public crate-amadeus-core-0.2.5 (c (n "amadeus-core") (v "0.2.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "08bpa5ff13sf633qbddcffdj29ja8zk3c9n7d0adnwi2l2xa2x9y")))

(define-public crate-amadeus-core-0.3.0 (c (n "amadeus-core") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "0pigcbqxg8ibls3ngbp43s8dqjzmdjd5jy61kps31n0cmk8kz4j8")))

(define-public crate-amadeus-core-0.3.1 (c (n "amadeus-core") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.2") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.2") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "0s8v041sh7w48rf1psb2ncv8455w0gbd43h5l3ah10xk757hnbqq")))

(define-public crate-amadeus-core-0.3.2 (c (n "amadeus-core") (v "0.3.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "0lrzc93gc2962i3llagqkg5s6vlhhd7b9jia0crxfq5397fiyc5j")))

(define-public crate-amadeus-core-0.3.3 (c (n "amadeus-core") (v "0.3.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "03jfhjb3qdggnn8h3k9zavrfiksxfs3bv3vjifhg4hjs5bc1sfrn")))

(define-public crate-amadeus-core-0.3.4 (c (n "amadeus-core") (v "0.3.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "0cyn3r6mm06vl96ladhqmk5jr5812zxmkh0ap5izpa5bl0m37m7k")))

(define-public crate-amadeus-core-0.3.5 (c (n "amadeus-core") (v "0.3.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "0z2mx0nzkwj6mf80jzchwcapjglv1x91cxk5zchabfhafz82731f")))

(define-public crate-amadeus-core-0.3.6 (c (n "amadeus-core") (v "0.3.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "13s2sb5v074m1fimaz3lazbzdad2xq33jaijijxgx8gymx1j3sjr")))

(define-public crate-amadeus-core-0.3.7 (c (n "amadeus-core") (v "0.3.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "streaming_algorithms") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "1gnggydcim3q5k8v9wf5dfymap3bk0p5jh5z03k5q4rx66p239cl")))

(define-public crate-amadeus-core-0.4.0 (c (n "amadeus-core") (v "0.4.0") (d (list (d (n "amadeus-streaming") (r "=0.4.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "multimap") (r "^0.8") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1") (f (quote ("futures" "serde"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "14gnk0rdja9341x3dy06fshgacsvfcyrvmqc4ys6502i7w14smxv")))

(define-public crate-amadeus-core-0.4.1 (c (n "amadeus-core") (v "0.4.1") (d (list (d (n "amadeus-streaming") (r "=0.4.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "multimap") (r "^0.8") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1.7") (f (quote ("futures" "serde" "0" "1" "2" "3" "4" "5" "6" "7" "8"))) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "012hjl0h6638cdv85yq50336xp7kwsbzb36lif7rxq7k6kakpn7q")))

(define-public crate-amadeus-core-0.4.2 (c (n "amadeus-core") (v "0.4.2") (d (list (d (n "amadeus-streaming") (r "=0.4.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "multimap") (r "^0.8") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1.7") (f (quote ("futures" "serde" "0" "1" "2" "3" "4" "5" "6" "7" "8"))) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "1fyrkd41jcp0liivajjmsbn3khh24imc4ibhh364q65a6sfc5i67")))

(define-public crate-amadeus-core-0.4.3 (c (n "amadeus-core") (v "0.4.3") (d (list (d (n "amadeus-streaming") (r "=0.4.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "educe") (r "^0.4") (d #t) (k 0)) (d (n "either") (r "^1.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.5") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "multimap") (r "^0.8") (d #t) (k 0)) (d (n "owned_chars") (r "^0.3") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "rustversion") (r "^1.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_closure") (r "^0.3") (d #t) (k 0)) (d (n "sum") (r "^0.1.7") (f (quote ("futures" "serde" "0" "1" "2" "3" "4" "5" "6" "7" "8"))) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("blocking" "rt-core"))) (d #t) (k 0)) (d (n "walkdir") (r "^2.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Blob" "Response" "Window"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "widestring") (r "^0.4") (d #t) (k 0)))) (h "0ylwvb9cg9cyqwllg63ljfx5mjpcx0305cnr2y76sjqnziqpnnc6")))

