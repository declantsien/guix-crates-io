(define-module (crates-io am ms amms) #:use-module (crates-io))

(define-public crate-amms-0.1.0 (c (n "amms") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "ethers") (r "^2.0.4") (f (quote ("abigen" "ws" "ipc" "rustls"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.24") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (d #t) (k 0)) (d (n "num-bigfloat") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "spinoff") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uniswap_v3_math") (r "^0.4.0") (d #t) (k 0)))) (h "1s5fik35nvy6mkklbigv0xi2805jckkaqackns8yimjv6j5r25yx")))

(define-public crate-amms-0.6.0 (c (n "amms") (v "0.6.0") (d (list (d (n "arraydeque") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "ethers") (r "^2.0.8") (f (quote ("abigen" "ws" "ipc" "rustls"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigfloat") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.176") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "spinoff") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uniswap_v3_math") (r "^0.4.0") (d #t) (k 0)))) (h "168laxcxkdhq6cipj937qzp1vn2rg8x15mvwylj0zfp99hm7lh0h") (f (quote (("state-space" "arraydeque") ("filters") ("default" "filters" "state-space"))))))

(define-public crate-amms-0.6.1 (c (n "amms") (v "0.6.1") (d (list (d (n "arraydeque") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.72") (d #t) (k 0)) (d (n "ethers") (r "^2.0.8") (f (quote ("abigen" "ws" "ipc" "rustls"))) (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-bigfloat") (r "^1.6.2") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.176") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "spinoff") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uniswap_v3_math") (r "^0.4.0") (d #t) (k 0)))) (h "0zmdl36frcjzq622rpxpq8lqqaj00dj6ga0nv04fmjww1s2p65v0") (f (quote (("state-space" "arraydeque") ("filters") ("default" "filters" "state-space"))))))

