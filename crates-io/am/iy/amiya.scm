(define-module (crates-io am iy amiya) #:use-module (crates-io))

(define-public crate-amiya-0.0.1 (c (n "amiya") (v "0.0.1") (d (list (d (n "async-h1") (r "^2") (d #t) (k 0)) (d (n "async-net") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blocking") (r "^0.4") (d #t) (k 2)) (d (n "http-types") (r "^2") (k 0)) (d (n "multitask") (r "^0.2") (d #t) (k 2)) (d (n "num_cpus") (r "^1") (d #t) (k 2)) (d (n "parking") (r "^1") (d #t) (k 2)) (d (n "smol") (r "^0.2") (d #t) (k 0)))) (h "02051va1rhfm0324yzvcb4dy7nmi8rhdn6s8l61nch2690dakfbl")))

(define-public crate-amiya-0.0.2 (c (n "amiya") (v "0.0.2") (d (list (d (n "async-h1") (r "^2") (d #t) (k 0)) (d (n "async-net") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http-types") (r "^2") (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smol") (r "^0.3") (d #t) (k 0)))) (h "1482mjwvy4qmyxi3brgjsgq43pn5wbac7ahbm4vbb5kac0rgljda")))

(define-public crate-amiya-0.0.3 (c (n "amiya") (v "0.0.3") (d (list (d (n "async-h1") (r "^2") (d #t) (k 0)) (d (n "async-net") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http-types") (r "^2") (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smol") (r "^0.3") (d #t) (k 0)))) (h "0dpjh81vz2100zcwj8wlbpqwn84ypp1lwwal49gm467wxc45vd2f")))

(define-public crate-amiya-0.0.4 (c (n "amiya") (v "0.0.4") (d (list (d (n "async-h1") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http-types") (r "^2") (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 0)))) (h "112h7ykn6jlj8p90z9im6sxgcf313qw3shgzznmyfqhfqa0ydc84")))

(define-public crate-amiya-0.0.5 (c (n "amiya") (v "0.0.5") (d (list (d (n "async-h1") (r "^2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "http-types") (r "^2") (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 0)))) (h "162v8ly8bb37mk8w37n5c20m4c86523ydc9xbvj8fgxhcnz0cyba")))

(define-public crate-amiya-0.0.6 (c (n "amiya") (v "0.0.6") (d (list (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-executor") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-h1") (r "^2") (d #t) (k 0)) (d (n "async-io") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-net") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures-lite") (r "^1") (d #t) (k 0)) (d (n "http-types") (r "^2") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (k 2)))) (h "03jkamwqi3snsp28pdvr1q6blbf3g8cdprz7i1d506qw8wc14yav") (f (quote (("default" "built-in-executor") ("built-in-executor" "async-executor" "async-io" "once_cell" "num_cpus"))))))

