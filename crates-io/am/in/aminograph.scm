(define-module (crates-io am in aminograph) #:use-module (crates-io))

(define-public crate-aminograph-0.0.1 (c (n "aminograph") (v "0.0.1") (d (list (d (n "argmin") (r "^0.5.0") (d #t) (k 0)) (d (n "array_ext") (r "^0.3.0") (d #t) (k 0)) (d (n "color-eyre") (r "^0.5.10") (d #t) (k 0)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "either") (r "^1.6.1") (d #t) (k 0)) (d (n "fixed") (r "^1.11.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "nalgebra") (r "^0.30.1") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "newick-rs") (r "^0.2.0") (d #t) (k 2)) (d (n "noisy_float") (r "^0.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 0)) (d (n "pbr") (r "^1.0.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "reformation") (r "^0.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 2)) (d (n "seq_io") (r "^0.3.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.5.2") (d #t) (k 0)) (d (n "statrs") (r "^0.15.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "time") (r "^0.3.3") (d #t) (k 0)) (d (n "triomphe") (r "^0.1.5") (d #t) (k 0)))) (h "1pxbbg1mwl8qv69i2zvgm3f79pqll1vwdwsjbbgv9h8qm3irc91j")))

