(define-module (crates-io am q- amq-protocol-tcp) #:use-module (crates-io))

(define-public crate-amq-protocol-tcp-2.0.0-rc10 (c (n "amq-protocol-tcp") (v "2.0.0-rc10") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc10") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.1") (k 0)) (d (n "trust-dns-resolver") (r "^0.11") (d #t) (k 0)))) (h "0pjp821810vihqnl2g34b1jq09xysh582973z0851bk21x8dnfly") (f (quote (("tokio" "tcp-stream/tokio" "trust-dns-resolver/tokio") ("native-tls" "tcp-stream/native-tls" "trust-dns-resolver/dns-over-native-tls") ("default" "amqps") ("amqps" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc11 (c (n "amq-protocol-tcp") (v "2.0.0-rc11") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc11") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.2") (k 0)))) (h "0v2yfrihbwqn9ns9aasbc7h873sbfb3bd029aayahj8bgqhqzcd5") (f (quote (("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "amqps") ("amqps" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc12 (c (n "amq-protocol-tcp") (v "2.0.0-rc12") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc12") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.2") (k 0)))) (h "12sfbg2xv28n7scwlay09hhdxnibn2srlnbawmmnsyl6bzdxrlxz") (f (quote (("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "amqps") ("amqps" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc13 (c (n "amq-protocol-tcp") (v "2.0.0-rc13") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc13") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.2") (k 0)))) (h "1ca8vja5s475gz6id0q72nncvpl4q99df2sy2w1rrwiqskxqixs7") (f (quote (("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "amqps") ("amqps" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc14 (c (n "amq-protocol-tcp") (v "2.0.0-rc14") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.2") (k 0)))) (h "0849kbr34zliyas472x1dqra9ns7flj7llayl48yscihib77zim3") (f (quote (("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc15 (c (n "amq-protocol-tcp") (v "2.0.0-rc15") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc15") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.2") (k 0)))) (h "06xcaxjdb322hk3j8d595milmywggbp2an8l7f7n06wbhrqf2cqz") (f (quote (("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc16 (c (n "amq-protocol-tcp") (v "2.0.0-rc16") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc16") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.2") (k 0)))) (h "0h0hkpsnpyyjmmpffm04sbn81ys5qxqmm2dax67y2a2ll39j0dyc") (f (quote (("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc17 (c (n "amq-protocol-tcp") (v "2.0.0-rc17") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc17") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.4") (k 0)))) (h "11lg38hx4v8mfdg8ihkzl6wd0mrqpp7zk29q0j4nzshg8f4gm1ha") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0-rc18 (c (n "amq-protocol-tcp") (v "2.0.0-rc18") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0-rc18") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.4") (k 0)))) (h "09qjp32p4mqrwdmp715gwz73c0sbvlrx6ljc7ydg6vhf171ig3bp") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.0 (c (n "amq-protocol-tcp") (v "2.0.0") (d (list (d (n "amq-protocol-uri") (r "= 2.0.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.4") (k 0)))) (h "048j96rb0qqbxv0wbc08gp20j232mnn39nl6vj9s8r3l46i4nd5l") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.0.2 (c (n "amq-protocol-tcp") (v "2.0.2") (d (list (d (n "amq-protocol-uri") (r "^2.0.2") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.4") (k 0)))) (h "0vc128zgyx6735apm1m5ad1k5i4nk559zd6k3gpazg2wnvyz9jkp") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.1.0 (c (n "amq-protocol-tcp") (v "2.1.0") (d (list (d (n "amq-protocol-uri") (r "^2.1.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.4") (k 0)))) (h "113b6qvcncray0qhmjqv74yhshi90h2a1sxmml0dgrzxcpijyjsw") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.1.1 (c (n "amq-protocol-tcp") (v "2.1.1") (d (list (d (n "amq-protocol-uri") (r "^2.1.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.4.1") (k 0)))) (h "10p1dnh3mzg9qb3k0vg4li5gnk2x6bp8pbacdnvcniv7xxxj5v9k") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.2.0 (c (n "amq-protocol-tcp") (v "2.2.0") (d (list (d (n "amq-protocol-uri") (r "^2.2.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.5") (k 0)))) (h "1iz63lynwlzwa5w61z0izsisk360a4ghy25ifsvwywyy9y8im5dg") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-3.0.0-beta.1 (c (n "amq-protocol-tcp") (v "3.0.0-beta.1") (d (list (d (n "amq-protocol-uri") (r "= 3.0.0-beta.1") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.6") (k 0)))) (h "0l8py9cl8g48j2mq3hcm5yqrcmwlmszc2vdrddp29rv6ndm3iqxn") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-3.0.0-beta.2 (c (n "amq-protocol-tcp") (v "3.0.0-beta.2") (d (list (d (n "amq-protocol-uri") (r "= 3.0.0-beta.2") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.7") (k 0)))) (h "0679z716jassvcnxj31a80mb2qp3x6ri49r014qcmfyygqys2pw7") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.2.1 (c (n "amq-protocol-tcp") (v "2.2.1") (d (list (d (n "amq-protocol-uri") (r "^2.2.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.5") (k 0)))) (h "169i7nch4r38m9pc9h7p64iq8jc4w066hkzfhljncaqkdv7s81zf") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-2.3.0 (c (n "amq-protocol-tcp") (v "2.3.0") (d (list (d (n "amq-protocol-uri") (r "^2.3.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.5") (k 0)))) (h "06db6159rs35vs13dqnb8ab2zavnp1sxq6j77hf024zjnypkk874") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-3.0.0 (c (n "amq-protocol-tcp") (v "3.0.0") (d (list (d (n "amq-protocol-uri") (r "= 3.0.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.7") (k 0)))) (h "1s6xs2j749vgjjjahbanmd656ni9syyh9gy185jmdg80cisb9d8i") (f (quote (("vendored" "tcp-stream/vendored") ("tokio" "tcp-stream/tokio") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-3.1.0 (c (n "amq-protocol-tcp") (v "3.1.0") (d (list (d (n "amq-protocol-uri") (r "= 3.1.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.8") (k 0)))) (h "0l21x21d7gh6ypy7s9inhv1ffg4px7yxbqbjhg2dj3c34f3ss8vn") (f (quote (("vendored" "tcp-stream/vendored") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-3.1.1 (c (n "amq-protocol-tcp") (v "3.1.1") (d (list (d (n "amq-protocol-uri") (r "= 3.1.1") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.8") (k 0)))) (h "0fa07gq4fs60905bmf86rgcx2kkwzh4q3ll56hsqv5aycvbdq8a2") (f (quote (("vendored" "tcp-stream/vendored") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-4.0.0 (c (n "amq-protocol-tcp") (v "4.0.0") (d (list (d (n "amq-protocol-uri") (r "= 4.0.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.9") (k 0)))) (h "1nz9zak8c3z12p8laz7687dsdzc2dfvsfz1w4a2mvif01k09fg1y") (f (quote (("vendored" "tcp-stream/vendored") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-4.1.0 (c (n "amq-protocol-tcp") (v "4.1.0") (d (list (d (n "amq-protocol-uri") (r "= 4.1.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.9.1") (k 0)))) (h "0ar2k3f78a1s2y87g5kbh2gcqliqra5z36z9hmah311snfhppixv") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-4.2.0 (c (n "amq-protocol-tcp") (v "4.2.0") (d (list (d (n "amq-protocol-uri") (r "= 4.2.0") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.9.1") (k 0)))) (h "13av0ckvahdk4p04v748a1vdwf2513y54si434dj76kf5426lgr4") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.0.0-beta.1 (c (n "amq-protocol-tcp") (v "5.0.0-beta.1") (d (list (d (n "amq-protocol-uri") (r "= 5.0.0-beta.1") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "1m2x1zz62075v7kx0fy9h0vri2zmzfsryzpvp42y7bb2ip16mf91") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.0.0-beta.2 (c (n "amq-protocol-tcp") (v "5.0.0-beta.2") (d (list (d (n "amq-protocol-uri") (r "= 5.0.0-beta.2") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "0wca4gvh8ch4xvfc5pz4q64m0gx57qmbw2xlfbwvvknl2br2n3cz") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.0.0-beta.3 (c (n "amq-protocol-tcp") (v "5.0.0-beta.3") (d (list (d (n "amq-protocol-uri") (r "= 5.0.0-beta.3") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "00wxay4szagyf6wxqbd1hx1xws4sczl9c2cmd0ws831cp4b0s540") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-4.2.1 (c (n "amq-protocol-tcp") (v "4.2.1") (d (list (d (n "amq-protocol-uri") (r "= 4.2.1") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.9.1") (k 0)))) (h "04ji7kbaw8svn356672kly1y33yc0j0wxx6qjglhf5h7wnvlmp46") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-4.2.2 (c (n "amq-protocol-tcp") (v "4.2.2") (d (list (d (n "amq-protocol-uri") (r "= 4.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.14") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.9.1") (k 0)))) (h "1adshnmqshc95a6icnxidna3swsjrp8322psp5v7h3y36rbcljn4") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "tcp-stream/rustls") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.0.0-beta.4 (c (n "amq-protocol-tcp") (v "5.0.0-beta.4") (d (list (d (n "amq-protocol-uri") (r "= 5.0.0-beta.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "18aijj709b97shry68g3xhq99ya4b97adf51wcqd5wl31rgzwy44") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.0.0 (c (n "amq-protocol-tcp") (v "5.0.0") (d (list (d (n "amq-protocol-uri") (r "= 5.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "1zx3sw3sc6smgyd43n5jhihxlhqphpik5hs26a8sqk52fpwlkwsv") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.0.1 (c (n "amq-protocol-tcp") (v "5.0.1") (d (list (d (n "amq-protocol-uri") (r "= 5.0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "1gf08r5lby5866g2l8mb98iwdvwdzkqzpzmmy5wrxinsk05cgsf4") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-5.1.0 (c (n "amq-protocol-tcp") (v "5.1.0") (d (list (d (n "amq-protocol-uri") (r "= 5.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "0pyxbag6vvyz0akm1c71x7li3f5vq71dih7zj064n8lgkhvgvalx") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-alpha1 (c (n "amq-protocol-tcp") (v "6.0.0-alpha1") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-alpha1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "0f8irsd7y2x2iyzjgdp6829bp552ldxwwkjyk0fk7mliwz0fid6y") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-alpha2 (c (n "amq-protocol-tcp") (v "6.0.0-alpha2") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-alpha2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll"))) (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10") (k 0)))) (h "0ajd244791kv22ryiqc7n8y5kqn3ikm8sdsyb8bpk5k9mljy2fcd") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-alpha3 (c (n "amq-protocol-tcp") (v "6.0.0-alpha3") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-alpha3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (k 0)) (d (n "tcp-stream") (r "^0.10.4") (k 0)))) (h "0r9yrqmhfi2xfi1p8ir393gywj9vywckh7rjzc0kbndwcmzh9i8f") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-alpha4 (c (n "amq-protocol-tcp") (v "6.0.0-alpha4") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-alpha4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (k 0)) (d (n "tcp-stream") (r "^0.10.5") (k 0)))) (h "152brp9fdsdykrn03bs5kprrxw4i3nlvxpy0gqslrwrzwyhglpp1") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-alpha5 (c (n "amq-protocol-tcp") (v "6.0.0-alpha5") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-alpha5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10.6") (k 0)))) (h "1k1k3nykws6qbh6wkfryisn12wq2nsxj2i2nivck96n26szs456g") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-alpha6 (c (n "amq-protocol-tcp") (v "6.0.0-alpha6") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-alpha6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10.6") (k 0)))) (h "0jc8xk9291kwaxdx9ghgawwch3kqailj0hjh8nx4vmb1h0apgvj1") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-beta1 (c (n "amq-protocol-tcp") (v "6.0.0-beta1") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-beta1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.10.6") (k 0)))) (h "1nadw0c4kxmjgn8znbqcicg45ynbqbl4xvxsr4y7ff445ympllma") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-beta2 (c (n "amq-protocol-tcp") (v "6.0.0-beta2") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-beta2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.11.0") (k 0)))) (h "02jikg4sibx13rrmb98y86bv2730djhs4nxkjfx8pyjhbl7dxrzx") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs") ("rustls-native-certs" "tcp-stream/rustls-native-certs") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-beta3 (c (n "amq-protocol-tcp") (v "6.0.0-beta3") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-beta3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.12") (k 0)))) (h "101wkzirhp1ajhi3vnvdkkiql95vd8cgmsk266pg6y5iaq7619gf") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-beta4 (c (n "amq-protocol-tcp") (v "6.0.0-beta4") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-beta4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.13") (k 0)))) (h "19015qd0pk6pkgskr0vr2zmqag27jv1hkqr4ayxrxyvqnx7lch6n") (f (quote (("vendored" "tcp-stream/vendored") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-beta5 (c (n "amq-protocol-tcp") (v "6.0.0-beta5") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-beta5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.14.0") (k 0)))) (h "1f0l9nfgx1id3lggv481sbvjzpdcsxghkrkvc4nq5nrvgcixfqqc") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-beta6 (c (n "amq-protocol-tcp") (v "6.0.0-beta6") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-beta6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.14.0") (k 0)))) (h "08mjfd513rvxj74q23pzwpg1alqwib9kasgv5l9iy1ivlph1ly9c") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc1 (c (n "amq-protocol-tcp") (v "6.0.0-rc1") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.15.0") (k 0)))) (h "16p7xzn0mmjhw3zqdh7znc41wjrar0ni3f9j3jd8c9yqj3r1bpag") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc2 (c (n "amq-protocol-tcp") (v "6.0.0-rc2") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.15.0") (k 0)))) (h "16hj375fl2xbqmngghzdbnnplyl16pxdg3w0xg63nbzbrlwhc3bs") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc3 (c (n "amq-protocol-tcp") (v "6.0.0-rc3") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.15.1") (k 0)))) (h "1xrp17gljcdxqak7n51w95c419jldacq9gqss1rwpfgrfmwl0y5w") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc4 (c (n "amq-protocol-tcp") (v "6.0.0-rc4") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.18") (k 0)))) (h "1ywr3ncpcgvc5s1nbr6g6qww3ii2ysxp9wz9v9kiy7s25hf2r318") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc5 (c (n "amq-protocol-tcp") (v "6.0.0-rc5") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc5") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19") (k 0)))) (h "03951x65dwr3rdbf6hh8mhc2v47mpgx7pi31nclyz6kdwkv6hjx6") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc6 (c (n "amq-protocol-tcp") (v "6.0.0-rc6") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19") (k 0)))) (h "1nvpdgsklmjsg0h8i8c0cbq53ha24sjxsaq6cb34x3c0cy0vvkf0") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc7 (c (n "amq-protocol-tcp") (v "6.0.0-rc7") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc7") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19") (k 0)))) (h "11yq8589vi0kcr1rivc97r9sm75g7jhrb58j7dppgd1875v6225n") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc8 (c (n "amq-protocol-tcp") (v "6.0.0-rc8") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19") (k 0)))) (h "0ssf910shbv80xrs0h0vil5lbkadskdy4i8i6g3p21sy6rba054v") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc9 (c (n "amq-protocol-tcp") (v "6.0.0-rc9") (d (list (d (n "amq-protocol-uri") (r "= 6.0.0-rc9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19") (k 0)))) (h "01n2iqs2fgbp8ln9759wcdkpwqzaa861dn734igfrwimv839n52k") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc10 (c (n "amq-protocol-tcp") (v "6.0.0-rc10") (d (list (d (n "amq-protocol-uri") (r "=6.0.0-rc10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19.2") (k 0)))) (h "0nfciwviks1a21fi0wmvaavd8w9jh05586y5mh14q5j6nfxqfxqw") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc11 (c (n "amq-protocol-tcp") (v "6.0.0-rc11") (d (list (d (n "amq-protocol-uri") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.19.3") (k 0)))) (h "0an3qllhn31aw88nzp19f7c2vsdyfvfqik3r92cqsmk7c3wk27fd") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0-rc12 (c (n "amq-protocol-tcp") (v "6.0.0-rc12") (d (list (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.20") (k 0)))) (h "0m1a5bd7c5qs0hh9g63984l6ggvxwjh0i0snksnpys7mq1iqz9q8") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.0 (c (n "amq-protocol-tcp") (v "6.0.0") (d (list (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.20") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "0b60i74vf0kx5gdb32zbavd0hj5jcxbx2l0xxkl4piaa729bimb2") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.1 (c (n "amq-protocol-tcp") (v "6.0.1") (d (list (d (n "amq-protocol-uri") (r "^6.0.1") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.20") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "19p1c7chk8ybp9dxvsq6gzwfijm9pcgy5071frsabg7yhj8nhm71") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-6.0.2 (c (n "amq-protocol-tcp") (v "6.0.2") (d (list (d (n "amq-protocol-uri") (r "^6.0.2") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.20.5") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "157606py3s2ixjd9wnwr5pvy02dh97awqy0b8knv6qzv7zbb6q28") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.1 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.1") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.1") (d #t) (k 0)) (d (n "tcp-stream") (r ">=0.21.0, <0.22.0") (k 0)) (d (n "tracing") (r ">=0.1.0, <0.2.0") (k 0)))) (h "0d59asxw6jkp621sx9gr7a0krjiyszi1yxynh99psr2yalfxqbzn") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.2 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.2") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.2") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.21") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "097f3h2gdzrz2cpfshcgj1wpd8msr2rb4hdichhpw9haygfnryvp") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.3 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.3") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.3") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.21") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "087g2bfgih89rpgq2a7i6dhjbp71b32s1r72ikw08429i12mif9s") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.4 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.4") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.4") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.21") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "0x8kdaqij6j7cy8ks7vp8fg3iqvj27q2i6y1xfb12l6xx48g5s2f") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.5 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.5") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.5") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.22") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "0iy33klih6sn4x448pxhckg2bld2dqmdhrjfqv459rsslna4gfnx") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.6 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.6") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.6") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.22") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "0adh2h05x6xzjmpqvrka07fbc0d0iivi6zwhnw63d3y9qxmwl50s") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls"))))))

(define-public crate-amq-protocol-tcp-6.0.3 (c (n "amq-protocol-tcp") (v "6.0.3") (d (list (d (n "amq-protocol-uri") (r "^6.0.3") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.20.5") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "1khn5fyay6xs5386wqgalb5b52wrjvzywlv4a1p0pd65l93wkqxy") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-alpha.7 (c (n "amq-protocol-tcp") (v "7.0.0-alpha.7") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-alpha.7") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.22") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "147wxh7hd6y3mrw3yf22nidhzkxn84d6g12kigmqq40ghg1hz4bf") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls"))))))

(define-public crate-amq-protocol-tcp-6.1.0 (c (n "amq-protocol-tcp") (v "6.1.0") (d (list (d (n "amq-protocol-uri") (r "^6.1.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.20.5") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "101hj5gp2qjxv0n45hlxr2g04y0kbvm1ld0qi21f948liwxcv5wp") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-tcp-7.0.0-beta.1 (c (n "amq-protocol-tcp") (v "7.0.0-beta.1") (d (list (d (n "amq-protocol-uri") (r "=7.0.0-beta.1") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.23") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "10wmwi65ib6mlfj5whdbl7z23b0rfc1nsk1ab5ci1a9xyj5n5hjf") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls"))))))

(define-public crate-amq-protocol-tcp-7.0.0 (c (n "amq-protocol-tcp") (v "7.0.0") (d (list (d (n "amq-protocol-uri") (r "=7.0.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.24") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "02h3x7lvlw19i5c5b26wlh5zwwyv30a4s0fmqxm3jdfmlz157mmb") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls")))) (r "1.56.0")))

(define-public crate-amq-protocol-tcp-7.0.1 (c (n "amq-protocol-tcp") (v "7.0.1") (d (list (d (n "amq-protocol-uri") (r "=7.0.1") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.24") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "0av0xcfrmy2g7vk15q5461br5vbc8pzqx5qybs40nnn3m2mj12sx") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls")))) (r "1.56.0")))

(define-public crate-amq-protocol-tcp-7.1.0 (c (n "amq-protocol-tcp") (v "7.1.0") (d (list (d (n "amq-protocol-uri") (r "=7.1.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.25") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "16yawzdhk9dk3k30ky8l0hqyalvaswabrds8ick2siljlkcfdyh9") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls")))) (r "1.63.0")))

(define-public crate-amq-protocol-tcp-7.1.1 (c (n "amq-protocol-tcp") (v "7.1.1") (d (list (d (n "amq-protocol-uri") (r "=7.1.1") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.25") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "1l6m3if9f28svsd6d2ggmlb6ikw1518zfgkaz0h09bcwbrmp4b6c") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls")))) (r "1.63.0")))

(define-public crate-amq-protocol-tcp-7.1.2 (c (n "amq-protocol-tcp") (v "7.1.2") (d (list (d (n "amq-protocol-uri") (r "=7.1.2") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.26") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "1qhjrvbdc97m6crwxbcz689sxjl6bn9h2fic7aan3np7v8511clw") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls")))) (r "1.63.0")))

(define-public crate-amq-protocol-tcp-7.2.0 (c (n "amq-protocol-tcp") (v "7.2.0") (d (list (d (n "amq-protocol-uri") (r "=7.2.0") (d #t) (k 0)) (d (n "tcp-stream") (r "^0.28") (k 0)) (d (n "tracing") (r "^0.1") (k 0)))) (h "03pnd5dpzv1431iqqkdy3m62as9a58m7n2m8kdy7azg66vfm2gaf") (f (quote (("vendored-openssl" "tcp-stream/vendored-openssl") ("rustls-webpki-roots-certs" "tcp-stream/rustls-webpki-roots-certs" "rustls-connector") ("rustls-native-certs" "tcp-stream/rustls-native-certs" "rustls-connector") ("rustls-connector" "tcp-stream/rustls-connector") ("rustls" "rustls-native-certs") ("openssl" "tcp-stream/openssl") ("native-tls" "tcp-stream/native-tls") ("default" "rustls")))) (r "1.63.0")))

