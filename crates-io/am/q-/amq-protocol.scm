(define-module (crates-io am q- amq-protocol) #:use-module (crates-io))

(define-public crate-amq-protocol-0.0.0 (c (n "amq-protocol") (v "0.0.0") (h "17v8vq91lfl6r8q3smxa1vfvxdpnw9rk84ir8sadyv4sgbsg3xf1")))

(define-public crate-amq-protocol-0.1.0 (c (n "amq-protocol") (v "0.1.0") (d (list (d (n "amq-protocol-codegen") (r "^0.2.0") (d #t) (k 1)))) (h "1wrwmhd8c4llmda1znwilrj3balsqdhxxlzan7vxx0mygrlvk4xc")))

(define-public crate-amq-protocol-0.2.0 (c (n "amq-protocol") (v "0.2.0") (d (list (d (n "amq-protocol-codegen") (r "^0.3.2") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.2.2") (d #t) (k 0)))) (h "1bsmf0vj1ab6agwww0hs5kd3nzw08dp9i6fh00zpmvmg65binfa0")))

(define-public crate-amq-protocol-0.3.0 (c (n "amq-protocol") (v "0.3.0") (d (list (d (n "amq-protocol-codegen") (r "^0.13.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.13.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.8.0") (d #t) (k 0)))) (h "064cdjwi3i6di01rvjgglc1zvgycis2m49zc3hmna5biffrirl8a")))

(define-public crate-amq-protocol-0.4.0 (c (n "amq-protocol") (v "0.4.0") (d (list (d (n "amq-protocol-codegen") (r "^0.14.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.14.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)))) (h "0hc3vjxlbgq322f939vhcafx9y0pf7kaxis5jnawbjjrvy1ayi35")))

(define-public crate-amq-protocol-0.5.0 (c (n "amq-protocol") (v "0.5.0") (d (list (d (n "amq-protocol-codegen") (r "^0.15.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.15.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)))) (h "16sdvsydakc8g8vn0qdsys68kl3xz94jj10p2x2gh8dv12h2grm2")))

(define-public crate-amq-protocol-0.6.0 (c (n "amq-protocol") (v "0.6.0") (d (list (d (n "amq-protocol-codegen") (r "^0.16.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.16.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)))) (h "0axvx01i7jm6p62v5x1z0cwihgpkvbq6xk02zsjhzmz6synlmqgj")))

(define-public crate-amq-protocol-0.7.0 (c (n "amq-protocol") (v "0.7.0") (d (list (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "1zphigvjsc8ddddzfy8prwh4bxsqgi01gf14fvmrzrmhiq4hdw23")))

(define-public crate-amq-protocol-0.8.0 (c (n "amq-protocol") (v "0.8.0") (d (list (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "0kz571myx3nwzqm5x6ammns2f7dqbnwpflafpandgv721v7lk0vd")))

(define-public crate-amq-protocol-0.9.0 (c (n "amq-protocol") (v "0.9.0") (d (list (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "00rj7vlsbv2fnlhh3qlszzfybm8yr2cvy76wxpwhmiagf1yv2p21")))

(define-public crate-amq-protocol-0.10.0 (c (n "amq-protocol") (v "0.10.0") (d (list (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.17.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.9.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "02yi3ybbhvs1lq87wscnajqbj5z01m5jzb2w2bi0lgynrkd7xg57")))

(define-public crate-amq-protocol-0.11.0 (c (n "amq-protocol") (v "0.11.0") (d (list (d (n "amq-protocol-codegen") (r "^0.18.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.18.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.10.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "19dy17dfraxxjfxc6r2waykrxgj8sbm2b5x77sm1dc2g5l0njvhg")))

(define-public crate-amq-protocol-0.12.0 (c (n "amq-protocol") (v "0.12.0") (d (list (d (n "amq-protocol-codegen") (r "^0.20.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.20.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.12.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "1j13fdgcmphay0npma0idmmzqy79wccs5a7rqy37f1r3lwrl8gqv")))

(define-public crate-amq-protocol-0.13.0 (c (n "amq-protocol") (v "0.13.0") (d (list (d (n "amq-protocol-codegen") (r "^0.21.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.21.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.13.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "19x26gibp9s0bg3g1vl0n0m6mvs1mnri5zfaawndm7cw42vz9w9j")))

(define-public crate-amq-protocol-0.14.0 (c (n "amq-protocol") (v "0.14.0") (d (list (d (n "amq-protocol-codegen") (r "^0.22.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.22.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.13.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "112rfg0dsjbniq8jkxxxzr8kixhwjx3v9fhs0b539zq44sb1rvz3")))

(define-public crate-amq-protocol-0.15.0 (c (n "amq-protocol") (v "0.15.0") (d (list (d (n "amq-protocol-codegen") (r "^0.24.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.24.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.16.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.0") (d #t) (k 0)) (d (n "nom") (r "^2.2.0") (d #t) (k 0)))) (h "1587wyl44q89d503sfhzk1rwsgsgyc6h933wc1sldd7x4wrkyk98")))

(define-public crate-amq-protocol-0.16.0 (c (n "amq-protocol") (v "0.16.0") (d (list (d (n "amq-protocol-codegen") (r "^0.25") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.25") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.18") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.1") (d #t) (k 0)) (d (n "nom") (r "^2.2") (d #t) (k 0)))) (h "0mv5k43ncfbpzyd784ifbfvx037y7jam332kwxpzqwsykivjr0ig")))

(define-public crate-amq-protocol-0.17.0 (c (n "amq-protocol") (v "0.17.0") (d (list (d (n "amq-protocol-codegen") (r "^0.26") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.26") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.19") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.1") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 0)))) (h "1mz8mmqdzxpax8cvbzp0nij4piaskgbdhqmaqwrksa86bfyk9kjc")))

(define-public crate-amq-protocol-0.18.0 (c (n "amq-protocol") (v "0.18.0") (d (list (d (n "amq-protocol-codegen") (r "^0.26") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.26") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.19") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.1") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)))) (h "0l1fb3iv421hdjbh3db48k5i1p08sfxscw89b5ghr6sinba70wcq")))

(define-public crate-amq-protocol-0.18.1 (c (n "amq-protocol") (v "0.18.1") (d (list (d (n "amq-protocol-codegen") (r "^0.26") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.26") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.19") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.1") (d #t) (k 0)) (d (n "nom") (r "^3.0") (d #t) (k 0)) (d (n "url") (r "^1.4") (d #t) (k 0)))) (h "1g85sd2vkgmb9fcb59qsn835hr7kmk2giki3ch06w2ywzn32alxy")))

(define-public crate-amq-protocol-0.19.0 (c (n "amq-protocol") (v "0.19.0") (d (list (d (n "amq-protocol-codegen") (r "^0.27") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.27") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.20") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.1") (d #t) (k 0)) (d (n "nom") (r "^3.1") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "04pan24czlf27622j84m2pw45vygrnib4pkp05vg4kknkiy7x597")))

(define-public crate-amq-protocol-0.19.1 (c (n "amq-protocol") (v "0.19.1") (d (list (d (n "amq-protocol-codegen") (r "^0.27") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.27") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^0.20") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.1") (d #t) (k 0)) (d (n "nom") (r "^3.1") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "0k9y04lv5hzq456p1lvknfkk3di3w9balhbyhsyxcg57i2l89lg2")))

(define-public crate-amq-protocol-0.20.0 (c (n "amq-protocol") (v "0.20.0") (d (list (d (n "amq-protocol-codegen") (r "^0.28") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.28") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "1s3zwhlhjbkngnydj835gqb0hyj83dvkrp5bihv0722rg8smi1z7")))

(define-public crate-amq-protocol-0.21.0 (c (n "amq-protocol") (v "0.21.0") (d (list (d (n "amq-protocol-codegen") (r "^0.28") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.28") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "0njr1m1dhw48i843vbm1k7902mcacg2zgfaqawgnb39c45z1cxdc")))

(define-public crate-amq-protocol-0.21.1 (c (n "amq-protocol") (v "0.21.1") (d (list (d (n "amq-protocol-codegen") (r "^0.28") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.28") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "0zzzp0flw36fy0a2181xppp4w5l0bcs25bkypgp3yk29syxb9ji1")))

(define-public crate-amq-protocol-0.22.0 (c (n "amq-protocol") (v "0.22.0") (d (list (d (n "amq-protocol-codegen") (r "^0.29") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^0.29") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "1xfjf9dgajgpdm5ik8ijxfi0dfhrq48j96qsm69dznj9wrgclxgq")))

(define-public crate-amq-protocol-0.23.0 (c (n "amq-protocol") (v "0.23.0") (d (list (d (n "amq-protocol-codegen") (r "^1.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "0dysx130ri8d6gi2mlzy0i30bgn740f5q6bj1iwsfz6rlns5nl7k")))

(define-public crate-amq-protocol-1.0.0 (c (n "amq-protocol") (v "1.0.0") (d (list (d (n "amq-protocol-codegen") (r "^1.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "0lhckdgsiipgiqc6c2sqk75ph8lqs9c004nlqc5j0gw30pzsfyxw")))

(define-public crate-amq-protocol-1.1.0 (c (n "amq-protocol") (v "1.1.0") (d (list (d (n "amq-protocol-codegen") (r "^1.1") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.1") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.0") (d #t) (k 0)) (d (n "url") (r "^1.5") (d #t) (k 0)))) (h "1szqyvfpwna29sdlsjfr6ykj7f9z1200n6dkgyksy4yg8576m49x")))

(define-public crate-amq-protocol-1.1.1 (c (n "amq-protocol") (v "1.1.1") (d (list (d (n "amq-protocol-codegen") (r "^1.1.1") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.1.1") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.1.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1wsq2xbx91s3f6ly2frm8hxw7rjiwmrcdmlg8p3b1704byri64rp")))

(define-public crate-amq-protocol-1.1.2 (c (n "amq-protocol") (v "1.1.2") (d (list (d (n "amq-protocol-codegen") (r "^1.1.1") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.1.1") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.1.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "14pr507a9virf95lqgp28nnckad1vd65dpan9q7v9sz401ay0sa7")))

(define-public crate-amq-protocol-1.2.0 (c (n "amq-protocol") (v "1.2.0") (d (list (d (n "amq-protocol-codegen") (r "^1.2.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.2.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.2.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1qnpqv1px1zrwgplq0gkiwhvf6b3g64qd140xyxg684c017z3x1q")))

(define-public crate-amq-protocol-1.4.0 (c (n "amq-protocol") (v "1.4.0") (d (list (d (n "amq-protocol-codegen") (r "^1.4.0") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "^1.4.0") (d #t) (k 1)) (d (n "amq-protocol-types") (r "^1.2.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "^4.2") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0aqzs2s3shx0a8yw5lnzx2qc53vgg8mbdn4i5p932pyqq99zr1yn")))

(define-public crate-amq-protocol-2.0.0-beta1 (c (n "amq-protocol") (v "2.0.0-beta1") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-beta1") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-beta1") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-beta1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-alpha2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "117imp7h3cdqmvd9ajpf1ldg2bg9a6p064d1v3j54wg49pgkcdpz")))

(define-public crate-amq-protocol-2.0.0-beta2 (c (n "amq-protocol") (v "2.0.0-beta2") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-beta2") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-beta2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-alpha2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "187ay87xmqlva9g4lxblls5gf71ygv9da6d2syas2m5p5fnjf678")))

(define-public crate-amq-protocol-2.0.0-beta3 (c (n "amq-protocol") (v "2.0.0-beta3") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-beta3") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-beta3") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-beta3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-alpha2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0ysmbpj0lnrjx0ydga86im6n1vsyv3p2wh0ybb1drkzzvwfpbwf1")))

(define-public crate-amq-protocol-2.0.0-beta4 (c (n "amq-protocol") (v "2.0.0-beta4") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-beta4") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-beta4") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-beta4") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0hh0gkmr7nglxf1l09d8zxvvd329kriflh50grysla6h1h42bzb5")))

(define-public crate-amq-protocol-2.0.0-beta5 (c (n "amq-protocol") (v "2.0.0-beta5") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-beta5") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-beta5") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-beta5") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1icqsmkaqyacblsjfw8gynr8gjllwm3h8h4axrksc5xbjfkkbjsz")))

(define-public crate-amq-protocol-2.0.0-beta6 (c (n "amq-protocol") (v "2.0.0-beta6") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-beta6") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-beta6") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-beta6") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "024m649ymjfdszxfd6qic2svkzzq5cqqfb4lzr7syv3p46dinjlv")))

(define-public crate-amq-protocol-2.0.0-rc1 (c (n "amq-protocol") (v "2.0.0-rc1") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc1") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc1") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.2.4") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0h9q5x86s7hbjmcd9xbkxh8cvz4nss2bwf31qzshvy7fsnj6awlq")))

(define-public crate-amq-protocol-2.0.0-rc2 (c (n "amq-protocol") (v "2.0.0-rc2") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc2") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc2") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc2") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta1") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "11l12j5mr6phbqvaak8qs9sgmp0bav6xck7462sk5fc6wmn8v91h")))

(define-public crate-amq-protocol-2.0.0-rc3 (c (n "amq-protocol") (v "2.0.0-rc3") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc3") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc3") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc3") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta1") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "09qb551h3nwvk6sa2h304j8dldw8k94jl3i45yvzi98y5jacmll4")))

(define-public crate-amq-protocol-2.0.0-rc4 (c (n "amq-protocol") (v "2.0.0-rc4") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc4") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc4") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc4") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta1") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1gy8qjmyd9pvm0x9flyz8sxqwbhg4z8yvqdkpxn7pkrg13racd0j")))

(define-public crate-amq-protocol-2.0.0-rc5 (c (n "amq-protocol") (v "2.0.0-rc5") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc5") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc5") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc5") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta1") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0apvfm8f8qym55w3lzyply3kk5is02sgrh5vhp2n31980k5d4qv1")))

(define-public crate-amq-protocol-2.0.0-rc6 (c (n "amq-protocol") (v "2.0.0-rc6") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc6") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc6") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc6") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta1") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1wwr77x3f0z28af3sr493yvkqn7jr0646qb65qn695x6k110ibrp")))

(define-public crate-amq-protocol-2.0.0-rc7 (c (n "amq-protocol") (v "2.0.0-rc7") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc7") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc7") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc7") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1n7hlslgj0vb7rv4rjrrvlgwy85akcw14lxqg4yiwxv9s0gip7da")))

(define-public crate-amq-protocol-2.0.0-rc8 (c (n "amq-protocol") (v "2.0.0-rc8") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc8") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc8") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc8") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "0s71fbq236khs1p6i94d9vhph7jlzr4m52xmjaajjxyi14ha4s0a")))

(define-public crate-amq-protocol-2.0.0-rc9 (c (n "amq-protocol") (v "2.0.0-rc9") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc9") (d #t) (k 0)) (d (n "amq-protocol-codegen") (r "= 2.0.0-rc9") (d #t) (k 1)) (d (n "amq-protocol-types") (r "= 2.0.0-rc9") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1k7h53a2wrlk5ks61z2mssw42ribi62hcrvzwby4kql3vyqhc4a3")))

(define-public crate-amq-protocol-2.0.0-rc10 (c (n "amq-protocol") (v "2.0.0-rc10") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc10") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc10") (d #t) (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc10") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc10") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)))) (h "1pai9paylh0q0nisnbljp4y40cm56izv5ijxzhp20v6r79kbcmkr")))

(define-public crate-amq-protocol-2.0.0-rc11 (c (n "amq-protocol") (v "2.0.0-rc11") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc11") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc11") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)))) (h "1h5kbz2mjjpz43q8k94ah878biinxc1ncsmxgnnb70jnbdcvdpcl")))

(define-public crate-amq-protocol-2.0.0-rc12 (c (n "amq-protocol") (v "2.0.0-rc12") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc12") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc12") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)))) (h "057kz56wm8lbmxg4p7i00avjsg9sbcn0p9364id85zzax2z5m4yp")))

(define-public crate-amq-protocol-2.0.0-rc13 (c (n "amq-protocol") (v "2.0.0-rc13") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc13") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc13") (d #t) (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc13") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc13") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta1") (d #t) (k 0)))) (h "1y7ih4arlpskhnnv3j8mf3js8l3cxdklbs5py5f8pck8szqz4mbv")))

(define-public crate-amq-protocol-2.0.0-rc14 (c (n "amq-protocol") (v "2.0.0-rc14") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc14") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc14") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc14") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc14") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "01apnfgx07vyjb3r8hc1fqx2s5ckbrgahpqmk6akvfywbng5c82c") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.0-rc15 (c (n "amq-protocol") (v "2.0.0-rc15") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc15") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc15") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc15") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc15") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "1zhvlrakj6fmy1fz76jcvk6d2vhsjmb2kfrbxvv7jaj4hj4kdyyj") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.0-rc16 (c (n "amq-protocol") (v "2.0.0-rc16") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc16") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc16") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc16") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc16") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "0gxm6z0pb8wlf1dqy5glf70acix5cp7b3qk405jg9b1di6hfyi0v") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.0-rc17 (c (n "amq-protocol") (v "2.0.0-rc17") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc17") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc17") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc17") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc17") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "0xals0r94613f5l2q81kb6i4r1jsygbzc9s7yj8wha6bd497h2wy") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.0-rc18 (c (n "amq-protocol") (v "2.0.0-rc18") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0-rc18") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0-rc18") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0-rc18") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0-rc18") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "1gc92l5hhmhl9mfwszi4k2cd1wpxn3knvl225m3x4rdasb8zmn6q") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.0 (c (n "amq-protocol") (v "2.0.0") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "0x83xhzb9ljdc7k3sj8mq7b8080vgbsm2ig277ccaxcamhjcciif") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.1 (c (n "amq-protocol") (v "2.0.1") (d (list (d (n "amq-protocol-codegen") (r "= 2.0.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 2.0.0") (k 0)) (d (n "amq-protocol-types") (r "= 2.0.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 2.0.0") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "1sc935872px618b73silaz4szs5gpjiz9x5rpjshnzawq7n53mn0") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.0.2 (c (n "amq-protocol") (v "2.0.2") (d (list (d (n "amq-protocol-codegen") (r "^2.0.2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^2.0.2") (k 0)) (d (n "amq-protocol-types") (r "^2.0.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.0.2") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "= 5.0.0-beta2") (d #t) (k 0)))) (h "01qkg3riaasfvcmw3ziia2jxmkm1vgpxqqcdsj5x4ljlqrf989cv") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.1.0 (c (n "amq-protocol") (v "2.1.0") (d (list (d (n "amq-protocol-codegen") (r "^2.1.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^2.1.0") (k 0)) (d (n "amq-protocol-types") (r "^2.1.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1as23qm8q1g7z643kfq7cvbwykisw0qjgmk4iym2cfk1g9yzbk1x") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.2.0 (c (n "amq-protocol") (v "2.2.0") (d (list (d (n "amq-protocol-codegen") (r "^2.2.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^2.2.0") (k 0)) (d (n "amq-protocol-types") (r "^2.2.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.2.0") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "19ip2v7y8xxnifp4xdq8r27lrmqhj1xxffd02rxfy37fl21l0bdq") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-3.0.0-beta.1 (c (n "amq-protocol") (v "3.0.0-beta.1") (d (list (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 3.0.0-beta.1") (k 0)) (d (n "amq-protocol-types") (r "= 3.0.0-beta.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 3.0.0-beta.1") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta5") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0xcafh743fxwblkbw7dkki4ljjvj39ri12dd0p3v9266ciwxld5g") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-3.0.0-beta.2 (c (n "amq-protocol") (v "3.0.0-beta.2") (d (list (d (n "amq-protocol-codegen") (r "= 3.0.0-beta.2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 3.0.0-beta.2") (k 0)) (d (n "amq-protocol-types") (r "= 3.0.0-beta.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 3.0.0-beta.2") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta5") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "12cmz9a1kk2zxjy36jlarfpm2r0pz2z3kgwrcd9l7j64xw2ajnc4") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-2.3.0 (c (n "amq-protocol") (v "2.3.0") (d (list (d (n "amq-protocol-codegen") (r "^2.3.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^2.3.0") (k 0)) (d (n "amq-protocol-types") (r "^2.3.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.3.0") (d #t) (k 0)) (d (n "cookie-factory") (r "= 0.3.0-beta2") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "01vnyh9dpvq31hqrzm7rrkfgi4436r741ml84434qv5lvgah1dx8") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-3.0.0 (c (n "amq-protocol") (v "3.0.0") (d (list (d (n "amq-protocol-codegen") (r "= 3.0.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 3.0.0") (k 0)) (d (n "amq-protocol-types") (r "= 3.0.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 3.0.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "08433wr6ylcrv7mcsvjbs6ib37wrl2p97sxjy8vfs0yqi1g8jmcm") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("tokio" "amq-protocol-tcp/tokio") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-3.1.0 (c (n "amq-protocol") (v "3.1.0") (d (list (d (n "amq-protocol-codegen") (r "= 3.1.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 3.1.0") (k 0)) (d (n "amq-protocol-types") (r "= 3.1.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 3.1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1l54daivcbbq5vams9hw011v9xmrc4qil597jz6h64h78jrfwq82") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-3.1.1 (c (n "amq-protocol") (v "3.1.1") (d (list (d (n "amq-protocol-codegen") (r "= 3.1.1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 3.1.1") (k 0)) (d (n "amq-protocol-types") (r "= 3.1.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 3.1.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0rn96w1minnjlvs50vlrjjr5zwcldnqf6spycdydzi10r3dcyj9j") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-4.0.0 (c (n "amq-protocol") (v "4.0.0") (d (list (d (n "amq-protocol-codegen") (r "= 4.0.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 4.0.0") (k 0)) (d (n "amq-protocol-types") (r "= 4.0.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 4.0.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "04248ybr3xc1i29nlj3nrfgki2scwdai7zdk7acjcc0jspfb0rvq") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-4.1.0 (c (n "amq-protocol") (v "4.1.0") (d (list (d (n "amq-protocol-codegen") (r "= 4.1.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 4.1.0") (k 0)) (d (n "amq-protocol-types") (r "= 4.1.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 4.1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1qirmp5nrzif64a1mbmha8vzyl7afv8v128pms54kymahqgvlsyw") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-4.2.0 (c (n "amq-protocol") (v "4.2.0") (d (list (d (n "amq-protocol-codegen") (r "= 4.2.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 4.2.0") (k 0)) (d (n "amq-protocol-types") (r "= 4.2.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 4.2.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1qr0cf22k15fcs49mrlks01jzy8jnmmyh11cyc1xdarxy69qspb8") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.0.0-beta.1 (c (n "amq-protocol") (v "5.0.0-beta.1") (d (list (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.0.0-beta.1") (k 0)) (d (n "amq-protocol-types") (r "= 5.0.0-beta.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.0.0-beta.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0h33zny50wczj818g5h4zag6w3868prli2iq46vijxn6ma8nl2xj") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.0.0-beta.2 (c (n "amq-protocol") (v "5.0.0-beta.2") (d (list (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.0.0-beta.2") (k 0)) (d (n "amq-protocol-types") (r "= 5.0.0-beta.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.0.0-beta.2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1ihv77q5x2al7qdszn3hwxib30k4xad868n0p2jdc3v55y0417rv") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.0.0-beta.3 (c (n "amq-protocol") (v "5.0.0-beta.3") (d (list (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.3") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.0.0-beta.3") (k 0)) (d (n "amq-protocol-types") (r "= 5.0.0-beta.3") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.0.0-beta.3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0prrdcq2kz3n1piyvcj77xh9z225ijgsh0r3nmj5ciyqwpmdzj00") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-4.2.1 (c (n "amq-protocol") (v "4.2.1") (d (list (d (n "amq-protocol-codegen") (r "= 4.2.1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 4.2.1") (k 0)) (d (n "amq-protocol-types") (r "= 4.2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 4.2.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0m6k968ks2gdqaxh6m7dhb3r4w6vg2l16mf9hsxlq3rxg6xh6aaw") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-4.2.2 (c (n "amq-protocol") (v "4.2.2") (d (list (d (n "amq-protocol-codegen") (r "= 4.2.2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 4.2.2") (k 0)) (d (n "amq-protocol-types") (r "= 4.2.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 4.2.2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1zld5mf2aiyransnxapd2hc4g83vjvsjiyfys2r01sv7qsskc42r") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.0.0-beta.4 (c (n "amq-protocol") (v "5.0.0-beta.4") (d (list (d (n "amq-protocol-codegen") (r "= 5.0.0-beta.4") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.0.0-beta.4") (k 0)) (d (n "amq-protocol-types") (r "= 5.0.0-beta.4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.0.0-beta.4") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "1f16v2vzff6dkn2pnpwnq3dcnv2a10np2hzaghi2xndp9r5hnifn") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.0.0 (c (n "amq-protocol") (v "5.0.0") (d (list (d (n "amq-protocol-codegen") (r "= 5.0.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.0.0") (k 0)) (d (n "amq-protocol-types") (r "= 5.0.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.0.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0a1yb5zk3qv73wymslxirvhj3q7v96dbq51kz2895j0gcvs2lg23") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.0.1 (c (n "amq-protocol") (v "5.0.1") (d (list (d (n "amq-protocol-codegen") (r "= 5.0.1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.0.1") (k 0)) (d (n "amq-protocol-types") (r "= 5.0.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.0.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0yn6r1j886qyazwhvn7bqwvgkgbrbhydcjj940pcz0nczlpxyk3i") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-5.1.0 (c (n "amq-protocol") (v "5.1.0") (d (list (d (n "amq-protocol-codegen") (r "= 5.1.0") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 5.1.0") (k 0)) (d (n "amq-protocol-types") (r "= 5.1.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 5.1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^5.0") (d #t) (k 0)))) (h "0nxpl20vmy07c4x26ml410y4wjl05p1jyvjcbg5m4x1krdxvz5nq") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-alpha1 (c (n "amq-protocol") (v "6.0.0-alpha1") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-alpha1") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-alpha1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-alpha1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "1ic9rdq8zcvjc23lj48y45f5q37zmxz1zc4q967s3mywkjxkpx4p") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-alpha2 (c (n "amq-protocol") (v "6.0.0-alpha2") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-alpha2") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-alpha2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-alpha2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0ki35wp7az961irvykpl086c0v5yffs89drw9ai7wgl6wp8vs5jh") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-alpha3 (c (n "amq-protocol") (v "6.0.0-alpha3") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha3") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-alpha3") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-alpha3") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-alpha3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0pldz4shbbn92573vsshpxdiims74j7i5ggp354la5sivds8v8di") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-alpha4 (c (n "amq-protocol") (v "6.0.0-alpha4") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha4") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-alpha4") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-alpha4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-alpha4") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0kjhbdz2svfszzpmdgcpns1s25i9cyax6lykaq215lqp1r3a83ch") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-alpha5 (c (n "amq-protocol") (v "6.0.0-alpha5") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha5") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-alpha5") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-alpha5") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-alpha5") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "18crg8xv2ghknwplgnn80c86q0vff178m7ikx497iw9c9cw375fx") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-alpha6 (c (n "amq-protocol") (v "6.0.0-alpha6") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-alpha6") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-alpha6") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-alpha6") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-alpha6") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "1cjp8qy5kpprrgvp43dypylfs0s4a3n0yc654m3d7lr24glcrhdf") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-beta1 (c (n "amq-protocol") (v "6.0.0-beta1") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-beta1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-beta1") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-beta1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-beta1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "1z3hgq4xl8cgxmrm2l4yn9v99li5894s8s9svg3q97qswbrbvp8w") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-beta2 (c (n "amq-protocol") (v "6.0.0-beta2") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-beta2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-beta2") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-beta2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-beta2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "115814dndakbqv5ajrzddln6vmwzsd57k7mf3687zhpjhz2jx5yy") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-beta3 (c (n "amq-protocol") (v "6.0.0-beta3") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-beta3") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-beta3") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-beta3") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-beta3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "06wcbgsh4dzrhxgxwj610minbgw975bqsf8mpbrlqw23xbv8f3zs") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-beta4 (c (n "amq-protocol") (v "6.0.0-beta4") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-beta4") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-beta4") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-beta4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-beta4") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0vsba1phgswg901vpl45i5va932kydvq7n90wp4n80f4p8dryk19") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-beta5 (c (n "amq-protocol") (v "6.0.0-beta5") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-beta5") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-beta5") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-beta5") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-beta5") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0wcv8rz5z1ms19bifz16mjpqvk00c1ggr2778vyxdl29j0jhldr8") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-beta6 (c (n "amq-protocol") (v "6.0.0-beta6") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-beta6") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-beta6") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-beta6") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-beta6") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "16fi62m353hfnnhbjkgr9k2r0xzcqhpjdmj15l0zkclvfxrfnwvm") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc1 (c (n "amq-protocol") (v "6.0.0-rc1") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc1") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc1") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "1acr68hbywixmgb2xd0imxypfiglx9zw591vv0s69lc0mdv95bfn") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc2 (c (n "amq-protocol") (v "6.0.0-rc2") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc2") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc2") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0k6dijd3m5k7896a3aqvsrcqqw2ji1ccq6q3xg37hh4wcxmlpz4j") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc3 (c (n "amq-protocol") (v "6.0.0-rc3") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc3") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc3") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc3") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0v9x190dzgjviw9nj86grsxws7v5isws75ni6hiiff2pn6qg6apw") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc4 (c (n "amq-protocol") (v "6.0.0-rc4") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc4") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc4") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc4") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "12558c1c31v9k99y7m44hnpjjxzgss51fq7p15v9yc7mpk2ywjah") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc5 (c (n "amq-protocol") (v "6.0.0-rc5") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc5") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc5") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc5") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc5") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0z8l1fndsn11ac9hv9g6vn6x8jlxq03mn4xdibf57prn8wllq6b5") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc6 (c (n "amq-protocol") (v "6.0.0-rc6") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc6") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc6") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc6") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc6") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0va5sply8q11yr7lax13i0cci1hmkhac89jn459l7n62wlcfg3xc") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc7 (c (n "amq-protocol") (v "6.0.0-rc7") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc7") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc7") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc7") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc7") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "06ys8l0qd031z26nprhsqmq6skwals2ylpav3kgkvbk0d5gwy1zi") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc8 (c (n "amq-protocol") (v "6.0.0-rc8") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc8") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc8") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc8") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc8") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "08lklq3pidpiz0n2wkl0gl5h40x36c7xkwmwasi39n5inj68v0lv") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc9 (c (n "amq-protocol") (v "6.0.0-rc9") (d (list (d (n "amq-protocol-codegen") (r "= 6.0.0-rc9") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "= 6.0.0-rc9") (k 0)) (d (n "amq-protocol-types") (r "= 6.0.0-rc9") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "= 6.0.0-rc9") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "= 6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "06w1vrkdnh654sp5nndjfc9yfac4wdsy7jggkyppj15ypr2jgqaw") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc10 (c (n "amq-protocol") (v "6.0.0-rc10") (d (list (d (n "amq-protocol-codegen") (r "=6.0.0-rc10") (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=6.0.0-rc10") (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc10") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc10") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "=6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "0vdjr9mpfiwbfzdghlcqb73ja031qi5zlyh1gin8z12g7fpjr0n3") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls"))))))

(define-public crate-amq-protocol-6.0.0-rc11 (c (n "amq-protocol") (v "6.0.0-rc11") (d (list (d (n "amq-protocol-codegen") (r "=6.0.0-rc11") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=6.0.0-rc11") (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc11") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "=6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "1k8zm4vd6cjvjzkc94ip475cfz5d5qi78rkjvfyimcg986y77vw7") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-6.0.0-rc12 (c (n "amq-protocol") (v "6.0.0-rc12") (d (list (d (n "amq-protocol-codegen") (r "=6.0.0-rc12") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=6.0.0-rc12") (k 0)) (d (n "amq-protocol-types") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=6.0.0-rc12") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "=6.0.0-alpha1") (f (quote ("std"))) (d #t) (k 0)))) (h "06pczzwnbxp647zvd04vy46xabfw1asn5wwr0479b71brnd2wn1s") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-6.0.0 (c (n "amq-protocol") (v "6.0.0") (d (list (d (n "amq-protocol-codegen") (r "^6.0") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^6.0") (k 0)) (d (n "amq-protocol-types") (r "^6.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1qjxgqb7wnpwpjch5m261lyl5xyhdwa22ly0301vmi5ls298pnxi") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-6.0.1 (c (n "amq-protocol") (v "6.0.1") (d (list (d (n "amq-protocol-codegen") (r "^6.0.1") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^6.0.1") (k 0)) (d (n "amq-protocol-types") (r "^6.0.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1yys412fcmhsbjj30g98z5r24n7767l47zzss2ncbg1y5rh80l1s") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-6.0.2 (c (n "amq-protocol") (v "6.0.2") (d (list (d (n "amq-protocol-codegen") (r "^6.0.2") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^6.0.2") (k 0)) (d (n "amq-protocol-types") (r "^6.0.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0.2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "0bwgrvkfylrg392razwcipmay8scpvixpzacxz28mvqlg5j2iqpd") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.1 (c (n "amq-protocol") (v "7.0.0-alpha.1") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.1") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.1") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.1") (d #t) (k 0)) (d (n "cookie-factory") (r ">=0.3.0, <0.4.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r ">=6.0.0, <7.0.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1qzzgr1wvwl67f2hfv1k9qcypp52lvp2j52zjhb599g1hjrixg33") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.2 (c (n "amq-protocol") (v "7.0.0-alpha.2") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.2") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.2") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "0h2wlfy09qhl9x3nhjcyx5ld1irlzxqdnyvljl1sv5fp904h94ph") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.3 (c (n "amq-protocol") (v "7.0.0-alpha.3") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.3") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.3") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.3") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1gfnz06477g3i8ic18pxqfl6rvxm8i9ixc1gk8x7x5zr64h8av91") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.4 (c (n "amq-protocol") (v "7.0.0-alpha.4") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.4") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.4") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.4") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.4") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1ckxsrc2m7cjj5wgqdai0058vy34cd13b83awg0gnhcbixwv98ss") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.5 (c (n "amq-protocol") (v "7.0.0-alpha.5") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.5") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.5") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.5") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.5") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "0m36gxf468wi1ak6iy6p8ia9wi4n3d7cq7524aycflw49iak32ia") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.6 (c (n "amq-protocol") (v "7.0.0-alpha.6") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.6") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.6") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.6") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.6") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1rsv9ai8gd9hifg7cnsjpxzpbpmrkk3wxnw1pcp5v26rr6w93gvp") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-6.0.3 (c (n "amq-protocol") (v "6.0.3") (d (list (d (n "amq-protocol-codegen") (r "^6.0.3") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^6.0.3") (k 0)) (d (n "amq-protocol-types") (r "^6.0.3") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.0.3") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "0m3s4h5kwdvlz3idvs24bj2css6sbd6434ch1m3ijnrl1gijs8iw") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-alpha.7 (c (n "amq-protocol") (v "7.0.0-alpha.7") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-alpha.7") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-alpha.7") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-alpha.7") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-alpha.7") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^6.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1cf6d8afkxj4gzrm85a8ava9ixbyjc4b9lwgvhh7lc83iscqkhh6") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-6.1.0 (c (n "amq-protocol") (v "6.1.0") (d (list (d (n "amq-protocol-codegen") (r "^6.1.0") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "^6.1.0") (k 0)) (d (n "amq-protocol-types") (r "^6.1.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^6.1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)))) (h "1rwwvqj8w46dalg850pn7nzkfgx44rmdb4x54s4f8c1bk901rdd3") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0-beta.1 (c (n "amq-protocol") (v "7.0.0-beta.1") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0-beta.1") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0-beta.1") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0-beta.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0-beta.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)))) (h "0kh9qqp7g5j5il4ab0k1nby1b4g7aggkrazmsxhnhgpbl8c54q76") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal"))))))

(define-public crate-amq-protocol-7.0.0 (c (n "amq-protocol") (v "7.0.0") (d (list (d (n "amq-protocol-codegen") (r "=7.0.0") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.0") (k 0)) (d (n "amq-protocol-types") (r "=7.0.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)))) (h "03gyn69kby6wvc1id13618ymbz4rqk220vsbjk5s3zdh0b4w3xcs") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal")))) (r "1.56.0")))

(define-public crate-amq-protocol-7.0.1 (c (n "amq-protocol") (v "7.0.1") (d (list (d (n "amq-protocol-codegen") (r "=7.0.1") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.0.1") (k 0)) (d (n "amq-protocol-types") (r "=7.0.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.0.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "02g07x7l41g4fnx9lil50gyh38kg2ak1j23gnky36i8vgp8cmixc") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal")))) (r "1.56.0")))

(define-public crate-amq-protocol-7.1.0 (c (n "amq-protocol") (v "7.1.0") (d (list (d (n "amq-protocol-codegen") (r "=7.1.0") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.1.0") (k 0)) (d (n "amq-protocol-types") (r "=7.1.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.1.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0ipbdpbw172l3snnk95wavp80na0807scngmpmir076c30icfzny") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal")))) (r "1.63.0")))

(define-public crate-amq-protocol-7.1.1 (c (n "amq-protocol") (v "7.1.1") (d (list (d (n "amq-protocol-codegen") (r "=7.1.1") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.1.1") (k 0)) (d (n "amq-protocol-types") (r "=7.1.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.1.1") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "16yjaf48xnwahyfzgyvak2s2b1inli1ifa9z3i85lccsgqiysnd1") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal")))) (r "1.63.0")))

(define-public crate-amq-protocol-7.1.2 (c (n "amq-protocol") (v "7.1.2") (d (list (d (n "amq-protocol-codegen") (r "=7.1.2") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.1.2") (k 0)) (d (n "amq-protocol-types") (r "=7.1.2") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.1.2") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "0p9a2nj9963mav3hrjlzgvjmsjrkmjk2pqyf83fmjyaw8srdhh0x") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal")))) (r "1.63.0")))

(define-public crate-amq-protocol-7.2.0 (c (n "amq-protocol") (v "7.2.0") (d (list (d (n "amq-protocol-codegen") (r "=7.2.0") (o #t) (d #t) (k 1)) (d (n "amq-protocol-tcp") (r "=7.2.0") (k 0)) (d (n "amq-protocol-types") (r "=7.2.0") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "=7.2.0") (d #t) (k 0)) (d (n "cookie-factory") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "nom") (r "^7.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)))) (h "09gihkfjzf6l7vylnccdbg8h16fwg1rn14p2wydjw9q4g7bx8lgh") (f (quote (("verbose-errors" "amq-protocol-types/verbose-errors") ("vendored-openssl" "amq-protocol-tcp/vendored-openssl") ("rustls-webpki-roots-certs" "amq-protocol-tcp/rustls-webpki-roots-certs") ("rustls-native-certs" "amq-protocol-tcp/rustls-native-certs") ("rustls" "amq-protocol-tcp/rustls") ("openssl" "amq-protocol-tcp/openssl") ("native-tls" "amq-protocol-tcp/native-tls") ("default" "native-tls") ("codegen-internal" "amq-protocol-codegen") ("codegen" "codegen-internal")))) (r "1.63.0")))

