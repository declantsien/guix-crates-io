(define-module (crates-io am _l am_list) #:use-module (crates-io))

(define-public crate-am_list-0.1.0 (c (n "am_list") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "1v33r27y93qjalrx5ra5fpssnxhfnx7cpvvhdkrcvc6850vqyxy4")))

(define-public crate-am_list-0.2.0 (c (n "am_list") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "04gi60gr5i5kgpr3yfcicycsi8sabd0dhkacg9qphx7xn75p8dak")))

(define-public crate-am_list-0.2.1 (c (n "am_list") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "017h85c3cy57yg88jg8f7fyc47v2arrnng50jz6gz7mmrnkridv0")))

(define-public crate-am_list-0.2.2 (c (n "am_list") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "0xriidpf2yns8iin6xfka4p9v9lvnfr8x6laz26v3yckpvq6k8fy")))

(define-public crate-am_list-0.2.3 (c (n "am_list") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "0vw88nqlg6s4w6zh135razvb9mlgzk770zs4d1fpcarxb1zliiyx")))

(define-public crate-am_list-0.2.4 (c (n "am_list") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "0xv05srrph39hnrl558fknssl35wqh65kjhcgaj5l47nr3s5szcn")))

(define-public crate-am_list-0.2.5 (c (n "am_list") (v "0.2.5") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "1pg1d6zdp9qk884659x26m3l3iqr5s473ik34hgdzgnjsvy62l57")))

(define-public crate-am_list-0.2.6 (c (n "am_list") (v "0.2.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "1mxsyhja5bb3vlkl62mvxrksmsv5qki1197wrm5s8mcrp026z8p9")))

(define-public crate-am_list-0.2.7 (c (n "am_list") (v "0.2.7") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "1krkqc58c3663i53iapl80jsqmpnykx595b7c1wm804y7mjh3psn")))

(define-public crate-am_list-0.3.0 (c (n "am_list") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.25.5") (f (quote ("colors"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (d #t) (k 0)) (d (n "tree-sitter-typescript") (r "^0.20.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.3") (d #t) (k 0)))) (h "0iqmx2qxvswin8l7k1dwvh9pf24rr1asy5p3xpcdwlyhwplfyjj1")))

