(define-module (crates-io am et amethyst_core) #:use-module (crates-io))

(define-public crate-amethyst_core-0.1.0 (c (n "amethyst_core") (v "0.1.0") (d (list (d (n "cgmath") (r "^0.15") (f (quote ("serde" "mint"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hibitset") (r "^0.3.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 0)) (d (n "rayon") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.5") (d #t) (k 0)) (d (n "specs") (r "^0.10") (d #t) (k 0)))) (h "1grzza8qd3fsliar2rmhj0fy44qhjpk0vficnkh9jgpv5i782mas")))

(define-public crate-amethyst_core-0.2.0 (c (n "amethyst_core") (v "0.2.0") (d (list (d (n "cgmath") (r "^0.16") (f (quote ("serde" "mint"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.0") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.11") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.1") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1qp6kij7pi2aqvh5s7ygqsf7g773g8sj4255a4i6c75p1rgfwg1h") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly"))))))

(define-public crate-amethyst_core-0.3.0 (c (n "amethyst_core") (v "0.3.0") (d (list (d (n "amethyst") (r "^0.8.0") (d #t) (k 2)) (d (n "cgmath") (r "^0.16") (f (quote ("serde" "mint"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.0") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.12") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.2") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0sqfqis96j1s69bpirgqllzqip4vliw8d3xyc6ymx0ni8rjn2jab") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly"))))))

(define-public crate-amethyst_core-0.4.0 (c (n "amethyst_core") (v "0.4.0") (d (list (d (n "amethyst") (r "^0.9.0") (d #t) (k 2)) (d (n "cgmath") (r "^0.16") (f (quote ("serde" "mint"))) (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.2") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.12.3") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.2") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1gjaqrng6vddfzzp0an9md21i7dq9zpwja69b86rgmawa900lwpf") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly"))))))

(define-public crate-amethyst_core-0.5.0 (c (n "amethyst_core") (v "0.5.0") (d (list (d (n "amethyst") (r "^0.10.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.2") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.7") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.14") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.3") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0y71x8mmf8gx430zm7rvp6v15jakjs7rg0l9m10dcff96nrqz7wb") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly"))))))

(define-public crate-amethyst_core-0.5.1 (c (n "amethyst_core") (v "0.5.1") (d (list (d (n "amethyst") (r "^0.10.0") (d #t) (k 2)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.2") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.16.7") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.14") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.3") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1q91bdx5dj7lalprlnk50bdzqc62xzy3ipx0pzr4qsra39z2f083") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly")))) (y #t)))

(define-public crate-amethyst_core-0.6.0 (c (n "amethyst_core") (v "0.6.0") (d (list (d (n "alga") (r "^0.9.0") (k 0)) (d (n "alga_derive") (r "^0.9.0") (d #t) (k 0)) (d (n "amethyst") (r "^0.11.0") (d #t) (k 2)) (d (n "amethyst_error") (r "^0.1.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "getset") (r "^0.0.7") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.2") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.14") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.3") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1h6q80k8kbx1653c9z833hxkd3ykp1zgn1g78b70bhy7r07m77xk") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly") ("float64"))))))

(define-public crate-amethyst_core-0.7.0 (c (n "amethyst_core") (v "0.7.0") (d (list (d (n "alga") (r "^0.9.0") (k 0)) (d (n "alga_derive") (r "^0.9.0") (d #t) (k 0)) (d (n "amethyst") (r "^0.12.0") (d #t) (k 2)) (d (n "amethyst_error") (r "^0.2.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "getset") (r "^0.0.7") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.2") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shrev") (r "^1.0") (d #t) (k 0)) (d (n "specs") (r "^0.14") (f (quote ("common"))) (d #t) (k 0)) (d (n "specs-hierarchy") (r "^0.3") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1najv5dpcmhx80q0mnc9c30647a21ipbwccnsqdh14683hdy5wkq") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "shred/nightly") ("float64"))))))

(define-public crate-amethyst_core-0.8.0 (c (n "amethyst_core") (v "0.8.0") (d (list (d (n "alga") (r "^0.9.0") (k 0)) (d (n "alga_derive") (r "^0.9.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.3.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "getset") (r "^0.0.7") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18.1") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.15.1") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.5.1") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1fdjz51pac1x8k8zc2q3d46i6yzqdcmar7rvz4fvn2vq9jgz16lj") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "specs/nightly") ("default" "specs/parallel" "specs-hierarchy/parallel"))))))

(define-public crate-amethyst_core-0.8.1 (c (n "amethyst_core") (v "0.8.1") (d (list (d (n "alga") (r "^0.9.0") (k 0)) (d (n "alga_derive") (r "^0.9.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.3.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "getset") (r "^0.0.8") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.18.1") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.15.1") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.5.1") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "12ri1l726p1k5azis00hrk0xj37wpl8hy6hy77l149vd37pp084f") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "specs/nightly") ("default" "specs/parallel" "specs-hierarchy/parallel"))))))

(define-public crate-amethyst_core-0.9.0 (c (n "amethyst_core") (v "0.9.0") (d (list (d (n "alga") (r "^0.9.0") (k 0)) (d (n "alga_derive") (r "^0.9.0") (d #t) (k 0)) (d (n "amethyst") (r "^0.14.0") (d #t) (k 2)) (d (n "amethyst_error") (r "^0.4.0") (d #t) (k 0)) (d (n "approx") (r "^0.3") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.6") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "getset") (r "^0.0.8") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.15.1") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.5.1") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "095faylvikf8hqir0f3d8nnzzksn3573kwn7jw70q06dwpk0nz59") (f (quote (("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("nightly" "specs/nightly") ("default" "specs/parallel" "specs-hierarchy/parallel"))))))

(define-public crate-amethyst_core-0.10.0 (c (n "amethyst_core") (v "0.10.0") (d (list (d (n "alga") (r "^0.9.2") (k 0)) (d (n "alga_derive") (r "^0.9.1") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.5.0") (d #t) (k 0)) (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^1.0.3") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.16.0") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.6") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1sh1s6m579rlq25z68pv7yag7avl2fz08l602d1hmrq6b2llqxr1") (f (quote (("storage-event-control" "specs/storage-event-control") ("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("default" "specs/parallel" "specs-hierarchy/parallel"))))))

(define-public crate-amethyst_core-0.10.1 (c (n "amethyst_core") (v "0.10.1") (d (list (d (n "alga") (r "^0.9.2") (k 0)) (d (n "alga_derive") (r "^0.9.1") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.5.0") (d #t) (k 0)) (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.16.0") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.6") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0ipjgbn4k1065ls1ikrhcvrgdbb8ngdj8q3wswhzp7mwz6zy10xh") (f (quote (("storage-event-control" "specs/storage-event-control") ("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("default" "specs/parallel" "specs-hierarchy/parallel"))))))

(define-public crate-amethyst_core-0.15.2 (c (n "amethyst_core") (v "0.15.2") (d (list (d (n "alga") (r "^0.9.2") (k 0)) (d (n "alga_derive") (r "^0.9.1") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.15.2") (d #t) (k 0)) (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.16.0") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.6") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "03z0bxqifmmxy4q9qi2gah5hs850zd6fvqjvr0pkc4cmnfi0ycbc") (f (quote (("storage-event-control" "specs/storage-event-control") ("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("default" "specs/parallel" "specs-hierarchy/parallel")))) (y #t)))

(define-public crate-amethyst_core-0.15.3 (c (n "amethyst_core") (v "0.15.3") (d (list (d (n "alga") (r "^0.9.2") (k 0)) (d (n "alga_derive") (r "^0.9.1") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.15.3") (d #t) (k 0)) (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5.8") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "getset") (r "^0.0.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (f (quote ("serde-serialize" "mint"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.11") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "specs") (r "^0.16.0") (f (quote ("shred-derive" "specs-derive"))) (k 0)) (d (n "specs-hierarchy") (r "^0.6") (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0d0lnpnbxfdy8m163mp23w9sp0sw5qvf539117z2x71hv0z7bvsj") (f (quote (("storage-event-control" "specs/storage-event-control") ("saveload" "specs/serde") ("profiler" "thread_profiler/thread_profiler") ("default" "specs/parallel" "specs-hierarchy/parallel"))))))

