(define-module (crates-io am et amethyst_assets) #:use-module (crates-io))

(define-public crate-amethyst_assets-0.1.0 (c (n "amethyst_assets") (v "0.1.0") (d (list (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.1.14") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4.4") (d #t) (k 0)) (d (n "rayon") (r "^0.7") (d #t) (k 0)) (d (n "specs") (r "^0.9.5") (f (quote ("common"))) (d #t) (k 0)))) (h "0xcz3145fgcd2iw2bpa1gkqf6knjc75gh4b2g49j8yqgkiwbkq7m")))

(define-public crate-amethyst_assets-0.2.0 (c (n "amethyst_assets") (v "0.2.0") (d (list (d (n "amethyst_core") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam") (r "^0.3.0") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4.4") (d #t) (k 0)) (d (n "rayon") (r "^0.8") (d #t) (k 0)) (d (n "ron") (r "^0.1.4") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "specs") (r "^0.10") (f (quote ("common"))) (d #t) (k 0)))) (h "12k37sr7a07l104d6zjf3r6d06jhylgfl9lk4la6n2h7wxy1ii51")))

(define-public crate-amethyst_assets-0.3.0 (c (n "amethyst_assets") (v "0.3.0") (d (list (d (n "amethyst_core") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.3.0") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.0") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.4.4") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (k 0)) (d (n "ron") (r "^0.1.4") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 2)) (d (n "thread_profiler") (r "^0.1") (o #t) (d #t) (k 0)))) (h "076q0dh48wsw53gm75acl9w8z8rnhcivpmh0fsplz0lcfxp3jh5z") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly"))))))

(define-public crate-amethyst_assets-0.4.0 (c (n "amethyst_assets") (v "0.4.0") (d (list (d (n "amethyst_core") (r "^0.3.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.3.0") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.0") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.0.1") (d #t) (k 0)) (d (n "ron") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shred-derive") (r "^0.5") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1f6cmdi85pfrmm8jb0jg507wv62a1r2c7kbbz4wrmdcgr8m0x9z4") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly"))))))

(define-public crate-amethyst_assets-0.5.0 (c (n "amethyst_assets") (v "0.5.0") (d (list (d (n "amethyst_core") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.1") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "ron") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shred-derive") (r "^0.5") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0vky5lsf4nlgfas0m3kx8a282nh1s98y7pa8p3f8nqisd0fl9id0") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.6.0 (c (n "amethyst_assets") (v "0.6.0") (d (list (d (n "amethyst_core") (r "^0.5.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.1") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "ron") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shred-derive") (r "^0.5") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0rgbxra61qc285ngjhrx5x9hbisvsnrr2k23k77qn6drhca479wb") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.6.1 (c (n "amethyst_assets") (v "0.6.1") (d (list (d (n "amethyst_core") (r "^0.5.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.1") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "ron") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shred-derive") (r "^0.5") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1nprakfanj2vyaaxsid671g0rkni6y92c3a6d45ysykasgx3bjp3") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json")))) (y #t)))

(define-public crate-amethyst_assets-0.7.0 (c (n "amethyst_assets") (v "0.7.0") (d (list (d (n "amethyst_core") (r "^0.6.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.1.0") (d #t) (k 0)) (d (n "crossbeam") (r "^0.4.1") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.1") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.0.2") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shred-derive") (r "^0.5") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1iyj6c4faxkryzh1fnw2an3fgd2611ac1k7pknqkgivhzydwyvp6") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json") ("float64" "amethyst_core/float64"))))))

(define-public crate-amethyst_assets-0.8.0 (c (n "amethyst_assets") (v "0.8.0") (d (list (d (n "amethyst_core") (r "^0.7.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.2.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "hibitset") (r "^0.5.1") (f (quote ("parallel"))) (d #t) (k 0)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "shred") (r "^0.7") (d #t) (k 0)) (d (n "shred-derive") (r "^0.5") (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1nbq3xhspr37m9avz4kvlmnczf0a1n5jw0sq9iq909az1ivsws89") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json") ("float64" "amethyst_core/float64"))))))

(define-public crate-amethyst_assets-0.9.0 (c (n "amethyst_assets") (v "0.9.0") (d (list (d (n "amethyst_core") (r "^0.8.0") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.6.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.3.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0k8qx7cc32jinm1im7nk5wi0yh1pawimj4qpbswxy8gknd64095d") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.9.1 (c (n "amethyst_assets") (v "0.9.1") (d (list (d (n "amethyst_core") (r "^0.8.1") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.6.1") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.3.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "00bcykll37nby9nvn9zhd717wk0cyfsly1rm1i4518jksg0s4vxs") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.10.0 (c (n "amethyst_assets") (v "0.10.0") (d (list (d (n "amethyst_core") (r "^0.9.0") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.7.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.4.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.1.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0y8prravjvyvyzrdprbd3z720hhpyyvc0xmg3cwiw0p46xyyj948") (f (quote (("profiler" "thread_profiler/thread_profiler") ("nightly" "amethyst_core/nightly") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.11.0 (c (n "amethyst_assets") (v "0.11.0") (d (list (d (n "amethyst_core") (r "^0.10.0") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.5.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "09zhyi85xx73x1mh3qmicbk7mkkk8y4k2dq5nmil67y1fjimmv5d") (f (quote (("profiler" "thread_profiler/thread_profiler") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.11.1 (c (n "amethyst_assets") (v "0.11.1") (d (list (d (n "amethyst_core") (r "^0.10.0") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.5.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1n0isgjny6ljlarls8rc1rcbnlxxfw5qxhkp8vchbgyvdx1h1l3y") (f (quote (("profiler" "thread_profiler/thread_profiler") ("json" "serde_json"))))))

(define-public crate-amethyst_assets-0.15.2 (c (n "amethyst_assets") (v "0.15.2") (d (list (d (n "amethyst_core") (r "^0.15.2") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.15.2") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.15.2") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0r7paklxcw8s65k2iwhfy4j7125b7zdakkd6bw6dhphaamx26h80") (f (quote (("profiler" "thread_profiler/thread_profiler") ("json" "serde_json")))) (y #t)))

(define-public crate-amethyst_assets-0.15.3 (c (n "amethyst_assets") (v "0.15.3") (d (list (d (n "amethyst_core") (r "^0.15.3") (d #t) (k 0)) (d (n "amethyst_derive") (r "^0.15.3") (d #t) (k 0)) (d (n "amethyst_error") (r "^0.15.3") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.1.2") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.9") (d #t) (k 0)) (d (n "err-derive") (r "^0.2.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "inventory") (r "^0.1.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "objekt") (r "^0.1.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "ron") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thread_profiler") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1ciws1kw38h7rjlfwskxc8c12fgciwn25bpmhx8il28x2r23lw0z") (f (quote (("profiler" "thread_profiler/thread_profiler") ("json" "serde_json"))))))

