(define-module (crates-io am qp amqp-api-server) #:use-module (crates-io))

(define-public crate-amqp-api-server-0.1.0 (c (n "amqp-api-server") (v "0.1.0") (d (list (d (n "amqp-api-shared") (r "^0.1.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cooplan-config-reader") (r "^0.1.0") (d #t) (k 0)) (d (n "cooplan-state-tracker") (r "^0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8") (d #t) (k 0)) (d (n "lapin") (r "^2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiple-connections-lapin-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "0clmlqgx6z1wr0jgkzhdb421npf1vjymn10rs4k7876xysixxxcc")))

(define-public crate-amqp-api-server-0.1.1 (c (n "amqp-api-server") (v "0.1.1") (d (list (d (n "amqp-api-shared") (r "^0.1.1") (d #t) (k 0)) (d (n "async-channel") (r "^1.9") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cooplan-config-reader") (r "^0.1.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8") (d #t) (k 0)) (d (n "lapin") (r "^2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiple-connections-lapin-wrapper") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "state-tracker") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)))) (h "0acim2wc1df72wnrgbcvzj51jbq0vjbac4pjsy43fc9wyybq0x68")))

