(define-module (crates-io am qp amqp_worker) #:use-module (crates-io))

(define-public crate-amqp_worker-0.1.0 (c (n "amqp_worker") (v "0.1.0") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "= 0.1.13") (d #t) (k 0)))) (h "1acl4za6j3mfdyvmmsdfhi4nvy6vg1hrs5arn58835csyzi5rx21")))

(define-public crate-amqp_worker-0.1.1 (c (n "amqp_worker") (v "0.1.1") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "= 0.1.13") (d #t) (k 0)))) (h "0kdlnskk05rad0xz76ff3xacyggvmzvsl2fcp1ivgyxwwsmfqaa1")))

(define-public crate-amqp_worker-0.1.2 (c (n "amqp_worker") (v "0.1.2") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "= 0.1.13") (d #t) (k 0)))) (h "0w00i8nnz3nnw8fwy5cig7may922p5xrl8p4s0g02w5gcmk48h6q")))

(define-public crate-amqp_worker-0.1.3 (c (n "amqp_worker") (v "0.1.3") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "= 0.1.13") (d #t) (k 0)))) (h "0kz34kj9n3zpm1vndliv7b5im8dlwjpkmafj4ksvmqi5bzjqckxi")))

(define-public crate-amqp_worker-0.1.4 (c (n "amqp_worker") (v "0.1.4") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "= 0.1.13") (d #t) (k 0)))) (h "1kj6y3lkj5grcswpnv1y36j1v2alnky80w5vc3mj4kksjdhyqavk")))

(define-public crate-amqp_worker-0.1.5 (c (n "amqp_worker") (v "0.1.5") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)))) (h "1p4bj1aqlg8xx77w2n8h6nwlhzzyy8xx4xsq3vzjgr4gk72dlhrh")))

(define-public crate-amqp_worker-0.1.6 (c (n "amqp_worker") (v "0.1.6") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)))) (h "1mcmc81smdwpxhfm6db5bxx15qj82fj52lpbbzqa5pl2h4maxrsz")))

(define-public crate-amqp_worker-0.1.7 (c (n "amqp_worker") (v "0.1.7") (d (list (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 0)))) (h "1g9addwqcpfjj3dval8zz0b3r2xfq2lr261vgd9bwdlq3pmvbybf")))

(define-public crate-amqp_worker-0.2.0 (c (n "amqp_worker") (v "0.2.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "1rb7ls4vm6d2vr6xn4zc6ki6r50lkrmrz0axirf26ss8zj81kl8s")))

(define-public crate-amqp_worker-0.2.1 (c (n "amqp_worker") (v "0.2.1") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "1ff38545kx153jrsjm8wdc3710yb8d1n6qxxm0qhll19w5gn1n37")))

(define-public crate-amqp_worker-0.2.2 (c (n "amqp_worker") (v "0.2.2") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "04ysjmhnpg3npqfy6rmsv4gi3ai7k1rc1jkpj2v6pqj9yfk2gb5q")))

(define-public crate-amqp_worker-0.2.3 (c (n "amqp_worker") (v "0.2.3") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "0hl1sp68ws8759q1zfhi41rwjf28mdm5gx2dp52mzzgwdcpya0ai")))

(define-public crate-amqp_worker-0.2.4 (c (n "amqp_worker") (v "0.2.4") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "0sdrj22klpp945lcdnjqnmanizl8fnxbq3p2nqadjm1zzgbgvzxi")))

(define-public crate-amqp_worker-0.2.5 (c (n "amqp_worker") (v "0.2.5") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "139i5icw68zba6s6k9shbksl5pcklaws6pp2y7509f7jsdzcprl7")))

(define-public crate-amqp_worker-0.2.6 (c (n "amqp_worker") (v "0.2.6") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "1q0gvk1i9pmbw8vfjp5kjlaixhyibgci3p6gds7x7pwsh3g2x3q4")))

(define-public crate-amqp_worker-0.3.0 (c (n "amqp_worker") (v "0.3.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.15") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "0jkxf1zp088cbkdln1wsmh08l9jdj5q31brhynsrdbrbcvl6fjd0")))

(define-public crate-amqp_worker-0.4.0 (c (n "amqp_worker") (v "0.4.0") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.17") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "05l1jxpbhw74c3h94x5mwfl93gmcbiqpdgqz9mrl3wfhb46bykvy")))

(define-public crate-amqp_worker-0.4.1 (c (n "amqp_worker") (v "0.4.1") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.17") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "16fqxqi73mf1q5ff7rxvbhr1rfpr0bkvlxmvspp9gh7m90p3512v")))

(define-public crate-amqp_worker-0.4.2 (c (n "amqp_worker") (v "0.4.2") (d (list (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.18") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "0gcqwpm4xjkbdlww7k4d52kr5ylz0spq9vzyw3w275fzr0b71iks")))

(define-public crate-amqp_worker-0.4.3 (c (n "amqp_worker") (v "0.4.3") (d (list (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.18") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.8") (d #t) (k 0)))) (h "1cmjhnqjl32h2f9lw86412gajpwd8w2yfln3kpw9rrk46g84d7wp")))

(define-public crate-amqp_worker-0.5.0 (c (n "amqp_worker") (v "0.5.0") (d (list (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1ffg4pcjr0h0rxx67iy6sm83619nghxg41a98am811vlicli5kr8")))

(define-public crate-amqp_worker-0.5.1 (c (n "amqp_worker") (v "0.5.1") (d (list (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "06llb83y9j35lrfiwsrd4xwzp75qczv9k08m4vcndk34ckglipkz")))

(define-public crate-amqp_worker-0.5.2 (c (n "amqp_worker") (v "0.5.2") (d (list (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1h369fvcpyj1csg6yg3a64pa6jdfym9jpaxwnwhdz5zy4a0pgd9m")))

(define-public crate-amqp_worker-0.5.3 (c (n "amqp_worker") (v "0.5.3") (d (list (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1snzwjhnp10dhfk0mb6s7d5ncnvy2g2cpkpdwlp6vxdh4axvw00g")))

(define-public crate-amqp_worker-0.5.4 (c (n "amqp_worker") (v "0.5.4") (d (list (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "0svhmyr35x48qfjw68hzlbd89jmpskgy43s13jy7pgsv43dp7aaa")))

(define-public crate-amqp_worker-0.5.5 (c (n "amqp_worker") (v "0.5.5") (d (list (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1dxlfl4wr7jdlaxc1r96w6v677yv68wb5q2fn08p20giv4phc4s3")))

(define-public crate-amqp_worker-0.5.6 (c (n "amqp_worker") (v "0.5.6") (d (list (d (n "amq-protocol-types") (r "^2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1j2cf0z5mcqhcd5b6fa89ss0xi9fdbz4jcwpzr1iix5fialk9crr")))

(define-public crate-amqp_worker-0.5.7 (c (n "amqp_worker") (v "0.5.7") (d (list (d (n "amq-protocol-types") (r "^2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "08kay54nqy2rw167g8wx8i1vjd7kd3bb1is6pgybc4hhg5fz95i9")))

(define-public crate-amqp_worker-0.5.8 (c (n "amqp_worker") (v "0.5.8") (d (list (d (n "amq-protocol-types") (r "^2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "09zw64f3xfys780l64gh7ghi9zrkh5azm4716vbb7ngiys0djkzy")))

(define-public crate-amqp_worker-0.5.9 (c (n "amqp_worker") (v "0.5.9") (d (list (d (n "amq-protocol-types") (r "^2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.20") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "05psf1dpk2fqwl6js239saq400x92qb60dndnm3ygj93fxsgp1mh")))

(define-public crate-amqp_worker-0.6.0 (c (n "amqp_worker") (v "0.6.0") (d (list (d (n "amq-protocol-types") (r "^2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.20") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "02qvhzqqv8z9f1pxjf18jkf88f781qxa3zbizm5i41qkbjdp9g21")))

(define-public crate-amqp_worker-0.7.0 (c (n "amqp_worker") (v "0.7.0") (d (list (d (n "amq-protocol-types") (r "^2.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^2.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.25") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.22") (d #t) (k 2)) (d (n "reqwest") (r "^0.9.8") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "1n4drfwah1kk38v4c21idvya09b2h35jp4wjxmwljr8amxamz4wz")))

(define-public crate-amqp_worker-0.8.0 (c (n "amqp_worker") (v "0.8.0") (d (list (d (n "amq-protocol-types") (r "^3.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^3.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.28") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.22") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "0k2nnzyfl8xv0cqsy98y7f730cmiadxrwjg40x3b0zxwhzc6n121")))

(define-public crate-amqp_worker-0.9.0 (c (n "amqp_worker") (v "0.9.0") (d (list (d (n "amq-protocol-types") (r "^3.1") (d #t) (k 0)) (d (n "amq-protocol-uri") (r "^3.1") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lapin-futures") (r "^0.28") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "mockito") (r "^0.23") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1") (d #t) (k 0)))) (h "0pmypgwh0nbdsw94h8nx3r5kh51wdwx8jkdl1nz616nnsy266zzw")))

