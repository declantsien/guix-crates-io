(define-module (crates-io am bi ambient_package_macro_common) #:use-module (crates-io))

(define-public crate-ambient_package_macro_common-0.3.0-rc.2 (c (n "ambient_package_macro_common") (v "0.3.0-rc.2") (d (list (d (n "ambient_package") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "1smgq76w7ax945phqagl0b9r87kazgslcn7glx1izcwqn866pamm") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.0-rc.3 (c (n "ambient_package_macro_common") (v "0.3.0-rc.3") (d (list (d (n "ambient_package") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "02whfzjrdl0ax6s2knvl4zwm6amzp4b7nds5hr4smxx4dfnxbdjr") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.0-rc.3a (c (n "ambient_package_macro_common") (v "0.3.0-rc.3a") (d (list (d (n "ambient_package") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "0fx8mvym511chh98rl77fyf66x4ywnsl18g3n2k6kp10k87iizdz") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.0-rc.4 (c (n "ambient_package_macro_common") (v "0.3.0-rc.4") (d (list (d (n "ambient_package") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "0lf40k4i9jmbw90aiwzd02bvssa5n1ygqaxcr38aixn1mwy15qws") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.0-rc.4a (c (n "ambient_package_macro_common") (v "0.3.0-rc.4a") (d (list (d (n "ambient_package") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "0z7b07lz7gy4x7706s0285b46w5ifg9k920h413z0f37v0m853dr") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.0 (c (n "ambient_package_macro_common") (v "0.3.0") (d (list (d (n "ambient_package") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "07zan2dzilfv4m9zzjl3ddh2mp3dsq4vv8lv7rgrna4mvss8kyh9") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.1-rc.1 (c (n "ambient_package_macro_common") (v "0.3.1-rc.1") (d (list (d (n "ambient_package") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "147gh5380h92km084gga4263q4hrhwzy5i2vf5pw8wzpwlis52am") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.1-rc.2 (c (n "ambient_package_macro_common") (v "0.3.1-rc.2") (d (list (d (n "ambient_package") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "05h4ygv8bkwvq10gxvfkkg7ib1c4za2hr0lif84qr7sbwnvvk1m1") (r "1.70.0")))

(define-public crate-ambient_package_macro_common-0.3.1 (c (n "ambient_package_macro_common") (v "0.3.1") (d (list (d (n "ambient_package") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_package_semantic") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indoc") (r "^2.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)))) (h "1v4bmn8njfadl96vpjvf0r1z0lzrxzg3wg9h8kqhdqn1yz5iy5h9") (r "1.70.0")))

