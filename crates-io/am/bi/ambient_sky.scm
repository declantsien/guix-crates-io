(define-module (crates-io am bi ambient_sky) #:use-module (crates-io))

(define-public crate-ambient_sky-0.2.0-rc5 (c (n "ambient_sky") (v "0.2.0-rc5") (d (list (d (n "ambient_core") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0njp11nnjsk9prhxkh8i09nflgs8zr8k763204zy479dfyk9psgj") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_sky-0.2.0-rc6 (c (n "ambient_sky") (v "0.2.0-rc6") (d (list (d (n "ambient_core") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "02j7zjrl5yvnwfk8rad771gbd01dr2m0xs90vgqdn6wkdmbzdq7s") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_sky-0.2.0-rc7 (c (n "ambient_sky") (v "0.2.0-rc7") (d (list (d (n "ambient_core") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "044m9a6qqgdkw5la6j6xrgw3fyqkfqim9hdw3jmvqxg48linz2z4") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_sky-0.2.0-rc8 (c (n "ambient_sky") (v "0.2.0-rc8") (d (list (d (n "ambient_core") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "048zxvmchxzpkhspnly5gkrg48jk57c43nli0qhlhpj2ldpvwlis") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_sky-0.2.0-rc9 (c (n "ambient_sky") (v "0.2.0-rc9") (d (list (d (n "ambient_core") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0vfp6hk7abrpf1zcbymipyb8wnvzq785j33106zy6ibj21fq3b28") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_sky-0.2.0 (c (n "ambient_sky") (v "0.2.0") (d (list (d (n "ambient_core") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0si4n7rr5n4s54hmx586w79d5xq0di2jmbisp91x7lw0akb5rz6v") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_sky-0.2.1 (c (n "ambient_sky") (v "0.2.1") (d (list (d (n "ambient_core") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "noise") (r "^0.7.0") (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0izqvf9zbmjfdzhz5zjjiand0wb4dkx525flfp7pfq2088pvyzfd") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

