(define-module (crates-io am bi ambient_ecs) #:use-module (crates-io))

(define-public crate-ambient_ecs-0.2.0-rc5 (c (n "ambient_ecs") (v "0.2.0-rc5") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.0-rc5") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "0w95hfyii4bfzjap92v9bx01y0anzhpbs5lhw2fncf9q36rzciwf") (r "1.67.0")))

(define-public crate-ambient_ecs-0.2.0-rc6 (c (n "ambient_ecs") (v "0.2.0-rc6") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.0-rc6") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "1p5cajr22v4pv321mdwg1x917x8s4nrrkcjzb33sxq1y80kiapp0") (r "1.67.0")))

(define-public crate-ambient_ecs-0.2.0-rc7 (c (n "ambient_ecs") (v "0.2.0-rc7") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.0-rc7") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "13van9pznnk2pwy4zz5pvf52dmkpb87d4g93s38jgscv94av3p42") (r "1.67.0")))

(define-public crate-ambient_ecs-0.2.0-rc8 (c (n "ambient_ecs") (v "0.2.0-rc8") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.0-rc8") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "1cprbksrizjy45phc969915kgabfil4cikpia1sylpcjsfx09wnj") (r "1.67.0")))

(define-public crate-ambient_ecs-0.2.0-rc9 (c (n "ambient_ecs") (v "0.2.0-rc9") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.0-rc9") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "1dh4scqjxw16l7kgakjmcg2bvbx2likglhcv4jai9zgk0aprk27l") (r "1.67.0")))

(define-public crate-ambient_ecs-0.2.0 (c (n "ambient_ecs") (v "0.2.0") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.0") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "01ksyabvn6sd7g4ynqffri6s1hk6zkl65aya8lhgahjphcnpxsby") (r "1.67.0")))

(define-public crate-ambient_ecs-0.2.1 (c (n "ambient_ecs") (v "0.2.1") (d (list (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_project_macro") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_project_rt") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.2.1") (f (quote ("native"))) (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "bit-set") (r "^0.5.3") (d #t) (k 0)) (d (n "bit-vec") (r "^0.6.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.17") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.5") (d #t) (k 0) (p "yaml-rust-davvid")))) (h "12igxm1qbhnnpzf1nv7z225hya0k9sap5xh6gfhl008g6nlz46rp") (r "1.67.0")))

