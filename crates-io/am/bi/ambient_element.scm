(define-module (crates-io am bi ambient_element) #:use-module (crates-io))

(define-public crate-ambient_element-0.2.0-rc5 (c (n "ambient_element") (v "0.2.0-rc5") (d (list (d (n "ambient_cb") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc5") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.0-rc5") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc5") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0kfxlaa96vag2qsgjmg2rbhg2d6aa9xjmrlzid92jyhg56i0z7fd") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.2.0-rc6 (c (n "ambient_element") (v "0.2.0-rc6") (d (list (d (n "ambient_cb") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc6") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.0-rc6") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc6") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0cr470zqzv2gvv8njd008qid58gj1mx5xh1qd6dwrmfhadbg7fnw") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.2.0-rc7 (c (n "ambient_element") (v "0.2.0-rc7") (d (list (d (n "ambient_cb") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc7") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.0-rc7") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc7") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0pybraqdkyzcvp1h5cf0hwmqh6scffmamlh2ai9nw56qpry9518k") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.2.0-rc8 (c (n "ambient_element") (v "0.2.0-rc8") (d (list (d (n "ambient_cb") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc8") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.0-rc8") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc8") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1nj9358lsypjfkrp7r6h444i6jyib7zgf2cpz74wviyanwj9x2zh") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.2.0-rc9 (c (n "ambient_element") (v "0.2.0-rc9") (d (list (d (n "ambient_cb") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc9") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.0-rc9") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc9") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "05b0m27hi9rid8cj2hx0ydwxx1gjkv58j3wh8nlni4mikf3qhaga") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.2.0 (c (n "ambient_element") (v "0.2.0") (d (list (d (n "ambient_cb") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.0") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1hyd4z5dbpni7amzsnc0xmdw7zhvjr5nzg5rcry8qvvcyb3fqkiw") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.2.1 (c (n "ambient_element") (v "0.2.1") (d (list (d (n "ambient_cb") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.2.1") (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.8") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1c2kfc15qiycwhv0b78ds3wp8kg28alv1gq81zn86x4c4b9jjzdg") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.67.0")))

(define-public crate-ambient_element-0.3.0-rc.2 (c (n "ambient_element") (v "0.3.0-rc.2") (d (list (d (n "ambient_cb") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.0-rc.2") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.0-rc.2") (k 0)) (d (n "ambient_sys") (r "^0.3.0-rc.2") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0ip3mhhyymfwxk1cii3nv3ajr62nn9da25fdbphyvglqzbfcvw5w") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.0-rc.3 (c (n "ambient_element") (v "0.3.0-rc.3") (d (list (d (n "ambient_cb") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.0-rc.3") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.0-rc.3") (k 0)) (d (n "ambient_sys") (r "^0.3.0-rc.3") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0a0k5b13mdzlh342f1gd04m7xlzz0va5pvd7zga9jswnkg8p4k7x") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.0-rc.3a (c (n "ambient_element") (v "0.3.0-rc.3a") (d (list (d (n "ambient_cb") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.0-rc.3a") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.0-rc.3a") (k 0)) (d (n "ambient_sys") (r "^0.3.0-rc.3a") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1pk9m9l648kfiksn03la0xpk60rg5grvzghnfisa8pzgl41fxccj") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.0-rc.4 (c (n "ambient_element") (v "0.3.0-rc.4") (d (list (d (n "ambient_cb") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.0-rc.4") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.0-rc.4") (k 0)) (d (n "ambient_sys") (r "^0.3.0-rc.4") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "01xprikpmqab1q7msxfpcprc7k7mrsnnx196h7iqvjghgbc4575m") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.0-rc.4a (c (n "ambient_element") (v "0.3.0-rc.4a") (d (list (d (n "ambient_cb") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.0-rc.4a") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.0-rc.4a") (k 0)) (d (n "ambient_sys") (r "^0.3.0-rc.4a") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09mdgh9pac3fh53cwg1rdzm6srlxkxh2rbdllwmgih2v48kzva3y") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.0 (c (n "ambient_element") (v "0.3.0") (d (list (d (n "ambient_cb") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.0") (k 0)) (d (n "ambient_sys") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "08gy4m1c4zp1ink14w50gkf6c3fvb23nvs1l8rvwv9yjpb473inl") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.1-rc.1 (c (n "ambient_element") (v "0.3.1-rc.1") (d (list (d (n "ambient_cb") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.1-dev") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.1-rc.1") (k 0)) (d (n "ambient_sys") (r "^0.3.1-rc.1") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0rdw4pzv8553bdf29w81555j5llnc4wj0rp5gq8icpvwvm5c9mlm") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.1-rc.2 (c (n "ambient_element") (v "0.3.1-rc.2") (d (list (d (n "ambient_cb") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.1-dev") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.1-rc.2") (k 0)) (d (n "ambient_sys") (r "^0.3.1-rc.2") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0l2p5ajj2yqj6rnj15ha66d6lgc0p38d3z713lwf5j55pri72kp4") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

(define-public crate-ambient_element-0.3.1 (c (n "ambient_element") (v "0.3.1") (d (list (d (n "ambient_cb") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_core") (r "^0.3.1-dev") (o #t) (d #t) (k 0)) (d (n "ambient_element_component") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_friendly_id") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_guest_bridge") (r "^0.3.1") (k 0)) (d (n "ambient_sys") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "atomic_refcell") (r "^0.1.11") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "dyn-clonable") (r "^0.9.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "profiling") (r "^1.0.11") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "158zm9iv9kpfz5hrzqypdk3mkqx05a02462las7j460fh4n8yc1i") (f (quote (("guest" "ambient_guest_bridge/guest") ("default" "native")))) (s 2) (e (quote (("native" "dep:ambient_sys" "dep:ambient_core" "dep:tokio" "ambient_guest_bridge/native")))) (r "1.70.0")))

