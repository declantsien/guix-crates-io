(define-module (crates-io am bi ambient_decals) #:use-module (crates-io))

(define-public crate-ambient_decals-0.2.0-rc5 (c (n "ambient_decals") (v "0.2.0-rc5") (d (list (d (n "ambient_asset_cache") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "0h22zwhwqmn9ajcgyiy0zarxb6rv0l3bx3rr76ngs4qp4dqdbq8y") (f (quote (("hotload-includes" "ambient_std/hotload-includes" "ambient_renderer/hotload-includes" "ambient_gpu/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_decals-0.2.0-rc6 (c (n "ambient_decals") (v "0.2.0-rc6") (d (list (d (n "ambient_asset_cache") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "0hw59rr2ckmyr770zi6kc3kjf8f152j92nsxmgpn52jwskzi8c1f") (f (quote (("hotload-includes" "ambient_std/hotload-includes" "ambient_renderer/hotload-includes" "ambient_gpu/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_decals-0.2.0-rc7 (c (n "ambient_decals") (v "0.2.0-rc7") (d (list (d (n "ambient_asset_cache") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "1k131hcs787pkvfiaplcy3azjj2n86q5nb5f25125pnbqdmcykrp") (f (quote (("hotload-includes" "ambient_std/hotload-includes" "ambient_renderer/hotload-includes" "ambient_gpu/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_decals-0.2.0-rc9 (c (n "ambient_decals") (v "0.2.0-rc9") (d (list (d (n "ambient_asset_cache") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "0jc6chig3a71i6d9rzdvz6qiv4a4rayjx4nayd1p4ccp01k6sl15") (f (quote (("hotload-includes" "ambient_std/hotload-includes" "ambient_renderer/hotload-includes" "ambient_gpu/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_decals-0.2.0 (c (n "ambient_decals") (v "0.2.0") (d (list (d (n "ambient_asset_cache") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "0s9gy94iiycprn3dh659j626n2r9f2glsxpz5yzssgdimbqakw16") (f (quote (("hotload-includes" "ambient_std/hotload-includes" "ambient_renderer/hotload-includes" "ambient_gpu/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_decals-0.2.1 (c (n "ambient_decals") (v "0.2.1") (d (list (d (n "ambient_asset_cache") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "03cphiqi45gawn0qw46vi7c4k7v31qarbpnljypzhfppbqqf2i3g") (f (quote (("hotload-includes" "ambient_std/hotload-includes" "ambient_renderer/hotload-includes" "ambient_gpu/hotload-includes")))) (r "1.67.0")))

