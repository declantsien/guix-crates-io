(define-module (crates-io am bi ambient_gizmos) #:use-module (crates-io))

(define-public crate-ambient_gizmos-0.2.0-rc5 (c (n "ambient_gizmos") (v "0.2.0-rc5") (d (list (d (n "ambient_core") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0xz7zp9pgi76b7cqg0izfxn1lcpaqpidjghwlwjfxc37lwwzl9pl") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gizmos-0.2.0-rc6 (c (n "ambient_gizmos") (v "0.2.0-rc6") (d (list (d (n "ambient_core") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0rcy5czkwc0vhz0jb0s3jxfn96c6gx6vv5v504mphb1aq5x6jh3s") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gizmos-0.2.0-rc7 (c (n "ambient_gizmos") (v "0.2.0-rc7") (d (list (d (n "ambient_core") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0mq1mgsfs33d89zc42q7dz9673xf3w3zd5zyhwf19l9ffvszjs9g") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gizmos-0.2.0-rc8 (c (n "ambient_gizmos") (v "0.2.0-rc8") (d (list (d (n "ambient_core") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "1g56vp0m1xacp3l13rhvkfn8b08y1460ipbb3jgaml8dafqhrxcq") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gizmos-0.2.0-rc9 (c (n "ambient_gizmos") (v "0.2.0-rc9") (d (list (d (n "ambient_core") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "1gawicbd87vz53r8c45zf97l9y954zc0sb3cf7zaaxq80c8xb7sf") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gizmos-0.2.0 (c (n "ambient_gizmos") (v "0.2.0") (d (list (d (n "ambient_core") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "0h3zp49c279l7q191q2l04vy2jj0494jf7j4fj14a5qmgmzbvgk7") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gizmos-0.2.1 (c (n "ambient_gizmos") (v "0.2.1") (d (list (d (n "ambient_core") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_meshes") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)))) (h "1mww6v9z2whq2m5anjwzm3yz01hg9qb6sxay5l2kyi328gpgf03l") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

