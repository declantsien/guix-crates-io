(define-module (crates-io am bi ambient_prefab) #:use-module (crates-io))

(define-public crate-ambient_prefab-0.2.0-rc5 (c (n "ambient_prefab") (v "0.2.0-rc5") (d (list (d (n "ambient_core") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_decals") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_model") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_network") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_physics") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)))) (h "1i2acgc5bhp2hxsz0bywpjq4dfhznai027n3r7hj9xmbbh6kps1b") (r "1.67.0")))

(define-public crate-ambient_prefab-0.2.0-rc6 (c (n "ambient_prefab") (v "0.2.0-rc6") (d (list (d (n "ambient_core") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_decals") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_model") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_network") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_physics") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)))) (h "1l4k1j1v4bz07aida86kmzmf9yz5l3cnwq19a1i7r8ss2ckjf5v1") (r "1.67.0")))

(define-public crate-ambient_prefab-0.2.0-rc7 (c (n "ambient_prefab") (v "0.2.0-rc7") (d (list (d (n "ambient_core") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_decals") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_model") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_network") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_physics") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)))) (h "059bxwfkk365d0ykarh63aq264kklqr2pf01jk3r4hvjg87d7l6b") (r "1.67.0")))

(define-public crate-ambient_prefab-0.2.0-rc9 (c (n "ambient_prefab") (v "0.2.0-rc9") (d (list (d (n "ambient_core") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_decals") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_model") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_network") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_physics") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)))) (h "0mprhig7q56jzlclg2vb69rx64mr3bgf39brh5dq2gcyalqipbkz") (r "1.67.0")))

(define-public crate-ambient_prefab-0.2.0 (c (n "ambient_prefab") (v "0.2.0") (d (list (d (n "ambient_core") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_decals") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_model") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_network") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_physics") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)))) (h "0hjdmhz66sf4jbbxd1hrdbqz8jslmngrgcvvkzlb78cyrjrrhxxp") (r "1.67.0")))

(define-public crate-ambient_prefab-0.2.1 (c (n "ambient_prefab") (v "0.2.1") (d (list (d (n "ambient_core") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_decals") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_model") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_network") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_physics") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)))) (h "03p85fn4455s18jsbhw116536avbzz78f6wazpq4z5vbnpwb530c") (r "1.67.0")))

