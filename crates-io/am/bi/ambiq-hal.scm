(define-module (crates-io am bi ambiq-hal) #:use-module (crates-io))

(define-public crate-ambiq-hal-0.1.0 (c (n "ambiq-hal") (v "0.1.0") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "13y2fkvxz0x5gzrjpf22q256zpjf09jj5zxn7bfq4ijdbnbnz21r") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.1.1 (c (n "ambiq-hal") (v "0.1.1") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "1xpm4cviad0m5hwrffjqcxyf39fpil1fhgp2v30lxclpi1k8k6s9") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.1.2 (c (n "ambiq-hal") (v "0.1.2") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "1gfg7h3pjszwjd8lwfypl6n15phjgdwz688rwwykq6cwdcxpkyar") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.2.0 (c (n "ambiq-hal") (v "0.2.0") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "1nvrnjhld7a0r90n48n0ihpf2ksvi8fqc1a21v36y4vx34mld5s9") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.3.0 (c (n "ambiq-hal") (v "0.3.0") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "rtcc") (r "^0.3.0") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "0g2ni2dr8d5g0wbcpc6c88mf0sy6xw8qh15zjslbhr0iqbcapn81") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.3.1 (c (n "ambiq-hal") (v "0.3.1") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "rtcc") (r "^0.3.0") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "18c15d3xy61v12w55pgzjhz4k77bw892faisndbvnyq9j3csz6wm") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.3.2 (c (n "ambiq-hal") (v "0.3.2") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "rtcc") (r "^0.3.0") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "1c4jckj4q4q0ga6l4bcbfglhl3a0g5ay4hsjscjn9ip5vcfffssy") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

(define-public crate-ambiq-hal-0.3.3 (c (n "ambiq-hal") (v "0.3.3") (d (list (d (n "ambiq-apollo3-pac2") (r "^0.2.0") (d #t) (k 0)) (d (n "ambiq-hal-sys") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (k 0)) (d (n "cortex-m") (r "^0.7") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "defmt") (r "^0.3") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.6") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-time") (r "^0.12.1") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "rtcc") (r "^0.3.0") (d #t) (k 0)) (d (n "ufmt") (r "^0.1.0") (d #t) (k 0)))) (h "1i649rqdqk1hrszpskwm8rdwgr91b1qqp844q04acf9in9jdp9az") (f (quote (("sparkfun-redboard-nano" "ambiq-hal-sys/sparkfun-redboard-nano") ("sparkfun-redboard" "ambiq-hal-sys/sparkfun-redboard") ("rt" "cortex-m-rt" "ambiq-apollo3-pac2/rt") ("default") ("ambiq-sdk" "ambiq-hal-sys"))))))

