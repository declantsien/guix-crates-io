(define-module (crates-io am bi ambient_audio) #:use-module (crates-io))

(define-public crate-ambient_audio-0.2.0-rc5 (c (n "ambient_audio") (v "0.2.0-rc5") (d (list (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1y7j0pk3a628f1f2gj3y63mj7i8lydiyqn1dx7xk9xax6aiwmwws") (r "1.67.0")))

(define-public crate-ambient_audio-0.2.0-rc6 (c (n "ambient_audio") (v "0.2.0-rc6") (d (list (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0p124cc0wxjdh3hhqjzn3cadczc613x5fn9kwm6nfs6jnd247w6a") (r "1.67.0")))

(define-public crate-ambient_audio-0.2.0-rc7 (c (n "ambient_audio") (v "0.2.0-rc7") (d (list (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1g4knz47rjzms5yj7vzp7nm1wmbbvax0q6mj81vfbrx6nngms8fd") (r "1.67.0")))

(define-public crate-ambient_audio-0.2.0-rc8 (c (n "ambient_audio") (v "0.2.0-rc8") (d (list (d (n "ambient_std") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1qb4rc8w7v875v20p6fv20m1ddininkhig0paj0wr3jjy7lnwh3g") (r "1.67.0")))

(define-public crate-ambient_audio-0.2.0-rc9 (c (n "ambient_audio") (v "0.2.0-rc9") (d (list (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "110l6lai268psi1d9c11i03bikqcivy4pdc8c44q5ymqmf827gpf") (r "1.67.0")))

(define-public crate-ambient_audio-0.2.0 (c (n "ambient_audio") (v "0.2.0") (d (list (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1pdysvscfcr85q35zv3nwyfnlvgxq7r6n7dzsjjqx7616sf775ry") (r "1.67.0")))

(define-public crate-ambient_audio-0.2.1 (c (n "ambient_audio") (v "0.2.1") (d (list (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.1") (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "circular-queue") (r "^0.2") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "cpal") (r "^0.14.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.11") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lewton") (r "^0.10.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1.0") (d #t) (k 2)) (d (n "macroquad") (r "=0.3.24") (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6") (d #t) (k 0)) (d (n "rustfft") (r "^6.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc" "derive"))) (d #t) (k 0)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1mn9lzc0h7f5vnk6bdx9mh5ywswbsdsw24cd9l6wdkqvim06va6a") (r "1.67.0")))

