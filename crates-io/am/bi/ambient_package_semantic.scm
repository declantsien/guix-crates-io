(define-module (crates-io am bi ambient_package_semantic) #:use-module (crates-io))

(define-public crate-ambient_package_semantic-0.3.0-rc.2 (c (n "ambient_package_semantic") (v "0.3.0-rc.2") (d (list (d (n "ambient_package") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rrl27lcw175di4rfqyybjz06k76nn50asmdfdgkdwy3clznivxh") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.0-rc.3 (c (n "ambient_package_semantic") (v "0.3.0-rc.3") (d (list (d (n "ambient_dirs") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.0-dev") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ign7vrqqs95gghq9wzlak9xsj774kczf3va935afrvlhkshk0sx") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.0-rc.3a (c (n "ambient_package_semantic") (v "0.3.0-rc.3a") (d (list (d (n "ambient_dirs") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.0-rc.3a") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0l91p7p7rc2y1gsm7bh3y7h0mggm36fsizh8hg9psp1samfm05fd") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.0-rc.4 (c (n "ambient_package_semantic") (v "0.3.0-rc.4") (d (list (d (n "ambient_dirs") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.0-rc.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "10x29v038si0w6bvkgn9dhpmpylf251yh33dg2n1a801x4x0ap1k") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.0-rc.4a (c (n "ambient_package_semantic") (v "0.3.0-rc.4a") (d (list (d (n "ambient_dirs") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.0-rc.4a") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1p14p5r852v7baan5lh88qs2ksswd08yhgapzc69l8yk1vfwbml5") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.0 (c (n "ambient_package_semantic") (v "0.3.0") (d (list (d (n "ambient_dirs") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.0") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "03w7a3abraa7jlx4yzrqwp37iksimm20yw6k0gzk32n905pwpwrp") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.1-rc.1 (c (n "ambient_package_semantic") (v "0.3.1-rc.1") (d (list (d (n "ambient_dirs") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0syah1pk9wdp7rsni0593cg8b2ifr05nl05p7kah3iqipfi09l1n") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.1-rc.2 (c (n "ambient_package_semantic") (v "0.3.1-rc.2") (d (list (d (n "ambient_dirs") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "00cji3jg7fnz4s6v08z3xb09gspdzbbbz5jknj8kbd3c00xxz895") (r "1.70.0")))

(define-public crate-ambient_package_semantic-0.3.1 (c (n "ambient_package_semantic") (v "0.3.1") (d (list (d (n "ambient_dirs") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_package") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_schema") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_shared_types") (r "^0.3.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.3.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "data-encoding") (r "^2.4.0") (d #t) (k 0)) (d (n "glam") (r "^0.24") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (f (quote ("blocking" "rustls-tls" "json"))) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.7.8") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "ulid") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0dhjsrn7jx3g8151w5wkd6r3j6pfca4zbxb9fqmm4jq5nhmbvfs6") (r "1.70.0")))

