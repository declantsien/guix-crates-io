(define-module (crates-io am bi ambient_asset_cache) #:use-module (crates-io))

(define-public crate-ambient_asset_cache-0.2.0-rc5 (c (n "ambient_asset_cache") (v "0.2.0-rc5") (d (list (d (n "ambient_sys") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "05i1n0l18052f3s5ci43dbzqdjl3k4i933y7a3ahn3hwdv05pphr") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.2.0-rc6 (c (n "ambient_asset_cache") (v "0.2.0-rc6") (d (list (d (n "ambient_sys") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1sgg4zvgch58i27b6qifs3c6n3jsgwhwhwshrz6gg30vc8g4hrsb") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.2.0-rc7 (c (n "ambient_asset_cache") (v "0.2.0-rc7") (d (list (d (n "ambient_sys") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0vagy5r5hffja4xzhcvd6x14x2q0bgs5fa860d23dyhxll28z3hc") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.2.0-rc8 (c (n "ambient_asset_cache") (v "0.2.0-rc8") (d (list (d (n "ambient_sys") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0y2vbybvm4f23gqbcrxn0vk4dxzvx1djh4blss2rd621wykqlwhq") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.2.0-rc9 (c (n "ambient_asset_cache") (v "0.2.0-rc9") (d (list (d (n "ambient_sys") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "0z183nhd6y8i3nnwy7b75nimd1jk2ldwnffrpxz13zgk12jiz80q") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.2.0 (c (n "ambient_asset_cache") (v "0.2.0") (d (list (d (n "ambient_sys") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1009c0w5m1bz06wpyi0798iilxxnmcs2l1x1jf7pmwnp0z7rq3a9") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.2.1 (c (n "ambient_asset_cache") (v "0.2.1") (d (list (d (n "ambient_sys") (r "^0.2.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "as-any") (r "^0.2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)))) (h "1xidgk8igp6ga8b304jmidrlh13il1yc9045pqazfb5xynqf0i6m") (r "1.67.0")))

(define-public crate-ambient_asset_cache-0.3.1-rc.1 (c (n "ambient_asset_cache") (v "0.3.1-rc.1") (d (list (d (n "ambient_sys") (r "^0.3.1-rc.1") (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1j7zh7qzlg8hm7kfi91482afg9iprdf1gh8yv9fawfdg7s6qwrnm") (r "1.70.0")))

(define-public crate-ambient_asset_cache-0.3.1-rc.2 (c (n "ambient_asset_cache") (v "0.3.1-rc.2") (d (list (d (n "ambient_sys") (r "^0.3.1-rc.2") (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "10nsz4gw4a3q2gas1kbk6s0825wha1q5qn4y92qvx90h5d440d3j") (r "1.70.0")))

(define-public crate-ambient_asset_cache-0.3.1 (c (n "ambient_asset_cache") (v "0.3.1") (d (list (d (n "ambient_sys") (r "^0.3.1") (d #t) (k 0)) (d (n "as-any") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde" "clock"))) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1y4783qj01c1hiapy8d3m8fa12cbyqqa12370sz6fwg3v80299yh") (r "1.70.0")))

