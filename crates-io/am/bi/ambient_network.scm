(define-module (crates-io am bi ambient_network) #:use-module (crates-io))

(define-public crate-ambient_network-0.2.0-rc5 (c (n "ambient_network") (v "0.2.0-rc5") (d (list (d (n "ambient_app") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0nkn9mxwmzg28gf76p338lkd55hnrh0p259z2jpanvmkyiffv5yn") (r "1.67.0")))

(define-public crate-ambient_network-0.2.0-rc6 (c (n "ambient_network") (v "0.2.0-rc6") (d (list (d (n "ambient_app") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2.6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1chd1gajfgaip8jsa7f990scd1vyhnc2jmz25cxikghhkk9h0gm8") (r "1.67.0")))

(define-public crate-ambient_network-0.2.0-rc7 (c (n "ambient_network") (v "0.2.0-rc7") (d (list (d (n "ambient_app") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2.6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "18cv7gg324882d4fq3r1ksy5i46yfijgqqgazh12nqky3vxjcnjf") (r "1.67.0")))

(define-public crate-ambient_network-0.2.0-rc8 (c (n "ambient_network") (v "0.2.0-rc8") (d (list (d (n "ambient_app") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2.6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1jmdi0zpjhpcgdq9fnxf4d0h92l96rn7g4qi9in68f96lmi35012") (r "1.67.0")))

(define-public crate-ambient_network-0.2.0-rc9 (c (n "ambient_network") (v "0.2.0-rc9") (d (list (d (n "ambient_app") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2.6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0xah4sspggjhzs2z8s1kig7708wdxd83k444al71pwj92v8bjdz5") (r "1.67.0")))

(define-public crate-ambient_network-0.2.0 (c (n "ambient_network") (v "0.2.0") (d (list (d (n "ambient_app") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2.6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1m0c5nqxikqa0iigakckkfzbi1xr60wa38y70fr547wv756i1zg7") (r "1.67.0")))

(define-public crate-ambient_network-0.2.1 (c (n "ambient_network") (v "0.2.1") (d (list (d (n "ambient_app") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_core") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ecs") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_element") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_gizmos") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_gpu") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_profiling") (r "^1.0.9") (f (quote ("profile-with-puffin"))) (d #t) (k 0)) (d (n "ambient_proxy") (r "^0.2.6") (d #t) (k 0)) (d (n "ambient_renderer") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_rpc") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_ui_native") (r "^0.2.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (f (quote ("async"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "manual_future") (r "^0.1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quinn") (r "^0.9") (f (quote ("futures-io"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rustls") (r "^0.20.6") (f (quote ("dangerous_configuration" "quic"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_os = \"unknown\"))") (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "09dh7k63h7ycwqwlp5ishn8z8vpwvn6qnzb6s9k2f8fkc9jw1is5") (r "1.67.0")))

