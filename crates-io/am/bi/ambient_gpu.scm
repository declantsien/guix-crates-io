(define-module (crates-io am bi ambient_gpu) #:use-module (crates-io))

(define-public crate-ambient_gpu-0.2.0-rc5 (c (n "ambient_gpu") (v "0.2.0-rc5") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc5") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zwv1abnnvdb7ivl7x1vysp70hgi4b2rc8kz26r48rmxppmvvy7x") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gpu-0.2.0-rc6 (c (n "ambient_gpu") (v "0.2.0-rc6") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "10r0s4gl1hn5q64h3fy4sy9m1a40vl1smi97vlmz3x3hak0q8nrh") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gpu-0.2.0-rc7 (c (n "ambient_gpu") (v "0.2.0-rc7") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1wmmyzc99vpzmlf7vk2sbywkvpx6f1xg5myrlr4q7pd4bc9gzrbj") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gpu-0.2.0-rc8 (c (n "ambient_gpu") (v "0.2.0-rc8") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0l6a8ifgssmhi5vgcpsqpikb26qbl5k87g1pxmpmzkj8i056bak7") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gpu-0.2.0-rc9 (c (n "ambient_gpu") (v "0.2.0-rc9") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0-rc9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1xr9cq8715dfg7n4livwd2cp9d4wi64ghsjwis90j2l37151qzbv") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gpu-0.2.0 (c (n "ambient_gpu") (v "0.2.0") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.0") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1hcvfl1lqd38krpbs4v6i7j2dil7ifvhi3n3hcidzzhx0mykinh4") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

(define-public crate-ambient_gpu-0.2.1 (c (n "ambient_gpu") (v "0.2.1") (d (list (d (n "aho-corasick") (r "^0.7.20") (d #t) (k 0)) (d (n "ambient_std") (r "^0.2.1") (d #t) (k 0)) (d (n "ambient_sys") (r "^0.2.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "glam") (r "^0.22") (f (quote ("bytemuck" "serde" "rand"))) (d #t) (k 0)) (d (n "image") (r "^0.24.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "wgpu") (r "^0.16.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_os = \"unknown\")") (k 2)) (d (n "winit") (r "^0.28.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "0nbjpx1rqmgj07lm3l0qbsgn2nnhgb81mwpxjyivmqin2f25qm0s") (f (quote (("hotload-includes" "ambient_std/hotload-includes")))) (r "1.67.0")))

