(define-module (crates-io am pl amplify) #:use-module (crates-io))

(define-public crate-amplify-0.1.0 (c (n "amplify") (v "0.1.0") (d (list (d (n "serde_derive") (r "~1.0.111") (o #t) (d #t) (k 0)))) (h "0jf8fcxmayc7g9di23vi1jwh9qlrbcyz2xyfv21mwf40g1w651j6") (f (quote (("std") ("default" "std"))))))

(define-public crate-amplify-0.1.1 (c (n "amplify") (v "0.1.1") (d (list (d (n "serde_derive") (r "~1.0.111") (o #t) (d #t) (k 0)))) (h "0a02q5cxwl65xfxf8rbjhbgz3ddqkbngl2mf8vpi9r7in379ff2p") (f (quote (("std") ("default" "std"))))))

(define-public crate-amplify-0.1.2 (c (n "amplify") (v "0.1.2") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "00mcmsryf91w3wg4j238ix6hq2f749b2wwp81grwl4yl2xlfh0pc") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.3 (c (n "amplify") (v "0.1.3") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0dzvfyvrf2997rkqv0rkrg3b0aixq2yab00hv99awnn8k0gcivf1") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.4 (c (n "amplify") (v "0.1.4") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "~1.0.31") (d #t) (k 0)))) (h "028v49c3kkx317llgd28njl75zgnkv546dkpbn157cdba8dnd8j3") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.5 (c (n "amplify") (v "0.1.5") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "~1.0.31") (d #t) (k 0)))) (h "0zxs4k0w9x4ir205mkqyqqn0yzc802j540v5wfg93n2i895vivmk") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.6 (c (n "amplify") (v "0.1.6") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "~1.0.31") (d #t) (k 0)))) (h "0mx45l55ykbdrj7ca766dd69yarqpc5r46q54dr2raak524kcyd9") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.7 (c (n "amplify") (v "0.1.7") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "~1.0.31") (d #t) (k 0)))) (h "04p4ixaxf8xdvvvrsny5cf09dlddiq5pqrif9kbf2qdawba3garj") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.8 (c (n "amplify") (v "0.1.8") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "~1.0.31") (d #t) (k 0)))) (h "1pbmlqclm2sqzxhny43khmxm518mh6dx7wmp9v173b7761lmrwcd") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-0.1.9 (c (n "amplify") (v "0.1.9") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "~1.0.31") (d #t) (k 0)))) (h "1pi85r8x5h37anq35b5j7ywlj2jlqapvsdchym8sw22mz650p8y1") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-1.0.0-beta.1 (c (n "amplify") (v "1.0.0-beta.1") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1cim3vrp03ikwcm9jc8myrr5g3c2j0qi9ra9k6ai6xqp00wy9wqg") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-1.0.0 (c (n "amplify") (v "1.0.0") (d (list (d (n "serde") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0z4i21ghp61gbasydh0f4h5ywrhg6jzbrfqfijm3rnqz8v381fzp") (f (quote (("std") ("default" "std") ("all" "serde" "std"))))))

(define-public crate-amplify-1.1.0 (c (n "amplify") (v "1.1.0") (d (list (d (n "async-trait") (r "~0.1.30") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "torut") (r "~0.1.2") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1iw8awiw7qwyyz3vl0i5lfd3xxxkdyahsv3fhcrsjdxmzs7zizp2") (f (quote (("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std") ("default" "std") ("async" "async-trait" "std") ("all" "serde" "std" "tor" "async" "parse_arg"))))))

(define-public crate-amplify-1.1.1 (c (n "amplify") (v "1.1.1") (d (list (d (n "async-trait") (r "~0.1.30") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "torut") (r "~0.1.2") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0ln23821zgsv6q76bqb4wnlkardnc41pgz878fb77z077gxpsjhc") (f (quote (("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std") ("default" "std") ("async" "async-trait" "std") ("all" "serde" "std" "tor" "async" "parse_arg"))))))

(define-public crate-amplify-1.2.0 (c (n "amplify") (v "1.2.0") (d (list (d (n "async-trait") (r "~0.1.30") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0lv751srsrn7c7p8jwjp6d7yji5nfvqffxyhbmkb5j0cq4fbw3kg") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std") ("default" "std") ("async" "async-trait" "std") ("all" "serde" "std" "tor" "async" "parse_arg"))))))

(define-public crate-amplify-1.2.1 (c (n "amplify") (v "1.2.1") (d (list (d (n "async-trait") (r "~0.1.30") (o #t) (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1vx14i5bwrnwzarf0976v8kg6y92fm39f1dxrj60vzrixmy92yhl") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std") ("default" "std") ("async" "async-trait" "std") ("all" "serde" "std" "tor" "async" "parse_arg"))))))

(define-public crate-amplify-2.0.0-rc.1 (c (n "amplify") (v "2.0.0-rc.1") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0i167mby4dgzd02q3xnzdlnxr60l3zls2fph62jqbz9pk56cjjgl") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers") ("nightly") ("default" "std") ("all" "serde" "std" "tor" "parse_arg"))))))

(define-public crate-amplify-2.0.0 (c (n "amplify") (v "2.0.0") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "103s6hf1clq0bf1fz1afh86399ns6xxn0rakpw9n711rx87q8ikw") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers") ("nightly") ("default" "std") ("all" "serde" "std" "tor" "parse_arg"))))))

(define-public crate-amplify-2.0.1 (c (n "amplify") (v "2.0.1") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1filfj5rlsbg7ma7i1a8qfvb5iydnkansvwykmnxqh51v075di5n") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers") ("nightly") ("default" "std") ("all" "serde" "std" "tor" "parse_arg"))))))

(define-public crate-amplify-2.0.2 (c (n "amplify") (v "2.0.2") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1kc1rgvq1hl0hah993lqq10fh44dh0ijq7wfmarc4ixhdh231hp5") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers") ("nightly") ("default" "std") ("all" "serde" "std" "tor" "parse_arg"))))))

(define-public crate-amplify-2.0.3 (c (n "amplify") (v "2.0.3") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("serde_str_helpers"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0mgb2qzwkzy2np6dz3gy0lgb93qw18xnrkn1cv2qp2ini7jlp5qd") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers") ("nightly") ("default" "std") ("all" "serde" "std" "tor" "parse_arg"))))))

(define-public crate-amplify-2.0.4 (c (n "amplify") (v "2.0.4") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("serde_str_helpers"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "02a0xfsrdmk33p3wm84aicn1w9z51d37xb6ai9qwpdlhkb0zaphq") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers" "stringly_conversions/alloc") ("nightly") ("default" "std") ("all" "serde" "std" "tor" "parse_arg"))))))

(define-public crate-amplify-2.0.5 (c (n "amplify") (v "2.0.5") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0zn531a1w1hsas8v4g33nb100pi27zb1f6rr4dlgh844hfymkiyr") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.0.6 (c (n "amplify") (v "2.0.6") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0dbqfimzgwlczs5mr07ar8fssc7ghjk8rah8946n7w2ly05ixgy8") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.0.7 (c (n "amplify") (v "2.0.7") (d (list (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "064z1y961snkykdgjmq3m47q0jfd6w0piqsd7ps1xadyz3v4pcvn") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.1.0 (c (n "amplify") (v "2.1.0") (d (list (d (n "amplify_derive") (r "~2.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "00z9bj2vl51q1yjmrdnzv5ar0kx0zwk4kkazmlh51kz219xchbbl") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.1.1 (c (n "amplify") (v "2.1.1") (d (list (d (n "amplify_derive") (r "~2.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1h2aggiz22gd5bgxwms0z260nw95wxxaaid0y7cqf0w6gjxaiwmn") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.1.2 (c (n "amplify") (v "2.1.2") (d (list (d (n "amplify_derive") (r "~2.1.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0krwpwr3hnkx8wakcny3wx7yalibm3rq67gcvj20vch1wzr45hlq") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.2.1 (c (n "amplify") (v "2.2.1") (d (list (d (n "amplify_derive") (r "~2.2.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1n6d2knbvdb7ayylanapyl5gypvf629q7bapr6y21b9b20nck2xy") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.3.0-rc.1 (c (n "amplify") (v "2.3.0-rc.1") (d (list (d (n "amplify_derive") (r "~2.2.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.55") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "~0.8.13") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "~0.5.6") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0w93v54dgdlf0gzi557icchrh2y8f5kn5xcamnjram0scl3pc5zj") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.3.0 (c (n "amplify") (v "2.3.0") (d (list (d (n "amplify_derive") (r "~2.3.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.55") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "~0.8.13") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "~0.5.6") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "1x23dj0gi6jlv2iw9wpi3iizk3nascg2994y6yi654x0fybia6r1") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.3.1 (c (n "amplify") (v "2.3.1") (d (list (d (n "amplify_derive") (r "~2.3.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "~1.0.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "~0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "~1.0.111") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "~1.0.55") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "~0.8.13") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "~0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "~0.5.6") (o #t) (d #t) (k 0)) (d (n "torut") (r "~0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "18j9ak3q9vqngf0h3c3xa94hrzv55x68ny0ldrfizijxvsl2r240") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-2.4.0 (c (n "amplify") (v "2.4.0") (d (list (d (n "amplify_derive") (r "^2.4") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "torut") (r "^0.1.6") (f (quote ("v2" "v3"))) (o #t) (d #t) (k 0)))) (h "0aya2ccabrr48736z1d1w84jps532bagbrlrsv65cza63lvmm84h") (f (quote (("vendored_openssl" "torut/vendored_openssl") ("tor" "torut/v3" "torut/v2" "ed25519-dalek" "parse_arg" "std") ("std") ("serde" "serde_crate" "torut/serialize" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "tor" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-3.0.0 (c (n "amplify") (v "3.0.0") (d (list (d (n "amplify_derive") (r "^2.4") (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1cvm9g71vgfn7xsq4chrvfqiawnkrpr7l3grrgqgc1b67mfbv82q") (f (quote (("std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-3.1.0 (c (n "amplify") (v "3.1.0") (d (list (d (n "amplify_derive") (r "^2.4") (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0sbil1y6zw1d1xk6aqffvjsfv7vwrfapb6hfja4h50kd9mdk2mpr") (f (quote (("std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-3.1.1 (c (n "amplify") (v "3.1.1") (d (list (d (n "amplify_derive") (r "^2.4") (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1qsymj4p5imizvij6f05kagwd82yvk1lgq2w5qmxlykaa6nmca7r") (f (quote (("std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("all" "serde" "std" "parse_arg" "stringly_conversions"))))))

(define-public crate-amplify-3.2.0 (c (n "amplify") (v "3.2.0") (d (list (d (n "amplify_derive") (r "^2.5") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1lq3gdc659r2dwbz74mgcm7pj2qkxv3wbmg709ajj73pgy4dimvc") (f (quote (("std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("default" "std") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw"))))))

(define-public crate-amplify-3.3.0 (c (n "amplify") (v "3.3.0") (d (list (d (n "amplify_derive") (r "^2.5") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1zadgr4sh91kdbxds9wy4ackhzk6b5k80i3f4ghfrwhkdvx0lzhd") (f (quote (("std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("default" "std") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr"))))))

(define-public crate-amplify-3.4.0 (c (n "amplify") (v "3.4.0") (d (list (d (n "amplify_derive") (r "^2.7") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "10bdd7qyqsf0hhf4jigsvj1192xs1hsnfhacya8r38ggcms743kc") (f (quote (("std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("default" "std") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr"))))))

(define-public crate-amplify-3.5.0 (c (n "amplify") (v "3.5.0") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0cax7wdw68hvym332r1pfwv2g8snmfcacb8iixv1h5fa1nr3c8gm") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.5.1 (c (n "amplify") (v "3.5.1") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "12k650giq4mgs0kp85bkqjw8lm4p1zcvvadsqwjj7qxa3ldcir2d") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.5.2 (c (n "amplify") (v "3.5.2") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "07rx3npnq210j25prh5frraffvsvsh8pl8w6h92m2dq3apcb64wb") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.5.3 (c (n "amplify") (v "3.5.3") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1hi6nawxmj8gdr57dc7sid6kzzawblb8h0wgaadaaf79v44ww541") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.6.0 (c (n "amplify") (v "3.6.0") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0f2kqn9bjda5jq78pq7qqxssiclzvr52w22ykgcx11wyhhidlkpd") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.6.1 (c (n "amplify") (v "3.6.1") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0dmc3v93rf1nhnpq0hkvnaypxvc6506ybg87v2fm4l1mx0kccw5q") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.6.2 (c (n "amplify") (v "3.6.2") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "13m5dsvqrw2mg5rdg0j98z9rdr46j6mphq8bw6r1xfckxyrv714j") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.6.3 (c (n "amplify") (v "3.6.3") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1macfwzihg9gh4cfbv31i6fbpg2vax9y7y4d0qyiy9s0kd5wvvsz") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.6.4 (c (n "amplify") (v "3.6.4") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1hjjazckimj4p7jhbk5zxli8406y8fcrjqk6xz4gfwgbnw0bbf27") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.7.0 (c (n "amplify") (v "3.7.0") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0hy09mqcf5p5aabw2a7krllnvh3hwx781638ijz3vx8j0f067gjf") (f (quote (("std" "derive") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.7.1 (c (n "amplify") (v "3.7.1") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1c7nvq8kr93ap21wk9gcf1rlx3j8y38f33q55jg0grmwn7wim6xa") (f (quote (("std" "derive" "amplify_num/hex") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("derive" "amplify_derive" "std") ("default" "std" "derive") ("c_raw" "libc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive"))))))

(define-public crate-amplify-3.8.0 (c (n "amplify") (v "3.8.0") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.2") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1v6mm9fin02dzhxc5kqq3iy8ygqz7id808fzw312ssrc4jij56n4") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc"))))))

(define-public crate-amplify-3.8.1 (c (n "amplify") (v "3.8.1") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.2") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1shw5lk2y26l9db3z5anmh545jjf17fkrdqlbn3czc93a8h177dx") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc"))))))

(define-public crate-amplify-3.8.2 (c (n "amplify") (v "3.8.2") (d (list (d (n "amplify_derive") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.2.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0gbczrcm457w0arnx3x20k66whnvss5dxv6ibpfk0ijjfdd2mkrf") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc"))))))

(define-public crate-amplify-3.9.0 (c (n "amplify") (v "3.9.0") (d (list (d (n "amplify_derive") (r "^2.8") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.2.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0x1zlxiwcg8g9d8kmfiwj1jxdsnxv7vyxjia8fwjcqpba08mqs3z") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc")))) (y #t)))

(define-public crate-amplify-3.9.1 (c (n "amplify") (v "3.9.1") (d (list (d (n "amplify_derive") (r "^2.9") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.2.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1cm9s6awmzhg1lvpz494sy0hfkjjqmrf56saz9k588172hijzrm8") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc"))))))

(define-public crate-amplify-3.10.0 (c (n "amplify") (v "3.10.0") (d (list (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.2.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "15v850ki3mnvjgadkafk3n1q88r6x9zfkk7dixz91y24a2h9grii") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc"))))))

(define-public crate-amplify-3.11.0 (c (n "amplify") (v "3.11.0") (d (list (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.3.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0vzlnxk7d7cgl7xygp9a2lrv8lm9a9rm30mx4jdxa8llbkvk0p3d") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "alloc"))))))

(define-public crate-amplify-3.12.0 (c (n "amplify") (v "3.12.0") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "07dlv3j16mlb3fm3a7ga8j3hylva2phmlkrylqjh257bkskadks7") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std"))))))

(define-public crate-amplify-3.12.1 (c (n "amplify") (v "3.12.1") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (t "cfg(bench)") (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1wxcz0n99z4an3dk2bwh408sv3ahn7zw743xiakgw3vhhr760p74") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std"))))))

(define-public crate-amplify-3.13.0 (c (n "amplify") (v "3.13.0") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2.11") (d #t) (t "cfg(bench)") (k 2)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1a9ml6mz0s1kmn7ka80kvcnd35i5lav7mjhrbcfr64p9fjhijq0i") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std"))))))

(define-public crate-amplify-3.13.1 (c (n "amplify") (v "3.13.1") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0kx3f4nij8ppv1pv4nknp2n94p3i518cmy51zicxhdlm7vxqzps6") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (y #t)))

(define-public crate-amplify-4.0.0-alpha.1 (c (n "amplify") (v "4.0.0-alpha.1") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0zdzh2zdc5c0586m5a5qkgsndyn99g8h10vd81az34g1dyxv26gb") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-alpha.2 (c (n "amplify") (v "4.0.0-alpha.2") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "152vjnjwfma12ngzwzzzmwxlgac2dp7ghiq6wpz9gd28i8gcinx8") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-alpha.3 (c (n "amplify") (v "4.0.0-alpha.3") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "15shl1jck9w25hhax3w5qfwc0cvplj60fc799b0sgzpy699nwr0b") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-alpha.4 (c (n "amplify") (v "4.0.0-alpha.4") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "121hsyqqvj9d5a3bdly4vsfk88mq37c92cwdq5k7dkdm6dln676c") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-alpha.5 (c (n "amplify") (v "4.0.0-alpha.5") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11x0gwzif369xdb123vfsaczlwqs3jpbkklll4wlq929fgyzizv9") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-alpha.6 (c (n "amplify") (v "4.0.0-alpha.6") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0x9iz0k874y08ashpzl6dc7aijj1qaadwnl3g9kjrm3bhkkrsxwh") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.1 (c (n "amplify") (v "4.0.0-beta.1") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0jcrmrv5ppm7n7yd369aahpcr0j23341xdl19bjj441lghgzg6sx") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.2 (c (n "amplify") (v "4.0.0-beta.2") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0zm0fnqnk5kpsj9xz4kf83qwl4mnj2lbi4wkva07pdq7hhxjz4am") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.3 (c (n "amplify") (v "4.0.0-beta.3") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0vw6yb8hxacxw8xwgbvba5jhapwfr4pingws775gw81d1kmgfyvb") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.4 (c (n "amplify") (v "4.0.0-beta.4") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1h1559wjrfrpiqd7z1982df43cs9hyk26sgc6jjgf49w93zbghv2") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.5 (c (n "amplify") (v "4.0.0-beta.5") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1c3wq3zjcjczjzmxs5mnkwpas6zrizh80c9yvgh5qzv8hbqn0hr8") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.6 (c (n "amplify") (v "4.0.0-beta.6") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0svjni4lmdniszdhng2c4s36vv9aiz18a81s3ncj8lfbn1kd9x2g") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.7 (c (n "amplify") (v "4.0.0-beta.7") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1wap6y8bcynfnpp8hscpc21lnmkpald38ma1sz01qcf50didmj0w") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.8 (c (n "amplify") (v "4.0.0-beta.8") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0cmbc16dna1pyb5yyxivjylsmcln18kgv40akp972271nlv2mdfa") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.9 (c (n "amplify") (v "4.0.0-beta.9") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "055jkg0ynvl4mg7x3x177clbl0zbi44jr985ghs13qcynpamwsaz") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.10 (c (n "amplify") (v "4.0.0-beta.10") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "150s0llky1mkr5fncqa4dbwcky45qjmaqz4vhzx6b0bznh63l595") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (y #t) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.11 (c (n "amplify") (v "4.0.0-beta.11") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "05ipy0231s3fmm8azwyg6k79rndjmfvapqy4hw6l9m5ddgx3hks1") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.12 (c (n "amplify") (v "4.0.0-beta.12") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1dbfx05i88yvs5blp1v00j2wavgcvh414743ygv8kbhwlg19vkjd") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.13 (c (n "amplify") (v "4.0.0-beta.13") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "11cf6qkmm1h3p7amvzj0pm32m6x2yx6zq4pqkarwmy1iazpk0h5a") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-3.14.1 (c (n "amplify") (v "3.14.1") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ld8hjzkkfy8mwb5jn8ajfnv9d42p9p53cgdk8dvx1sxbaibv1xg") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.14 (c (n "amplify") (v "4.0.0-beta.14") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "12nn26mz2bk07wsvbm9xmpl17lcy2qzclbpbj94imava8fdni403") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.15 (c (n "amplify") (v "4.0.0-beta.15") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1nc48gkfbgg24w171990hksiwmf49vghmdgbzmkwvj9npnk2mk52") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.16 (c (n "amplify") (v "4.0.0-beta.16") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0373gyvr8wbygbslqr379ncnd5z6mndqwqnanjrsyqga02m1azbw") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.17 (c (n "amplify") (v "4.0.0-beta.17") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "01300v644il475qpxxqf021zaa97ckmfnws9m55zg6wm0k1zdskj") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.18 (c (n "amplify") (v "4.0.0-beta.18") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04lisyrjx23d38x6w8fskg3i87x21hns4yqp1nfxz3xz6pbw8lkv") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.19 (c (n "amplify") (v "4.0.0-beta.19") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "110vg9k2mi0lcsi4mk2a2lnqnswjx2j9z8sd6d1jpwwn0rkq2l81") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.20 (c (n "amplify") (v "4.0.0-beta.20") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0-beta.2") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1myfi0h5qwpp9i8yrvxs2daq4n1hpcz3jsww15afc0l0n4vdfrys") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-3.14.2 (c (n "amplify") (v "3.14.2") (d (list (d (n "amplify_apfloat") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^2.10.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.4.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (t "cfg(bench)") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "softposit") (r "^0.3.9") (d #t) (t "cfg(bench)") (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0ypjr8b4x1szijj4njbphkzlvvmi9faaabz4mkfyjf5q9x7w2bms") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("compat" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.59.0")))

(define-public crate-amplify-4.0.0-beta.21 (c (n "amplify") (v "4.0.0-beta.21") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0f1smfjj9jh2y8gr3vqny48m8gxb5m55qpaqjjcqyi5r1nnb57jd") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0-beta.22 (c (n "amplify") (v "4.0.0-beta.22") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0-beta.3") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ymkk27mrsg74j9hr0xlb44wmiv5p9650fim04i79p3q4kq4gvk3") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.0 (c (n "amplify") (v "4.0.0") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0n3vabni5h4iq362gg21s7rc7hcp14iiczrbpzl01lp08spncsgj") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.1 (c (n "amplify") (v "4.0.1") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0jnzczrj5pp6axag72719ssj5w5pj4sp2qdz5i4vl9csy44an1s7") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.0.2 (c (n "amplify") (v "4.0.2") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "<=0.9.21") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0kqaxbrckabfylj02w1rlq3pp1xbdsfdiig434zr026ifw34h8jb") (f (quote (("std" "amplify_num/std") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.1.0 (c (n "amplify") (v "4.1.0") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "<=0.9.21") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1qv8hl2q84y9jvvsv40n0r62dwc3isqnbvnhavcs6k6gn91aayrh") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.1.1 (c (n "amplify") (v "4.1.1") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "<=0.9.21") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0cqrnsj46a1vnl3xsd8x04hm6qaxn33r8j5n3w3alp2327h8mxd3") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.2.0 (c (n "amplify") (v "4.2.0") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "<=0.9.21") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "02wbgmmh97rd2sx70a7m043w4aw8v87jwmkn2sg20crykjffglxd") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.60.0")))

(define-public crate-amplify-4.3.0 (c (n "amplify") (v "4.3.0") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0-alpha.6") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "<=0.9.21") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1jqlwbn4a34ay6wn3dy8r1wx0x5rhi3vy2479fdbs04p455id9qn") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.66.0")))

(define-public crate-amplify-4.4.0 (c (n "amplify") (v "4.4.0") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^3.0.1") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ipmibainqmkx2n254hyhqpn3krkqsmdavg8c4l8pl0yskpq6dr1") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.66.0")))

(define-public crate-amplify-4.5.0 (c (n "amplify") (v "4.5.0") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.0") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0447v58b642lpzrn0r644kdmssq2y3f8p4g20ajb1ghbdhqdnac6") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.66.0")))

(define-public crate-amplify-4.5.1 (c (n "amplify") (v "4.5.1") (d (list (d (n "amplify_apfloat") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.1") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "parse_arg") (r "^0.1.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.31") (o #t) (d #t) (k 0)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "<=0.8.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "00v803lrgdyq3wqaj59825b0cl4kr55idp95wyx6g2m71xw51pgq") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "serde_yaml" "serde_json" "toml" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "parse_arg" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.66.0")))

(define-public crate-amplify-4.6.0 (c (n "amplify") (v "4.6.0") (d (list (d (n "amplify_apfloat") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "amplify_derive") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "amplify_num") (r "^0.5.2") (d #t) (k 0)) (d (n "amplify_syn") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "ascii") (r "^1.1.0") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "serde_crate") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "stringly_conversions") (r "^0.1.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1l3lzxcd8xbm2s1c13aha1h4gyczqqcq0v0f9wdifa6bls4i4wcy") (f (quote (("std" "amplify_num/std" "alloc") ("serde" "serde_crate" "std" "amplify_num/serde" "ascii/serde" "stringly_conversions" "stringly_conversions/alloc" "stringly_conversions/serde_str_helpers") ("proc_attr" "amplify_syn") ("hex" "amplify_num/hex") ("derive" "amplify_derive") ("default" "std" "derive" "hex") ("c_raw" "libc" "std") ("apfloat_std" "amplify_apfloat/std") ("apfloat_alloc" "amplify_apfloat/alloc") ("apfloat" "amplify_apfloat") ("alloc" "amplify_num/alloc") ("all" "serde" "std" "stringly_conversions" "c_raw" "proc_attr" "derive" "rand" "apfloat" "apfloat_std")))) (r "1.69.0")))

