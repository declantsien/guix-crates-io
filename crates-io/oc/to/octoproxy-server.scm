(define-module (crates-io oc to octoproxy-server) #:use-module (crates-io))

(define-public crate-octoproxy-server-0.1.0 (c (n "octoproxy-server") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("derive" "help" "std"))) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("backports" "server" "http2" "runtime"))) (k 0)) (d (n "octoproxy-lib") (r "^0.1.0") (d #t) (k 0)) (d (n "quinn") (r "^0.10.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.12") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("codec"))) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "02ax1b5iha4nfv65hzgj5dqjw0l1awfhyyn97wfpan58hqmk0pc6") (f (quote (("default") ("alloc" "octoproxy-lib/alloc"))))))

