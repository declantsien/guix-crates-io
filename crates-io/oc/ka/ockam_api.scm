(define-module (crates-io oc ka ockam_api) #:use-module (crates-io))

(define-public crate-ockam_api-0.2.0 (c (n "ockam_api") (v "0.2.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "minicbor") (r "^0.16.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.54.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)))) (h "0j9ck155dl2nhcsad6kpvrd7j0clbhlkjf3sj4silb4rx0sgqypw") (f (quote (("tag") ("std" "minicbor/std" "ockam_core/std"))))))

(define-public crate-ockam_api-0.3.0 (c (n "ockam_api") (v "0.3.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam_core") (r "^0.55.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_macros") (r "^0.15.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_node") (r "^0.57.0") (f (quote ("std"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.55.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "1yq3is42bswd04dk82gcb572lr261j2vab8shf0ckilprrsskvik") (f (quote (("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_node/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv"))))))

(define-public crate-ockam_api-0.4.0 (c (n "ockam_api") (v "0.4.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.61.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.56.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.49.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_node") (r "^0.58.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.56.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.51.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0nd0k46rqnymazh3ykjxcsq8cni9sicxa0jflgx9b0cs5lp6k9li") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("bls" "ockam_vault/bls"))))))

(define-public crate-ockam_api-0.5.0 (c (n "ockam_api") (v "0.5.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.17.1") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.62.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.56.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.50.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_node") (r "^0.59.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.57.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.52.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "19pnm0fhj01002zraff7ya7gpw3g9zfk7yfpd3vkliwd9qwqm40x") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("bls" "ockam_vault/bls"))))))

(define-public crate-ockam_api-0.6.0 (c (n "ockam_api") (v "0.6.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.63.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.57.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.51.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.60.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.58.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.53.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "1y4jmxi9kjinjina01n1js37jsyzjf89abgljg2kixialkrjvbk1") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("default" "lmdb") ("bls" "ockam_vault/bls"))))))

(define-public crate-ockam_api-0.7.0 (c (n "ockam_api") (v "0.7.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.64.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.58.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.52.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.61.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.59.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.54.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "1lqcwpqp1xv21hmb3swql1dprqvk6gkcwf3qm47cdds2dh1743sl") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("default" "lmdb"))))))

(define-public crate-ockam_api-0.8.0 (c (n "ockam_api") (v "0.8.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.65.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.59.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.53.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.62.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.60.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.55.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0s0xdakscvssql72w5bcn40cdn4g600xsqf7y2yhbz5nknsxb1sk") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("default" "lmdb"))))))

(define-public crate-ockam_api-0.10.0 (c (n "ockam_api") (v "0.10.0") (d (list (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.67.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.61.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.55.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.64.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.62.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.57.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0ab8h3335bkmbqmwiqxwhx0bwcbjva2miwwjm1l804av2q67i6pd") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("default" "lmdb"))))))

(define-public crate-ockam_api-0.11.0 (c (n "ockam_api") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.68.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.62.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.56.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.16.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.2.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.65.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.63.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.58.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "03ha9lwl0z8zdj8d4s9pl80ys816lcnx2n1faifjmadiq0rlrcg6") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat") ("std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("default" "lmdb"))))))

(define-public crate-ockam_api-0.13.0 (c (n "ockam_api") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "data-encoding") (r "^2.3.2") (f (quote ("alloc"))) (k 0)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.70.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.64.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.58.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.18.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.4.0") (d #t) (k 0)) (d (n "ockam_node") (r "^0.67.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.65.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.60.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "051kpqnrsipc03z173r40vfp1yy275skcaj57aisry9imjk6m84k") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "data-encoding/std" "either/use_std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.14.0 (c (n "ockam_api") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.71.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.65.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.59.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.19.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.5.0") (d #t) (k 0)) (d (n "ockam_node") (r "^0.68.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.66.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.61.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "051l3xv491q8lljy0dla7qsapm2n2srxkm2iya0x8dcg8r149ski") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator")))) (y #t)))

(define-public crate-ockam_api-0.15.0 (c (n "ockam_api") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.72.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.66.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.60.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.20.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.69.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.67.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.62.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0jgzch7mdya77k2rh5pbpvx8bpvlq896gzx0ffgma65v4yljhwx4") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.16.0 (c (n "ockam_api") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.73.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.67.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.61.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.21.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.70.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.68.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.63.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "038ckwkhgzgjhqfpaai5j378pha9z2z9xxbj9b51xs8243cqibfq") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.17.0 (c (n "ockam_api") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.74.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.68.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.62.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.22.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.71.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.69.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.64.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "1cn6zs1zm3p9jkv1j8l87vp4l38319ab41zf1xbqv7b0icnkxzj0") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.18.0 (c (n "ockam_api") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.75.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.69.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.63.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.23.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.72.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.70.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.65.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0mna50janl5jn6fr8gvgrsxpyfn3cl6nzdvrv5xrd047w1kcsldd") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.19.0 (c (n "ockam_api") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "minicbor") (r "^0.18.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "ockam") (r "^0.76.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_core") (r "^0.70.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.64.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.24.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.73.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.71.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.66.0") (f (quote ("std"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0p0dwvsn4nmxls6hw5lgi8arqrw75i68mqbhpl09mdznpw4wmdnf") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.21.0 (c (n "ockam_api") (v "0.21.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "either") (r "^1.7.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.78.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.12.0") (k 0)) (d (n "ockam_core") (r "^0.72.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.66.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.26.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.12.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.75.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.73.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.68.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "1xrcns151mwn4c83ywiq0bbqvyr5g5crgvi9b7df9mjpp89iss0g") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.22.0 (c (n "ockam_api") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.79.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.13.0") (k 0)) (d (n "ockam_core") (r "^0.73.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.67.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.26.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.13.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.76.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.74.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.69.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "00pzwk31x5gw57bxwn2xvl9r8pxxzrm99y11318rxiigibhpa8n4") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.23.0 (c (n "ockam_api") (v "0.23.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.80.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.14.0") (k 0)) (d (n "ockam_core") (r "^0.74.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.68.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.27.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.14.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.77.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.75.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.70.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.92") (d #t) (k 0)) (d (n "sysinfo") (r "^0.27") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)))) (h "0mxgzi4ffdykvrm4nqdgza9ajqhn0jw34rzms0qwif3xzv90wc38") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.24.0 (c (n "ockam_api") (v "0.24.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.5") (d #t) (k 0)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.81.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.15.0") (k 0)) (d (n "ockam_core") (r "^0.75.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.69.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.27.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.15.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.78.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.76.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.76.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.71.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.19") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)) (d (n "uuid") (r "^0.8.2") (d #t) (k 2)))) (h "17kd2l6j8q26lj7qznqf64r41iqndgzkzbhhrl1i78g8c039gm89") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.25.0 (c (n "ockam_api") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^4") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.5.1") (d #t) (k 0)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.82.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.16.0") (k 0)) (d (n "ockam_core") (r "^0.76.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.70.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.27.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.16.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.79.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.77.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.77.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.72.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)) (d (n "uuid") (r "^1.3.0") (d #t) (k 2)))) (h "0pc39sq0q9ifzlhnm1y57489rhxkj6djsv8ab4xiy1248i2da4gx") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.26.0 (c (n "ockam_api") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.83.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.17.0") (k 0)) (d (n "ockam_core") (r "^0.77.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.71.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.27.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.17.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.80.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.78.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.78.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.73.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)) (d (n "uuid") (r "^1.3.0") (d #t) (k 2)))) (h "1vihxxpvc576p99kgh0aa0ysrn7h6ag7606a89p82bqn5pz5y2jb") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.27.0 (c (n "ockam_api") (v "0.27.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lmdb-rkv") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.84.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.18.0") (k 0)) (d (n "ockam_core") (r "^0.78.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.72.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.28.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.18.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.81.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.79.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.79.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.74.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)) (d (n "uuid") (r "^1.3.1") (d #t) (k 2)))) (h "1mppmj3dzv943n20dcsn68zrj9811bvmrjbzi9svhq94rxinmscy") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("lmdb" "std" "lmdb-rkv") ("direct-authenticator" "lmdb" "std") ("default" "lmdb") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.28.0 (c (n "ockam_api") (v "0.28.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.85.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.19.0") (k 0)) (d (n "ockam_core") (r "^0.79.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.73.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.28.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.19.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.82.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.80.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.80.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.75.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (k 0)) (d (n "uuid") (r "^1.3.1") (d #t) (k 2)))) (h "1kkx0m3naps255yyk7qanchqgqq49wi88pv6a24fb2va4j136bf4") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.29.0 (c (n "ockam_api") (v "0.29.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.86.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.20.0") (k 0)) (d (n "ockam_core") (r "^0.80.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.74.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.29.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.20.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.83.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.81.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.81.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.76.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sysinfo") (r "^0.28") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "uuid") (r "^1.3.2") (d #t) (k 2)))) (h "1rjmd1kyfz3f3ns8cl5mpgfzhv6agcyfypbn2f2gyba2ki60agff") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.30.0 (c (n "ockam_api") (v "0.30.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.87.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.21.0") (k 0)) (d (n "ockam_core") (r "^0.80.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.75.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.29.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.21.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.83.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.81.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.81.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.76.0") (f (quote ("std" "aws" "rustcrypto"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.21") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "uuid") (r "^1.3.2") (d #t) (k 2)))) (h "0kbpz81dlgsifkw7brbvhm0ip6fzbpfsigxim0j8jbfvfx0l2nvn") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.31.0 (c (n "ockam_api") (v "0.31.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.3") (f (quote ("native-tls"))) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.88.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.22.0") (k 0)) (d (n "ockam_core") (r "^0.81.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.76.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.30.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.22.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.84.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.82.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.82.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.77.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.2.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "rust-embed") (r "^6") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.21") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "uuid") (r "^1.3.3") (d #t) (k 2)))) (h "11qhpbsi6bkxwcg31pfb6djyg6n0qkpbvb9sjpwa8lg5fpk96bxv") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.32.0 (c (n "ockam_api") (v "0.32.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.3") (f (quote ("native-tls"))) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.89.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.23.0") (k 0)) (d (n "ockam_core") (r "^0.82.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.77.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.30.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.23.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.85.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.83.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.83.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.78.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.3.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.22") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "uuid") (r "^1.3.3") (d #t) (k 2)))) (h "0afincnxhgs1jlm6nab1lrnljgpjgsllkmnk8p30fahnhwal00wx") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.33.0 (c (n "ockam_api") (v "0.33.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.3") (f (quote ("native-tls"))) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.8.1") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^1.7.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "miette") (r "^5.9.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.90.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.24.0") (k 0)) (d (n "ockam_core") (r "^0.83.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.78.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.30.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.24.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.86.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.84.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.84.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.79.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.4.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.97") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.22") (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "uuid") (r "^1.3.4") (d #t) (k 2)))) (h "1axq1kkjmbypr47pin145mjc5qip18vr6x99c8hz887i57k9892c") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.34.0 (c (n "ockam_api") (v "0.34.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.1") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.91.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.25.0") (k 0)) (d (n "ockam_core") (r "^0.84.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.79.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.31.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.25.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.87.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.85.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.85.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.80.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.5.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.28") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "0caqwi2jw6wrf8b4qmvwyh58iq0gibhs3hvzafq71jxp4zf640ql") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.35.0 (c (n "ockam_api") (v "0.35.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.6.1") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.26") (d #t) (k 0)) (d (n "ockam") (r "^0.92.0") (f (quote ("software_vault"))) (d #t) (k 0)) (d (n "ockam_abac") (r "^0.26.0") (k 0)) (d (n "ockam_core") (r "^0.85.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_identity") (r "^0.80.0") (f (quote ("std"))) (k 0)) (d (n "ockam_macros") (r "^0.31.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.26.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.88.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.86.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.86.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.81.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.6.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.28") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "0idkksdldbdp2i5kqsh21mvwb1rb7f20rgg83047y2ys2ba990zl") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam_identity/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.36.0 (c (n "ockam_api") (v "0.36.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.93.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.27.0") (k 0)) (d (n "ockam_core") (r "^0.85.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_macros") (r "^0.31.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.27.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.89.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.87.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.87.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.82.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.7.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.28") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "1rdng07kla6sv2z083m8hrcf19cax4bqvpb4jn0xmlvjsmyrif8p") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.37.0 (c (n "ockam_api") (v "0.37.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.19.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.94.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.28.0") (k 0)) (d (n "ockam_core") (r "^0.85.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_macros") (r "^0.31.0") (f (quote ("std"))) (d #t) (k 2)) (d (n "ockam_multiaddr") (r "^0.28.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.90.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.88.0") (d #t) (k 0)) (d (n "ockam_transport_tcp") (r "^0.88.0") (d #t) (k 2)) (d (n "ockam_vault") (r "^0.83.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.8.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.28") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "1nsyq6gijfgkg0l16fy8c407s8ccs2mg6adq0rxwssx8ya7dm2m1") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("direct-authenticator" "std") ("default" "std" "direct-authenticator") ("authenticators" "direct-authenticator"))))))

(define-public crate-ockam_api-0.38.0 (c (n "ockam_api") (v "0.38.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.11.1") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.95.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.29.0") (k 0)) (d (n "ockam_core") (r "^0.86.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.29.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.91.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.89.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.84.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.9.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (o #t) (k 0)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "0535b8qr7jf27k3m1539midbvfwkgifx94f545jar5zl8gsxprqy") (f (quote (("vault-storage" "ockam_vault/storage") ("tag" "cddl-cat" "once_cell" "ockam_core/tag") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.39.0 (c (n "ockam_api") (v "0.39.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.96.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.30.0") (k 0)) (d (n "ockam_core") (r "^0.87.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.30.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.92.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.90.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.85.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.10.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "1szhqipsfwpsx7bn828mcndc4xa5yav7bhyxag078n1wlzx20krp") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.40.0 (c (n "ockam_api") (v "0.40.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.97.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.31.0") (k 0)) (d (n "ockam_core") (r "^0.88.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.31.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.93.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.91.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.86.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.11.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.31.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "148z0fzhrs7kk10qzdr9kg3i8mjjcpz92h102w23l3ssf7lincz8") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.41.0 (c (n "ockam_api") (v "0.41.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.98.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.32.0") (k 0)) (d (n "ockam_core") (r "^0.89.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.32.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.94.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.92.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.87.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.12.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "0y495bbjfqdcbag1b5p0gskfm2da6w3dy0sbff6g7d6ir4pl4z34") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.42.0 (c (n "ockam_api") (v "0.42.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.99.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.33.0") (k 0)) (d (n "ockam_core") (r "^0.90.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.33.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.95.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.93.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.88.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.13.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (d #t) (k 2)))) (h "1d8yq6wddj1854zh9y7yv3iky3xj5kq0y5k8xv9bmrzi2jgjlxkw") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.43.0 (c (n "ockam_api") (v "0.43.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.100.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.34.0") (k 0)) (d (n "ockam_core") (r "^0.91.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.34.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.96.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.94.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.89.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.14.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 2)))) (h "1kqpgjz0s7pgrrzhdxs98vifzdpi4w9z446xiy7742afx93jpxxd") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.44.0 (c (n "ockam_api") (v "0.44.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.101.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.35.0") (k 0)) (d (n "ockam_core") (r "^0.91.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.35.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.96.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.94.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.89.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.14.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (f (quote ("std" "local-offset"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 2)))) (h "08sp6wvnay74x6c4gw78nnkv4qdg3yrynxwnrv8yjg40aqr38jsi") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.45.0 (c (n "ockam_api") (v "0.45.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.102.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.36.0") (k 0)) (d (n "ockam_core") (r "^0.92.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.36.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.97.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.95.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.90.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.15.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "local-offset"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 2)))) (h "1g5l7x307r6jg5zawnz3r922gxgczx7x9za5pv027l6lzl14wgns") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.46.0 (c (n "ockam_api") (v "0.46.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.103.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.37.0") (k 0)) (d (n "ockam_core") (r "^0.93.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.37.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.98.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.96.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.91.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.16.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "local-offset"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 2)))) (h "0kpivm0hkdg0jz68da9s57h0mfv4cby0g9923ladznkmsipg5hin") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.47.0 (c (n "ockam_api") (v "0.47.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.104.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.38.0") (k 0)) (d (n "ockam_core") (r "^0.93.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.37.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.98.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.96.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.91.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.16.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "local-offset"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 2)))) (h "0fncwlyinrx3b8igdpk4a5ay0s8is7iv80lpkmvhksrmayp2a4ys") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.48.0 (c (n "ockam_api") (v "0.48.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^0.56.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.2") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.105.0") (f (quote ("ockam_transport_tcp" "software_vault_storage"))) (k 0)) (d (n "ockam_abac") (r "^0.39.0") (k 0)) (d (n "ockam_core") (r "^0.93.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.37.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.98.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.96.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.91.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.16.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "local-offset"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (d #t) (k 2)))) (h "0pyfsjdvj72xci2vqy05zp3q72y1y31k7m3ya05yv4js58m0kx12") (f (quote (("vault-storage" "ockam_vault/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_core/std" "ockam_abac/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std") ("default" "std"))))))

(define-public crate-ockam_api-0.49.0 (c (n "ockam_api") (v "0.49.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.106.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.40.0") (k 0)) (d (n "ockam_core") (r "^0.94.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.38.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.99.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.97.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.92.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.17.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "0c9dx3b63fgmbf25jw6w35rxq2svzbi9inbwaalzacj2kjkrl7gw") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.50.0 (c (n "ockam_api") (v "0.50.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.107.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.41.0") (k 0)) (d (n "ockam_core") (r "^0.95.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.39.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.100.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.98.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.93.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.18.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "0r40q6m1vy7b2zvwy46yhl8fv86xqxnav59r5ibjfcqxvgf6c68n") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.51.0 (c (n "ockam_api") (v "0.51.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.3") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.108.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.42.0") (k 0)) (d (n "ockam_core") (r "^0.96.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.40.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.101.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.99.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.94.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.19.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "08b3zb7smalcvz4dl688bn8zqwrifi8dwd5w2rs3linfra9hcdgx") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.52.0 (c (n "ockam_api") (v "0.52.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.3") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.109.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.43.0") (k 0)) (d (n "ockam_core") (r "^0.97.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.41.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.102.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.100.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.95.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.20.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "1zy12cmfkslzv8d8rsjrp6hcs9s2qi3396s85qf6r7vygnz7r0g8") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.53.0 (c (n "ockam_api") (v "0.53.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.3") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.110.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.44.0") (k 0)) (d (n "ockam_core") (r "^0.97.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.41.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.103.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.101.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.96.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.21.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "1l085b7r4m8if5qaqz6s82nphb63l9gr5r3pp8higly412k8hv3z") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.54.0 (c (n "ockam_api") (v "0.54.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.3") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.111.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.45.0") (k 0)) (d (n "ockam_core") (r "^0.98.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.42.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.104.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.102.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.97.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.22.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "14p0spwxdycq2p3dd28cygv6xw029ymkm6ibhqz97lbiz95dclg3") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.55.0 (c (n "ockam_api") (v "0.55.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.112.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.45.0") (k 0)) (d (n "ockam_core") (r "^0.98.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.42.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.104.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.102.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.97.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.23.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "0mgxkx87ibzk1lihg3cr74sm862dw3m82pibi358lafb0mgaaiv1") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.56.0 (c (n "ockam_api") (v "0.56.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.113.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.46.0") (k 0)) (d (n "ockam_core") (r "^0.98.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.42.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.105.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.103.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.98.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.24.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "0fp9hwmv2rr0816f5j71jfq5qwhb26plw9p3rnp0840c6ncm83rl") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.57.0 (c (n "ockam_api") (v "0.57.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.114.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.47.0") (k 0)) (d (n "ockam_core") (r "^0.99.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.43.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.106.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.104.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.99.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.25.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "14jv8v7562d5mj0svsi9xnl1l4vslp0hf7g8xlk61h6jal588arz") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.58.0 (c (n "ockam_api") (v "0.58.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.115.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.48.0") (k 0)) (d (n "ockam_core") (r "^0.100.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.44.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.107.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.105.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.100.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.26.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "1c7ygiyakircgjggm97pbhl8dc7a41jw1h0gnpxv9183rpsnvsip") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.59.0 (c (n "ockam_api") (v "0.59.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "either") (r "^1.9.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.7.0") (d #t) (k 0)) (d (n "miette") (r "^5.10.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.20.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.116.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.49.0") (k 0)) (d (n "ockam_core") (r "^0.101.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.45.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.108.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.106.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.101.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.27.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.0.0") (d #t) (k 0)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.194") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.9.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (d #t) (k 2)))) (h "11ls0jb6dj5mfbi0jqfspip8xcsmbfylnfndx0h4xpiji7xd2k4a") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.60.0 (c (n "ockam_api") (v "0.60.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "aws-config") (r "^1.1.7") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.3") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.8.2") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (d #t) (k 0)) (d (n "minicbor") (r "^0.21.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.27") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.117.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.50.0") (k 0)) (d (n "ockam_core") (r "^0.102.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.46.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.109.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.107.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.102.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.28.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.2") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.2") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha2") (r "^0.9.5") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.3") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.9.2") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (d #t) (k 2)))) (h "05n2dmgvi4yx6yji46bi38ldpykspljpd63qb4dpvrdxhnglsi51") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.61.0 (c (n "ockam_api") (v "0.61.0") (d (list (d (n "aws-config") (r "^1.1.8") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.21.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.118.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.51.0") (k 0)) (d (n "ockam_core") (r "^0.103.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.47.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.110.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.108.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.103.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.29.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (d #t) (k 2)))) (h "18jbq3pzkjfyp1lsvknzf6033cvrcxd8rdwqp0g19pkhz1g172zk") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.62.0 (c (n "ockam_api") (v "0.62.0") (d (list (d (n "aws-config") (r "^1.1.8") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.21.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.119.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.52.0") (k 0)) (d (n "ockam_core") (r "^0.104.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.48.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.111.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.109.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.104.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.30.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "1w7i4z1la8f6p0472xmnllk1mm67bknydi3gs607qli59dp0bw3q") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.63.0 (c (n "ockam_api") (v "0.63.0") (d (list (d (n "aws-config") (r "^1.1.8") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.5") (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.21.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.120.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.53.0") (k 0)) (d (n "ockam_core") (r "^0.105.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.49.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.112.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.110.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.105.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.31.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.34") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "0yhg1xgqj37acf2z99pk9d2rzaz8iqnmxv0yl8rpc78yk3m7jdfk") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.64.0 (c (n "ockam_api") (v "0.64.0") (d (list (d (n "aws-config") (r "^1.1.10") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "either") (r "^1.10.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 2)) (d (n "indicatif") (r "^0.17") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.21.1") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.121.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.54.0") (k 0)) (d (n "ockam_core") (r "^0.106.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.50.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.113.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.111.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.106.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.32.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6") (d #t) (k 0)) (d (n "r3bl_rs_utils_core") (r "^0.9") (d #t) (k 0)) (d (n "r3bl_tui") (r "^0.5") (d #t) (k 0)) (d (n "r3bl_tuify") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.35") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "02af2jyg7821ypip78339f9bz1hlz6506pj55bw437hpx4bspx8y") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.65.0 (c (n "ockam_api") (v "0.65.0") (d (list (d (n "aws-config") (r "^1.2.0") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "either") (r "^1.11.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 2)) (d (n "indicatif") (r "^0.17") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.24.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.122.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.55.0") (k 0)) (d (n "ockam_core") (r "^0.107.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.51.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.114.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.112.0") (d #t) (k 0)) (d (n "ockam_vault") (r "^0.107.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.33.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6") (d #t) (k 0)) (d (n "r3bl_rs_utils_core") (r "^0.9") (d #t) (k 0)) (d (n "r3bl_tui") (r "^0.5") (d #t) (k 0)) (d (n "r3bl_tuify") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "0h362hjj181ln27qhsnamr7rij9nhd1dnvjgjp7xxd2pdc6xs651") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("default" "std"))))))

(define-public crate-ockam_api-0.66.0 (c (n "ockam_api") (v "0.66.0") (d (list (d (n "aws-config") (r "^1.2.1") (f (quote ("rustls"))) (k 0)) (d (n "base64-url") (r "^2.0.2") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "either") (r "^1.11.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 2)) (d (n "indicatif") (r "^0.17") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.24.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.123.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.56.0") (k 0)) (d (n "ockam_core") (r "^0.108.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.52.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.115.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.113.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault") (r "^0.108.0") (f (quote ("std" "storage"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.34.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.0-beta.4") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6") (d #t) (k 0)) (d (n "r3bl_rs_utils_core") (r "^0.9") (d #t) (k 0)) (d (n "r3bl_tui") (r "^0.5") (d #t) (k 0)) (d (n "r3bl_tuify") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.199") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "0qy0a6nv8zqbmqav9g5cm78h4pgwnjjxwmgwq1l90kkbk5jh6s0x") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("rust-crypto" "ockam_vault/rust-crypto" "ockam_transport_tcp/ring") ("default" "std" "rust-crypto") ("aws-lc" "ockam_vault/aws-lc" "ockam_transport_tcp/aws-lc"))))))

(define-public crate-ockam_api-0.67.0 (c (n "ockam_api") (v "0.67.0") (d (list (d (n "base64-url") (r "^3.0.0") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (f (quote ("serde"))) (k 0)) (d (n "cddl-cat") (r "^0.6.1") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (k 0)) (d (n "colorful") (r "^0.2") (d #t) (k 0)) (d (n "colors-transform") (r "^0.2") (d #t) (k 0)) (d (n "dialoguer") (r "^0.11") (d #t) (k 0)) (d (n "either") (r "^1.11.0") (k 0)) (d (n "fake") (r "^2") (f (quote ("derive" "uuid"))) (d #t) (k 2)) (d (n "flexi_logger") (r "^0.28") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gethostname") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "serde"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "home") (r "^0.5") (d #t) (k 0)) (d (n "http-body-util") (r "^0") (d #t) (k 0)) (d (n "hyper") (r "^1") (f (quote ("server" "http1"))) (k 0)) (d (n "hyper-util") (r "^0") (f (quote ("server" "http1" "tokio"))) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 2)) (d (n "indicatif") (r "^0.17") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "kafka-protocol") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miette") (r "^7") (d #t) (k 0)) (d (n "minicbor") (r "^0.24.0") (f (quote ("alloc" "derive"))) (d #t) (k 0)) (d (n "mockall") (r "^0.12") (d #t) (k 2)) (d (n "multimap") (r "^0.10.0") (d #t) (k 2)) (d (n "nix") (r "^0.28") (f (quote ("signal"))) (d #t) (k 0)) (d (n "ockam") (r "^0.124.0") (f (quote ("ockam_transport_tcp" "storage"))) (k 0)) (d (n "ockam_abac") (r "^0.57.0") (k 0)) (d (n "ockam_core") (r "^0.109.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_multiaddr") (r "^0.53.0") (f (quote ("cbor" "serde"))) (d #t) (k 0)) (d (n "ockam_node") (r "^0.116.0") (f (quote ("no_std" "alloc"))) (k 0)) (d (n "ockam_transport_tcp") (r "^0.114.0") (f (quote ("std"))) (k 0)) (d (n "ockam_vault") (r "^0.109.0") (f (quote ("std" "storage"))) (k 0)) (d (n "ockam_vault_aws") (r "^0.35.0") (f (quote ("std"))) (k 0)) (d (n "once_cell") (r "^1") (k 2)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("logs" "metrics" "trace"))) (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("logs" "metrics" "trace" "grpc-tonic" "tls" "tls-roots"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "rt-tokio-current-thread" "testing" "logs_level_enabled"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "metrics" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "petname") (r "^2.0.2") (f (quote ("default-rng" "default-words"))) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "r3bl_rs_utils_core") (r "^0.9") (d #t) (k 0)) (d (n "r3bl_tui") (r "^0.5") (d #t) (k 0)) (d (n "r3bl_tuify") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.7.4") (f (quote ("runtime-tokio" "sqlite"))) (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.2") (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.36") (f (quote ("std" "formatting" "local-offset" "macros"))) (k 0)) (d (n "tiny_http") (r "^0.12.0") (d #t) (k 0)) (d (n "tinyvec") (r "^1.6.0") (f (quote ("rustc_1_57"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-retry") (r "^0.3.0") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 2)) (d (n "tracing-error") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "treeline") (r "^0.1.0") (d #t) (k 2)) (d (n "url") (r "^2.4.1") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (d #t) (k 2)))) (h "00cqr67s0wnsijxpshcr1szsvaxj1z4s286vv7hl4xfrkf38hvk7") (f (quote (("storage" "ockam/storage") ("std" "either/use_std" "hex/std" "minicbor/std" "ockam_abac/std" "ockam_core/std" "ockam/std" "ockam_multiaddr/std" "ockam_node/std" "ockam_vault/std" "ockam_vault_aws/std" "tinyvec/std" "tracing/std" "storage") ("rust-crypto" "ockam_vault/rust-crypto" "ockam_transport_tcp/ring") ("default" "std" "rust-crypto") ("aws-lc" "ockam_vault/aws-lc" "ockam_transport_tcp/aws-lc"))))))

