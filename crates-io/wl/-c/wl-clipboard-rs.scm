(define-module (crates-io wl -c wl-clipboard-rs) #:use-module (crates-io))

(define-public crate-wl-clipboard-rs-0.1.0 (c (n "wl-clipboard-rs") (v "0.1.0") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.14") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha") (d #t) (k 0)) (d (n "nix") (r "^0.13") (d #t) (k 0)) (d (n "os_pipe") (r "^0.8") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tree_magic") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.22") (d #t) (k 0)) (d (n "wayland-commons") (r "^0.22") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-scanner") (r "^0.22") (d #t) (k 1)) (d (n "wayland-server") (r "^0.22") (d #t) (k 2)) (d (n "wayland-sys") (r "^0.22") (f (quote ("client"))) (o #t) (d #t) (k 0)))) (h "1qljg1f31m6xay3cyw0zjd6l6gwvmbwxavxi5inbwrj4zfbmwzsg") (f (quote (("native_lib" "wayland-client/native_lib" "wayland-commons/native_lib" "wayland-protocols/native_client" "wayland-protocols/native_server" "wayland-server/native_lib" "wayland-sys") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.2.0 (c (n "wl-clipboard-rs") (v "0.2.0") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.14") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha") (d #t) (k 0)) (d (n "nix") (r "^0.13") (d #t) (k 0)) (d (n "os_pipe") (r "^0.8") (d #t) (k 0)) (d (n "stderrlog") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tree_magic") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.22") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.22") (d #t) (k 2)))) (h "0vw9qdq34npcp210jfi3gpfh6x5gfh3q09xa5zvs890rqshn8hg1") (f (quote (("native_lib" "wayland-client/native_lib" "wayland-protocols/native_client" "wayland-protocols/native_server" "wayland-server/native_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.3.0 (c (n "wl-clipboard-rs") (v "0.3.0") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.14") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha") (d #t) (k 0)) (d (n "nix") (r "^0.13") (d #t) (k 0)) (d (n "os_pipe") (r "^0.8") (d #t) (k 0)) (d (n "stderrlog") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tree_magic") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.22") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.22") (d #t) (k 2)))) (h "05hb4ps4qgn6mxlmfgvcksdwpwwy6121a19s9bzni3d479i9ms9y") (f (quote (("native_lib" "wayland-client/native_lib" "wayland-protocols/native_client" "wayland-protocols/native_server" "wayland-server/native_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.3.1 (c (n "wl-clipboard-rs") (v "0.3.1") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.14") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.0-alpha") (d #t) (k 0)) (d (n "nix") (r "^0.13") (d #t) (k 0)) (d (n "os_pipe") (r "^0.8") (d #t) (k 0)) (d (n "stderrlog") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.2") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tree_magic") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.22") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.22") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.22") (d #t) (k 2)))) (h "05b7xdq4108z742yd6zx76vfr35kkzhsd3r4b296h3ysfhz4x065") (f (quote (("native_lib" "wayland-client/native_lib" "wayland-protocols/native_client" "wayland-protocols/native_server" "wayland-server/native_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.4.0 (c (n "wl-clipboard-rs") (v "0.4.0") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.16") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "stderrlog") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tree_magic") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.23") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.23") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.23") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.23") (d #t) (k 2)))) (h "10aj9fq5ncxqj7icp6za540v47fi8mxy39zs2gfn53zp2zy5vwyq") (f (quote (("native_lib" "wayland-client/native_lib" "wayland-server/native_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.4.1 (c (n "wl-clipboard-rs") (v "0.4.1") (d (list (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "exitfailure") (r "^0.5") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime_guess") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.18") (d #t) (k 0)) (d (n "os_pipe") (r "^0.9") (d #t) (k 0)) (d (n "stderrlog") (r "^0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tree_magic") (r "^0.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.27") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.27") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.27") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.27") (d #t) (k 2)))) (h "1252cm67pkrr6ik5ys2cdyfr2zzw6ds7v351i1cmyi94yiv01l13") (f (quote (("native_lib" "wayland-client/use_system_lib" "wayland-server/use_system_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.5.0 (c (n "wl-clipboard-rs") (v "0.5.0") (d (list (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "failure") (r "^0.1.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tree_magic_mini") (r "^3.0.3") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.4") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.4") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.4") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.29.4") (d #t) (k 2)))) (h "0lb0l750w7xvlr4fqrdq4xsl24bxx2ga26s26crprc18hb4013x4") (f (quote (("native_lib" "wayland-client/use_system_lib" "wayland-server/use_system_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.6.0 (c (n "wl-clipboard-rs") (v "0.6.0") (d (list (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "tree_magic_mini") (r "^3.0.3") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.4") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.4") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.4") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.29.4") (d #t) (k 2)))) (h "12ydiayklrls2ys8ig2rljl86z21ixg672zhdsprnaiqpz8s6p5y") (f (quote (("native_lib" "wayland-client/use_system_lib" "wayland-server/use_system_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.7.0 (c (n "wl-clipboard-rs") (v "0.7.0") (d (list (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.24.2") (d #t) (k 0)) (d (n "os_pipe") (r "^1.0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tree_magic_mini") (r "^3.0.3") (d #t) (k 0)) (d (n "wayland-client") (r "^0.29.4") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.4") (f (quote ("client" "unstable_protocols"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.29.4") (f (quote ("server" "unstable_protocols"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.29.4") (d #t) (k 2)))) (h "1n8sg981h3d08hnnlrsgs81w2qz3n8a5ml0jcsgnapdpzcyk06lq") (f (quote (("native_lib" "wayland-client/use_system_lib" "wayland-server/use_system_lib") ("dlopen" "native_lib" "wayland-client/dlopen" "wayland-server/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.8.0 (c (n "wl-clipboard-rs") (v "0.8.0") (d (list (d (n "derive-new") (r "^0.5.9") (d #t) (k 0)) (d (n "libc") (r "^0.2.148") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nix") (r "^0.26.4") (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.4") (f (quote ("io_safety"))) (d #t) (k 0)) (d (n "proptest") (r "^1.3.1") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tree_magic_mini") (r "^3.0.3") (d #t) (k 0)) (d (n "wayland-backend") (r "^0.3.2") (d #t) (k 0)) (d (n "wayland-client") (r "^0.31.1") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31.0") (f (quote ("server"))) (d #t) (k 2)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("server"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.31.0") (d #t) (k 2)))) (h "1ynj4d5kaicjlm23i3mbarl7csrf753kiiqmf5i0ipzafglpkbsp") (f (quote (("native_lib" "wayland-backend/client_system" "wayland-backend/server_system") ("dlopen" "native_lib" "wayland-backend/dlopen" "wayland-backend/dlopen"))))))

(define-public crate-wl-clipboard-rs-0.8.1 (c (n "wl-clipboard-rs") (v "0.8.1") (d (list (d (n "derive-new") (r "^0.6.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.153") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "nix") (r "^0.28.0") (f (quote ("fs" "process" "event"))) (d #t) (k 0)) (d (n "os_pipe") (r "^1.1.5") (f (quote ("io_safety"))) (d #t) (k 0)) (d (n "proptest") (r "^1.4.0") (d #t) (k 2)) (d (n "proptest-derive") (r "^0.4.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tree_magic_mini") (r "^3.0.3") (d #t) (k 0)) (d (n "wayland-backend") (r "^0.3.3") (d #t) (k 0)) (d (n "wayland-client") (r "^0.31.2") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31.2") (f (quote ("client"))) (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.31.2") (f (quote ("server"))) (d #t) (k 2)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.2.0") (f (quote ("server"))) (d #t) (k 2)) (d (n "wayland-server") (r "^0.31.1") (d #t) (k 2)))) (h "1nwa0bg6jpq5sd8x94xgkj0yk7zcz2m3sg2mm26b35qlj5rigd0j") (f (quote (("native_lib" "wayland-backend/client_system" "wayland-backend/server_system") ("dlopen" "native_lib" "wayland-backend/dlopen" "wayland-backend/dlopen"))))))

