(define-module (crates-io wl -g wl-gammarelay-rs) #:use-module (crates-io))

(define-public crate-wl-gammarelay-rs-0.1.0 (c (n "wl-gammarelay-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha3") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha3") (f (quote ("unstable_protocols" "client"))) (d #t) (k 0)) (d (n "zbus") (r "^2.0") (f (quote ("tokio"))) (d #t) (k 0)))) (h "0qdxwa0qa0x8yvbiziqzyh8h8j52vnpkm1ifawqbcqs2nbrzzm61")))

(define-public crate-wl-gammarelay-rs-0.2.0 (c (n "wl-gammarelay-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha3") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha3") (f (quote ("unstable_protocols" "client"))) (d #t) (k 0)) (d (n "zbus") (r "^2.0") (f (quote ("tokio"))) (d #t) (k 0)))) (h "1z74kzia6g85lay0zs6gdvvq7x3774ksvmj3s6gfc5gmmz2r0rcy")))

(define-public crate-wl-gammarelay-rs-0.2.1 (c (n "wl-gammarelay-rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha3") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha3") (f (quote ("unstable_protocols" "client"))) (d #t) (k 0)) (d (n "zbus") (r "^2.1") (f (quote ("tokio"))) (k 0)))) (h "0qn4z2mx6ksxxhqw42s32y2gw8agscwq917zh7wnv09jbxn3wnrs")))

(define-public crate-wl-gammarelay-rs-0.2.2 (c (n "wl-gammarelay-rs") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "shmemfdrs") (r "^0.1") (f (quote ("memfd"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-alpha8") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-alpha8") (f (quote ("unstable_protocols" "client"))) (d #t) (k 0)) (d (n "zbus") (r "^2.1") (f (quote ("tokio"))) (k 0)))) (h "07jiqjxki55fv0d5bn1wdn12byxclpavc4cmsj440i2xws2ics91")))

(define-public crate-wl-gammarelay-rs-0.2.3 (c (n "wl-gammarelay-rs") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "shmemfdrs") (r "^0.1") (f (quote ("memfd"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-beta.8") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-beta.8") (f (quote ("client"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.1.0-beta.8") (f (quote ("client"))) (d #t) (k 0)) (d (n "zbus") (r "^3.0") (f (quote ("tokio"))) (k 0)))) (h "0a4zz24am8vd67dsn1zlzgc4lcl5j0p9vgvngsks77pkz9j7v2dv")))

(define-public crate-wl-gammarelay-rs-0.3.0 (c (n "wl-gammarelay-rs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "shmemfdrs") (r "^0.1") (f (quote ("memfd"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-beta.8") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-beta.8") (f (quote ("client"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.1.0-beta.8") (f (quote ("client"))) (d #t) (k 0)) (d (n "zbus") (r "^3.0") (f (quote ("tokio"))) (k 0)))) (h "1caxk2b3vv9ypy41cd66c30blhyqcmm7bmphf0abmr4ikg72k869")))

(define-public crate-wl-gammarelay-rs-0.3.1 (c (n "wl-gammarelay-rs") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "memmap2") (r "^0.6") (d #t) (k 0)) (d (n "shmemfdrs") (r "^0.1") (f (quote ("memfd"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayrs-client") (r "^0.10") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "wayrs-protocols") (r "^0.10") (f (quote ("wlr-gamma-control-unstable-v1"))) (d #t) (k 0)) (d (n "zbus") (r "^3.5") (f (quote ("tokio"))) (k 0)))) (h "0vq16g8f4794sxr0yfk5jnmqmlvvp9d1k38s9hrkynfnfsl2hm77")))

(define-public crate-wl-gammarelay-rs-0.3.2 (c (n "wl-gammarelay-rs") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "memmap2") (r "^0.8") (d #t) (k 0)) (d (n "shmemfdrs") (r "^0.1") (f (quote ("memfd"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("macros" "net" "rt" "sync"))) (d #t) (k 0)) (d (n "wayrs-client") (r "^0.12") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "wayrs-protocols") (r "^0.12") (f (quote ("wlr-gamma-control-unstable-v1"))) (d #t) (k 0)) (d (n "zbus") (r "^3.5") (f (quote ("tokio"))) (k 0)))) (h "04nj10y127llqqw0rqn2pbh5m54ll825brq0z5yb9fclfn9q6v8g")))

