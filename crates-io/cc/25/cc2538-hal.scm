(define-module (crates-io cc #{25}# cc2538-hal) #:use-module (crates-io))

(define-public crate-cc2538-hal-0.1.0 (c (n "cc2538-hal") (v "0.1.0") (d (list (d (n "alloc-cortex-m") (r "^0.4.1") (d #t) (k 0)) (d (n "cc2538-pac") (r "^0.1.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "circular-queue") (r "^0.2.6") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.4") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (f (quote ("device"))) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.5") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)))) (h "14s55nwp1b3y272kg19badxb673gqj0rx7ym1cy7x0py3nmywhdk") (y #t)))

(define-public crate-cc2538-hal-0.1.1 (c (n "cc2538-hal") (v "0.1.1") (d (list (d (n "alloc-cortex-m") (r "^0.4.1") (d #t) (k 0)) (d (n "cc2538-pac") (r "^0.1.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "circular-queue") (r "^0.2.6") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.4") (f (quote ("inline-asm"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7") (f (quote ("device"))) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.5") (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.4") (d #t) (k 0)))) (h "0kbz41g9df06n14pw4zk56lyhx4i8n1bfp3n1jc5qj8yjgizyh60")))

(define-public crate-cc2538-hal-0.2.0 (c (n "cc2538-hal") (v "0.2.0") (d (list (d (n "cc2538-pac") (r "^0.4.0") (f (quote ("rt"))) (d #t) (k 0)) (d (n "circular-queue") (r "^0.2.6") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7.7") (f (quote ("inline-asm" "critical-section-single-core"))) (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.7.3") (f (quote ("device"))) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.5") (d #t) (k 0)) (d (n "nb") (r "^1.1.0") (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1.2") (f (quote ("cortex-m"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "rtt-target") (r "^0.4.0") (d #t) (k 0)))) (h "0b69i7g20j8ifxjyv42al483isz6mbgmbdf40qkwysg9zzcpc5il") (f (quote (("default"))))))

