(define-module (crates-io in ex inexor-rgf-plugin-flow) #:use-module (crates-io))

(define-public crate-inexor-rgf-plugin-flow-0.9.1 (c (n "inexor-rgf-plugin-flow") (v "0.9.1") (d (list (d (n "inexor-rgf-core-builder") (r "^0.9.1") (d #t) (k 2)) (d (n "inexor-rgf-core-di") (r "^0.9.1") (f (quote ("async" "async"))) (d #t) (k 0)) (d (n "inexor-rgf-core-model") (r "^0.9.1") (d #t) (k 0)) (d (n "inexor-rgf-core-plugins") (r "^0.9.1") (d #t) (k 0)) (d (n "inexor-rgf-model-base") (r "^0.9.1") (d #t) (k 0)) (d (n "inexor-rgf-model-flow") (r "^0.9.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std" "serde" "std" "serde"))) (d #t) (k 0)) (d (n "log4rs") (r "^1.2") (f (quote ("console_appender" "file_appender" "toml_format" "console_appender" "file_appender" "toml_format"))) (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "query_interface") (r "^0.3") (d #t) (k 0)) (d (n "rust-embed") (r "^6.6") (f (quote ("debug-embed" "compression" "debug-embed" "compression"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1c643kgc1ljlp7i7zzsda9krdw0yjpf21m1jzmldlsqlddqrfzrk")))

