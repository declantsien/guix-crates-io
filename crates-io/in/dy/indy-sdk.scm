(define-module (crates-io in dy indy-sdk) #:use-module (crates-io))

(define-public crate-indy-sdk-0.1.1-17 (c (n "indy-sdk") (v "0.1.1-17") (d (list (d (n "amcl") (r "^0.1.0-17") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-17") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-17") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-17") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-17") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-17") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-17") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "193ixiy6qa01rp0mpvjaxmnx1db08a51f01s5dhh5k1s645vjy8r") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-18 (c (n "indy-sdk") (v "0.1.1-18") (d (list (d (n "amcl") (r "^0.1.0-18") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-18") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-18") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-18") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-18") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-18") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-18") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0y6pkrf39fscf4w371llxv437adsd28azh3x85ynav7x4d0pp7y5") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-19 (c (n "indy-sdk") (v "0.1.1-19") (d (list (d (n "amcl") (r "^0.1.0-19") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-19") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-19") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-19") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-19") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-19") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0gavkj63sbxdi5bdchd8ybyrdjk1p1l78v0zi2l8xjjqv28yhdcn") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-20 (c (n "indy-sdk") (v "0.1.1-20") (d (list (d (n "amcl") (r "^0.1.0-20") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-20") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-20") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-20") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-20") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-20") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1vbxwjp1djaykwhlkgg25lkbkhzslfdcciadgsm1s3w4sk9s8786") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-21 (c (n "indy-sdk") (v "0.1.1-21") (d (list (d (n "amcl") (r "^0.1.0-21") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-21") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-21") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-21") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-21") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-21") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-21") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1fni15spdxqq96n6fyrfpmjvcab8hplmahcx3nbb277fsp7fjyh1") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-22 (c (n "indy-sdk") (v "0.1.1-22") (d (list (d (n "amcl") (r "^0.1.0-22") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-22") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-22") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-22") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-22") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-22") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-22") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1jb3iy3pjjv95cc3fhvww9d3q77abc9lk4k67q8syszf6l9pz9dx") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-23 (c (n "indy-sdk") (v "0.1.1-23") (d (list (d (n "amcl") (r "^0.1.0-23") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-23") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-23") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-23") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-23") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-23") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-23") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "136baranpq52g9zs8r94f3jmh7w5jq9kqd5a11sf78mys02rziry") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-26 (c (n "indy-sdk") (v "0.1.1-26") (d (list (d (n "amcl") (r "^0.1.0-26") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-26") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-26") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-26") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-26") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-26") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1fy39xbpjy3chi4pfqq25hlns3ldsf5pxzz5y73p68lzz4rvf0qi") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-27 (c (n "indy-sdk") (v "0.1.1-27") (d (list (d (n "amcl") (r "^0.1.0-27") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-27") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-27") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-27") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-27") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-27") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-27") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1lpn5n3wnkyx96las6kfhrz4bhxdc8ipw4zfzynbbd91m5zkqc6k") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-28 (c (n "indy-sdk") (v "0.1.1-28") (d (list (d (n "amcl") (r "^0.1.0-28") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-28") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-28") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-28") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-28") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-28") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-28") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "17ri3xhci3bdxd4msk3zqqqbs132ilpwvz7sv7qnigh3k917xxkg") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-29 (c (n "indy-sdk") (v "0.1.1-29") (d (list (d (n "amcl") (r "^0.1.0-29") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-29") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-29") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-29") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-29") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-29") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-29") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0zp62gwxv28wylwl53mkybxmhziq2q8x8q50skrcynj6mi25y5l6") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-30 (c (n "indy-sdk") (v "0.1.1-30") (d (list (d (n "amcl") (r "^0.1.0-30") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-30") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-30") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-30") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-30") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-30") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-30") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1xc1fyhc97ksbjvij3hg4f14hc0r5nqk89a3f4dmvbs8r5i32prq") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-31 (c (n "indy-sdk") (v "0.1.1-31") (d (list (d (n "amcl") (r "^0.1.0-31") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-31") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-31") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-31") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-31") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-31") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-31") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1shq2z1sxf1w0792yxgq3gvjrnzar8w7vymwcg2mdvm3n0dwqbkh") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-32 (c (n "indy-sdk") (v "0.1.1-32") (d (list (d (n "amcl") (r "^0.1.0-32") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-32") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-32") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-32") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-32") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-32") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-32") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "01hhdwyyw01nkmcynjqsn5lqz3khihgn6sjlssj64r1cgj8gq6ix") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-33 (c (n "indy-sdk") (v "0.1.1-33") (d (list (d (n "amcl") (r "^0.1.0-33") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-33") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-33") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-33") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-33") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-33") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-33") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0zyvfhjaawclrmp42ma1ygnksb3hp2sh74zc5pqv8rh3d6ywrcyg") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-34 (c (n "indy-sdk") (v "0.1.1-34") (d (list (d (n "amcl") (r "^0.1.0-34") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-34") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-34") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-34") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-34") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-34") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-34") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "06wyb34d0w7n4gi59kvgx35javd0fnmi0kxi617waba7bgsar6q5") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-35 (c (n "indy-sdk") (v "0.1.1-35") (d (list (d (n "amcl") (r "^0.1.0-35") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-35") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-35") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-35") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-35") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-35") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-35") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0yy3cqi1b25nwqxcqj23xv2gkhr3hb9c7bb0gggk72grbkx37l42") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-36 (c (n "indy-sdk") (v "0.1.1-36") (d (list (d (n "amcl") (r "^0.1.0-36") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-36") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-36") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-36") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-36") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-36") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-36") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1hpmbhcys2y6qm2ricd65ca4mhpq2jb7r2pns16rgmzq7rbgc46q") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-37 (c (n "indy-sdk") (v "0.1.1-37") (d (list (d (n "amcl") (r "^0.1.0-37") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-37") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-37") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-37") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-37") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-37") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-37") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "15762hfq0q8bvvs2jnw04srjvfvyc0fxz2s8s01q2b0c8cg2lyk1") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-38 (c (n "indy-sdk") (v "0.1.1-38") (d (list (d (n "amcl") (r "^0.1.0-38") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-38") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-38") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-38") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-38") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-38") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-38") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1frrkhwv7s7c45sq6i8y6dy1kahg0sair4hijz65x07hmr5f1wd4") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-39 (c (n "indy-sdk") (v "0.1.1-39") (d (list (d (n "amcl") (r "^0.1.0-39") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-39") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-39") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-39") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-39") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-39") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-39") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0pf2k1haqjq6n14x206n78hbjipw7ifvp8ayyfphk8hd776pda7p") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-40 (c (n "indy-sdk") (v "0.1.1-40") (d (list (d (n "amcl") (r "^0.1.0-40") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-40") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-40") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-40") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-40") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-40") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-40") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0xyk0k5ssc90sp71ysx1zc0773h4n0p4v1hg3vyrpvrsm9f374f6") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-41 (c (n "indy-sdk") (v "0.1.1-41") (d (list (d (n "amcl") (r "^0.1.0-41") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-41") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-41") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-41") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-41") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-41") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1mqv01nbmhzl718nim42vfp1y9yakph3796vbc53702szpqn48f1") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-42 (c (n "indy-sdk") (v "0.1.1-42") (d (list (d (n "amcl") (r "^0.1.0-42") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-42") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-42") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-42") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-42") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-42") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-42") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "0rrjf8dj35frlas3jnv6z1gzc5r8nhd2x2yl4ppdx5zn91hzk95g") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-43 (c (n "indy-sdk") (v "0.1.1-43") (d (list (d (n "amcl") (r "^0.1.0-43") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-43") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-43") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-43") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-43") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-43") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-43") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "1cnb6mvmm17xlys99mccm08bkg32yc40a4na9h12xyhda0igkd1n") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-44 (c (n "indy-sdk") (v "0.1.1-44") (d (list (d (n "amcl") (r "^0.1.0-44") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-44") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-44") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-44") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-44") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-44") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-44") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "094nvg9i5ip0z0rf9lq64d4rlnigr05lkfpfkdnxl8fscd09dp6w") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-45 (c (n "indy-sdk") (v "0.1.1-45") (d (list (d (n "amcl") (r "^0.1.0-45") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-45") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-45") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-45") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-45") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-45") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-45") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.5") (d #t) (k 0)))) (h "050r9j75c8qgzq28c3l05s49r9ikcqnx283nisam6l4ank783ij6") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-47 (c (n "indy-sdk") (v "0.1.1-47") (d (list (d (n "amcl") (r "^0.1.0-47") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-47") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-47") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-47") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-47") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-47") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "0pm0ianghbli5jfzqd3905z9qflvvxd5af83vccxnrcwil4m26s9") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-48 (c (n "indy-sdk") (v "0.1.1-48") (d (list (d (n "amcl") (r "^0.1.0-48") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-48") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-48") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-48") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-48") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-48") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-48") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "09nkqyapflinb1qr5r4170065jhmdz01ar92cyrb6pj6akd2nq4h") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-49 (c (n "indy-sdk") (v "0.1.1-49") (d (list (d (n "amcl") (r "^0.1.0-49") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-49") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-49") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-49") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-49") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-49") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-49") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "0iji9vdlihvnn80ii0dq7r8v9xfivwzw0h8mzf866s0k348s3haw") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-51 (c (n "indy-sdk") (v "0.1.1-51") (d (list (d (n "amcl") (r "^0.1.0-51") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-51") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-51") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-51") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-51") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-51") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-51") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "1jm72wkgzla6afpsp2cpkl9dacb5x4xbfi75zmk4zq3hzmszqq1i") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-50 (c (n "indy-sdk") (v "0.1.1-50") (d (list (d (n "amcl") (r "^0.1.0-50") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-50") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-50") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-50") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-50") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-50") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-50") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "1xqdzxclyc8ga0krplx8gzjm1g2ymndh9a11ckvaxvymmbppjl94") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-52 (c (n "indy-sdk") (v "0.1.1-52") (d (list (d (n "amcl") (r "^0.1.0-52") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-52") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-52") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-52") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-52") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-52") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-52") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "0nmqskd8rx81y0i2ly9hsy09w16d04fnqcxsfz9k66hwqmvvq8sa") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1-53 (c (n "indy-sdk") (v "0.1.1-53") (d (list (d (n "amcl") (r "^0.1.0-53") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1-53") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13-53") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11-53") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4-53") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14-53") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0-53") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "0hwxcqmpjqzmshcq7s1fr3ny45pnvrmdzyhbkxg2mj43ig707rnj") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

(define-public crate-indy-sdk-0.1.1 (c (n "indy-sdk") (v "0.1.1") (d (list (d (n "amcl") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.2") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 0)) (d (n "int_traits") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.21") (d #t) (k 0)) (d (n "log") (r "^0.3.7") (d #t) (k 0)) (d (n "milagro-crypto") (r "^0.1.13") (o #t) (d #t) (k 0)) (d (n "openssl") (r "^0.9.11") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.10.1") (d #t) (k 0)) (d (n "rust-base58") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "time") (r "^0.1.36") (d #t) (k 0)) (d (n "uuid") (r "^0.5.0") (f (quote ("v4"))) (k 0)) (d (n "zmq-pw") (r "^0.9.7") (d #t) (k 0)))) (h "1fpimkgsrk14ii1q6kyh6095daj8rind1bv7s17xm7x4sr54p2rm") (f (quote (("xsalsa20_sodium" "sodiumoxide") ("pair_milagro" "milagro-crypto") ("pair_amcl" "amcl") ("local_nodes_pool") ("interoperability_tests") ("hash_openssl" "openssl") ("ed25519_sodium" "sodiumoxide") ("default" "bn_openssl" "ed25519_sodium" "base58_rust_base58" "xsalsa20_sodium" "pair_milagro" "hash_openssl" "local_nodes_pool") ("bn_openssl" "openssl" "int_traits") ("base58_rust_base58" "rust-base58"))))))

