(define-module (crates-io in dy indy-data-types) #:use-module (crates-io))

(define-public crate-indy-data-types-0.3.0 (c (n "indy-data-types") (v "0.3.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.3") (f (quote ("wql"))) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0rv94dbs32lxflcahgg1c0f27w35if6jpsbshk7kc56vnwgq958d") (f (quote (("serde_support" "indy-utils/serde_support" "serde" "serde_json") ("rich_schema") ("merkle_tree" "hash") ("hash" "indy-utils/hash") ("default" "merkle_tree" "serde_support") ("cl_native" "indy-utils/cl_native") ("cl" "indy-utils/cl"))))))

(define-public crate-indy-data-types-0.4.0 (c (n "indy-data-types") (v "0.4.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.3") (f (quote ("wql"))) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1cz7kdppcrjp35r5873skjqn1dy70l8kkx83qwwzvvidvi27y53w") (f (quote (("serde_support" "indy-utils/serde_support" "serde" "serde_json") ("rich_schema") ("merkle_tree" "hash") ("hash" "indy-utils/hash") ("default" "merkle_tree" "serde_support") ("cl_native" "indy-utils/cl_native" "serde_support") ("cl" "indy-utils/cl" "serde_support"))))))

(define-public crate-indy-data-types-0.4.1 (c (n "indy-data-types") (v "0.4.1") (d (list (d (n "hex") (r ">=0.4.0, <0.5.0") (d #t) (k 2)) (d (n "indy-utils") (r ">=0.3.0, <0.4.0") (f (quote ("wql"))) (k 0)) (d (n "once_cell") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "regex") (r ">=1.3.0, <2.0.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 2)) (d (n "zeroize") (r ">=1.1.0, <2.0.0") (d #t) (k 0)))) (h "0qmnsnjia5hbh6km39nafqzam61w9an05aiypz48s28527x71vsy") (f (quote (("serde_support" "indy-utils/serde_support" "serde" "serde_json") ("rich_schema") ("merkle_tree" "hash") ("hash" "indy-utils/hash") ("default" "merkle_tree" "serde_support") ("cl_native" "indy-utils/cl_native" "serde_support") ("cl" "indy-utils/cl" "serde_support"))))))

(define-public crate-indy-data-types-0.4.2 (c (n "indy-data-types") (v "0.4.2") (d (list (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.3") (f (quote ("wql"))) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "1zlj33s92cak11lfmjx7lgrzbb31jbbbdg2s4x5kghi93biwkwzf") (f (quote (("serde_support" "indy-utils/serde_support" "serde" "serde_json") ("rich_schema") ("merkle_tree" "hash") ("hash" "indy-utils/hash") ("default" "merkle_tree" "serde_support") ("cl_native" "indy-utils/cl_native" "serde_support") ("cl" "indy-utils/cl" "serde_support"))))))

(define-public crate-indy-data-types-0.5.0 (c (n "indy-data-types") (v "0.5.0") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.4") (f (quote ("wql"))) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1yb92yc0gmgff9ww5p9a74nrnz8lk7im4wls9qdcjqirfdxska8v") (f (quote (("vendored" "openssl" "openssl/vendored") ("serde_support" "serde" "serde_json") ("rich_schema") ("merkle_tree" "indy-utils/hash" "hex") ("default" "merkle_tree" "serde_support") ("cl_native" "serde_support" "ursa" "ursa/cl_native" "ursa/serde") ("cl" "serde_support" "ursa" "ursa/cl" "ursa/serde"))))))

(define-public crate-indy-data-types-0.5.1 (c (n "indy-data-types") (v "0.5.1") (d (list (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.5") (f (quote ("wql"))) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "ursa") (r "=0.3.6") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0238ynziinmr6n937swgc6k0sjznlr2dqjb69yy2gl42vwskydz2") (f (quote (("vendored" "openssl" "openssl/vendored") ("serde_support" "serde" "serde_json") ("rich_schema") ("merkle_tree" "indy-utils/hash" "hex") ("default" "merkle_tree" "serde_support") ("cl_native" "serde_support" "ursa" "ursa/cl_native" "ursa/serde") ("cl" "serde_support" "ursa" "ursa/cl" "ursa/serde"))))))

(define-public crate-indy-data-types-0.6.0 (c (n "indy-data-types") (v "0.6.0") (d (list (d (n "anoncreds-clsignatures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.5") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "16sz1jn875x5y7h1n2s5jqzmc8qrnb7r5006lxmjb6jw8xwx5nh5") (f (quote (("rich_schema") ("merkle_tree" "indy-utils/hash" "hex") ("default" "serde_support" "cl_native") ("cl_native" "serde_support" "anoncreds-clsignatures/openssl_bn") ("cl" "serde_support")))) (s 2) (e (quote (("vendored" "anoncreds-clsignatures?/openssl_vendored") ("serde_support" "serde" "serde_json" "anoncreds-clsignatures?/serde" "indy-utils/serde"))))))

(define-public crate-indy-data-types-0.6.1 (c (n "indy-data-types") (v "0.6.1") (d (list (d (n "anoncreds-clsignatures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "indy-utils") (r "^0.6.0") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0v8czpcs36g3ciqi6fccpl5712mafzb006znjk9m5lbzcln9gjcb") (f (quote (("rich_schema") ("merkle_tree" "hex" "sha2") ("default" "anoncreds" "merkle_tree") ("cl_native" "anoncreds" "anoncreds-clsignatures/openssl_bn" "serde_support") ("cl" "anoncreds" "anoncreds-clsignatures" "serde_support") ("anoncreds" "serde_support")))) (s 2) (e (quote (("vendored" "anoncreds-clsignatures?/openssl_vendored") ("serde_support" "serde" "serde_json" "anoncreds-clsignatures?/serde" "indy-utils/serde"))))))

(define-public crate-indy-data-types-0.7.0 (c (n "indy-data-types") (v "0.7.0") (d (list (d (n "anoncreds-clsignatures") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bs58") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("zeroize"))) (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0") (f (quote ("static_secrets" "zeroize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1gnrlggdkpk74f7f4v55sdzal07w6rw2npw9qrbsz87klxxwka3j") (f (quote (("rich_schema") ("merkle_tree" "hex" "sha2") ("ed25519" "curve25519-dalek" "ed25519-dalek" "rand" "sha2" "x25519-dalek") ("default" "anoncreds" "ed25519" "merkle_tree") ("cl_native" "anoncreds" "anoncreds-clsignatures/openssl_bn" "serde_support") ("cl" "anoncreds" "anoncreds-clsignatures" "serde_support") ("anoncreds" "serde_support")))) (s 2) (e (quote (("vendored" "anoncreds-clsignatures?/openssl_vendored") ("serde_support" "serde" "serde_json" "anoncreds-clsignatures?/serde"))))))

(define-public crate-indy-data-types-0.7.1 (c (n "indy-data-types") (v "0.7.1") (d (list (d (n "anoncreds-clsignatures") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "bs58") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^4.1") (o #t) (k 0)) (d (n "ed25519-dalek") (r "^2.0") (f (quote ("zeroize"))) (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("raw_value"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2.0") (f (quote ("static_secrets" "zeroize"))) (o #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0b45xxph2s34fxbp64nprcnv64g9qpfcnsr76kb5mzyngj2i7hnk") (f (quote (("rich_schema") ("merkle_tree" "hex" "sha2") ("ed25519" "curve25519-dalek" "ed25519-dalek" "rand" "sha2" "x25519-dalek") ("default" "anoncreds" "ed25519" "merkle_tree") ("cl_native" "anoncreds" "anoncreds-clsignatures/openssl_bn" "serde_support") ("cl" "anoncreds" "anoncreds-clsignatures" "serde_support") ("anoncreds" "serde_support")))) (s 2) (e (quote (("vendored" "anoncreds-clsignatures?/openssl_vendored") ("serde_support" "serde" "serde_json" "anoncreds-clsignatures?/serde"))))))

