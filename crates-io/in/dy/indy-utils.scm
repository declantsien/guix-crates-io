(define-module (crates-io in dy indy-utils) #:use-module (crates-io))

(define-public crate-indy-utils-0.3.1 (c (n "indy-utils") (v "0.3.1") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.4") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0v6m46i4bngssa3j0pyq9lny9k0yv89ii6fyqazlli1jjaih09vm") (f (quote (("wql") ("wallet_key" "hmac" "ursa/chacha20poly1305" "ursa/sha2") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2" "ursa/chacha20poly1305") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wallet_key" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.2 (c (n "indy-utils") (v "0.3.2") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.4") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1gvnhms092hx4ldaxjm0rfqrrln6skahxhl84h64nl47zxxm8939") (f (quote (("wql") ("wallet_key" "hmac" "ursa/chacha20poly1305" "ursa/sha2") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2" "ursa/chacha20poly1305") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wallet_key" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.3 (c (n "indy-utils") (v "0.3.3") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1sd2qfg2g40vvggd76w232nh39a1dvcibjrlsihhaj688sbf9qi2") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2" "ursa/chacha20poly1305") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.4 (c (n "indy-utils") (v "0.3.4") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (f (quote ("alloc" "chacha20"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0gh91iacz33lxcwq2pggqpr9gvcci1b26fjxndr653pvrnvbqmvs") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "chacha20poly1305" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.5 (c (n "indy-utils") (v "0.3.5") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "chacha20") (r "^0.6") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (f (quote ("alloc" "chacha20"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0gk406zh774zp4nyj4f207nxsk6hssz28jazfyh1da1ha84la212") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "chacha20poly1305" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.6 (c (n "indy-utils") (v "0.3.6") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "chacha20") (r "^0.6") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (f (quote ("alloc" "chacha20"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1fd17yqffgz2cl31s12qch17ck2xg2a5nr6xr1164paamjwvfwch") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "chacha20poly1305" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.7 (c (n "indy-utils") (v "0.3.7") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "chacha20") (r "^0.6") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (f (quote ("alloc" "chacha20"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1hli42rapgv7ay3s7f71pf8p458pckwisbwz2iznc624z0qyaxws") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "chacha20poly1305" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.8 (c (n "indy-utils") (v "0.3.8") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "chacha20") (r "^0.6") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (f (quote ("alloc" "chacha20"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0x1r78rxv75pz66q4c4jkq9j4s60jlk7267kp7xs1s3n85061dii") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "chacha20poly1305" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.3.9 (c (n "indy-utils") (v "0.3.9") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "chacha20") (r "^0.6") (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (f (quote ("alloc" "chacha20"))) (o #t) (k 0)) (d (n "crypto_box") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0fycwdy48blqd7ck2wyxk26879pi46yz4cvx5yy0ajy2vldx7jmq") (f (quote (("wql") ("txn_signature" "hash" "serde_support") ("serde_support" "serde" "serde_json" "ursa/serde") ("pack" "base64" "chacha20poly1305" "crypto_box" "ed25519" "serde_support" "ursa" "ursa/blake2") ("hash" "ursa" "ursa/sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "pack" "txn_signature" "wql") ("cl_native" "ursa" "ursa/cl_native") ("cl" "ursa" "ursa/cl") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.4.0 (c (n "indy-utils") (v "0.4.0") (d (list (d (n "aead") (r "^0.3") (d #t) (k 0)) (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indy-wql") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ursa") (r "^0.3.5") (o #t) (k 0)) (d (n "zeroize") (r "^1.1") (d #t) (k 0)))) (h "16gaj4wh03arcxhpf67yak9g7r4igjbf0fsjzh57ik9mz0klrpyi") (f (quote (("wql" "indy-wql" "serde" "serde_json") ("txn_signature" "hex" "sha2" "serde" "serde_json") ("hash" "sha2") ("ed25519" "ursa" "ursa/ed25519" "ursa/x25519") ("default" "ed25519" "hash" "txn_signature" "wql") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.5.0 (c (n "indy-utils") (v "0.5.0") (d (list (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.12") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indy-wql") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "=1.1") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "0c89j9rahhvk6fmf2283nk1pmnxqs3nfh55gv37ivcjhr9ch3dx8") (f (quote (("wql" "indy-wql" "serde" "serde_json") ("txn_signature" "hex" "sha2" "serde" "serde_json") ("hash" "sha2") ("ed25519" "curve25519-dalek" "ed25519-dalek" "rand" "sha2" "x25519-dalek") ("default" "ed25519" "hash" "txn_signature" "wql") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.5.2 (c (n "indy-utils") (v "0.5.2") (d (list (d (n "async-global-executor") (r "^1.2") (d #t) (k 2)) (d (n "base64_rs") (r "^0.13") (o #t) (d #t) (k 0) (p "base64")) (d (n "bs58") (r "^0.4") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "=1.2") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "02154k17xh4b13lpbzxxi5lql3j77fdmh28m0765lr7z8az4sxfz") (f (quote (("txn_signature" "hex" "sha2" "serde" "serde_json") ("hash" "sha2") ("ed25519" "curve25519-dalek" "ed25519-dalek" "rand" "sha2" "x25519-dalek") ("default" "ed25519" "hash" "txn_signature") ("base64" "base64_rs"))))))

(define-public crate-indy-utils-0.6.0 (c (n "indy-utils") (v "0.6.0") (d (list (d (n "async-global-executor") (r "^2.3") (d #t) (k 2)) (d (n "bs58") (r "^0.5") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.1") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "x25519-dalek") (r "=1.2") (f (quote ("u64_backend"))) (o #t) (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "0falvcj7sr536nwliyplnpzqfzlcrfqabaw25sc9g3ffrv6y1mq9") (f (quote (("ed25519" "curve25519-dalek" "ed25519-dalek" "rand" "sha2" "x25519-dalek") ("default" "ed25519"))))))

