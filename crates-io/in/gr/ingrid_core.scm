(define-module (crates-io in gr ingrid_core) #:use-module (crates-io))

(define-public crate-ingrid_core-1.0.0 (c (n "ingrid_core") (v "1.0.0") (d (list (d (n "clap") (r "^4.0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "float-ord") (r "^0.3.2") (d #t) (k 0)) (d (n "generic-array") (r "^0.14.5") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "alloc" "getrandom" "std_rng" "small_rng"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "19jz64vic1fr7wqnnmcn5l66flmw3fp9d2jv0gpxz2j3j45lrrjy") (f (quote (("check_invariants"))))))

(define-public crate-ingrid_core-1.1.0 (c (n "ingrid_core") (v "1.1.0") (d (list (d (n "clap") (r "^4.0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "float-ord") (r "^0.3.2") (d #t) (k 0)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "alloc" "getrandom" "std_rng" "small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)))) (h "0dmy5mrgwfpi2ycha4cfsywrs2kpv2k3q1n79p4r9sfr5vhvzykb") (f (quote (("check_invariants")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive"))))))

(define-public crate-ingrid_core-1.2.0 (c (n "ingrid_core") (v "1.2.0") (d (list (d (n "clap") (r "^4.0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "float-ord") (r "^0.3.2") (d #t) (k 0)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "alloc" "getrandom" "std_rng" "small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)))) (h "0kaaz3fawlfi96bffbxlvrq9yldpi5sdi4z2s824dbxz6kcjgpff") (f (quote (("check_invariants")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive"))))))

(define-public crate-ingrid_core-1.3.0 (c (n "ingrid_core") (v "1.3.0") (d (list (d (n "clap") (r "^4.0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "float-ord") (r "^0.3.2") (d #t) (k 0)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "alloc" "getrandom" "std_rng" "small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)))) (h "0f3bp34bna67jlb3abb6y5mmh1dx02mdirr87j1ds1x282gmm89d") (f (quote (("check_invariants")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive"))))))

(define-public crate-ingrid_core-1.3.1 (c (n "ingrid_core") (v "1.3.1") (d (list (d (n "clap") (r "^4.0.15") (f (quote ("derive"))) (d #t) (k 0)) (d (n "float-ord") (r "^0.3.2") (d #t) (k 0)) (d (n "indoc") (r "^2.0.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "alloc" "getrandom" "std_rng" "small_rng"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 2)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unicode-normalization") (r "^0.1.22") (d #t) (k 0)))) (h "18a1iz62jz76xb1rj5126mj8zqlz4pf6161brnqk411p9jbghawl") (f (quote (("check_invariants")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive"))))))

