(define-module (crates-io in k_ ink_env) #:use-module (crates-io))

(define-public crate-ink_env-0.0.0 (c (n "ink_env") (v "0.0.0") (h "14qw8h1vwy8kl0zva2bzgnl5m8486c19jrhv9xqpxp0qw63xx7d7") (y #t)))

(define-public crate-ink_env-3.0.0-rc1 (c (n "ink_env") (v "3.0.0-rc1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc1") (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc1") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "scale") (r "^1.3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^0.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0rp0na697pjn54y4n0nw911rm0r9p4ix00qrk98lza9icg291m26") (f (quote (("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "num-traits/std" "sha2" "sha3" "blake2") ("ink-unstable-chain-extensions") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc2 (c (n "ink_env") (v "3.0.0-rc2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc2") (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc2") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc2") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc2") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "scale") (r "^1.3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^0.4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1060sbv8mvxkrg10knrw87kmk7cdnb3njdkd2c9bn4jgyhy251i7") (f (quote (("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "num-traits/std" "sha2" "sha3" "blake2") ("ink-unstable-chain-extensions") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc3 (c (n "ink_env") (v "3.0.0-rc3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "funty") (r "=1.1.0") (d #t) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc3") (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc3") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc3") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "scale") (r "^2.0") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^0.6") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "14czc5cdhlp9zlyghadxlz0czn7qsnxyrsfdfv8drv973yc1n0ps") (f (quote (("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc4 (c (n "ink_env") (v "3.0.0-rc4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc4") (k 0)) (d (n "ink_engine") (r "^3.0.0-rc4") (o #t) (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc4") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc4") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc4") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "scale") (r "^2.1") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^0.6") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sp-arithmetic") (r "^3.0") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0vr2gih9l5hwn8iqjgq69lndspgdd4n6jjxlwlqsc28vzxkg2mq3") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-experimental-engine" "ink_engine") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc5 (c (n "ink_env") (v "3.0.0-rc5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc5") (k 0)) (d (n "ink_engine") (r "^3.0.0-rc5") (o #t) (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc5") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc5") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc5") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "scale") (r "^2.1") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^0.6") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sp-arithmetic") (r "^3.0") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1236wfbf6wpa1vzf3qlpfvn7v57i41gr5jv924qx2pvlqw0xv9nx") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-experimental-engine" "ink_engine") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc6 (c (n "ink_env") (v "3.0.0-rc6") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc6") (k 0)) (d (n "ink_engine") (r "^3.0.0-rc6") (o #t) (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc6") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc6") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc6") (k 0)) (d (n "libsecp256k1") (r "^0.3.5") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "scale") (r "^2") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sp-arithmetic") (r "^3.0") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0hhdlzv8sjiicdr5a5b13x254ldrfajgbzyx8bgvzp0vaf7bjqxh") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-experimental-engine" "ink_engine") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc7 (c (n "ink_env") (v "3.0.0-rc7") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc7") (k 0)) (d (n "ink_engine") (r "^3.0.0-rc7") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc7") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc7") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc7") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libsecp256k1") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale") (r "^2.3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1qwiahqwf03xwq4fc4f1hvy5ls32kj9n6z51np6b60p5whj4wzdw") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-experimental-engine" "ink_engine") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc8 (c (n "ink_env") (v "3.0.0-rc8") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc8") (k 0)) (d (n "ink_engine") (r "^3.0.0-rc8") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc8") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc8") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc8") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^2.3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^1.0") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.21.2") (f (quote ("recovery"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "09nnypzi3h8d67s6w2gkjgh8d4nq878h132fwdlhi5qzghanb6ab") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info" "scale-info/std" "rand" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-experimental-engine" "ink_engine") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.0-rc9 (c (n "ink_env") (v "3.0.0-rc9") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0-rc9") (k 0)) (d (n "ink_engine") (r "^3.0.0-rc9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.0.0-rc9") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0-rc9") (k 0)) (d (n "ink_primitives") (r "^3.0.0-rc9") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.21.2") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0x1x9lqbw5gj5dwygmigzp0pz37rzm54li2ivg8jfq4s2qakf1rh") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-experimental-engine" "ink_engine") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.0 (c (n "ink_env") (v "3.0.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.0") (k 0)) (d (n "ink_engine") (r "^3.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.0") (k 0)) (d (n "ink_primitives") (r "^3.0.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1h4y2jcqy2almr54aw39xblyyi0ra60skq9b5xravnx4lc3w5rg1") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.0.1 (c (n "ink_env") (v "3.0.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.0.1") (k 0)) (d (n "ink_engine") (r "^3.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.0.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.0.1") (k 0)) (d (n "ink_primitives") (r "^3.0.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "16g5lzbwinw432af23f73c03gcra4bxb7xiz0s91syip13z6bm55") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.1.0 (c (n "ink_env") (v "3.1.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.1.0") (k 0)) (d (n "ink_engine") (r "^3.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.1.0") (k 0)) (d (n "ink_primitives") (r "^3.1.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1r39pk5ik5bp188xp24akp8kqrva405aqky6ajka7xs71szrnrs3") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.2.0 (c (n "ink_env") (v "3.2.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.2.0") (k 0)) (d (n "ink_engine") (r "^3.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.2.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.2.0") (k 0)) (d (n "ink_primitives") (r "^3.2.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0wl9xpp2a79dwnh408bak6p6ybrxs4w157vpc8c6hrwzx742g3f6") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.3.0 (c (n "ink_env") (v "3.3.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.3.0") (k 0)) (d (n "ink_engine") (r "^3.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.3.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.3.0") (k 0)) (d (n "ink_primitives") (r "^3.3.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1kxhdnjxwpxd65x0s4d7qdn3kyrvjxcxrz1xzf4pqf37c6bgaj8m") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.3.1 (c (n "ink_env") (v "3.3.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.3.1") (k 0)) (d (n "ink_engine") (r "^3.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.3.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.3.1") (k 0)) (d (n "ink_primitives") (r "^3.3.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1mvrv844nlxzrszmnb84xrk37kbrv9zg0zlxs2yg5k6p8fv8j5i7") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.0-alpha.1 (c (n "ink_env") (v "4.0.0-alpha.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.0-alpha.1") (k 0)) (d (n "ink_engine") (r "^4.0.0-alpha.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.0-alpha.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.0-alpha.1") (k 0)) (d (n "ink_primitives") (r "^4.0.0-alpha.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1zv0gaknr5zvfc3jhvxd7d72ynyji66nswgi95m3xidxwplv83rs") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.0-alpha.3 (c (n "ink_env") (v "4.0.0-alpha.3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.0-alpha.3") (k 0)) (d (n "ink_engine") (r "^4.0.0-alpha.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.0-alpha.3") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.0-alpha.3") (k 0)) (d (n "ink_primitives") (r "^4.0.0-alpha.3") (k 0)) (d (n "ink_storage_traits") (r "^4.0.0-alpha.3") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0yagg7jkh7q6csx0k2b4jcr7w19z881wx4w2kavb05inj446cc5g") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-3.4.0 (c (n "ink_env") (v "3.4.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^3.4.0") (k 0)) (d (n "ink_engine") (r "^3.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^3.4.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^3.4.0") (k 0)) (d (n "ink_primitives") (r "^3.4.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0ys4h15f3jvzs6ngjm0w95iv30j232p4jk22nz3v3nx3051x74d8") (f (quote (("wee-alloc" "ink_allocator/wee-alloc") ("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "rand/std" "rand/std_rng" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.0-beta (c (n "ink_env") (v "4.0.0-beta") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.0-beta") (k 0)) (d (n "ink_engine") (r "^4.0.0-beta") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.0-beta") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.0-beta") (k 0)) (d (n "ink_primitives") (r "^4.0.0-beta") (k 0)) (d (n "ink_storage_traits") (r "^4.0.0-beta") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "1mwa38qs2hwvciv22sbg92fzn5db0fb5j9djrkhprnfiwphd0hs5") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.0-beta.1 (c (n "ink_env") (v "4.0.0-beta.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.0-beta.1") (k 0)) (d (n "ink_engine") (r "^4.0.0-beta.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.0-beta.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.0-beta.1") (k 0)) (d (n "ink_primitives") (r "^4.0.0-beta.1") (k 0)) (d (n "ink_storage_traits") (r "^4.0.0-beta.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.26.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0rxpariyijabf53fdxjdnbqrf1l0b9cga3dr00ikxbzcn909wpww") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.0-rc (c (n "ink_env") (v "4.0.0-rc") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.0-rc") (k 0)) (d (n "ink_engine") (r "^4.0.0-rc") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.0-rc") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.0-rc") (k 0)) (d (n "ink_primitives") (r "^4.0.0-rc") (k 0)) (d (n "ink_storage_traits") (r "^4.0.0-rc") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.26.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "09jay8mppfxdndyy01s47hs7praynyj6913b2g78pjxi6cf0b8mf") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.0 (c (n "ink_env") (v "4.0.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.0") (k 0)) (d (n "ink_engine") (r "^4.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.0") (k 0)) (d (n "ink_primitives") (r "^4.0.0") (k 0)) (d (n "ink_storage_traits") (r "^4.0.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.26.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0cc27pm95k5nbb54inggikky61f1rbjf952nbid66ksyf9kladdh") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("ink-debug") ("default" "std"))))))

(define-public crate-ink_env-4.0.1 (c (n "ink_env") (v "4.0.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.0.1") (k 0)) (d (n "ink_engine") (r "^4.0.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.0.1") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.0.1") (k 0)) (d (n "ink_primitives") (r "^4.0.1") (k 0)) (d (n "ink_storage_traits") (r "^4.0.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3") (f (quote ("derive" "full"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.26.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0gns3hrqji81h0j3vl5w9qjzndbaadzx8pl0kx22f3kl9qznl754") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std") ("call-runtime"))))))

(define-public crate-ink_env-4.1.0 (c (n "ink_env") (v "4.1.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.1.0") (k 0)) (d (n "ink_engine") (r "^4.1.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_metadata") (r "^4.1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "ink_prelude") (r "^4.1.0") (k 0)) (d (n "ink_primitives") (r "^4.1.0") (k 0)) (d (n "ink_storage_traits") (r "^4.1.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.3") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0xzqw4ynnrgbn3j22p3gn544v0zhyrgx48s673vwc7wim5r836k3") (f (quote (("std" "ink_metadata/std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std") ("call-runtime"))))))

(define-public crate-ink_env-4.2.0 (c (n "ink_env") (v "4.2.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.2.0") (k 0)) (d (n "ink_engine") (r "^4.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "^4.2.0") (k 0)) (d (n "ink_primitives") (r "^4.2.0") (k 0)) (d (n "ink_storage_traits") (r "^4.2.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.1.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.5") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "14hgqw0cx7gqfd64cgq6rgsbnlhzm5rdzmz48c3jidyyql2iapjx") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std") ("call-runtime")))) (r "1.68")))

(define-public crate-ink_env-4.2.1 (c (n "ink_env") (v "4.2.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.2.1") (k 0)) (d (n "ink_engine") (r "^4.2.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "^4.2.1") (k 0)) (d (n "ink_primitives") (r "^4.2.1") (k 0)) (d (n "ink_storage_traits") (r "^4.2.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.1.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.5") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0kyiwkg57ff3hzb9fkbkx7v2a6yx246i7y9grqvmzzw1fc9m7xmf") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std") ("call-runtime")))) (r "1.68")))

(define-public crate-ink_env-4.3.0 (c (n "ink_env") (v "4.3.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "^4.3.0") (k 0)) (d (n "ink_engine") (r "^4.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "^4.3.0") (k 0)) (d (n "ink_primitives") (r "^4.3.0") (k 0)) (d (n "ink_storage_traits") (r "^4.3.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.9.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.5") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "024kvj2bmskkz870c5raxmadrxk2ab3ynqxvcyhg3xl216y76kjq") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std") ("call-runtime")))) (r "1.68")))

(define-public crate-ink_env-5.0.0-alpha (c (n "ink_env") (v "5.0.0-alpha") (d (list (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "const_env") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "=5.0.0-alpha") (k 0)) (d (n "ink_engine") (r "=5.0.0-alpha") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "=5.0.0-alpha") (k 0)) (d (n "ink_primitives") (r "=5.0.0-alpha") (k 0)) (d (n "ink_storage_traits") (r "=5.0.0-alpha") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.6") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.9.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.6") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schnorrkel") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "03mc9mf3zqgfi3z9khnq8j1cjrsdf20wv1jy19m322xfzcx8v8hn") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "schnorrkel" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std")))) (r "1.68")))

(define-public crate-ink_env-5.0.0-rc (c (n "ink_env") (v "5.0.0-rc") (d (list (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "const_env") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "=5.0.0-rc") (k 0)) (d (n "ink_engine") (r "=5.0.0-rc") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "=5.0.0-rc") (k 0)) (d (n "ink_primitives") (r "=5.0.0-rc") (k 0)) (d (n "ink_storage_traits") (r "=5.0.0-rc") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.9.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.6") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schnorrkel") (r "^0.11.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.28.0") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0a14rpzdqcfzps23323i0mk2b4v3w4lvqpr67nxga041q55833rc") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "schnorrkel" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std")))) (r "1.68")))

(define-public crate-ink_env-5.0.0-rc.1 (c (n "ink_env") (v "5.0.0-rc.1") (d (list (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "const_env") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "=5.0.0-rc.1") (k 0)) (d (n "ink_engine") (r "=5.0.0-rc.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "=5.0.0-rc.1") (k 0)) (d (n "ink_primitives") (r "=5.0.0-rc.1") (k 0)) (d (n "ink_storage_traits") (r "=5.0.0-rc.1") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "pallet-contracts-uapi") (r "^6.0.0") (k 0) (p "ink-pallet-contracts-uapi")) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.6.9") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.10.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.6") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0nkvs3pjacv7rwi8lfinniy8m3g7xypd9rg046axc5yhl301r1fy") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "schnorrkel" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std")))) (r "1.68")))

(define-public crate-ink_env-5.0.0-rc.2 (c (n "ink_env") (v "5.0.0-rc.2") (d (list (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "const_env") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "=5.0.0-rc.2") (k 0)) (d (n "ink_engine") (r "=5.0.0-rc.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "=5.0.0-rc.2") (k 0)) (d (n "ink_primitives") (r "=5.0.0-rc.2") (k 0)) (d (n "ink_storage_traits") (r "=5.0.0-rc.2") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "pallet-contracts-uapi") (r "=6.0.1") (k 0) (p "pallet-contracts-uapi-next")) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.6.9") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.10.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.6") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0rk2q2zpcym2gjsmg2mpgk9vifwvbbkbw3bvbrc8q7aj2qngvhdb") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "schnorrkel" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std")))) (r "1.68")))

(define-public crate-ink_env-5.0.0-rc.3 (c (n "ink_env") (v "5.0.0-rc.3") (d (list (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "const_env") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "=5.0.0-rc.3") (k 0)) (d (n "ink_engine") (r "=5.0.0-rc.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "=5.0.0-rc.3") (k 0)) (d (n "ink_primitives") (r "=5.0.0-rc.3") (k 0)) (d (n "ink_storage_traits") (r "=5.0.0-rc.3") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "pallet-contracts-uapi") (r "=6.0.3") (k 0) (p "pallet-contracts-uapi-next")) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.6.9") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.10.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.6") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "0706221ln8frdyvsgx2nlxjj8w9x7snkkjsydmzyigw8ars8xzs2") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "schnorrkel" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std")))) (r "1.68")))

(define-public crate-ink_env-5.0.0 (c (n "ink_env") (v "5.0.0") (d (list (d (n "blake2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "const_env") (r "^0.1") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "display"))) (k 0)) (d (n "ink_allocator") (r "=5.0.0") (k 0)) (d (n "ink_engine") (r "=5.0.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ink_prelude") (r "=5.0.0") (k 0)) (d (n "ink_primitives") (r "=5.0.0") (k 0)) (d (n "ink_storage_traits") (r "=5.0.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (k 0)) (d (n "pallet-contracts-uapi") (r "=6.0.3") (k 0) (p "pallet-contracts-uapi-next")) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rlibc") (r "^1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "scale") (r "^3.6.9") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "scale-decode") (r "^0.10.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-encode") (r "^0.5.0") (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "scale-info") (r "^2.6") (f (quote ("derive"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schnorrkel") (r "^0.11.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "secp256k1") (r "^0.28.2") (f (quote ("recovery" "global-context"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sha3") (r "^0.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 0)))) (h "15p2i3x00hpv3khqrr7vdkbm4al0scav00aqnam0d12ggq5wbkj2") (f (quote (("std" "ink_allocator/std" "ink_prelude/std" "ink_primitives/std" "ink_storage_traits/std" "ink_engine/std" "scale/std" "scale-decode" "scale-encode" "scale-info/std" "secp256k1" "schnorrkel" "num-traits/std" "sha2" "sha3" "blake2") ("no-allocator" "ink_allocator/no-allocator") ("ink-debug") ("default" "std")))) (r "1.68")))

