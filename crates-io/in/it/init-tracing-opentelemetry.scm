(define-module (crates-io in it init-tracing-opentelemetry) #:use-module (crates-io))

(define-public crate-init-tracing-opentelemetry-0.12.0-alpha.0 (c (n "init-tracing-opentelemetry") (v "0.12.0-alpha.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19") (f (quote ("rt-tokio" "trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19") (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.19") (f (quote ("trace" "rt-tokio" "testing"))) (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "0qaih8jxdmdk1795rmcmv2m7m6kmxb32nibs1xmgz37gpiizl7y3") (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("otlp" "dep:opentelemetry-otlp" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.12.0-alpha.7 (c (n "init-tracing-opentelemetry") (v "0.12.0-alpha.7") (d (list (d (n "opentelemetry") (r "^0.19") (f (quote ("rt-tokio" "trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)))) (h "0rxhpnbfg8b5mign6f5rax8l4lnd08g1a6lvv0v2zhbcggr7cfb5") (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("otlp" "dep:opentelemetry-otlp" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.12.0 (c (n "init-tracing-opentelemetry") (v "0.12.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.19") (f (quote ("rt-tokio" "trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.12") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19") (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.19") (f (quote ("trace" "rt-tokio" "testing"))) (d #t) (k 2)) (d (n "rstest") (r "^0.17") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "1svzsa59i11d14332v9c8x56nyc3mic9wjp2j6lyw4pk4c9jf0kv") (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("otlp" "dep:opentelemetry-otlp" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.13.1 (c (n "init-tracing-opentelemetry") (v "0.13.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20") (f (quote ("rt-tokio" "trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13") (f (quote ("http-proto"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20") (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.20") (f (quote ("trace" "rt-tokio" "testing"))) (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.20") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "0r8k863r9sw0hna747ip1mcihl3cl4j7s7sakjg3cd87jdnfgzzl") (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("otlp" "dep:opentelemetry-otlp" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.14.1 (c (n "init-tracing-opentelemetry") (v "0.14.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.20") (f (quote ("rt-tokio" "trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.19") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry_sdk") (r "^0.20") (f (quote ("trace" "rt-tokio" "testing"))) (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "05qfa7n4jsyn50i6hy0fgvkfvinii3hp4032hgqi3g1pnyqjdgcl") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.15.0 (c (n "init-tracing-opentelemetry") (v "0.15.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "0zfc9lpbqn5cn1ax48scbsbi154zj72k9pfcj7pkjipwh6f3phn6") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.16.0 (c (n "init-tracing-opentelemetry") (v "0.16.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "1b2jg8cbkbj45whvdnbzxsqwsrlvwyqrfb3afcamwh85mv2l04xa") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.15.2 (c (n "init-tracing-opentelemetry") (v "0.15.2") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "02i7mdfxy4cn134hxnh1i8s3q90wvsqj19mxjnnwsyir8rmzlkfh") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.17.0 (c (n "init-tracing-opentelemetry") (v "0.17.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-logfmt-otel") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "1dv3dd8kbhhrj615hh9nv2cmbd81j146x82rnxrcixc400y2cmvw") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("logfmt" "dep:tracing-logfmt-otel") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.17.1 (c (n "init-tracing-opentelemetry") (v "0.17.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-logfmt-otel") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "1b64q0q4vk52zc508rylws2a9cx6032wqc22myp0vbynxy8qm1ix") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("logfmt" "dep:tracing-logfmt-otel") ("jaeger" "dep:opentelemetry-jaeger" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.18.0 (c (n "init-tracing-opentelemetry") (v "0.18.0") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.22") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.10") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger-propagator") (r "^0.1") (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15") (f (quote ("grpc-tonic" "trace"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14") (o #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.20") (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11") (f (quote ("tls"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-logfmt-otel") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "1466mz9va9v5zzw33l710sb6k954la8ls95j1ncdj7qxqiviaxda") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("logfmt" "dep:tracing-logfmt-otel") ("jaeger" "dep:opentelemetry-jaeger" "dep:opentelemetry-jaeger-propagator" "tracer"))))))

(define-public crate-init-tracing-opentelemetry-0.18.1 (c (n "init-tracing-opentelemetry") (v "0.18.1") (d (list (d (n "assert2") (r "^0.3") (d #t) (k 2)) (d (n "opentelemetry") (r "^0.22") (f (quote ("trace"))) (k 0)) (d (n "opentelemetry-aws") (r "^0.10") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger-propagator") (r "^0.1") (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15") (f (quote ("grpc-tonic" "trace"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14") (o #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3") (f (quote ("trace"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-zipkin") (r "^0.20") (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (f (quote ("rt-tokio" "trace" "rt-tokio" "testing"))) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.11") (f (quote ("tls"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-logfmt-otel") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("ansi" "env-filter" "fmt" "json"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt" "json"))) (k 2)))) (h "0y7q8890b4s7g74ig06wgi4anb7ap2l0ny797vz4lcgrwyknfhvm") (f (quote (("tls" "tonic/tls" "opentelemetry-otlp/tls" "opentelemetry-otlp/tls-roots") ("otlp" "opentelemetry-otlp/http-proto" "tracer")))) (s 2) (e (quote (("zipkin" "dep:opentelemetry-zipkin") ("xray" "dep:opentelemetry-aws") ("tracing_subscriber_ext" "dep:tracing-subscriber" "otlp") ("tracer" "dep:opentelemetry-semantic-conventions") ("stdout" "dep:opentelemetry-stdout" "tracer") ("logfmt" "dep:tracing-logfmt-otel") ("jaeger" "dep:opentelemetry-jaeger-propagator"))))))

