(define-module (crates-io in te integer_or_float) #:use-module (crates-io))

(define-public crate-integer_or_float-0.1.5 (c (n "integer_or_float") (v "0.1.5") (d (list (d (n "autocfg") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 1)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (o #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "1malsq9fbfyfd16f292ij1k7p1fs9qlxywm22ahx7wv1q6q5j3y7") (f (quote (("x64-backing-store") ("ignore_no_std_tests_check") ("hash") ("default" "serde" "serde/std" "serde/default" "float-cmp" "float-cmp/std" "num-traits" "num-traits/std")))) (y #t)))

(define-public crate-integer_or_float-0.1.5-1 (c (n "integer_or_float") (v "0.1.5-1") (d (list (d (n "autocfg") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 1)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (o #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "1p3k9jpi88mrxnwsjgm3h0gxk0wxmfyjripqvnxjkrhq33akijg4") (f (quote (("x64-backing-store") ("ignore_no_std_tests_check") ("hash") ("default" "serde" "serde/std" "serde/default" "float-cmp" "float-cmp/std" "num-traits" "num-traits/std"))))))

(define-public crate-integer_or_float-0.2.0 (c (n "integer_or_float") (v "0.2.0") (d (list (d (n "autocfg") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 1)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (o #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "17z77yp0rm6dj1pkkpspllv33smcv2bw0l1n0m8hi7kx53anq6hk") (f (quote (("x64-backing-store") ("numerical-traits" "float-cmp" "float-cmp/std" "num-traits" "num-traits/std") ("more-serde" "serde" "serde/std" "serde/default") ("ignore_no_std_tests_check") ("hash") ("fat" "more-serde" "default") ("default" "numerical-traits"))))))

(define-public crate-integer_or_float-0.3.0 (c (n "integer_or_float") (v "0.3.0") (d (list (d (n "autocfg") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 1)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (o #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "ryu") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0n1sh50z3x5vhplsmgi5kmyqj77ggq0r5y6rxlpvl9690yix7czk") (f (quote (("x64-backing-store") ("numerical-traits" "float-cmp" "float-cmp/std" "num-traits" "num-traits/std") ("more-serde" "serde" "serde/std" "serde/default") ("ignore_no_std_tests_check") ("hash") ("fat" "more-serde" "faster-strconv" "default") ("faster-strconv" "ryu") ("default" "numerical-traits"))))))

(define-public crate-integer_or_float-0.3.1 (c (n "integer_or_float") (v "0.3.1") (d (list (d (n "autocfg") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 1)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (o #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 1)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "ryu") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "19rlk9mrfvnnqzdni9bf6ja6lrikp0wnrnpklaw010w4gn16bsnk") (f (quote (("x64-backing-store") ("numerical-traits" "float-cmp" "float-cmp/std" "num-traits" "num-traits/std") ("more-serde" "serde" "serde/std" "serde/default") ("ignore_no_std_tests_check") ("hash") ("fat" "more-serde" "faster-strconv" "default") ("faster-strconv" "ryu") ("default" "numerical-traits" "log"))))))

(define-public crate-integer_or_float-0.3.2 (c (n "integer_or_float") (v "0.3.2") (d (list (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "float-cmp") (r "^0.9") (o #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (o #t) (k 0)) (d (n "ryu") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "autocfg") (r "^1.0") (d #t) (k 1)) (d (n "cargo-emit") (r "^0.2") (d #t) (k 1)) (d (n "cfg-if") (r "^1.0") (d #t) (k 1)) (d (n "indoc") (r "^1.0") (d #t) (k 1)))) (h "0mjhkw43936nz3hdmv6drkkzfqsqn3h3993bdq31iz70znwx7ygd") (f (quote (("x64-backing-store") ("numerical-traits" "float-cmp" "float-cmp/std" "num-traits" "num-traits/std") ("more-serde" "serde" "serde/std" "serde/default") ("ignore_no_std_tests_check") ("hash") ("fat" "more-serde" "faster-strconv" "default") ("faster-strconv" "ryu") ("default" "numerical-traits" "log"))))))

