(define-module (crates-io in te interactsh-rs) #:use-module (crates-io))

(define-public crate-interactsh-rs-0.1.0-RC1 (c (n "interactsh-rs") (v "0.1.0-RC1") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "fake") (r "^2.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "inout") (r "^0.1.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 2)) (d (n "openssl") (r "^0.10.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "rsa") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 2)) (d (n "svix-ksuid") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("serde" "formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0nb8sf13hn2yasi66wjbv4776w67g0r9wina3mrvlvys3dwn5r4j") (f (quote (("reqwest-rustls-tls" "reqwest/rustls-tls") ("reqwest-native-tls-vendored" "reqwest-native-tls" "reqwest/native-tls-vendored") ("reqwest-native-tls" "reqwest/default-tls") ("nightly") ("default" "rustcrypto" "reqwest-rustls-tls" "async-compat")))) (s 2) (e (quote (("rustcrypto" "dep:rsa" "dep:aes" "dep:cfb-mode" "dep:sha2" "dep:digest" "dep:inout") ("openssl-vendored" "openssl" "openssl?/vendored") ("openssl" "dep:openssl") ("async-compat" "dep:async-compat"))))))

(define-public crate-interactsh-rs-0.1.0-RC2 (c (n "interactsh-rs") (v "0.1.0-RC2") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "fake") (r "^2.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "inout") (r "^0.1.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 2)) (d (n "openssl") (r "^0.10.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "rsa") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 2)) (d (n "svix-ksuid") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("serde" "formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "187zz7m1aw8vxkz9da6yxawg399zk77bnl989x0glp9c4pcx9qmr") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("reqwest-rustls-tls" "rustls-tls") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-native-tls" "native-tls") ("nightly") ("native-tls-vendored" "native-tls" "reqwest/native-tls-vendored") ("native-tls" "reqwest/default-tls") ("default" "rustcrypto" "rustls-tls" "async-compat")))) (s 2) (e (quote (("rustcrypto" "dep:rsa" "dep:aes" "dep:cfb-mode" "dep:sha2" "dep:digest" "dep:inout") ("openssl-vendored" "openssl" "openssl?/vendored") ("openssl" "dep:openssl") ("async-compat" "dep:async-compat"))))))

(define-public crate-interactsh-rs-0.1.0 (c (n "interactsh-rs") (v "0.1.0") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "fake") (r "^2.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "inout") (r "^0.1.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 2)) (d (n "openssl") (r "^0.10.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "rsa") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 2)) (d (n "svix-ksuid") (r "^0.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.36") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("serde" "formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1d4khfh6px3k6g7imzpnj846n6hyxpm7jaj93jrcj4c2j1dwwqcp") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("reqwest-rustls-tls" "rustls-tls") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-native-tls" "native-tls") ("nightly") ("native-tls-vendored" "native-tls" "reqwest/native-tls-vendored") ("native-tls" "reqwest/default-tls") ("default" "rustcrypto" "rustls-tls" "async-compat")))) (s 2) (e (quote (("rustcrypto" "dep:rsa" "dep:aes" "dep:cfb-mode" "dep:sha2" "dep:digest" "dep:inout") ("openssl-vendored" "openssl" "openssl?/vendored") ("openssl" "dep:openssl") ("async-compat" "dep:async-compat"))))))

(define-public crate-interactsh-rs-0.2.0 (c (n "interactsh-rs") (v "0.2.0") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "fake") (r "^2.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "inout") (r "^0.1.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 2)) (d (n "openssl") (r "^0.10.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "rsa") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "svix-ksuid") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("serde" "formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1648s83nm8kjpm5nw9v5q9qzsksp19cbix8i6m8higl8xwnkf3rm") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("reqwest-rustls-tls" "rustls-tls") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-native-tls" "native-tls") ("nightly") ("native-tls-vendored" "native-tls" "reqwest/native-tls-vendored") ("native-tls" "reqwest/default-tls") ("default" "rustcrypto" "rustls-tls" "async-compat")))) (s 2) (e (quote (("rustcrypto" "dep:rsa" "dep:aes" "dep:cfb-mode" "dep:sha2" "dep:digest" "dep:inout") ("openssl-vendored" "openssl" "openssl?/vendored") ("openssl" "dep:openssl") ("async-compat" "dep:async-compat"))))))

(define-public crate-interactsh-rs-0.2.1 (c (n "interactsh-rs") (v "0.2.1") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "fake") (r "^2.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "inout") (r "^0.1.3") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.15") (d #t) (k 2)) (d (n "openssl") (r "^0.10.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "rsa") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 1)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "smol") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "svix-ksuid") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("serde" "formatting" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1f4r8avck8fr8j5nmmm2r1vsl0ygsi58lmj1rmdfh8j7526lwkd7") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("reqwest-rustls-tls" "rustls-tls") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-native-tls" "native-tls") ("nightly") ("native-tls-vendored" "native-tls" "reqwest/native-tls-vendored") ("native-tls" "reqwest/default-tls") ("default" "rustcrypto" "rustls-tls" "async-compat")))) (s 2) (e (quote (("rustcrypto" "dep:rsa" "dep:aes" "dep:cfb-mode" "dep:sha2" "dep:digest" "dep:inout") ("openssl-vendored" "openssl" "openssl?/vendored") ("openssl" "dep:openssl") ("async-compat" "dep:async-compat"))))))

(define-public crate-interactsh-rs-0.3.0 (c (n "interactsh-rs") (v "0.3.0") (d (list (d (n "aes") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "cfb-mode") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10.41") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (k 0)) (d (n "rsa") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "snafu") (r "^0.7.3") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("serde" "formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 2)) (d (n "async-std") (r "^1") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "fake") (r "^2.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.15") (d #t) (k 2)) (d (n "smol") (r "^1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (d #t) (k 2)) (d (n "rustversion") (r "^1") (d #t) (k 1)))) (h "1skj8cpsama1v2z56hrvqmzl1xsa9l1rd4db0j8i4ncd9qmpnmcs") (f (quote (("rustls-tls" "reqwest/rustls-tls") ("reqwest-rustls-tls" "rustls-tls") ("reqwest-native-tls-vendored" "native-tls-vendored") ("reqwest-native-tls" "native-tls") ("nightly") ("native-tls-vendored" "native-tls" "reqwest/native-tls-vendored") ("native-tls" "reqwest/default-tls") ("default" "rustcrypto" "rustls-tls" "async-compat")))) (s 2) (e (quote (("rustcrypto" "dep:rsa" "dep:aes" "dep:cfb-mode" "dep:sha2") ("openssl-vendored" "openssl" "openssl?/vendored") ("openssl" "dep:openssl") ("async-compat" "dep:async-compat"))))))

