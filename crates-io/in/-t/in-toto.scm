(define-module (crates-io in -t in-toto) #:use-module (crates-io))

(define-public crate-in-toto-0.0.0-alpha3 (c (n "in-toto") (v "0.0.0-alpha3") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.13") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "110sanw7fjl4mlzdy6kk4fchn1y65f08yfrzaw1ic5lyn2rfh64p") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.0.0 (c (n "in-toto") (v "0.0.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.13") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "04bajjf5hisrja0bjap8l3cds7f87p6q159klspgcismn6i3273b") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.0.1-rc1 (c (n "in-toto") (v "0.0.1-rc1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.13") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0acay0r1lbax0h8s0mfn7zmw7g0g16ba9v510cfj461p37bza4zx") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.1.1 (c (n "in-toto") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.13") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1393y70jr4pcym3gjhw8fl1h1cf7iwrvrr30gvfxh1cz8g7svla8") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.1.2 (c (n "in-toto") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1xsy2v1slv929b9m02m72k1b6xc37i188gn1vra64hj7y1bmi8gz") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.2.0 (c (n "in-toto") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "15qkqkiz5b1ns2jpqffz38zkaivr8mrpbdjvxnffdh190n778z4n") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.3.0 (c (n "in-toto") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (k 0)) (d (n "itoa") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1gcms76if6jm3rbr6grilm3fn80msqjxzk61f39cvzijfpfjwxgd") (f (quote (("default" "hyper/default"))))))

(define-public crate-in-toto-0.3.1 (c (n "in-toto") (v "0.3.1") (d (list (d (n "assert-json-diff") (r "^2.0.2") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "serde"))) (k 0)) (d (n "data-encoding") (r "^2.0.0-rc.2") (d #t) (k 0)) (d (n "derp") (r "^0.0.14") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-io") (r "^0.3.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.1") (f (quote ("compat" "io"))) (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 2)) (d (n "matches") (r "^0.1.8") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "path-clean") (r "^1.0.1") (d #t) (k 0)) (d (n "path-matchers") (r "^1.0.2") (d #t) (k 0)) (d (n "pem") (r "^2.0.1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "untrusted") (r "^0.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "01j3jiki97bq3r1i1q1ly50bl848mn1yh1bhmw55ll1h4xmb6x4r")))

