(define-module (crates-io in fi infinitree) #:use-module (crates-io))

(define-public crate-infinitree-0.1.0 (c (n "infinitree") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (k 0)) (d (n "scc") (r "^0.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1mxmacx419k7rv0fwdjx1rpg562rjfxf0n6n17ny6si12pjqyd93") (f (quote (("test") ("s3" "rusoto_core" "rusoto_s3" "tokio") ("mmap" "memmap2") ("default" "s3" "mmap"))))))

(define-public crate-infinitree-0.2.0 (c (n "infinitree") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (k 0)) (d (n "scc") (r "^0.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1wnalx4n328npxr6iq6la9zjjcwxn3ak8wg7gh6gwiaf7bnjd8kg") (f (quote (("test") ("s3" "rusoto_core" "rusoto_s3" "tokio") ("mmap" "memmap2") ("default" "s3" "mmap")))) (y #t)))

(define-public crate-infinitree-0.2.1 (c (n "infinitree") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.2") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (k 0)) (d (n "scc") (r "^0.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1hia3pqrmyhhd5w2lx9zjydyja47sxdfsmapypv5plc902fagpbf") (f (quote (("test") ("s3" "rusoto_core" "rusoto_s3" "tokio") ("mmap" "memmap2") ("default" "s3" "mmap"))))))

(define-public crate-infinitree-0.2.2 (c (n "infinitree") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dashmap") (r "^4.0") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.2") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (f (quote ("rustls"))) (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (k 0)) (d (n "scc") (r "^0.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0avmj9i591j4ch49kcn748rpqw0sc6v99bg3s8vvai3alkb4gwd4") (f (quote (("s3" "rusoto_core" "rusoto_s3" "tokio") ("mmap" "memmap2") ("default" "s3" "mmap") ("_test"))))))

(define-public crate-infinitree-0.3.0 (c (n "infinitree") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake2b_simd") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.3") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.15") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (k 0)) (d (n "rust-argon2") (r "^0.8") (d #t) (k 0)) (d (n "s3-server") (r "^0.1") (d #t) (k 2)) (d (n "scc") (r "^0.5") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1370cfkrlgag6cz3i4hpl0zwgg5dshsp8caxxfh4wqm60riirh59") (f (quote (("s3" "futures" "tokio" "rusoto_core" "rusoto_s3") ("rustls" "rusoto_core/rustls" "rusoto_s3/rustls") ("native-tls" "rusoto_core/native-tls" "rusoto_s3/native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.4.0 (c (n "infinitree") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (k 0)) (d (n "s3-server") (r "^0.2") (d #t) (k 2)) (d (n "scc") (r "^0.6") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "1wms28vn9p066spz9g9r0dr4zpwj64nwk68q4zkjs8kb0yfgj3y0") (f (quote (("s3" "futures" "tokio" "rusoto_core" "rusoto_s3") ("rustls" "rusoto_core/rustls" "rusoto_s3/rustls") ("native-tls" "rusoto_core/native-tls" "rusoto_s3/native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.5.0 (c (n "infinitree") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.5") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (k 0)) (d (n "s3-server") (r "^0.2") (d #t) (k 2)) (d (n "scc") (r "^0.6") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0xxqw9m9nlr98ybyyg2jz2gra21aa3g73ndr9rarl453w6m4mfv7") (f (quote (("s3" "futures" "tokio" "rusoto_core" "rusoto_s3") ("rustls" "rusoto_core/rustls" "rusoto_s3/rustls") ("native-tls" "rusoto_core/native-tls" "rusoto_s3/native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls")))) (y #t)))

(define-public crate-infinitree-0.5.1 (c (n "infinitree") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.5") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^1") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (k 0)) (d (n "s3-server") (r "^0.2") (d #t) (k 2)) (d (n "scc") (r "^0.6") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "147rsv60k43ww19f1p5jasdgjfp9r2z49ikz7j6x63gzp6c9wmcc") (f (quote (("s3" "futures" "tokio" "rusoto_core" "rusoto_s3") ("rustls" "rusoto_core/rustls" "rusoto_s3/rustls") ("native-tls" "rusoto_core/native-tls" "rusoto_s3/native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls")))) (y #t)))

(define-public crate-infinitree-0.5.2 (c (n "infinitree") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.5.2") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (k 0)) (d (n "s3-server") (r "^0.2") (d #t) (k 2)) (d (n "scc") (r "^0.6.10") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0c20f6pidy5r43hfxxfgshcvlzsvcwg2gih0szk5vxkykks1isp5") (f (quote (("s3" "futures" "tokio" "rusoto_core" "rusoto_s3") ("rustls" "rusoto_core/rustls" "rusoto_s3/rustls") ("native-tls" "rusoto_core/native-tls" "rusoto_s3/native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.6.0 (c (n "infinitree") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.6.0") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (k 0)) (d (n "rust-s3") (r "^0.31.0") (f (quote ("with-tokio"))) (o #t) (k 0)) (d (n "s3-server") (r "^0.2") (d #t) (k 2)) (d (n "scc") (r "^0.6.10") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0gjb7lnhr183rvp0cnrg242hbwwry3wdxdls1krv37s1ng2c344r") (f (quote (("s3" "futures" "tokio" "rust-s3") ("rustls" "rust-s3/tokio-rustls-tls") ("native-tls" "rust-s3/tokio-native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.7.0 (c (n "infinitree") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.7.0") (d #t) (k 0)) (d (n "lru") (r "^0.7") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.0") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "ring") (r "^0.16") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0") (d #t) (k 0)) (d (n "rust-s3") (r "^0.31.0") (f (quote ("with-tokio"))) (o #t) (k 0)) (d (n "s3-server") (r "^0.2") (d #t) (k 2)) (d (n "scc") (r "^0.7.1") (d #t) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_with") (r "^1.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (d #t) (k 0)))) (h "0ww6kpa3kp7spbvm231ksilqgrjkp7ssldcb2v71d6r40clvfjlf") (f (quote (("s3" "futures" "tokio" "rust-s3") ("rustls" "rust-s3/tokio-rustls-tls") ("native-tls" "rust-s3/tokio-native-tls") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.8.0 (c (n "infinitree") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "flume") (r "^0.10.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.8.0") (d #t) (k 0)) (d (n "lru") (r "^0.7.5") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.3") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (o #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "rusty-s3") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "s3-server") (r "^0.2.0") (d #t) (k 2)) (d (n "scc") (r "^0.7.1") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5.5") (d #t) (k 0)))) (h "1vr431g3xdnn5xb0z5qsv3nis3zs9227k6952a4w6v3g3r1f2npm") (f (quote (("s3" "futures" "tokio" "rusty-s3") ("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls-alpn") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.8.1 (c (n "infinitree") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "flume") (r "^0.10.12") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2.6") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("server"))) (d #t) (k 2)) (d (n "infinitree-macros") (r "^0.8.1") (d #t) (k 0)) (d (n "lru") (r "^0.7.5") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.3") (f (quote ("frame"))) (k 0)) (d (n "memmap2") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (o #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "rusty-s3") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "s3-server") (r "^0.2.0") (d #t) (k 2)) (d (n "scc") (r "^0.7.1") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (d #t) (k 0)) (d (n "serde_with") (r "^1.13.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("rt" "macros" "rt-multi-thread" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1.5.5") (d #t) (k 0)))) (h "1f4qg84i9p6g4b6p05mp7bf2n8pvv1a32fgl04b908v1im1gzv3n") (f (quote (("test") ("s3" "futures" "tokio" "rusty-s3") ("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls-alpn") ("mmap" "memmap2") ("default" "mmap" "s3" "native-tls") ("_test" "test" "s3" "native-tls"))))))

(define-public crate-infinitree-0.9.0 (c (n "infinitree") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "blake3") (r "^1.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.22") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.3") (f (quote ("safe-decode" "checked-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.0") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^0.8.3") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.140") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1hfmbb9v68wy9mpgqdlrrr5klm19pwfrarkiaxba04bsrx13hq3m") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.9.1 (c (n "infinitree") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.27") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.9.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.9.5") (f (quote ("safe-decode" "checked-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.1.0") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_with") (r "^2.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1pyj5252rf6861nvgkrs3r8xnz7hq8xvqj6ixqhkc5nxgddayi3p") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.9.2 (c (n "infinitree") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.27") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.10.0") (f (quote ("safe-decode" "checked-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.4.3") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.159") (d #t) (k 0)) (d (n "serde_with") (r "^2.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0xff1jp78jymkmprgj473ry7bjaka5xqh082gqlan7ygxm44r0bc") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.10.0 (c (n "infinitree") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.27") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.10.0") (f (quote ("safe-decode" "checked-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.6.3") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "1m67farsmh0ggvbv6vw26ii0r7d537x1bnqp6z6mywi62dn868kv") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.10.1 (c (n "infinitree") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.27") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.10.0") (f (quote ("safe-decode" "checked-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.5.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.6.3") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_with") (r "^2.3.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0wjg14dfff01h83saqifpp9kh3r485lgfq8djp01sa4yf0a79kwi") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.10.2 (c (n "infinitree") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "blake3") (r "^1.3.3") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.28") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.10.0") (f (quote ("safe-decode" "checked-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.8.0") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.163") (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0g8ygbb6x1pnxhf33y9pf48xwhzskd5j7qyf8z6y3j6nfjsqpfr1") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.10.3 (c (n "infinitree") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "blake3") (r "^1.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.28") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (f (quote ("safe-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 2)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.8.2") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.164") (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "19gsjrydyb6kl88174k0g0cng4rz56y4kq2hp0zrc7f6zp2rcg7y") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

(define-public crate-infinitree-0.10.4 (c (n "infinitree") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "blake3") (r "^1.4.1") (d #t) (k 0)) (d (n "flume") (r "^0.10.14") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "infinitree-macros") (r "^0.10.0") (d #t) (k 0)) (d (n "libsodium-sys-stable") (r "^1.19.28") (f (quote ("minimal" "optimized"))) (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.10.1") (d #t) (k 0)) (d (n "lz4_flex") (r "^0.11.1") (f (quote ("safe-decode" "frame"))) (k 0)) (d (n "memmap2") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "ring") (r "^0.16.20") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rust-argon2") (r "^1.0.0") (d #t) (k 0)) (d (n "scc") (r "^1.8.3") (d #t) (k 0)) (d (n "secrecy") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.167") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.167") (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "yubico_manager") (r "^0.9.0") (o #t) (d #t) (k 0)))) (h "0b008z7f2iz1azjj73my01nx8c9liylbnplh452phjrs1j5z470w") (f (quote (("yubikey" "yubico_manager") ("test") ("mmap" "memmap2") ("default" "mmap" "cryptobox" "yubikey") ("cryptobox" "libsodium-sys-stable") ("_test" "test"))))))

