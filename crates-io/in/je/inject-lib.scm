(define-module (crates-io in je inject-lib) #:use-module (crates-io))

(define-public crate-inject-lib-0.0.4 (c (n "inject-lib") (v "0.0.4") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "0gbw9q6wywakf9n737jmnjzxy0c929aq5zvpqhy4igxhscarxz43") (f (quote (("x86tox64" "ntdll" "nightly") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.0.5 (c (n "inject-lib") (v "0.0.5") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "10621hxhd2g6nh8zpvh1bhcx2iv0i1sk4z5wdvwxk6h9zksq86iw") (f (quote (("x86tox64" "ntdll" "nightly") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.0.6 (c (n "inject-lib") (v "0.0.6") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "00fk82wgx0vl6zxzpxmr5v0zsfa0bbhannyxad1lpr163nlgddgf") (f (quote (("x86tox64" "ntdll" "nightly") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.0.7 (c (n "inject-lib") (v "0.0.7") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "18s7afdvr6xw1rfs9wxlkq4ly55c9r3pcs2sapfw18hmd3kyhn9j") (f (quote (("x86tox64" "ntdll") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.1.0 (c (n "inject-lib") (v "0.1.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1729kcdkfa8yb7p1cw6pwq43h9xybhdmq489lvc5n99w2mdpx1fz") (f (quote (("x86tox64" "ntdll") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.1.1 (c (n "inject-lib") (v "0.1.1") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "0k62d3dz8r6332ccn67mpzcdpy68f0lm09jm182xg105i5qb3cx0") (f (quote (("x86tox64" "ntdll") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.2.0 (c (n "inject-lib") (v "0.2.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "pelite") (r "^0.9") (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1mi9qwhlrcifwml0xy50l9309vwwyg11cfmad8fps7jhdv0fnn6x") (f (quote (("x86tox64" "ntdll") ("ntdll" "ntapi") ("nightly") ("default"))))))

(define-public crate-inject-lib-0.3.0 (c (n "inject-lib") (v "0.3.0") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (f (quote ("race"))) (k 0)) (d (n "pelite") (r "^0.9") (f (quote ("derive_pod"))) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "thread_local") (r "^1.1.4") (d #t) (k 2)) (d (n "widestring") (r "^1") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug" "impl-default"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1p6yjcf7ki5gmda66xvfbjkdfxcylr3af1zax9s5p33z757k96pp") (f (quote (("x86tox64" "ntdll") ("std" "pelite/mmap" "once_cell/std" "widestring/std" "alloc") ("ntdll" "ntapi") ("nightly") ("default" "alloc") ("alloc" "once_cell/alloc" "widestring/alloc")))) (y #t)))

(define-public crate-inject-lib-0.3.1 (c (n "inject-lib") (v "0.3.1") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (f (quote ("race"))) (k 0)) (d (n "pelite") (r "^0.9") (f (quote ("derive_pod"))) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "thread_local") (r "^1.1.4") (d #t) (k 2)) (d (n "widestring") (r "^1") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug" "impl-default"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "1r7pc4rppxpzdvzx4kpw4cw08p9qy1s70mgbkyfysj9zw05afxc5") (f (quote (("x86tox64" "ntdll") ("std" "pelite/mmap" "once_cell/std" "widestring/std" "alloc") ("ntdll" "ntapi") ("nightly") ("default" "alloc" "std") ("alloc" "once_cell/alloc" "widestring/alloc"))))))

(define-public crate-inject-lib-0.3.2 (c (n "inject-lib") (v "0.3.2") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.3") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (f (quote ("race"))) (k 0)) (d (n "pelite") (r "^0.9") (f (quote ("derive_pod"))) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "simple_logger") (r "^2.1.0") (k 2)) (d (n "thread_local") (r "^1.1.4") (d #t) (k 2)) (d (n "widestring") (r "^1") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug" "impl-default"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "0zshp0g6lcnjx570w4wz9bi0k2cj2iv9p0hdccykw3sgn21ncik4") (f (quote (("x86tox64" "ntdll") ("std" "pelite/mmap" "once_cell/std" "widestring/std" "alloc") ("ntdll" "ntapi") ("nightly") ("default" "alloc" "std") ("alloc" "once_cell/alloc" "widestring/alloc"))))))

(define-public crate-inject-lib-0.3.3 (c (n "inject-lib") (v "0.3.3") (d (list (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ntapi") (r "^0.4") (o #t) (d #t) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "once_cell") (r "^1.10") (f (quote ("race"))) (k 0)) (d (n "pelite") (r "^0.10") (f (quote ("derive_pod"))) (t "cfg(target_family = \"windows\")") (k 0)) (d (n "simple_logger") (r "^4.0.0") (k 2)) (d (n "thread_local") (r "^1.1.4") (d #t) (k 2)) (d (n "widestring") (r "^1") (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("winnt" "ntdef" "basetsd" "minwindef" "errhandlingapi" "tlhelp32" "handleapi" "processthreadsapi" "libloaderapi" "wow64apiset" "sysinfoapi" "memoryapi" "synchapi" "winbase" "impl-debug" "impl-default"))) (d #t) (t "cfg(target_family = \"windows\")") (k 0)))) (h "0njxsbkshcc7z45x0v32f2fxy8imjpdrcrm9ciy72zvhf37sq4pm") (f (quote (("x86tox64" "ntdll") ("std" "pelite/mmap" "once_cell/std" "widestring/std" "alloc") ("ntdll" "ntapi") ("nightly") ("default" "alloc" "std") ("alloc" "once_cell/alloc" "widestring/alloc"))))))

