(define-module (crates-io in de indexmap-amortized) #:use-module (crates-io))

(define-public crate-indexmap-amortized-1.0.0 (c (n "indexmap-amortized") (v "1.0.0") (d (list (d (n "atone") (r "^0.3.1") (d #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "griddle") (r "^0.3.1") (f (quote ("raw"))) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "0y4zdiz6y85h1d50h0j899ccm7g8lr6br87rampyh1p4cdhjh60i") (f (quote (("test_low_transition_point") ("test_debug") ("serde-1" "serde") ("rayon" "rayon_" "atone/rayon"))))))

(define-public crate-indexmap-amortized-1.0.1 (c (n "indexmap-amortized") (v "1.0.1") (d (list (d (n "atone") (r "^0.3.1") (d #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "griddle") (r "^0.3.1") (f (quote ("raw"))) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde") (r "^1.0") (o #t) (k 0)))) (h "15gjmkbgza47aa4w53q9bq6mfc2mhs5nrqsfssknmf0dksid5wa3") (f (quote (("test_low_transition_point") ("test_debug") ("serde-1" "serde") ("rayon" "rayon_" "atone/rayon"))))))

(define-public crate-indexmap-amortized-1.6.1 (c (n "indexmap-amortized") (v "1.6.1") (d (list (d (n "atone") (r "^0.3.4") (d #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 2)) (d (n "griddle") (r "^0.4.0") (f (quote ("raw"))) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde") (r "^1.0") (o #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)))) (h "1wcx6pqaqhx4gvfgl75llz978z5m79viy36lzm8lw8a5zdgs1dc1") (f (quote (("test_low_transition_point") ("test_debug") ("std") ("serde-1" "serde") ("rayon" "rayon_" "atone/rayon"))))))

