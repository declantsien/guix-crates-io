(define-module (crates-io in fl influxdb2) #:use-module (crates-io))

(define-public crate-influxdb2-0.1.0 (c (n "influxdb2") (v "0.1.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0mm8nhdvfi70dr2v8qzv0fwnaamal324nrkrnmkrnbl2rsdx2lsm")))

(define-public crate-influxdb2-0.1.1 (c (n "influxdb2") (v "0.1.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1wfphnr6qcnfl66yagffzacaqmv3dklwrwc2i7bxijjp5rjd7bvh")))

(define-public crate-influxdb2-0.2.0 (c (n "influxdb2") (v "0.2.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0zi54ljxcljp5l34zgzn66qqvkslzvq9262miqhxiz87ygyzrfz8") (y #t)))

(define-public crate-influxdb2-0.2.1 (c (n "influxdb2") (v "0.2.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "00hdbgkp1r27kjbk4zbv5lr9mmq3f23k0ql7z91ha7r3cbcf5cs4") (y #t)))

(define-public crate-influxdb2-0.2.2 (c (n "influxdb2") (v "0.2.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1s243wxqzizr1l5k7kwvsmjfvvd80d1z0n2q0lw0ngy5b1v7ll81") (y #t)))

(define-public crate-influxdb2-0.2.3 (c (n "influxdb2") (v "0.2.3") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1zs5qsm1aalxmkdkp0zrh884bb3d2wdlq4w01hdgfbw90ka211r6") (y #t)))

(define-public crate-influxdb2-0.2.4 (c (n "influxdb2") (v "0.2.4") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "136n7varq3d0jpglvyj1dxmijnymnidbqx6yxvqsfihi8p8qnrl7") (y #t)))

(define-public crate-influxdb2-0.2.5 (c (n "influxdb2") (v "0.2.5") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0alk4b3kmf6mnyff076j8pqnvrgv55yf30xnv8n3h65qzqhmiwbc") (y #t)))

(define-public crate-influxdb2-0.2.6 (c (n "influxdb2") (v "0.2.6") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1s56ni9sdmpg8j33fdbnw5n6w5q0fn7mvbcrx6b07kdldka0zvis") (y #t)))

(define-public crate-influxdb2-0.2.7 (c (n "influxdb2") (v "0.2.7") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.1.5") (d #t) (k 0)) (d (n "influxdb2-structmap-derive") (r "^0.1.5") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0yncl63iajidsbcvpflvpqlwpxpixf9kpj0pfbq64n47pi548dqz") (y #t)))

(define-public crate-influxdb2-0.3.0 (c (n "influxdb2") (v "0.3.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "10z6hxscj9g9y5v3lw80703rq62paggi9nbmi5x2jwf8fcqvnm20")))

(define-public crate-influxdb2-0.3.1 (c (n "influxdb2") (v "0.3.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "077n94gdcybpsdmh94phanqiib8wndk6ix8cik6j9jq3ssarf4dk")))

(define-public crate-influxdb2-0.3.2 (c (n "influxdb2") (v "0.3.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "08814hbqpqhxk78vbnfn1jvyh4dp98za5c3h89qmrq2120qw7pvc") (f (quote (("rustls" "reqwest/rustls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.3.3 (c (n "influxdb2") (v "0.3.3") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0bnxvai4h5p7rqqf99k32495fx7ngvdax6xly81gqc15cjd1aa8x") (f (quote (("rustls" "reqwest/rustls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.3.4 (c (n "influxdb2") (v "0.3.4") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "01v4i9b5m419x88cdl2jkgwql0mh4022lkgkbildavlzmv1vazmm") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.3.5 (c (n "influxdb2") (v "0.3.5") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^6") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0kpizg2s6vz0c6mka675bwkkfb5g0s9by819vj63sd86ld5fmbgr") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.3.7 (c (n "influxdb2") (v "0.3.7") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0adkdwgsw4yqphybr2l9d1pmmxs6zq4acqsw6fbichcgma1vnff2") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.3.8 (c (n "influxdb2") (v "0.3.8") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0sbx3k39rm2676rnhb83pbwi43azh3jqxmsk9w8ngivhy0b7hca1") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.3.9 (c (n "influxdb2") (v "0.3.9") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1d4qz601ccl6f8gsaba6v0aaj6w9g305vpy6l607af4dblmaflm1") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.4.0 (c (n "influxdb2") (v "0.4.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("max_level_trace" "release_max_level_debug"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0nakybrgfby1lpz5d8s7dradcfcnzrqrgv4aibfkjvbdzwnq3f5i") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.4.1 (c (n "influxdb2") (v "0.4.1") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0qygk39p3a69rc78p3jyy6vdykwl6mscbbrnzjwyjffgq0p5031j") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.4.2 (c (n "influxdb2") (v "0.4.2") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "nom") (r "^7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "opentelemetry") (r "^0.13") (f (quote ("trace" "metrics" "rt-tokio"))) (k 0)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "serde_qs") (r "^0.10") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("env-filter" "smallvec" "chrono" "parking_lot" "registry" "fmt" "ansi" "json"))) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "14qhk7gbnvabv6vfmpn7c2ay9xnhnqa9zc2ha5zy3s1g06whqcpg") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls"))))))

(define-public crate-influxdb2-0.4.4 (c (n "influxdb2") (v "0.4.4") (d (list (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "gzip"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "10s6mc7sfim099y3ilgijajz94rfmg92sgxybrmx0ailk2ghq426") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls")))) (s 2) (e (quote (("gzip" "reqwest/gzip" "dep:async-compression" "dep:tokio-util"))))))

(define-public crate-influxdb2-0.4.5 (c (n "influxdb2") (v "0.4.5") (d (list (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "gzip"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0gv2df8y07irsdc9rq7ibfh6426j4f9pmr53i07lamqn5ss0b68f") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls")))) (s 2) (e (quote (("gzip" "reqwest/gzip" "dep:async-compression" "dep:tokio-util"))))))

(define-public crate-influxdb2-0.4.6 (c (n "influxdb2") (v "0.4.6") (d (list (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "gzip"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "1wrivlx2rs33hz48vh719vmfapidb803vk0zni4ha0vgs618qs7h") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls")))) (y #t) (s 2) (e (quote (("gzip" "reqwest/gzip" "dep:async-compression" "dep:tokio-util"))))))

(define-public crate-influxdb2-0.5.0 (c (n "influxdb2") (v "0.5.0") (d (list (d (n "async-compression") (r "^0.4.3") (f (quote ("tokio" "gzip"))) (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "go-parse-duration") (r "^0.1") (d #t) (k 0)) (d (n "influxdb2-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "influxdb2-structmap") (r "^0.2.0") (d #t) (k 0)) (d (n "mockito") (r "^0.26.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.4.0") (f (quote ("parking_lot"))) (d #t) (k 2)) (d (n "ordered-float") (r "^3.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "json"))) (k 0)) (d (n "secrecy") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (d #t) (k 0)) (d (n "snafu") (r "^0.6.6") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)))) (h "0w32y2cfy0bwqph6mipfxkqhp862lsmgpd3x19jgv5yn7v75ccw2") (f (quote (("rustls" "reqwest/rustls-tls") ("native-tls" "reqwest/native-tls") ("default" "native-tls")))) (s 2) (e (quote (("gzip" "reqwest/gzip" "dep:async-compression" "dep:tokio-util"))))))

