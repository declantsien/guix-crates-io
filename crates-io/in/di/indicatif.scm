(define-module (crates-io in di indicatif) #:use-module (crates-io))

(define-public crate-indicatif-0.1.0 (c (n "indicatif") (v "0.1.0") (d (list (d (n "clicolors-control") (r "^0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "1s54yvh5m7shdp20xbmg8vjj21fvj8w23z1nsj1w4kw887d32s0g")))

(define-public crate-indicatif-0.2.0 (c (n "indicatif") (v "0.2.0") (d (list (d (n "clicolors-control") (r "^0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "1j306pn670b2x82ajz1jjys13d06kqdn3f80xkly51akk7acmaij")))

(define-public crate-indicatif-0.3.0 (c (n "indicatif") (v "0.3.0") (d (list (d (n "clicolors-control") (r "^0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "03p958q7jijq5qh577dsir5qfsbqdd7mm2880m5sqvpdcbx16mgp")))

(define-public crate-indicatif-0.3.1 (c (n "indicatif") (v "0.3.1") (d (list (d (n "clicolors-control") (r "^0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "1kzpmyrg3awk9pbdab8i02l3nd9br71j4f3dvw5mqszpjnbzl7if")))

(define-public crate-indicatif-0.3.2 (c (n "indicatif") (v "0.3.2") (d (list (d (n "clicolors-control") (r "^0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "1c17a5x1bz2ywmc448mvwkqj49gy3i77s063ks88w9ws3cqd9jms")))

(define-public crate-indicatif-0.3.3 (c (n "indicatif") (v "0.3.3") (d (list (d (n "clicolors-control") (r "^0") (d #t) (k 0)) (d (n "kernel32-sys") (r "^0") (d #t) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0") (d #t) (t "cfg(windows)") (k 0)))) (h "12czdw3bk0mlyi69hj386jx7qsjmkkx0a8b23wnhhsz62prj2r9z")))

(define-public crate-indicatif-0.4.0 (c (n "indicatif") (v "0.4.0") (d (list (d (n "console") (r "^0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)))) (h "1va8mmw3j4wimghr3y6pa3pxqqs1cv252n548al6fb33x6d91bll")))

(define-public crate-indicatif-0.5.0 (c (n "indicatif") (v "0.5.0") (d (list (d (n "console") (r ">= 0.3.0, < 1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)))) (h "1f3vsxsqpz7kllybq7bj6zdr79g0wx8pcr92rw37a4kq0kzmhbc4")))

(define-public crate-indicatif-0.5.1 (c (n "indicatif") (v "0.5.1") (d (list (d (n "console") (r ">= 0.3.0, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "0lvn6i27y60v00pb81d7y1wq4gahgsr2hmzfw6j1l0qlp14c6rl5")))

(define-public crate-indicatif-0.6.0 (c (n "indicatif") (v "0.6.0") (d (list (d (n "console") (r ">= 0.3.0, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "04m20ix7brfzvlkm49mp90bjhkd9mbmh846cicha1xf3mvhlgily")))

(define-public crate-indicatif-0.7.0 (c (n "indicatif") (v "0.7.0") (d (list (d (n "console") (r ">= 0.3.0, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "0sh9kxn4nlgi1arb18n6wqbgybazak3ka6gp51xbd2xwn40lv8iv")))

(define-public crate-indicatif-0.8.0 (c (n "indicatif") (v "0.8.0") (d (list (d (n "console") (r ">= 0.3.0, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "0dwdnwsx7km0pbsby0049s67sr4aam1byypiv6if2xvdpmxa9bhm")))

(define-public crate-indicatif-0.9.0 (c (n "indicatif") (v "0.9.0") (d (list (d (n "console") (r ">= 0.6.1, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "05mhgx3qqa1d73arb8a61nksl403pcc4rrmcpxlc4400y2k2z6x2")))

(define-public crate-indicatif-0.10.0 (c (n "indicatif") (v "0.10.0") (d (list (d (n "console") (r ">= 0.6.2, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "number_prefix") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "1di333r1gqjqm9fs1jf33bvk83x53kf1pxg7jx2wdf0cmixllp5r")))

(define-public crate-indicatif-0.10.1 (c (n "indicatif") (v "0.10.1") (d (list (d (n "console") (r ">= 0.6.2, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "number_prefix") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "1znsyrflbldjm61qrhv78blmwfyqdhi93kxg90fpwfgkhfklna0q")))

(define-public crate-indicatif-0.10.2 (c (n "indicatif") (v "0.10.2") (d (list (d (n "console") (r ">= 0.7.1, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "number_prefix") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "08gibq0f49y295vyrhazpg222f273k4wa25bdf2mpc1p4p7k3f2g")))

(define-public crate-indicatif-0.10.3 (c (n "indicatif") (v "0.10.3") (d (list (d (n "console") (r ">= 0.7.1, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "number_prefix") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "1zjvayq2afxhkw8wyyjfcq78a03hs6cml3w9rraw5rh8xvid3v20")))

(define-public crate-indicatif-0.11.0 (c (n "indicatif") (v "0.11.0") (d (list (d (n "console") (r ">= 0.7.1, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "number_prefix") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (d #t) (k 0)) (d (n "rand") (r "^0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "030d7ppm1viwhp6irdh5j0wk01vmdjx1p4qanyb5k9xyk8fdlq1c")))

(define-public crate-indicatif-0.12.0 (c (n "indicatif") (v "0.12.0") (d (list (d (n "console") (r ">= 0.9.0, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "07n3mrgsyfw8mfvjjc948z7kbvxzf8nn94k0k5319akfaylrdmd8") (f (quote (("with_rayon" "rayon") ("default"))))))

(define-public crate-indicatif-0.13.0 (c (n "indicatif") (v "0.13.0") (d (list (d (n "console") (r ">= 0.9.1, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "11w4yi5kqnkblxidajnda0s85q5q864f4kplzavp0pk6n37vqwl5") (f (quote (("with_rayon" "rayon") ("default"))))))

(define-public crate-indicatif-0.14.0 (c (n "indicatif") (v "0.14.0") (d (list (d (n "console") (r ">= 0.9.1, < 1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio-core") (r "^0.1") (d #t) (k 2)))) (h "0h3ysblmny7a7lpx5jwvqm7wb9rf22vkb0prsz4qjy21rxqq79j9") (f (quote (("with_rayon" "rayon") ("default"))))))

(define-public crate-indicatif-0.15.0 (c (n "indicatif") (v "0.15.0") (d (list (d (n "console") (r ">=0.9.1, <1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^0.2.18") (f (quote ("time"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "1r4n50mclyi4c7b9c9mlma1rhchjamw71r3z8vgqcmp24mhvbakv") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.16.0 (c (n "indicatif") (v "0.16.0") (d (list (d (n "console") (r ">=0.9.1, <1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "0qk05zalrib25gk6kbxilvj9sp95crj0iqpnpqvwicysl1bz2z2h") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.16.1 (c (n "indicatif") (v "0.16.1") (d (list (d (n "console") (r ">=0.9.1, <1.0.0") (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "1fzag9pf1r84f6jk82z4qasjh8qcakkbpsaqbwhlfa87khra29qs") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.16.2 (c (n "indicatif") (v "0.16.2") (d (list (d (n "console") (r ">=0.9.1, <1.0.0") (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "06xyjs0kzqiqkjn60n1miwm2l87sa9p2lmzz0ymq18y72z37s81d") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.17.0-beta.1 (c (n "indicatif") (v "0.17.0-beta.1") (d (list (d (n "console") (r ">=0.9.1, <1.0.0") (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.1") (f (quote ("std"))) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "1jjj975p343jx498vdafkggy025dz63gx0vmpywm4s2rcdd7w3sh") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.17.0-rc.1 (c (n "indicatif") (v "0.17.0-rc.1") (d (list (d (n "console") (r "^0.15.0") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "03br5hczs2hyxdpnl2ayi40hv5pnrpi6mbvs2gx52z3k2kkv24n1") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.17.0-rc.2 (c (n "indicatif") (v "0.17.0-rc.2") (d (list (d (n "console") (r "^0.15.0") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (o #t) (d #t) (k 0)))) (h "1cq5sbb4ca8qjpmyk5qpdqqy03s0s0lzhlpv6vvndyh43xl320in") (f (quote (("with_rayon" "rayon") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default"))))))

(define-public crate-indicatif-0.17.0-rc.3 (c (n "indicatif") (v "0.17.0-rc.3") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0vx0i7yg89hwdbysjpbnda8p85ay6q41iyqr2dzmm8wsd0z4sbcw") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.4 (c (n "indicatif") (v "0.17.0-rc.4") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0yz30bd3cr75530cky0ysy7sagllyciwx5hgasqqj7pn40z4mzxw") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.5 (c (n "indicatif") (v "0.17.0-rc.5") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "025mqpl792mc9rryf0yb8abcr3lx122l8p1wjmy94h0srnxb3a84") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.6 (c (n "indicatif") (v "0.17.0-rc.6") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "1wnapd0h3kgywy1dci0gd5ikzwpsnakpbylwxvkc2y83m1m52ii9") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.8 (c (n "indicatif") (v "0.17.0-rc.8") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "031yl467mnn6vhba7cs86m4grg0jsw4sjsg1pcc2h8264z5y0ws8") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.9 (c (n "indicatif") (v "0.17.0-rc.9") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "1bjfav3cvz6bd6py443p7z4iy1kcvylqcb5yrf8l7vc9xvnfwh75") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.10 (c (n "indicatif") (v "0.17.0-rc.10") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0vcv0n0b67sgg1h0rys48gcmliwh8j21rm9b4fh9xq749p5pg288") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0-rc.11 (c (n "indicatif") (v "0.17.0-rc.11") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "1bdqkvq4maxbjsfhm0ki8gfc6pkywn8xi3n7s8lixsdqjk7d05s0") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.0 (c (n "indicatif") (v "0.17.0") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "1prx7c8vhy2qapijmyyi4whcjn2lbbk27cc56b06xn3hdqh2pi7w") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.1 (c (n "indicatif") (v "0.17.1") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0nskiyqjgg6y801iia0hxck00clnfvyrgqa51r72dbwb3rbckpdz") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width"))))))

(define-public crate-indicatif-0.17.2 (c (n "indicatif") (v "0.17.2") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^0.3.15") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("fs" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "069b6ns929idbz9wq7xk18cyn0aiwzwkqwcyx48d65iwayvwp5a2") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (r "1.56")))

(define-public crate-indicatif-0.17.3 (c (n "indicatif") (v "0.17.3") (d (list (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^0.3.15") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0ad70n05p6k6p3lsyws3hkq3rbq4ap9k83bgfpb68f67kfm0kxff") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (r "1.56")))

(define-public crate-indicatif-0.17.4 (c (n "indicatif") (v "0.17.4") (d (list (d (n "clap") (r "^4") (f (quote ("color" "derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "1y0f3lnr2dnacmpgh8q8dws26pvy6xyyvhxn35jlwigg6xzk2ifv") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (r "1.62.1")))

(define-public crate-indicatif-0.17.5 (c (n "indicatif") (v "0.17.5") (d (list (d (n "clap") (r "^4") (f (quote ("color" "derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0myhjp1l6c5hd2wjm4grm6mp59ybcminxxfps5z3jfirlwiwry4g") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (r "1.62.1")))

(define-public crate-indicatif-0.17.6 (c (n "indicatif") (v "0.17.6") (d (list (d (n "clap") (r "^4") (f (quote ("color" "derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^1.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "0c07z0zdq6ml2vg34j9ji9ivg9c9jkx5i2kja873mwik0z27sa8b") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (s 2) (e (quote (("futures" "dep:futures-core")))) (r "1.62.1")))

(define-public crate-indicatif-0.17.7 (c (n "indicatif") (v "0.17.7") (d (list (d (n "clap") (r "^4") (f (quote ("color" "derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^1.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "098ggvg7ps4097p5n9hmb3pqqy10bi8vjfzb7pci79xrklf78a7v") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (s 2) (e (quote (("futures" "dep:futures-core")))) (r "1.63")))

(define-public crate-indicatif-0.17.8 (c (n "indicatif") (v "0.17.8") (d (list (d (n "clap") (r "^4") (f (quote ("color" "derive"))) (d #t) (k 2)) (d (n "console") (r "^0.15") (f (quote ("ansi-parsing"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (o #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "number_prefix") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "portable-atomic") (r "^1.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("fs" "time" "rt"))) (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1") (o #t) (d #t) (k 0)) (d (n "unicode-width") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "vt100") (r "^0.15.1") (o #t) (d #t) (k 0)))) (h "18xyqxw9i5x4sbpzckhfz3nm984iq9r7nbi2lk76nz888n7mlfkn") (f (quote (("in_memory" "vt100") ("improved_unicode" "unicode-segmentation" "unicode-width" "console/unicode-width") ("default" "unicode-width" "console/unicode-width")))) (s 2) (e (quote (("futures" "dep:futures-core")))) (r "1.63")))

