(define-module (crates-io mo ha mohan) #:use-module (crates-io))

(define-public crate-mohan-0.0.1 (c (n "mohan") (v "0.0.1") (d (list (d (n "bech32") (r "^0.6") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.3") (d #t) (k 0)) (d (n "merlin") (r "^1.1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.6") (d #t) (k 0)))) (h "0qcarb7i10ns39im0m8mgw3hdxmpsp3d0y0qkfirmjchvdyp0h9f")))

(define-public crate-mohan-0.0.3 (c (n "mohan") (v "0.0.3") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tai64") (r "^2") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1b5xc0fg84wq3qdlkvixmls22a2fzz3i4dp93pbn8nc5bdlbhz0l")))

(define-public crate-mohan-0.0.4 (c (n "mohan") (v "0.0.4") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tai64") (r "^2") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0jsbrj33n8zx1plfjivzqnlf518cjmk0qywh6vnz03f4d8mk47nv")))

(define-public crate-mohan-0.0.5 (c (n "mohan") (v "0.0.5") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tai64") (r "^2") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1k2nl6smzpg7g4dk2p2rcm11k5qd1aga549i9kszhj10m0hi4gwf")))

(define-public crate-mohan-0.0.6 (c (n "mohan") (v "0.0.6") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "171gf5h1bqvlzg5sljrh6xxkdnawaln1sv6s2l8zi9nbqyz1knw3")))

(define-public crate-mohan-0.0.7 (c (n "mohan") (v "0.0.7") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1bbwnlcf53i33l033ak0z48fwb6vx4sybhz2kqqkqfzshrk4a2v2")))

(define-public crate-mohan-0.0.8 (c (n "mohan") (v "0.0.8") (d (list (d (n "bech32") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0pjqkx7k9mbhgjn5bgk21qmgda9i1cz7yc8zrhgw3s9hbbj9qfcr")))

(define-public crate-mohan-0.0.9 (c (n "mohan") (v "0.0.9") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 0)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0fa58qkrx5za8aws9133h97s69bymll31p2m4kaaqk0hmqcdcd60")))

(define-public crate-mohan-0.0.10 (c (n "mohan") (v "0.0.10") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "071jq26hbw3qja92wfa5w35wmy82ciffpw42bah2ah3i4y88a1ns")))

(define-public crate-mohan-0.0.11 (c (n "mohan") (v "0.0.11") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "0p46bcrwd4kycpzixcfqgq6pskzhdmjfcf1q9fwx7cn0pq3k0aqb")))

(define-public crate-mohan-0.0.12 (c (n "mohan") (v "0.0.12") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "schnorr") (r "0.0.*") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1vnk7729kzkd3rzyibdy56n1m7ndi8ll6afrf4mppvgbkpl850fq")))

(define-public crate-mohan-0.0.13 (c (n "mohan") (v "0.0.13") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "schnorr") (r "0.0.*") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1a56frng3skiy3mp24882zcvaaymlm4vv3lv1f4xp6wp1aksnvwq")))

(define-public crate-mohan-0.0.14 (c (n "mohan") (v "0.0.14") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "schnorr") (r "0.0.*") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "145illbkh7n30crs1j8rnznjicpbmw0r2cxalz2i0hjx86fwafw7")))

(define-public crate-mohan-0.0.15 (c (n "mohan") (v "0.0.15") (d (list (d (n "bincode") (r "1.*") (f (quote ("i128"))) (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "fixed-hash") (r "^0.4") (f (quote ("byteorder" "rustc-hex"))) (k 0)) (d (n "parking_lot") (r "^0.7") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "schnorr") (r "0.0.*") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "uint") (r "^0.8") (d #t) (k 0)))) (h "1vwnmaf8xhd3xmysfibl5ld7amp5hbn7wr1wfqs7p6k2sc3i5cs7")))

(define-public crate-mohan-0.0.17 (c (n "mohan") (v "0.0.17") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^0.9.3") (d #t) (k 0)))) (h "1f4kkflk9wmamakllzg05xn2p6vgvflm0w5r47w19ix2lw2yvs6m")))

(define-public crate-mohan-0.0.18 (c (n "mohan") (v "0.0.18") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^0.9.3") (d #t) (k 0)))) (h "0dbv5596238n5y4q07apa7a3b2izpn3x4pr874shdz7bq1wipnis")))

(define-public crate-mohan-0.0.19 (c (n "mohan") (v "0.0.19") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^0.9.3") (d #t) (k 0)))) (h "07hvzw9v1011h9ac01d5q9y5fgavzk1mc13jz1np506l3vpm93xp")))

(define-public crate-mohan-0.0.20 (c (n "mohan") (v "0.0.20") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^0.9.3") (d #t) (k 0)))) (h "1f75d8qrp7apr6ghpwb112x56ssw2lajfjp6swgryrmilqpj3456")))

(define-public crate-mohan-0.0.21 (c (n "mohan") (v "0.0.21") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^0.10") (d #t) (k 0)))) (h "0ivjqjp5xlx6ckcd6fsw83pnw7x0fcszqbcppp447d1g9g7zzxf9")))

(define-public crate-mohan-0.0.22 (c (n "mohan") (v "0.0.22") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "0.10.*") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0sa1nan3vvl9yvndmq9mvv6bbdzfx36wkcjqi4kwgnwf0hk005y6")))

(define-public crate-mohan-0.0.23 (c (n "mohan") (v "0.0.23") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "0.10.*") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "15bbw53qpfxr48qpx6s4gpd9d8wym12cy37z47lzmbgljhhmk0nk")))

(define-public crate-mohan-0.0.24 (c (n "mohan") (v "0.0.24") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "0.10.*") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "03ygirb8bn2n96z8ac48a6931bx7sfslv4kgp280gwrhvpxiwkji")))

(define-public crate-mohan-0.0.25 (c (n "mohan") (v "0.0.25") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0h06g1z1w1mqkzbpkwrjgb7zmjvz7ykfhhglr21zhkhpgxnfiw3h")))

(define-public crate-mohan-0.0.26 (c (n "mohan") (v "0.0.26") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1d0b48zvz3prbwzyrbpgjg75hh3p0sg3m499qv6sgaiw6dyy3gag")))

(define-public crate-mohan-0.0.28 (c (n "mohan") (v "0.0.28") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "173y6n4bc7a9hz0fwh1nbpm9q90ivbwnn6rhwlggr6mw43vf4z0b")))

(define-public crate-mohan-0.0.29 (c (n "mohan") (v "0.0.29") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "0.7.*") (o #t) (k 0)) (d (n "rand_core") (r "0.5.*") (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "16df19slfp0ajz5cxxklapsg1w1ig85x179dd65zy12wh3ds28v1") (f (quote (("default" "rand"))))))

(define-public crate-mohan-0.0.30 (c (n "mohan") (v "0.0.30") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^1.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "11cf45n14qr1dgfayi4nmfacqgpd6lspy9jxinn7iaw2l65c6byr") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.31 (c (n "mohan") (v "0.0.31") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "^0.0.2") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0k8lzix0y8jpxz8yhn4pvx8smjxkxz28myc7k5j45jfzg8yx7a5p") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.32 (c (n "mohan") (v "0.0.32") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "^0.0.3") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "12lbd7j3qznzf6vx658zyqidly4gnyj6kcmyqp269m3qpgkvhb5l") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.33 (c (n "mohan") (v "0.0.33") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0ajmqsv5qpwmm1md9m0k4bc5i96rpsa14x3vv2irm82kqci36bfd") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.34 (c (n "mohan") (v "0.0.34") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0gixmz51pjmxfm9gvgiqq1b9ljqsljj0yczwfxj9qci9f1hil33x") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.35 (c (n "mohan") (v "0.0.35") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "10pkyzg0yf0nv81x4ml5rhsaff474xc0q4xf2wsqa84a9dxlwwvw") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.36 (c (n "mohan") (v "0.0.36") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0pv1xy85cqi9vp6rixh2hgnfla1m6q58b4sbx7cflndqbv7s08b6") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.37 (c (n "mohan") (v "0.0.37") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0x9vcky4vjpydw7k4p6khlyk3b48h0adc95rmfnq0csimjj8f8vb") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.38 (c (n "mohan") (v "0.0.38") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1mczf2sigbc0rk6qg4gmlvh2dfzdcj0irxd6i3pk7sfb0n60fwyx") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.39 (c (n "mohan") (v "0.0.39") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1b6a3jyzagd552a5lalqy2r16vw0xydxszk9msyf3yghsx5v66n3") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.40 (c (n "mohan") (v "0.0.40") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0c1w8n7kfyshz38y6kal78z1133kyy5bhpfcsn3074dkfc1g8jz0") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.41 (c (n "mohan") (v "0.0.41") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0-pre") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1dz18374wyrdj7y0dy4l4dsq4mzzshx0ra5s2g8f21zinl3rvjv8") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.42 (c (n "mohan") (v "0.0.42") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "18kbsqp3gikwcygglfka4f0j02baddbwim2nhbmjqq6ydl3mzhqa") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.43 (c (n "mohan") (v "0.0.43") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1fmxjnnnzp8m99b84pyga2093ks5mr86j1ilqfs3pbvsgczimki5") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.44 (c (n "mohan") (v "0.0.44") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0sm5wl6y951h5nr528kaw6mhq0l6w7h1h5va5lf0cj6skkzlr860") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.45 (c (n "mohan") (v "0.0.45") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0yxdmkf9w1i05sy72prad1brr0gjjxvqwcii35nnmrfyxc6fdsh5") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.46 (c (n "mohan") (v "0.0.46") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "19jjdxx3053x727hhhmyd3inx9s65gfvk6499xzqlk06a3gynb6n") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.47 (c (n "mohan") (v "0.0.47") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1yl678cv4g2vlazqc76dyfx3cxb6l7yj4a552chrf8fy4kmyzhhg") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.48 (c (n "mohan") (v "0.0.48") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0a60fzs9nhv09hj4lji6b855s30ipb0qpm9hd0fv2shckr6z5gwj") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.49 (c (n "mohan") (v "0.0.49") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "01g8yza6md3n4yhvbzn8ik28pfa4khl9n61zw1dfxzfyrz4hv0sh") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.50 (c (n "mohan") (v "0.0.50") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "08bf5x5b1vli82yhzmp0pv7fbrrq7v4nc3m0i6bjsglncz3k4z9z") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.51 (c (n "mohan") (v "0.0.51") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0crrinm4pgx1ydbpl9mbfkqj0lqy6cmlvia17f3ljrvph7i0q1i1") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.52 (c (n "mohan") (v "0.0.52") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek-organism") (r "0.0.*") (f (quote ("serde" "alloc" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.9") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.0.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0fyh7s9iwv2njmv9qga40h37z1bclfh3paabjpvy1wzps9z3qnww") (f (quote (("rand_os") ("default" "rand" "rand_os"))))))

(define-public crate-mohan-0.0.53 (c (n "mohan") (v "0.0.53") (d (list (d (n "bacteria") (r "^0.0.5") (d #t) (k 2)) (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 2)) (d (n "curve25519-dalek") (r "^2") (f (quote ("u64_backend" "nightly" "serde" "alloc"))) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "quickcheck") (r "^0.8") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "0.5.*") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "subtle") (r "^2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uint") (r "^0.8") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1rlb3yprq4p7mdv3rkmqvvgsfykgahvvdchxrsgsmvzsbpw6fck9") (f (quote (("rand_os") ("default" "rand" "rand_os" "avx2_backend") ("avx2_backend" "curve25519-dalek/avx2_backend"))))))

