(define-module (crates-io mo da modality-auth-token) #:use-module (crates-io))

(define-public crate-modality-auth-token-0.1.0 (c (n "modality-auth-token") (v "0.1.0") (d (list (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1j9hidwbcskma5iad8l1mjdg1v2fvvs95l7kmvww7cgmm6bvv77k") (f (quote (("test_support" "proptest") ("default"))))))

(define-public crate-modality-auth-token-0.1.1 (c (n "modality-auth-token") (v "0.1.1") (d (list (d (n "dirs") (r "^4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0hnwdish6kzy8c993phwmcvrp4n7qilr6azl5nwrxqcxyb2a62fw") (f (quote (("test_support" "proptest") ("default"))))))

(define-public crate-modality-auth-token-0.2.0 (c (n "modality-auth-token") (v "0.2.0") (d (list (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1ildnzi3smha9h18wp0pia87hiwfg1rpmaxs9ldl668v55mkzg8g") (f (quote (("test_support" "proptest") ("default"))))))

