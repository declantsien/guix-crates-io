(define-module (crates-io mo da modality-mutator-protocol) #:use-module (crates-io))

(define-public crate-modality-mutator-protocol-0.1.0 (c (n "modality-mutator-protocol") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "0rrr6n1q9dvl5qi282965zxd1qlq9c9wbwa9kfhhj622a1dw1sl4") (f (quote (("default")))) (s 2) (e (quote (("serde" "dep:serde" "uuid/serde") ("schemars" "dep:schemars") ("proptest_strategies" "dep:proptest") ("cbor" "dep:minicbor"))))))

(define-public crate-modality-mutator-protocol-0.2.0 (c (n "modality-mutator-protocol") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "modality-api") (r "^0.2.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "1bq1mz6hba44zb11px3b2jlfff7cchpcrp1q3449g1akf1pgiygf") (f (quote (("proptest_strategies" "modality-api/proptest_strategies") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "uuid/serde" "modality-api/serde") ("schemars" "dep:schemars") ("cbor" "dep:minicbor"))))))

(define-public crate-modality-mutator-protocol-0.2.2 (c (n "modality-mutator-protocol") (v "0.2.2") (d (list (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "modality-api") (r "^0.2.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "0wqyx0jjnlgr9ikgmw36cb480biybl5cjzn20mrk011c7136in5i") (f (quote (("proptest_strategies" "modality-api/proptest_strategies") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "uuid/serde" "modality-api/serde") ("schemars" "dep:schemars") ("cbor" "dep:minicbor"))))))

(define-public crate-modality-mutator-protocol-0.3.0 (c (n "modality-mutator-protocol") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "modality-api") (r "^0.3.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "1jkjik84rikm3a6dca2g8vz9kn647bk0rz2rysrpi5mdmpqdz7i3") (f (quote (("proptest_strategies" "modality-api/proptest_strategies") ("default")))) (s 2) (e (quote (("serde" "dep:serde" "uuid/serde" "modality-api/serde") ("schemars" "dep:schemars") ("cbor" "dep:minicbor"))))))

