(define-module (crates-io mo ve move-stackless-bytecode) #:use-module (crates-io))

(define-public crate-move-stackless-bytecode-0.1.1 (c (n "move-stackless-bytecode") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.1.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "move-model") (r "^0.1.0") (d #t) (k 0) (p "mv-model")) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-read-write-set-types") (r "^0.1.0") (d #t) (k 0) (p "mv-read-write-set-types")) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1ivz0sipvfybgxm4jjv0b7lzjq9xxj68hdqhbajpy8vp1askrqdc") (y #t)))

(define-public crate-move-stackless-bytecode-0.1.2 (c (n "move-stackless-bytecode") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-borrow-graph") (r "^0.1.0") (d #t) (k 0) (p "mv-borrow-graph")) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.1.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "move-model") (r "^0.1.0") (d #t) (k 0) (p "mv-model")) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-read-write-set-types") (r "^0.1.0") (d #t) (k 0) (p "mv-read-write-set-types")) (d (n "move-stdlib") (r "^0.1.0") (d #t) (k 2) (p "mv-stdlib")) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0jvsycm4wps141q31m3634pdnjhhzdmzmzpr9lgcv6ck1zj1wl64") (y #t)))

(define-public crate-move-stackless-bytecode-0.1.4 (c (n "move-stackless-bytecode") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.1.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1y03jkfslfh8w6iz3vf50v7s22hpvr5vpnsshlyk8bhzfk3c4ihy") (y #t)))

(define-public crate-move-stackless-bytecode-0.1.5 (c (n "move-stackless-bytecode") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.1.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1ggbx0jcb2x5s0fjdp5zcikg9yiwffzy5szqfvxm1gi0mba1x08a") (y #t)))

(define-public crate-move-stackless-bytecode-0.1.6 (c (n "move-stackless-bytecode") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.1.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.1.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1rl41mbcs5gyaskq3nh95wlmqshh3vnrbk9kym8599yqgbzh7jf6") (y #t)))

(define-public crate-move-stackless-bytecode-0.2.0 (c (n "move-stackless-bytecode") (v "0.2.0") (d (list (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.2.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.2.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0iawdx3kzxl18l6s7q9rvkyhcnmk4cpfhmcpwpb3xivzh2l010f2") (y #t)))

(define-public crate-move-stackless-bytecode-0.2.1 (c (n "move-stackless-bytecode") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.2.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.2.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.2.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.2.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0vnl8gkdync192lii4pz26ry10s7wmnh9z39w89nyg1jbccc8qpp") (y #t)))

(define-public crate-move-stackless-bytecode-0.3.0 (c (n "move-stackless-bytecode") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.3.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.3.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0g0dhi83vlrly6717r1wjv2319rrwcma5kg3gwdswdc7x94schcg") (y #t)))

(define-public crate-move-stackless-bytecode-0.3.1 (c (n "move-stackless-bytecode") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.3.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.3.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "17ldn1522c6h729p33vca8hnxyzzbdl1vl5wwrlnvjmli54vz2rc") (y #t)))

(define-public crate-move-stackless-bytecode-0.3.2 (c (n "move-stackless-bytecode") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 2)) (d (n "codespan") (r "^0.11.1") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "ethnum") (r "^1.0.4") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-bytecode-verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-compiler") (r "^0.3.0") (d #t) (k 0) (p "mv-compiler")) (d (n "move-ir-to-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-borrow-graph") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-read-write-set-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-stdlib") (r "^0.3.0") (d #t) (k 2)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0sr1zjh23vig0nim4sklch1zdw67sm6nh10cs62b0d968gyfgp0q") (y #t)))

