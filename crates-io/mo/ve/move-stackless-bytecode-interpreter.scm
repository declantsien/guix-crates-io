(define-module (crates-io mo ve move-stackless-bytecode-interpreter) #:use-module (crates-io))

(define-public crate-move-stackless-bytecode-interpreter-0.1.2 (c (n "move-stackless-bytecode-interpreter") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-model") (r "^0.1.0") (d #t) (k 0) (p "mv-model")) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "0fdldgmyc0imz3jrsb6l6mymzn7qm0rxyfw7i57ymp5ky47h83hm") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.1.4 (c (n "move-stackless-bytecode-interpreter") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "117rfbzyqds3jvsn88lasrc258imk4lrl2rx5z9n3g0n777v8868") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.1.5 (c (n "move-stackless-bytecode-interpreter") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "06vln3lr3s9nxqs7mvyxvcpbvckxypc1wp92w8xsn3w0mng5npgs") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.1.6 (c (n "move-stackless-bytecode-interpreter") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.1.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.1.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "08nxg0pwa6kjxl6cn88sv99arvv1bskz7dkdzrh5c0cj2s28w4p5") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.2.0 (c (n "move-stackless-bytecode-interpreter") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.2.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.2.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1mwjw7hfvdhrjqnpm0i485hl2dvvp1ck3f66xp8psdhv59bgysjx") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.2.1 (c (n "move-stackless-bytecode-interpreter") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.2.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.2.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.2.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1v2z3scx4wlxqkp44hg9jz0rbi8fipfi2xnjsygxknn8w7pfbjgr") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.3.0 (c (n "move-stackless-bytecode-interpreter") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1mx4hlnl3hw7z3hc1gggqlj18gfmd6b38i3gmhwml5i22x2gsw2s") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.3.1 (c (n "move-stackless-bytecode-interpreter") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "020pbncvk97vqnvl1ihlnnxlzzc0nx9050ks6s9ha6dzj0zzzz39") (y #t)))

(define-public crate-move-stackless-bytecode-interpreter-0.3.2 (c (n "move-stackless-bytecode-interpreter") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "bytecode-interpreter-crypto") (r "^0.3.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "datatest-stable") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "move-prover-test-utils") (r "^0.3.0") (d #t) (k 2)) (d (n "move-stackless-bytecode") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-model") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.124") (f (quote ("derive"))) (d #t) (k 0)))) (h "1lvr3cngmpa8qax2jwkrf2krgkbirsqnjwwws36l1wsxalf6mb0d") (y #t)))

