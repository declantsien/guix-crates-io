(define-module (crates-io mo ve move-ir-to-bytecode) #:use-module (crates-io))

(define-public crate-move-ir-to-bytecode-0.1.0 (c (n "move-ir-to-bytecode") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-bytecode-source-map") (r "^0.1.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode-syntax") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-to-bytecode-syntax")) (d (n "move-ir-types") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0) (p "mv-symbol-pool")) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0mr3bzpgszlf6p85hgdswhql63f3qhi6z4cwjnx7n69b3p528394") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.1.1 (c (n "move-ir-to-bytecode") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-bytecode-source-map") (r "^0.1.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode-syntax") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-to-bytecode-syntax")) (d (n "move-ir-types") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "05alk3kbw825zfpqpy7v76kdwqjblaww71xv86lqf4w6phljx3dn") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.1.2 (c (n "move-ir-to-bytecode") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-binary-format") (r "^0.1.0") (d #t) (k 0) (p "mv-binary-format")) (d (n "move-bytecode-source-map") (r "^0.1.0") (d #t) (k 0) (p "mv-bytecode-source-map")) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-core-types") (r "^0.1.0") (d #t) (k 0) (p "mv-core-types")) (d (n "move-ir-to-bytecode-syntax") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-to-bytecode-syntax")) (d (n "move-ir-types") (r "^0.1.0") (d #t) (k 0) (p "mv-ir-types")) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0hng7nhf3hbdkb1hma5nhh7np7vazjs2hrk50nirdf153v73l6p7") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.1.4 (c (n "move-ir-to-bytecode") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-ir-to-bytecode-syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "178sg2xkpvjx0spfaivxkl1pzkpa296664as3y4l13vd2chsj4jy") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.1.5 (c (n "move-ir-to-bytecode") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "1laa1kbsmp6am7dpadclryvfwibaf67manvj3iz8wsjclyhvbp0w") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.1.6 (c (n "move-ir-to-bytecode") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.1.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.1.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.1.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0dhgd0rsjsav498bqk589wcnkm6x32903lxq8ixhsgrq7k7w2hkb") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.2.0 (c (n "move-ir-to-bytecode") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.2.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.2.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "1ycxr4grzcsy27zxjp3rbrd7ljhdgw8zq6q5cqdrn7mazl4sk6l7") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.2.1 (c (n "move-ir-to-bytecode") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.2.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.2.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.2.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.2.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "12b82pgv9vb0vb2ii8rha7c8gi2wwa3g9hx653n7r3jhagzzrddd") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.3.0 (c (n "move-ir-to-bytecode") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.3.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.3.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0qvms2ksik2i3dbwv1d9y6abn3vw6426fj57zgkgfixs4gm5gckb") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.3.1 (c (n "move-ir-to-bytecode") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.3.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.3.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0ss7jj3rwzr85jfyx0lxh1dmjrlmscwzjyzwby3a68rfjf617wag") (f (quote (("default")))) (y #t)))

(define-public crate-move-ir-to-bytecode-0.3.2 (c (n "move-ir-to-bytecode") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "codespan-reporting") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "move-command-line-common") (r "^0.3.0") (d #t) (k 0)) (d (n "move-ir-to-bytecode-syntax") (r "^0.3.0") (d #t) (k 0)) (d (n "move-symbol-pool") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-binary-format") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-bytecode-source-map") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-core-types") (r "^0.3.0") (d #t) (k 0)) (d (n "mv-ir-types") (r "^0.3.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "01da6cy7rvl1cjha1160m5g1kngwbdg004m3ywj30r9bdyqvgkj4") (f (quote (("default")))) (y #t)))

