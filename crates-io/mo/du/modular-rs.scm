(define-module (crates-io mo du modular-rs) #:use-module (crates-io))

(define-public crate-modular-rs-0.1.0 (c (n "modular-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-channel") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("executor"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "nom") (r "^7") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("send_guard"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tower") (r "^0.4") (f (quote ("util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "time"))) (d #t) (t "cfg(any(target_family = \"wasm\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(any(target_family = \"wasm\")))") (k 0)))) (h "0r4rr9gvqgakxyvhfk1vwcgysqjj3lxanm0fm0pq7wrdr575hzm4")))

