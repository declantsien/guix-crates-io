(define-module (crates-io mo ne monero-serai) #:use-module (crates-io))

(define-public crate-monero-serai-0.1.0-alpha (c (n "monero-serai") (v "0.1.0-alpha") (d (list (d (n "base58-monero") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (f (quote ("std"))) (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.1") (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.1") (d #t) (k 1)) (d (n "dleq") (r "^0.1") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "frost") (r "^0.2") (f (quote ("ed25519"))) (o #t) (d #t) (k 0) (p "modular-frost")) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "monero-epee-bin-serde") (r "^1.0") (d #t) (k 0)) (d (n "monero-generators") (r "^0.1") (d #t) (k 0)) (d (n "monero-generators") (r "^0.1") (d #t) (k 1)) (d (n "multiexp") (r "^0.2") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.1") (f (quote ("recommended"))) (o #t) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1hjq0lb2myrbk3yqdh6w2g4cvfvpr11g5c212s0l6f832nib5f87") (f (quote (("multisig" "rand_chacha" "blake2" "transcript" "frost" "dleq")))) (y #t)))

(define-public crate-monero-serai-0.1.1-alpha (c (n "monero-serai") (v "0.1.1-alpha") (d (list (d (n "base58-monero") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (f (quote ("std"))) (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.1") (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.1") (d #t) (k 1)) (d (n "dleq") (r "^0.1") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "frost") (r "^0.2") (f (quote ("ed25519"))) (o #t) (d #t) (k 0) (p "modular-frost")) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "monero-epee-bin-serde") (r "^1.0") (d #t) (k 0)) (d (n "monero-generators") (r "^0.1") (d #t) (k 0)) (d (n "monero-generators") (r "^0.1") (d #t) (k 1)) (d (n "multiexp") (r "^0.2") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.1") (f (quote ("recommended"))) (o #t) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "13y3diaql754dmr5kv5lbl4rbip7xag91pyjj0hbzb43jin22r4j") (f (quote (("multisig" "rand_chacha" "blake2" "transcript" "frost" "dleq")))) (y #t)))

(define-public crate-monero-serai-0.1.2-alpha (c (n "monero-serai") (v "0.1.2-alpha") (d (list (d (n "base58-monero") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (f (quote ("std"))) (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.1") (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.1") (d #t) (k 1)) (d (n "dleq") (r "^0.2") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "frost") (r "^0.5") (f (quote ("ed25519"))) (o #t) (d #t) (k 0) (p "modular-frost")) (d (n "frost") (r "^0.5") (f (quote ("ed25519" "tests"))) (d #t) (k 2) (p "modular-frost")) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "monero-epee-bin-serde") (r "^1.0") (d #t) (k 0)) (d (n "monero-generators") (r "^0.1") (d #t) (k 0)) (d (n "monero-generators") (r "^0.1") (d #t) (k 1)) (d (n "multiexp") (r "^0.2") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.2") (f (quote ("recommended"))) (o #t) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "032z4m1vm7va2h1pyz77amkfkczigyrvwqdbvpy7mqa0gy2gs04n") (f (quote (("multisig" "rand_chacha" "blake2" "transcript" "frost" "dleq")))) (y #t)))

(define-public crate-monero-serai-0.1.3-alpha (c (n "monero-serai") (v "0.1.3-alpha") (d (list (d (n "base58-monero") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.2") (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.2") (d #t) (k 1)) (d (n "digest_auth") (r "^0.3") (d #t) (k 0)) (d (n "dleq") (r "^0.3") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "frost") (r "^0.6") (f (quote ("ed25519"))) (o #t) (d #t) (k 0) (p "modular-frost")) (d (n "frost") (r "^0.6") (f (quote ("tests"))) (d #t) (k 2) (p "modular-frost")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "monero-epee-bin-serde") (r "^1") (d #t) (k 0)) (d (n "monero-generators") (r "^0.2") (d #t) (k 0)) (d (n "monero-generators") (r "^0.2") (d #t) (k 1)) (d (n "monero-rpc") (r "^0.3") (d #t) (k 2)) (d (n "multiexp") (r "^0.3") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (o #t) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1x9gf7fg4vjcr4rq0699ilq9c0w5pmwgbc27j3249mnx1milc4x7") (f (quote (("multisig" "transcript" "frost" "dleq")))) (y #t)))

(define-public crate-monero-serai-0.1.4-alpha (c (n "monero-serai") (v "0.1.4-alpha") (d (list (d (n "base58-monero") (r "^1") (d #t) (k 0)) (d (n "crc") (r "^3") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.3") (d #t) (k 0)) (d (n "dalek-ff-group") (r "^0.3") (d #t) (k 1)) (d (n "digest_auth") (r "^0.3") (d #t) (k 0)) (d (n "dleq") (r "^0.3") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "frost") (r "^0.7") (f (quote ("ed25519"))) (o #t) (d #t) (k 0) (p "modular-frost")) (d (n "frost") (r "^0.7") (f (quote ("tests"))) (d #t) (k 2) (p "modular-frost")) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "group") (r "^0.12") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "monero-epee-bin-serde") (r "^1") (d #t) (k 0)) (d (n "monero-generators") (r "^0.3") (d #t) (k 0)) (d (n "monero-generators") (r "^0.3") (d #t) (k 1)) (d (n "monero-rpc") (r "^0.3") (d #t) (k 2)) (d (n "multiexp") (r "^0.3") (f (quote ("batch"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (o #t) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1kqbscg9ciib9rlzawh3iac98jxdrzrasawhlwydgrf47if7k9dn") (f (quote (("multisig" "transcript" "frost" "dleq")))) (y #t)))

