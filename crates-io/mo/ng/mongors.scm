(define-module (crates-io mo ng mongors) #:use-module (crates-io))

(define-public crate-mongors-0.1.0 (c (n "mongors") (v "0.1.0") (h "0ranamdcqjgvf8csvskghrwg3aqcss2blfb2rjvcnlmvf8raxgax")))

(define-public crate-mongors-0.1.1 (c (n "mongors") (v "0.1.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.12") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "001gmx7zl4y0py8dd32pcdd33bc32nf2wxvrxmlyhwklzsray74y")))

(define-public crate-mongors-0.1.3 (c (n "mongors") (v "0.1.3") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.12") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0yy8s0blcsnggpgshkah171sgma74avaiz9yvyr1fwq66p8s1afb")))

(define-public crate-mongors-0.1.4 (c (n "mongors") (v "0.1.4") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.12") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0xpa3zm4b8w1h9smfhdlyp10aqmkd4jgdwjhz3xp1gh1l9pj5cr9")))

(define-public crate-mongors-0.2.0 (c (n "mongors") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.12") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "06xcjfcdhnvl7gjgfqiqjb4pzaknl21qmwj7q8g11dxlv7f6b705")))

(define-public crate-mongors-0.2.1 (c (n "mongors") (v "0.2.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.12") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1f79fzaq7slrhixipjbrjabilzyw5srlggljdkax0lm2i27gkq7h")))

(define-public crate-mongors-0.2.2 (c (n "mongors") (v "0.2.2") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.13") (d #t) (k 0)) (d (n "semver") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0n8ciwwix6z7rrml8pvwbyqbh88lkdfx8lsdawr95568rrcdq9z3")))

(define-public crate-mongors-0.3.0-alpha.1 (c (n "mongors") (v "0.3.0-alpha.1") (d (list (d (n "bsonrs") (r "^0.2") (d #t) (k 0)))) (h "1j0r2mk7n5n9jsgqlx47kp8f7x0bals86672i90ldlgsim5m9vzv")))

