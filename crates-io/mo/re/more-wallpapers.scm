(define-module (crates-io mo re more-wallpapers) #:use-module (crates-io))

(define-public crate-more-wallpapers-0.1.0 (c (n "more-wallpapers") (v "0.1.0") (d (list (d (n "dbus") (r "^0.9") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wallpaper") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "147dhv3h34lz3w7la4a5vai72hbabhjnxw6vbrcf9f2cdi0p0vg9") (r "1.62")))

(define-public crate-more-wallpapers-0.1.1 (c (n "more-wallpapers") (v "0.1.1") (d (list (d (n "dbus") (r "^0.9") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wallpaper") (r "^3.2") (o #t) (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "1qlm6h3cbmbi6j8vm8a7yvyn9l8xdq0lz2fcrw0z9yalhj4xfvfk") (r "1.62")))

(define-public crate-more-wallpapers-0.2.0 (c (n "more-wallpapers") (v "0.2.0") (d (list (d (n "camino") (r "^1.1") (d #t) (k 0)) (d (n "fallback") (r "^4.0") (o #t) (d #t) (k 0) (p "more-wallpapers-fallback")) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustbus") (r "^0.18.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "1y6l5gk841066yp2wvpr74k81qywqkklfl4vjpc88m6068bzvnjb") (s 2) (e (quote (("fallback" "dep:fallback")))) (r "1.62")))

(define-public crate-more-wallpapers-0.2.1 (c (n "more-wallpapers") (v "0.2.1") (d (list (d (n "camino") (r "^1.1") (d #t) (k 0)) (d (n "fallback") (r "^4.0") (o #t) (d #t) (k 0) (p "more-wallpapers-fallback")) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustbus") (r "^0.18.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "10623cx9jx734jlpvj9xza8v8sp1cfax8ksngh6514v9lwk0702y") (s 2) (e (quote (("fallback" "dep:fallback")))) (r "1.62")))

(define-public crate-more-wallpapers-0.3.0 (c (n "more-wallpapers") (v "0.3.0") (d (list (d (n "camino") (r "^1.1") (d #t) (k 0)) (d (n "fallback") (r "^4.0") (o #t) (d #t) (k 0) (p "more-wallpapers-fallback")) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustbus") (r "^0.19.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0861mdnb1r1240f7ks0jhc2lc5kyyy2i64jfqg06w4y768i9pxv4") (s 2) (e (quote (("fallback" "dep:fallback")))) (r "1.62")))

(define-public crate-more-wallpapers-0.3.1 (c (n "more-wallpapers") (v "0.3.1") (d (list (d (n "camino") (r "^1.1") (d #t) (k 0)) (d (n "fallback") (r "^4.0") (o #t) (d #t) (k 0) (p "more-wallpapers-fallback")) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustbus") (r "^0.19.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "0w6q0l5ikswvkqlbckyjwsls9ih4k6p7gdx7hpwyfl067g51nxw1") (s 2) (e (quote (("fallback" "dep:fallback")))) (r "1.62")))

(define-public crate-more-wallpapers-0.4.0 (c (n "more-wallpapers") (v "0.4.0") (d (list (d (n "camino") (r "^1.1") (d #t) (k 0)) (d (n "fallback") (r "^5.0") (o #t) (d #t) (k 0) (p "more-wallpapers-fallback")) (d (n "rand") (r "^0.8.5") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "rustbus") (r "^0.19.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "xrandr") (r "^0.1") (d #t) (t "cfg(all(unix, not(target_os = \"macos\")))") (k 0)))) (h "1q6c4amjxaj6kw57xzqbfxfybm01x6hd8z2p8y35hsi1m6vy6jdx") (s 2) (e (quote (("fallback" "dep:fallback")))) (r "1.65")))

