(define-module (crates-io mo zi mozilla-central-workspace-hack) #:use-module (crates-io))

(define-public crate-mozilla-central-workspace-hack-0.1.0 (c (n "mozilla-central-workspace-hack") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "bindgen") (r "^0.64") (f (quote ("runtime"))) (o #t) (k 1)) (d (n "bytes") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (f (quote ("color"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (f (quote ("sink"))) (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("channel" "io" "sink"))) (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1" "std"))) (o #t) (k 0)) (d (n "libc") (r "^0.2") (f (quote ("extra_traits"))) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 1)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2") (o #t) (d #t) (k 1)) (d (n "nom") (r "^7") (o #t) (d #t) (k 1)) (d (n "num-integer") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("i128"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 1)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("perf"))) (o #t) (k 1)) (d (n "scopeguard") (r "^1") (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "semver") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "semver") (r "^1") (f (quote ("serde"))) (o #t) (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 1)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order" "unbounded_depth"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_new" "serde" "union"))) (o #t) (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("extra-traits" "full" "visit" "visit-mut"))) (o #t) (d #t) (k 1)) (d (n "syn1") (r "^1") (f (quote ("fold" "full" "visit-mut"))) (o #t) (d #t) (k 1) (p "syn")) (d (n "tokio") (r "^1") (f (quote ("fs" "num_cpus" "rt-multi-thread"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.6") (f (quote ("avrt" "basetsd" "bits" "bits2_5" "bitsmsg" "cfg" "combaseapi" "consoleapi" "d3d11" "d3d11_1" "d3d11_2" "d3d11sdklayers" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dcomp" "dwrite" "dwrite_1" "dwrite_3" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_5" "dxgi1_6" "dxgidebug" "dxgiformat" "errhandlingapi" "evntrace" "fileapi" "guiddef" "handleapi" "hidclass" "hidpi" "hidusage" "impl-debug" "impl-default" "in6addr" "inaddr" "ioapiset" "knownfolders" "libloaderapi" "memoryapi" "minwinbase" "minwindef" "mmeapi" "mmsystem" "mswsock" "namedpipeapi" "ntdef" "ntsecapi" "ntstatus" "oaidl" "objbase" "oleauto" "processenv" "processthreadsapi" "profileapi" "psapi" "rpcndr" "setupapi" "shlobj" "std" "synchapi" "sysinfoapi" "taskschd" "timeapi" "timezoneapi" "unknwnbase" "winbase" "wincon" "wincrypt" "windef" "winerror" "wininet" "winioctl" "winnls" "winnt" "winreg" "winsock2" "winuser" "ws2def" "ws2ipdef" "ws2tcpip" "wtypes" "wtypesbase"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1g7wslc3a6ywpmgl1b2cklrl9alcxgkpnvlys6nppwq9ppyp9bhr") (f (quote (("gkrust-gtest" "gkrust")))) (s 2) (e (quote (("osclientcerts-static" "dep:bindgen" "dep:env_logger" "dep:log" "dep:memchr" "dep:nom" "dep:regex" "dep:syn1") ("mozwer_s" "dep:getrandom" "dep:hashbrown" "dep:indexmap" "dep:once_cell" "dep:serde" "dep:serde_json" "dep:syn" "dep:uuid") ("jsrust" "dep:arrayvec" "dep:env_logger" "dep:getrandom" "dep:hashbrown" "dep:indexmap" "dep:log" "dep:memchr" "dep:once_cell" "dep:semver" "dep:serde" "dep:smallvec" "dep:syn" "dep:url") ("ipcclientcerts-static" "dep:bindgen" "dep:memchr" "dep:nom" "dep:regex" "dep:syn1") ("http3server" "dep:arrayvec" "dep:bindgen" "dep:bytes" "dep:chrono" "dep:env_logger" "dep:futures-channel" "dep:futures-core" "dep:futures-sink" "dep:futures-util" "dep:getrandom" "dep:hashbrown" "dep:hyper" "dep:indexmap" "dep:log" "dep:memchr" "dep:nom" "dep:num-integer" "dep:num-traits" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:smallvec" "dep:syn" "dep:syn1" "dep:tokio" "dep:tokio-util" "dep:tracing" "dep:url") ("gkrust" "dep:arrayvec" "dep:bindgen" "dep:bytes" "dep:chrono" "dep:env_logger" "dep:flate2" "dep:futures-channel" "dep:futures-core" "dep:futures-sink" "dep:futures-util" "dep:getrandom" "dep:hashbrown" "dep:indexmap" "dep:log" "dep:memchr" "dep:nom" "dep:num-integer" "dep:num-traits" "dep:once_cell" "dep:regex" "dep:scopeguard" "dep:semver" "dep:serde" "dep:serde_json" "dep:smallvec" "dep:syn" "dep:syn1" "dep:url" "dep:uuid") ("geckodriver" "dep:bytes" "dep:chrono" "dep:flate2" "dep:futures-channel" "dep:futures-core" "dep:futures-sink" "dep:futures-util" "dep:getrandom" "dep:hashbrown" "dep:hyper" "dep:indexmap" "dep:log" "dep:memchr" "dep:num-integer" "dep:num-traits" "dep:once_cell" "dep:regex" "dep:semver" "dep:serde" "dep:serde_json" "dep:smallvec" "dep:syn" "dep:tokio" "dep:tokio-util" "dep:tracing" "dep:url" "dep:uuid") ("defaultagent-static" "dep:bytes" "dep:getrandom" "dep:hashbrown" "dep:indexmap" "dep:log" "dep:once_cell" "dep:scopeguard" "dep:serde" "dep:serde_json" "dep:smallvec" "dep:syn" "dep:syn1" "dep:url") ("builtins-static" "dep:bindgen" "dep:memchr" "dep:nom" "dep:regex" "dep:serde" "dep:smallvec" "dep:syn" "dep:syn1"))))))

