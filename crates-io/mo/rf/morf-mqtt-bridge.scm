(define-module (crates-io mo rf morf-mqtt-bridge) #:use-module (crates-io))

(define-public crate-morf-mqtt-bridge-0.1.0 (c (n "morf-mqtt-bridge") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5") (d #t) (k 0)) (d (n "monoio") (r "^0.2") (f (quote ("sync"))) (d #t) (k 0)) (d (n "monoio-rustls") (r "^0.3") (d #t) (k 0)) (d (n "morf") (r "^0.2") (d #t) (k 0)) (d (n "mqttrs") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rusqlite") (r "^0.30") (d #t) (k 0)) (d (n "rusqlite_migration") (r "^1") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("json" "env-filter"))) (d #t) (k 0)) (d (n "webpki-roots") (r "^0.26") (d #t) (k 0)) (d (n "x25519-dalek") (r "^2") (k 0)))) (h "1qkpa98i9n96jbf5ck0wp62mjg1nw7l5p5qyhcjyhnh1z906mhl4") (f (quote (("default") ("bundled-sqlite" "rusqlite/bundled"))))))

