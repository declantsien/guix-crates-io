(define-module (crates-io mo ck mockito) #:use-module (crates-io))

(define-public crate-mockito-0.1.1 (c (n "mockito") (v "0.1.1") (d (list (d (n "hyper") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0i6758m95a3fb0vy1cjdvm9qy87hby0bb7wmhiwjk92liqmkv8yb") (f (quote (("use_hyper" "hyper" "url") ("mock_tcp_stream") ("mock_hyper" "use_hyper") ("default"))))))

(define-public crate-mockito-0.1.2 (c (n "mockito") (v "0.1.2") (d (list (d (n "hyper") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^0.5") (o #t) (d #t) (k 0)))) (h "02qhj0j574ahfpfrhwsd7vwqf3x26qrlyavcl4q00s9d51bwg2j0") (f (quote (("use_hyper" "hyper" "url") ("mock_tcp_stream") ("mock_hyper" "use_hyper") ("default"))))))

(define-public crate-mockito-0.1.3 (c (n "mockito") (v "0.1.3") (d (list (d (n "hyper") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^0.5") (o #t) (d #t) (k 0)))) (h "100zy3pcjpsbn870an42bkm37id4p01arwf5cigin5phgh8jw6l3") (f (quote (("use_hyper" "hyper" "url") ("mock_tcp_stream") ("mock_hyper" "use_hyper") ("default"))))))

(define-public crate-mockito-0.1.4 (c (n "mockito") (v "0.1.4") (d (list (d (n "hyper") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1x4pxqvmlqqymhhgwq9mwl60mxwz8qmnrzbdb8dg14sg7fnp6l6l") (f (quote (("use_hyper" "hyper" "url") ("mock_tcp_stream") ("mock_hyper" "use_hyper") ("default"))))))

(define-public crate-mockito-0.2.0 (c (n "mockito") (v "0.2.0") (d (list (d (n "hyper") (r "^0.9.6") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.19") (d #t) (k 0)))) (h "1pd1pp9zg1n71va0cy5qapvwxp4lbvx5szn7xh6dhd3a9r41pm8k")))

(define-public crate-mockito-0.2.1 (c (n "mockito") (v "0.2.1") (d (list (d (n "hyper") (r ">= 0.8.0") (d #t) (k 0)) (d (n "rand") (r ">= 0.3.14") (d #t) (k 0)) (d (n "rustc-serialize") (r ">= 0.3.16") (d #t) (k 0)))) (h "0nc1c4gkjcw3yzwhp91mzq9yw754ixf3yxqiihkc8n1wrcbs97nd")))

(define-public crate-mockito-0.2.2 (c (n "mockito") (v "0.2.2") (d (list (d (n "hyper") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)))) (h "0xhls351iapjdpq8j4nyf0rih6wiarkqks9ydf79xkk2rgvdwz1d")))

(define-public crate-mockito-0.2.3 (c (n "mockito") (v "0.2.3") (d (list (d (n "hyper") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)))) (h "18ihpzlps2zk2j3pkn8crmd3ky6plnl2ad5ck358idrav3xb0xxn")))

(define-public crate-mockito-0.2.4 (c (n "mockito") (v "0.2.4") (d (list (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)))) (h "1fxamf3s8fc8a292s88wjbrk81vqg32nypd67p77bgx7r6jcd813")))

(define-public crate-mockito-0.2.5 (c (n "mockito") (v "0.2.5") (d (list (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.16") (d #t) (k 0)))) (h "1d5gnrapqmy522j9r61ip478pdl7hxr4xx6cp875f961y4hwmnna")))

(define-public crate-mockito-0.3.0 (c (n "mockito") (v "0.3.0") (d (list (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "serde") (r "^0.9") (d #t) (k 0)) (d (n "serde_derive") (r "^0.9") (d #t) (k 0)) (d (n "serde_json") (r "^0.9") (d #t) (k 0)))) (h "18gnhcqavnlnjxpxhvq4dbgvddaf0yqdrw4pps6m384xgs1l005r")))

(define-public crate-mockito-0.4.0 (c (n "mockito") (v "0.4.0") (d (list (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "19zccvs8h11z1wvrjgq225lpwxp15d0ybfq15rbgl9ycawc7lvhv")))

(define-public crate-mockito-0.4.1 (c (n "mockito") (v "0.4.1") (d (list (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0xq0ikc629dp2rvlxjfd6mgqhwz847akgmsb4nndni7v1rsr42ln")))

(define-public crate-mockito-0.4.2 (c (n "mockito") (v "0.4.2") (d (list (d (n "hyper") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "14ry45smpl4im7wgd1ymgjh1jw5x4pw0db250dmyz04pnz4vj9jy")))

(define-public crate-mockito-0.5.0 (c (n "mockito") (v "0.5.0") (d (list (d (n "curl") (r "^0.4") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1lm7ghjjaap3n0hcyvxwrb8q2sp8agmxh6shrya4bv6fc6slr6yy")))

(define-public crate-mockito-0.6.0 (c (n "mockito") (v "0.6.0") (d (list (d (n "curl") (r "^0.4") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1mr08dk324lqjxcc3k9xg61a18lz81w3j5xyf4yimwvdxn5016nl")))

(define-public crate-mockito-0.7.0 (c (n "mockito") (v "0.7.0") (d (list (d (n "curl") (r "^0.4") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "091h2r8cjbazqysjx55gy51a0bnqbh7cjwzq544x53d7mjlzg7nd")))

(define-public crate-mockito-0.7.1 (c (n "mockito") (v "0.7.1") (d (list (d (n "curl") (r "^0.4") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0s8lqip1yv2bbn3zxap5k74il22vvmckc4i3z484z055v78iv4qw")))

(define-public crate-mockito-0.7.2 (c (n "mockito") (v "0.7.2") (d (list (d (n "curl") (r "^0.4") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "19ywbh5ygkdwplq0vk3y4fjl52ba7s29da70wp9d89h0x06rwq5i")))

(define-public crate-mockito-0.8.0 (c (n "mockito") (v "0.8.0") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)))) (h "0q8azwqvz9ldf26gphy6jgs7p0ghhmd9ja9ji8rn5yhdgnfyf5nj")))

(define-public crate-mockito-0.8.1 (c (n "mockito") (v "0.8.1") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)))) (h "06a4gqzhpfwa3127ilcgcl78jhw8014a3ngkjqbpw8yp7ymiq2yq")))

(define-public crate-mockito-0.8.2 (c (n "mockito") (v "0.8.2") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)))) (h "16a42p20a7awrgw4p8c6fy1lyzgyalpifix3i20za2sdg35v1lqh")))

(define-public crate-mockito-0.9.0 (c (n "mockito") (v "0.9.0") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "0jjbzdq9p5c054c6pzpwkjz2l72ah9n0hj8x3kv9mf3z9wvrrdy1")))

(define-public crate-mockito-0.9.1 (c (n "mockito") (v "0.9.1") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.2") (d #t) (k 0)))) (h "1wm5q3ip0sdw9fgaij941pz44qqriqpr4c9j5znmffqz1lrjdid3")))

(define-public crate-mockito-0.10.0 (c (n "mockito") (v "0.10.0") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "1gnzy33silsasqswvwmhgl61rw71lw8mj3iqfx44aaw2kvl3q51a")))

(define-public crate-mockito-0.11.0 (c (n "mockito") (v "0.11.0") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "1qajpl34rwcy0dq63wq9zrw1r0ma6jmbvzr0zs0hrrlmdawbngxb")))

(define-public crate-mockito-0.11.1 (c (n "mockito") (v "0.11.1") (d (list (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0k6cxq8b4v43xj8fdln7zny34i9qgg7cj9wycxjj7z43hy0m0l8b")))

(define-public crate-mockito-0.12.0 (c (n "mockito") (v "0.12.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0914z5w3szjf4i49d669kyz8vrv4rircpf3j6xryk6bgz0900bxr")))

(define-public crate-mockito-0.13.0 (c (n "mockito") (v "0.13.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "http-muncher") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.14") (d #t) (k 0)) (d (n "regex") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0fnmin7mwb3fwjv5494hyrac1a0whx3yhhp2p9qcw1phwwp60dx5")))

(define-public crate-mockito-0.14.0 (c (n "mockito") (v "0.14.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "04rqjjdaz39ixzl5lvdad92v4ccw0qd1wpn89a9q056hkrsw4ppn")))

(define-public crate-mockito-0.14.1 (c (n "mockito") (v "0.14.1") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0w3m56xf72z9s3f6myiyws6fb3d9xibhh6yzgdc8n67pd2ycfvj6")))

(define-public crate-mockito-0.15.0 (c (n "mockito") (v "0.15.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "18hqwx6p3k9nj2038p4n86alxkdx0cdafj4r1fmvcjgknan0wi5j")))

(define-public crate-mockito-0.15.1 (c (n "mockito") (v "0.15.1") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0mqgzcjmfs9xv3zk8dn21v90wzkh67m88mj8jgidy67kam2r4p2r")))

(define-public crate-mockito-0.16.0 (c (n "mockito") (v "0.16.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "1cjdyi8ypz6prrpf83kpi6naigywp6p4xlhv1abnd12w9b3kyl17")))

(define-public crate-mockito-0.17.0 (c (n "mockito") (v "0.17.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0blla4vr1qpsrgq7pfpizdm97d10i4mnxnfln31fln9j244j5pji")))

(define-public crate-mockito-0.17.1 (c (n "mockito") (v "0.17.1") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0127r768lbybq15h0w3g1fc3yz4j5z1k68f1k852xcldn5hc00yk")))

(define-public crate-mockito-0.18.0 (c (n "mockito") (v "0.18.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0x3mw9zrq2qwbr6kbjr0a4a5hl4rr1cai5m6f2jhmpd80rdayhqa")))

(define-public crate-mockito-0.19.0 (c (n "mockito") (v "0.19.0") (d (list (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0xp98ldxk6ndvlscgw56grs4wnkx1b8p60ankrcbn5kci42h14ad")))

(define-public crate-mockito-0.20.0 (c (n "mockito") (v "0.20.0") (d (list (d (n "assert-json-diff") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^1.6") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "01h3lcq876vsn0y001lpf87n75kin9ymdyr73mgqrmm4h89lhgzs")))

(define-public crate-mockito-0.21.0 (c (n "mockito") (v "0.21.0") (d (list (d (n "assert-json-diff") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0l1l3j4abv2lgq5i4nn1j11gigbgf2z60hwacak7bk0424q8rqxf") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.22.0 (c (n "mockito") (v "0.22.0") (d (list (d (n "assert-json-diff") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^1.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0g4fwawmj5c2s6p9d69ah08j9g2aq5q68yi1aj9mb03wxa2lwljf") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.23.0 (c (n "mockito") (v "0.23.0") (d (list (d (n "assert-json-diff") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "11687yzfsggppbkfv0a7556yf1pvkiyrv8c34rdj2m928xgb7s00") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.23.1 (c (n "mockito") (v "0.23.1") (d (list (d (n "assert-json-diff") (r "^1.0.0") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0lyq8l1rxk0kf3a630gn6l98pnb8slrpx9z9vbzy5rwqbn8pq097") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.23.2 (c (n "mockito") (v "0.23.2") (d (list (d (n "assert-json-diff") (r "^1.0.2") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "18bginlhqqaa9aizpi38w1vxg82wlx3ygvaq0vpkq0s73pmy9cd5") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.23.3 (c (n "mockito") (v "0.23.3") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)))) (h "0kh2wg24441miqcnrp2miaapphn8wgm18x23yjq45pajsjxfd0mf") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.25.0 (c (n "mockito") (v "0.25.0") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "0hldd58c0nzyrgy3h6nvh0caxg1qrqh9gw38mf5dglsw4vy5j3s6") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.25.1 (c (n "mockito") (v "0.25.1") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "1p4mwm9nhb7zyx8457mlvk4m4hsyh5irf14m1w2dli7l928b1nq3") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.25.2 (c (n "mockito") (v "0.25.2") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "0gi20dkkbxq2kcs3qx4vi5vmz3hmxmvbysi05mi0nypgp0gkfpvw") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.25.3 (c (n "mockito") (v "0.25.3") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "1d9dm7g43vd07rh3br9vsmgky5zral87xi9a60j8md6fphjy6fjs") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.26.0 (c (n "mockito") (v "0.26.0") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "0kz73ifwcb2hyql4vbjlqh5q50isykzfy1jxw0w0db0p53ih4nw3") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.27.0 (c (n "mockito") (v "0.27.0") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "0wx267qapxbcwjj2w2xd07qwwad2bnip2n5h1zivrg36sch4fqrs") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.28.0 (c (n "mockito") (v "0.28.0") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "16fl0rcqf2ixcn9h5vkfdk9y0pd0waw18z5q3hnb0jbbd1zfp81n") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.29.0 (c (n "mockito") (v "0.29.0") (d (list (d (n "assert-json-diff") (r "^1.0.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "0vjampssd5qa82ddrzmk6g55h0zfpg5lzhbz4b1jhq79mn30jbqh") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.30.0 (c (n "mockito") (v "0.30.0") (d (list (d (n "assert-json-diff") (r "^2.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "1y6fq93baqlbzab3ykwb3kcycj9ivy3c82w127dq3xk77lb3006i") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.31.0 (c (n "mockito") (v "0.31.0") (d (list (d (n "assert-json-diff") (r "^2.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "similar") (r "^2.1") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "06igz8isvsvdm0sl9zhn1hy6ifkdncbrd8pllpx4lqv9h04dq7j0") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.31.1 (c (n "mockito") (v "0.31.1") (d (list (d (n "assert-json-diff") (r "^2.0.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "httparse") (r "^1.3.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.17") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "similar") (r "^2.1") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)))) (h "1scdndv8z0y1fxwlqdp53366vdsjmyyg86gy751vfynrkg7gxyc0") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.32.0 (c (n "mockito") (v "0.32.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deadpool") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "02nfzj3h5y0dqhfgd0mk2dwzk96b2kk0s7n6yq95n5pw5f5zcmxf") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.32.1 (c (n "mockito") (v "0.32.1") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deadpool") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "1rkcnnyyp1z28jpyjv1y68j7slpqhzjd26s8sf1iljk6maiwspyn") (f (quote (("default" "color") ("color" "colored")))) (y #t)))

(define-public crate-mockito-0.32.2 (c (n "mockito") (v "0.32.2") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deadpool") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "1ryli43isfz9y5z6yn89anb8bnw0kqzqx2090zl375xdmm7r6py0") (f (quote (("default" "color") ("color" "colored")))) (y #t)))

(define-public crate-mockito-0.32.3 (c (n "mockito") (v "0.32.3") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deadpool") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "0acdl5hig9vz0y0zn302k3pwgvzfyz0592r6c09nr5cc1q68m409") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.32.4 (c (n "mockito") (v "0.32.4") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "deadpool") (r "^0.9") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "1kzy7b6jaqqkavn6gz1jh24fvq348kgpjb9jwh9p3c1ipk68r83z") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-0.32.5 (c (n "mockito") (v "0.32.5") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "17zzlkhl4whqd9f97wsjk9ypl5n2ipyph2dv3775ka55imv46vs0") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-1.0.0 (c (n "mockito") (v "1.0.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "1ks4g7gv100xdh0qrf3fvwr1znk809wchg40sv4f70pppb1yq7lc") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-1.0.1 (c (n "mockito") (v "1.0.1") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "0lz4iv9jr13q82yk13lv8aacpggjgq2vhi4d6xpyz832413b50x3") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-1.0.2 (c (n "mockito") (v "1.0.2") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "0dzmz1wc0fp3mh773qd8jynsira0p0jfw82z2dpiammzndm96mza") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-1.1.0 (c (n "mockito") (v "1.1.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "0k2vk9m8b4188vlbaq6yqidrh64kkvqiv3xkbdar6ibw4sv65iq9") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-1.1.1 (c (n "mockito") (v "1.1.1") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "0783md75g88jr4fk94pd8gg45a65cxkjyypqjzwihbi505mkg991") (f (quote (("default" "color") ("color" "colored"))))))

(define-public crate-mockito-1.2.0 (c (n "mockito") (v "1.2.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("full"))) (d #t) (k 0)))) (h "12xv7cz98ql2w05669hnnm9hvyliyqvsac1dkib5hs264f707lzq") (f (quote (("default" "color") ("color" "colored")))) (r "1.68")))

(define-public crate-mockito-1.3.0 (c (n "mockito") (v "1.3.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "~2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "server" "stream"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("net" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1jzsafsjh9123fh798xvxvy9wjxddw2l56gpaz0nvifqy7hlzj58") (f (quote (("default" "color") ("color" "colored")))) (r "1.68")))

(define-public crate-mockito-1.3.1 (c (n "mockito") (v "1.3.1") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "~2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "async-await"))) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "server" "stream"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("net" "parking_lot" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0zrz8ia08ba0dr7bbgp60cmx6vvn71y0fh1ncv3hqdrr7xdch7h3") (f (quote (("default" "color") ("color" "colored")))) (r "1.68")))

(define-public crate-mockito-1.4.0 (c (n "mockito") (v "1.4.0") (d (list (d (n "assert-json-diff") (r "^2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc" "async-await"))) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "server" "stream"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "similar") (r "^2.2") (d #t) (k 0)) (d (n "testing_logger") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1.25") (f (quote ("net" "parking_lot" "rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "07mz6yyfnl1ka29wkl1qa6mvm66lwsjf8y3cl0m3kpsvm8iy1xnj") (f (quote (("default" "color") ("color" "colored")))) (r "1.70")))

