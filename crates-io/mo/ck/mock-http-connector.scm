(define-module (crates-io mo ck mock-http-connector) #:use-module (crates-io))

(define-public crate-mock-http-connector-0.1.0 (c (n "mock-http-connector") (v "0.1.0") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1hzdfppavv1jy1i9cpmpfyxmyd2vqa6pgnplvh6nyp6pyk4vyxl5") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.1.1 (c (n "mock-http-connector") (v "0.1.1") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1nrj0rbgxz97ikgmj42dvh6q4n82v7crz745wvgqbr9ba0gj422p") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.1.2 (c (n "mock-http-connector") (v "0.1.2") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "16ch565az7mn04r1vnc7r1qqdik4k6abn5h7v0p1wn31i4pnvcwd") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.1.3 (c (n "mock-http-connector") (v "0.1.3") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1c73a37f1v1vvkkj9m1v9hr4yhb0rm0470hfgsw83fapc1as8kj3") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.1.4 (c (n "mock-http-connector") (v "0.1.4") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1izj4wnqpm5kf9hsmrwxs32shy8x2si5s9q00pma7hxxk3vss084") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.2.0 (c (n "mock-http-connector") (v "0.2.0") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "09bdcdq6fb83hjsl7qvp10bjwqiiv1gw4qflgsf8m0p46hyw53ih") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.2.1 (c (n "mock-http-connector") (v "0.2.1") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0yr29krz0jakbhpy1mc124gx5mi1x0rbg25bwdwy2c7dac5jfym6") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.2.2 (c (n "mock-http-connector") (v "0.2.2") (d (list (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "102hnj3s1z2fg1g7yhgxbxn1xci82hn5jlx6zardrh2f9pjws483") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.3.0 (c (n "mock-http-connector") (v "0.3.0") (d (list (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime"))) (d #t) (k 2)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1f72gkvsxqpa8s7qwya01g6fkm5hrjwpq0jpdhf03mlhxfywadvj") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

(define-public crate-mock-http-connector-0.3.1 (c (n "mock-http-connector") (v "0.3.1") (d (list (d (n "colored") (r "^2.0.4") (d #t) (k 0)) (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper") (r "^0.14.24") (f (quote ("client" "http1" "runtime" "stream"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.93") (o #t) (d #t) (k 0)) (d (n "speculoos") (r "^0.11.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("io-util" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 2)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1xna8x15yh8baxgq57dh4id3yn2hq0yvcrgbnkxfn759cw8z7pvc") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde_json" "dep:serde"))))))

