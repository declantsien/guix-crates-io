(define-module (crates-io mo ck mockall_derive) #:use-module (crates-io))

(define-public crate-mockall_derive-0.1.0-pre (c (n "mockall_derive") (v "0.1.0-pre") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "downcast") (r "^0.10") (d #t) (k 2)) (d (n "fragile") (r "^0.3") (d #t) (k 2)) (d (n "predicates-tree") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0v5ijwkab6n4yn8f8gakjirbg6xmm0m1l7jkbbi4a6hn2x9pm31f") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.1.0 (c (n "mockall_derive") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "downcast") (r "^0.10") (d #t) (k 2)) (d (n "fragile") (r "^0.3") (d #t) (k 2)) (d (n "mockall") (r ">= 0.1.0-pre") (d #t) (k 2)) (d (n "predicates-tree") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0gin4g473dgsz1fakarxzqxsjdwmy336jga4mz5pp8z253gzccvg") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.2.0 (c (n "mockall_derive") (v "0.2.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "downcast") (r "^0.10") (d #t) (k 2)) (d (n "fragile") (r "^0.3") (d #t) (k 2)) (d (n "mockall") (r ">= 0.1") (d #t) (k 2)) (d (n "predicates-tree") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0h5k5i6jmg4q5y9ad59sb857fj6bg7h70bcj9kzxi53q3iwiigqm") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.2.1 (c (n "mockall_derive") (v "0.2.1") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "downcast") (r "^0.10") (d #t) (k 2)) (d (n "fragile") (r "^0.3") (d #t) (k 2)) (d (n "mockall") (r "^0.2.0") (d #t) (k 2)) (d (n "predicates-tree") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1g5vkx1fi5c1f9w52byx9f8v11saqhk45hw00sk9khap64g6k82f") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.3.0 (c (n "mockall_derive") (v "0.3.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "syn") (r "^0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "01dbdks0ijcqj10rrylbmlqsyy7prz1cblr8pahk6flw1jn2ld7i") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.4.0 (c (n "mockall_derive") (v "0.4.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1xaav2j9za8ypffb7rwz1xmgnsav0v7xjb642mp99qpz3fx8zd45") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.5.0 (c (n "mockall_derive") (v "0.5.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0rjwqmprqam9d2ggsj3n7dyqzwwgv7gccqcbhhgas6h4z84k7ghx") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.5.1 (c (n "mockall_derive") (v "0.5.1") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1m2252zbrm90fcydc0nb9sa8rckzr0hwgxsrbfygrz9iyw2yz3dw") (f (quote (("nightly" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.5.2 (c (n "mockall_derive") (v "0.5.2") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1gpq9hcifl36z3aja42iv1c8wyk1ywbklpqqxm3aacn12pri2qm2") (f (quote (("nightly_derive" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.6.0 (c (n "mockall_derive") (v "0.6.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0d9r2zpnliwqk2d6fykx0ny8las9nznm2ck3v7aql14jmnhib9nm") (f (quote (("nightly_derive" "proc-macro2/nightly") ("extra-docs"))))))

(define-public crate-mockall_derive-0.7.0 (c (n "mockall_derive") (v "0.7.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0vrpcwrdfyj2p4gcyv457b10fd0yzjxrqng5nrra57nrwva2cws4") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.7.1 (c (n "mockall_derive") (v "0.7.1") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.3") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "17wm1r5xz4i001hc9p3v1ydvch4nbwz9dyvfnl1j3c9wckl18vl2") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.7.2 (c (n "mockall_derive") (v "0.7.2") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0yy1333y7k6s8xq2zr2ldgxjbhrwd9bji74iyps9mkbq3x2cnwx6") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.8.0 (c (n "mockall_derive") (v "0.8.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "095mh1pmfi0zhbr3mdkxl89bzg6jfaj71pa94s4q37rwl8g2jvzv") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.8.1 (c (n "mockall_derive") (v "0.8.1") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1psr4l54vhn1zanl6c6yvxk4k017rqxdnvp7gj1c7q4gh19zfwxq") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.8.2 (c (n "mockall_derive") (v "0.8.2") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1v60v04v21r8iscmdflwdh3d20il336a5m5zyy6gm0cdgq60ckzs") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.8.3 (c (n "mockall_derive") (v "0.8.3") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "19mzvay8dgb1405hsldxssasjl93pxb2f9ar2kxywnbzpwc1jikw") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.9.0 (c (n "mockall_derive") (v "0.9.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0j0mg07ir9qi6qq8k2gsmdjvvrj8ybq0icpiy0145hplvfalqwc3") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.9.1 (c (n "mockall_derive") (v "0.9.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1snywdscj3chgs0xqr5700dsw2hy0qwd0s3kdk4nz85w6m327m2x") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.10.0 (c (n "mockall_derive") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "136wzmsxznhdy38ak30nlyplxiyzqlry2667ckmhsx9568q9zlz3") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.10.1 (c (n "mockall_derive") (v "0.10.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0adxcba8r9n3an72879g067mixb6zi41qr47j62gzcpzqplp8wfh") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.10.2 (c (n "mockall_derive") (v "0.10.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0cwhcfsc16b8p4yrsrxnhfxfdn0n89cmjja13wb6kxik8hhmpqp7") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.11.0 (c (n "mockall_derive") (v "0.11.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.15") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "0sxavgqr9m6xh68fibfrh7jb4vfw9j86xqi14bvs7pm012121vvr") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.11.1 (c (n "mockall_derive") (v "0.11.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.87") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1ixhmsrg5ky4b2jlvbxhlpr3mbv7frd6wr8msm005vijb5rmcb96") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.11.2 (c (n "mockall_derive") (v "0.11.2") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.87") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "13zydc8k9krrzjzgqdsfglc2qvxyqxgcyiyi9v7l208aafh05mw6") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.11.3 (c (n "mockall_derive") (v "0.11.3") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.87") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1l3dq3z06l7a3syk9kyk4abgz7vcwhap1gqhi35898jz7mc669l3") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.11.4 (c (n "mockall_derive") (v "0.11.4") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0.87") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1fvc9kwjcc9ia6ng7z9z02b4qkl9dvsx9m4z51xz9i0mj1k7bki2") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.12.0 (c (n "mockall_derive") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.60") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.9") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "16v33i2ds42n9d26ir1inilc0bx6p93z1gjfrr5bly093lvna9xd") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

(define-public crate-mockall_derive-0.12.1 (c (n "mockall_derive") (v "0.12.1") (d (list (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.60") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2.0.9") (f (quote ("extra-traits" "full"))) (d #t) (k 0)))) (h "1qhal0m997vy5vv8admrrbcibsq1cjkr1ajbypaa31f3kvkvqz5g") (f (quote (("nightly_derive" "proc-macro2/nightly"))))))

