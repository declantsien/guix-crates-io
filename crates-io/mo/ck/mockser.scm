(define-module (crates-io mo ck mockser) #:use-module (crates-io))

(define-public crate-mockser-0.1.0 (c (n "mockser") (v "0.1.0") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 0)))) (h "1xvdkk4imrcjsjzvyfd80cxy1sar6nmg0cgvk390cx8k66vv0dbn")))

(define-public crate-mockser-0.1.1 (c (n "mockser") (v "0.1.1") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 0)))) (h "1lgziwa9sg1yzk39rf4ck226wrmy7p18vqplrvir8afq9xpmrji8")))

(define-public crate-mockser-0.1.2 (c (n "mockser") (v "0.1.2") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)))) (h "0v2jvl63h9rcjb4qcg87w99pml5xlfi2f10pfjrqvfa8w8sarpw0")))

(define-public crate-mockser-0.1.3 (c (n "mockser") (v "0.1.3") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)))) (h "1pd4bgmjg64hq50bh7maz17arjnir4132vz3zh78s05mzrk5jj11")))

(define-public crate-mockser-0.1.4 (c (n "mockser") (v "0.1.4") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "human-panic") (r "^1.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)))) (h "0vlpw8rvq1i8flr5hzd5ylr96j6qc1h09gi0risicq5bhasfr14l")))

(define-public crate-mockser-0.1.6 (c (n "mockser") (v "0.1.6") (d (list (d (n "axum") (r "^0.7.5") (d #t) (k 0)) (d (n "config") (r "^0.14.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "human-panic") (r "^2.0.0") (d #t) (k 0)) (d (n "hurl") (r "^4.3.0") (d #t) (k 2)) (d (n "hurl_core") (r "^4.3.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "signal"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)))) (h "1i3hvdqjazx2mmgzkvpfga2b1mnx9a0bf1brld9mvc7r0q4czjka")))

