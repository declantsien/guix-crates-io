(define-module (crates-io mo p- mop-facades) #:use-module (crates-io))

(define-public crate-mop-facades-0.0.1 (c (n "mop-facades") (v "0.0.1") (d (list (d (n "mop-blocks") (r "^0.0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "mop-solver") (r "^0.0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1r4na27p8zfw5s0dkcayad558m2pp180jwrxix7japvcis61bnaq")))

(define-public crate-mop-facades-0.0.2 (c (n "mop-facades") (v "0.0.2") (d (list (d (n "mop-blocks") (r "^0.0.2") (d #t) (k 0)) (d (n "mop-common") (r "^0.0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "1yhwfnkziaflssa3cx0nnkkdpxyhisblrhcdaqb3bxnvimlhcr2y") (f (quote (("std") ("serialization" "mop-blocks/serialization") ("parallelization" "mop-blocks/parallelization") ("default" "std"))))))

(define-public crate-mop-facades-0.0.3 (c (n "mop-facades") (v "0.0.3") (d (list (d (n "mop-blocks") (r "^0.0.3") (d #t) (k 0)) (d (n "mop-common") (r "^0.0.3") (f (quote ("num" "random"))) (d #t) (k 0)))) (h "028b68xaa2i4726b0njpczlgd1hwg7y0ca4p6ikrqhd6abnffxxw") (f (quote (("serialization" "mop-blocks/serialization" "mop-common/serialization") ("parallelization" "mop-blocks/parallelization" "mop-common/parallelization") ("default"))))))

(define-public crate-mop-facades-0.0.4 (c (n "mop-facades") (v "0.0.4") (d (list (d (n "mop-blocks") (r "^0.0.4") (d #t) (k 0)) (d (n "mop-common") (r "^0.0.4") (f (quote ("num" "random"))) (d #t) (k 0)))) (h "0dy3dhlxf5sg2lcxlz2plv19si9ywy2flm7jshi3rhbmv4ycgzby") (f (quote (("serialization" "mop-blocks/serialization" "mop-common/serialization") ("parallelization" "mop-blocks/parallelization" "mop-common/parallelization") ("default"))))))

(define-public crate-mop-facades-0.0.5 (c (n "mop-facades") (v "0.0.5") (d (list (d (n "mop-blocks") (r "^0.0.5") (d #t) (k 0)) (d (n "mop-common") (r "^0.0.5") (f (quote ("num-traits" "rand"))) (d #t) (k 0)))) (h "0pz84dzrgi59ymd9nr3jdg5v7zvwpizhpsgl9hqka8icym5x7j28") (f (quote (("std" "mop-blocks/std" "mop-common/std") ("serde1" "mop-blocks/serde1" "mop-common/serde1") ("rayon" "mop-blocks/rayon" "mop-common/rayon") ("default"))))))

(define-public crate-mop-facades-0.0.6 (c (n "mop-facades") (v "0.0.6") (d (list (d (n "mop-blocks") (r "^0.0.6") (d #t) (k 0)) (d (n "mop-common") (r "^0.0.6") (f (quote ("num-traits" "rand"))) (d #t) (k 0)))) (h "02l4xjr32hm21qdbqjm847kysnj6hfbqwj7hj6ln299wbsl7a7pl") (f (quote (("std" "mop-blocks/std" "mop-common/std") ("serde1" "mop-blocks/serde1" "mop-common/serde1") ("rayon" "mop-blocks/rayon" "mop-common/rayon") ("default"))))))

(define-public crate-mop-facades-0.0.7 (c (n "mop-facades") (v "0.0.7") (d (list (d (n "mop-blocks") (r "^0.0.7") (d #t) (k 0)) (d (n "mop-common") (r "^0.0.7") (f (quote ("num-traits" "rand"))) (d #t) (k 0)))) (h "1y2wrx3bya67332jy8jxl4gc4mf724w9gncaj70mgibkn2zp4r2q") (f (quote (("std" "mop-blocks/std" "mop-common/std") ("serde1" "mop-blocks/serde1" "mop-common/serde1") ("rayon" "mop-blocks/rayon" "mop-common/rayon") ("default"))))))

(define-public crate-mop-facades-0.0.8 (c (n "mop-facades") (v "0.0.8") (d (list (d (n "mop-blocks") (r "^0.0.8") (d #t) (k 0)) (d (n "mop-common-defs") (r "^0.0.8") (d #t) (k 0)) (d (n "mop-common-deps") (r "^0.0.8") (f (quote ("num-traits" "rand"))) (d #t) (k 0)))) (h "1009wnkd81sp55lpklxiykwz0a2fmwa5v91sdncb3s9y7cfkrvj4") (f (quote (("std" "mop-blocks/std" "mop-common-deps/std") ("serde1" "mop-blocks/serde1" "mop-common-deps/serde1") ("rayon" "mop-blocks/rayon" "mop-common-defs/parallel" "mop-common-deps/rayon") ("default"))))))

(define-public crate-mop-facades-0.0.10 (c (n "mop-facades") (v "0.0.10") (d (list (d (n "mop-blocks") (r "^0.0.10") (d #t) (k 0)) (d (n "mop-common-defs") (r "^0.0.10") (d #t) (k 0)) (d (n "mop-common-deps") (r "^0.0.10") (f (quote ("num-traits" "rand"))) (d #t) (k 0)))) (h "0dn4r7a3ia11mvbckgd1xs6gdsh6l4zk7k7qfr735lm25hdqiqnh") (f (quote (("std" "mop-blocks/std" "mop-common-deps/std") ("serde1" "mop-blocks/serde1" "mop-common-deps/serde1") ("rayon" "mop-blocks/rayon" "mop-common-defs/parallel" "mop-common-deps/rayon") ("default"))))))

(define-public crate-mop-facades-0.1.0 (c (n "mop-facades") (v "0.1.0") (d (list (d (n "mop-blocks") (r "^0.1.0") (f (quote ("with_rand"))) (d #t) (k 0)) (d (n "mop-common-defs") (r "^0.1.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)))) (h "09a4286kpwczpkg7plpvzxcj91vlji4740f989ng25p05mn7bvan") (f (quote (("std" "mop-blocks/std" "mop-common-defs/std" "num-traits/std" "rand/std") ("default"))))))

(define-public crate-mop-facades-0.2.0 (c (n "mop-facades") (v "0.2.0") (d (list (d (n "mop-blocks") (r "^0.2.0") (f (quote ("with_rand"))) (d #t) (k 0)) (d (n "mop-common-defs") (r "^0.2.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)))) (h "0pbpd8f7vkar371xcc67hf6q9db5v2sp82hwdm8g85cbksr93dhv") (f (quote (("std" "mop-blocks/std" "mop-common-defs/std" "num-traits/std" "rand/std") ("default"))))))

(define-public crate-mop-facades-0.3.0 (c (n "mop-facades") (v "0.3.0") (d (list (d (n "cl-traits") (r "^4.0") (k 0)) (d (n "mop-blocks") (r "^0.3.0") (f (quote ("with-rand"))) (k 0)) (d (n "mop-common") (r "^0.3.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)))) (h "1z1a5zidiy4f8hlnm7frfpz4nbiw6gr6qc7wlxr4plxkax5vqrg6") (f (quote (("std" "mop-blocks/std" "mop-common/std" "num-traits/std" "rand/std") ("default"))))))

(define-public crate-mop-facades-0.4.0 (c (n "mop-facades") (v "0.4.0") (d (list (d (n "cl-traits") (r "^4.0") (k 0)) (d (n "mop-blocks") (r "^0.4.0") (f (quote ("with-rand"))) (k 0)) (d (n "mop-common") (r "^0.4.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)))) (h "13x2nh0bhkdpz7iywsa3dc77bsljz72zq3k1ax9cb4y0bv3n62i1") (f (quote (("std" "mop-blocks/std" "mop-common/std" "num-traits/std" "rand/std") ("default"))))))

(define-public crate-mop-facades-0.5.0 (c (n "mop-facades") (v "0.5.0") (d (list (d (n "cl-traits") (r "^4.0") (k 0)) (d (n "mop-blocks") (r "^0.5.0") (f (quote ("with-rand"))) (k 0)) (d (n "mop-common") (r "^0.5.0") (k 0)) (d (n "num-traits") (r "^0.2") (f (quote ("libm"))) (k 0)) (d (n "rand") (r "^0.7") (k 0)))) (h "0qphna3pf4isiiiiab0szgnraic8kk4iv5qvgc64xihm93ir2kv3") (f (quote (("std" "mop-blocks/std" "mop-common/std" "num-traits/std" "rand/std") ("default"))))))

