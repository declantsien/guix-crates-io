(define-module (crates-io mo mo momoka) #:use-module (crates-io))

(define-public crate-momoka-0.0.1 (c (n "momoka") (v "0.0.1") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bundlr-sdk") (r "^0.4.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gql_client") (r "^1.0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.2") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "1xhsizjmmx69nb389wgci6j9acyjpmjx001icp9fnv5vhzzqa8mi")))

(define-public crate-momoka-0.0.2 (c (n "momoka") (v "0.0.2") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bundlr-sdk") (r "^0.4.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gql_client") (r "^1.0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.2") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "0xai6hh9fyiy5irnzis4hh0qzykgnqzfas3nysnxndp1vvxz3fpg")))

(define-public crate-momoka-1.0.0 (c (n "momoka") (v "1.0.0") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bundlr-sdk") (r "^0.4.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gql_client") (r "^1.0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.2") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "18s2xlv4bvwkvk85bzd5mi8910xxwy64klqax1bd9x4dbkyx1d0j")))

(define-public crate-momoka-1.0.1 (c (n "momoka") (v "1.0.1") (d (list (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "bundlr-sdk") (r "^0.4.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "ethers") (r "^2.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gql_client") (r "^1.0.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(all(not(windows), not(target_env = \"musl\")))") (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.2") (f (quote ("v4" "serde"))) (d #t) (k 0)))) (h "08s4v4qlyxc46ygni3gl6j6y2mg11v54gaf8dki5c7l15f1nkjyz")))

