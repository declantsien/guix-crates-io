(define-module (crates-io kc l- kcl-lib) #:use-module (crates-io))

(define-public crate-kcl-lib-0.1.0 (c (n "kcl-lib") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.6.1") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.15") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "08yqc06ki3ma9pa54zjkf731hfmh5jgfwq3hz95c5fn0dcj9jjy2")))

(define-public crate-kcl-lib-0.1.1 (c (n "kcl-lib") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.6.1") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.15") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1j3a3axw5v28b7ic55rwcwh0skh2q5yjcvsxn37fcvdh17mylfsf")))

(define-public crate-kcl-lib-0.1.2 (c (n "kcl-lib") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.6.1") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.15") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "0wqz9accg9qf0ihyppw1zjifwwbga25nj2fjwg44p09gj4pl6m8f")))

(define-public crate-kcl-lib-0.1.3 (c (n "kcl-lib") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.6.1") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.15") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "0w7b11qlh4gmj51ah6h7hv3iw05d7r5515x2m375ny2kvl726av8")))

(define-public crate-kcl-lib-0.1.4 (c (n "kcl-lib") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "0hwj6jr2csqnqzcpsbd0fyb9v3kc09kr8wiqdn1al23sbxgzmzqg")))

(define-public crate-kcl-lib-0.1.5 (c (n "kcl-lib") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1h0l6cf3rxmfnplwg9136hp15a61kikv0x6a9j0f0zvvmi484x9b")))

(define-public crate-kcl-lib-0.1.6 (c (n "kcl-lib") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1dfxy416ykdbrhlj0qc10m27774b12h0lpygwrhyqiqs09bv47fp")))

(define-public crate-kcl-lib-0.1.7 (c (n "kcl-lib") (v "0.1.7") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "0wphl9i0g2i0riwympqzyhl9lippz592q2w3zrvscghsb9lnwhbd")))

(define-public crate-kcl-lib-0.1.8 (c (n "kcl-lib") (v "0.1.8") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1npqr1p2wdldvl1i253hg72p7kmnvv8wwir2qx7pb6zbcsd28wp7")))

(define-public crate-kcl-lib-0.1.9 (c (n "kcl-lib") (v "0.1.9") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "18gwyqa0j28bdaj7nfi0km5kn66xsd43c4yczj59pcl8parwfy84")))

(define-public crate-kcl-lib-0.1.10 (c (n "kcl-lib") (v "0.1.10") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1iklr17zcfzq9bdx5dv1inlwcjjjpfzlkncnyabvdq4ck7i6ywa8") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.11 (c (n "kcl-lib") (v "0.1.11") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.0") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1hcyy4hk79l82izaks1wamai274ssm1p7h4zmsva76w41hykvm4j") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.12 (c (n "kcl-lib") (v "0.1.12") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (k 0)))) (h "1l3ss2qfqsv5jfx4kwq1g9y96hrzp1yp69b9wi8lzyshcm6181i2") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.13 (c (n "kcl-lib") (v "0.1.13") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1h7gz2lj4rl0msvyhmn4sas5ss7zcr8mjrk68ih8yx3vr5ayvd14") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.14 (c (n "kcl-lib") (v "0.1.14") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0gmrslvzmv33xi5qyw3y02i12qjzs38s7hmmd72fd1kg6409v9xq") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.15 (c (n "kcl-lib") (v "0.1.15") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "04rkwd6127m8d2l68x76xqj2bc8ndhzm2vjq9y11ssgl13s4qmjx") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.16 (c (n "kcl-lib") (v "0.1.16") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1xhj40wv4h0cmrb18l83q2i1av02b6bjbdj6gqjp1xvhv7yfd5gb") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.17 (c (n "kcl-lib") (v "0.1.17") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "08lq9jwf205rxqlr6lr7a364j52ksrm9v2vyg1161lsmfmjhrmh6") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.18 (c (n "kcl-lib") (v "0.1.18") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "09czhbxf50xhl201hmw4hj1i8lfwq7idv4hjvyfzs5k178sby28g") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.19 (c (n "kcl-lib") (v "0.1.19") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07zgfyq1v58n7m1w9kpn1kxdzdbb3f98xi4fm97hdb8fk6sql2y3") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.20 (c (n "kcl-lib") (v "0.1.20") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "16yvw1065jbj55zbacy7x9zqzrn43v4v66ccc5pfgv66mv07hvrl") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.21 (c (n "kcl-lib") (v "0.1.21") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.1") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1s7fjrvg9qs2dynkq6x5mv443rn2q68ndxqgyw4rny0wqxqy34r3") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.22 (c (n "kcl-lib") (v "0.1.22") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zgpc9r4xqa1rikajiy88q9b19qkqdqxyxfpvgh1yic59ag8ycvp") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.23 (c (n "kcl-lib") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0lmhfdm4ziv92xfyngj0ljdmpl8nxm1azfdmdic1hby117d8vgmi") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.24 (c (n "kcl-lib") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.23") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jisppnwias2blx1im2gnig15d6qc1n73rgzlngmk913m9jdxq8a") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.25 (c (n "kcl-lib") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.25") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.47") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jipv0mb850n5xn18nh673p3m2phmbycs3s3v3knpmfmn85izy38") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.27 (c (n "kcl-lib") (v "0.1.27") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.3") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.25") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0627ki9y5y0yv6f4kym9100mzx49a2dh5j68nf0ha1fdax2f8yp7") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.28 (c (n "kcl-lib") (v "0.1.28") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.3") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.25") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0k0yvy601g9gga6rhp99q7via61snnxps0294r1lh9vbzv4c0yzz") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.29 (c (n "kcl-lib") (v "0.1.29") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.3") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.25") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0wd6asb7ndhsm4psn5nbflr9brznqcv8xkzpvv2dvy8fvsjpmn25") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.30 (c (n "kcl-lib") (v "0.1.30") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.3") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.3") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.25") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1wr1kydf85l5wp251bpz6w0vbrddcm7fva3a4m96fhjkzmq5khvg") (f (quote (("engine") ("default" "engine"))))))

(define-public crate-kcl-lib-0.1.31 (c (n "kcl-lib") (v "0.1.31") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.3") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.0.7") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.25") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0za0g5z0lpp4h04kvp0qilrki6l9khdi2jwmz61g5dpc2720bm8r") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap"))))))

(define-public crate-kcl-lib-0.1.32 (c (n "kcl-lib") (v "0.1.32") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.27") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.20") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.15") (d #t) (k 0)))) (h "10mnz7pfrv0vwgzw9qd88rrv782j3x5m7kbq056d1zrzkxss6367") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap"))))))

(define-public crate-kcl-lib-0.1.33 (c (n "kcl-lib") (v "0.1.33") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.31") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.15") (d #t) (k 0)))) (h "1gw1wqs2jm4j32a167g09qaf86lslgz4sh6zlng41kmsxwdn36sb") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap"))))))

(define-public crate-kcl-lib-0.1.34 (c (n "kcl-lib") (v "0.1.34") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.32") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.16") (d #t) (k 0)))) (h "0qxhmpc3bkhbm7gkksxm285libivncxycbbqk9hl8xijg2jq4m90") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap"))))))

(define-public crate-kcl-lib-0.1.35 (c (n "kcl-lib") (v "0.1.35") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.33") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.37") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.64") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.16") (d #t) (k 0)))) (h "1932k02h33lvykvhzikh8v70bqk9pph3ibamaisilpnz4vjr4537") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap"))))))

(define-public crate-kcl-lib-0.1.36 (c (n "kcl-lib") (v "0.1.36") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.41") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.65") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.18") (d #t) (k 0)))) (h "1kzfqzy1yds32k3s0hm52l5qbgbdx1pssvml0c1mhx7asigc61a7") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.37 (c (n "kcl-lib") (v "0.1.37") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.43") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.6.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.65") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.18") (d #t) (k 0)))) (h "0pz4gv1cjsa41cawn3sm315sz66yp1fyxs0wvnk6zyb92sd4s9p5") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.38 (c (n "kcl-lib") (v "0.1.38") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.43") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.6.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.65") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.18") (d #t) (k 0)))) (h "0diir82f2h11z82klrbnh5l5g0m7x7kg11gw3ix697zba4vhg9z2") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.39 (c (n "kcl-lib") (v "0.1.39") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.43") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.6.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.65") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.18") (d #t) (k 0)))) (h "15qprmdgzf8pb10a0hdqy6jgnqr14r9444nq52ky1lamhyjsa65s") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.40 (c (n "kcl-lib") (v "0.1.40") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bson") (r "^2.7.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.4") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.65") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.43") (f (quote ("js"))) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.22") (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.20.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7") (f (quote ("serde-json-impl" "schemars-impl" "uuid-impl"))) (d #t) (k 0) (p "ts-rs-json-value")) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.88") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.38") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.65") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.18") (d #t) (k 0)))) (h "1q7iiccpym3rbd24brc21baz00hcm8gfnjfsvdwnp41dh5z7hkv2") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.41 (c (n "kcl-lib") (v "0.1.41") (d (list (d (n "anyhow") (r "^1.0.79") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.6") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.53") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.4") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.24") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.41") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.68") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)))) (h "0ga56gl3rlvs7cg7xkjqnily4msn84f9c9cms5g870qj7irgw6vl") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.42 (c (n "kcl-lib") (v "0.1.42") (d (list (d (n "anyhow") (r "^1.0.79") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.6") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.68") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.54") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.24") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.41") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.68") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)))) (h "0ympkryg5vb37kyvv1my491f5mdb8g1m88vvjvmvci1lx010xd8m") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.43 (c (n "kcl-lib") (v "0.1.43") (d (list (d (n "anyhow") (r "^1.0.79") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.9") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.59") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.24") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.41") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.68") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)))) (h "1f8cjmmaccfmnm22k15ksjm3jc4f3nwqj2zqjbxmjgk02nq73r2r") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.44 (c (n "kcl-lib") (v "0.1.44") (d (list (d (n "anyhow") (r "^1.0.79") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.5.1") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.9") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.59") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.24") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.41") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)))) (h "0kzc9hc24ggd3q64qqg3ikkvgsjsprfw21dmixch7v52dw4qfl4s") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.45 (c (n "kcl-lib") (v "0.1.45") (d (list (d (n "anyhow") (r "^1.0.80") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.5.2") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.10") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.59") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.24") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)))) (h "1lwp65r2paly9aci2nsalcqib44lx5jyd9y1x1ika15hi6gjjksn") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.46 (c (n "kcl-lib") (v "0.1.46") (d (list (d (n "anyhow") (r "^1.0.80") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.35") (d #t) (k 0)) (d (n "clap") (r "^4.5.2") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.11") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.60") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.8") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.12") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "1gkgvzrg06hsnhmmhidqnyxxn5kkayfh8vv86q5rhjlm0n2gzif0") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.47 (c (n "kcl-lib") (v "0.1.47") (d (list (d (n "anyhow") (r "^1.0.81") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.79") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bson") (r "^2.9.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.37") (d #t) (k 0)) (d (n "clap") (r "^4.5.3") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.12") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.37.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.63") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "08xm0z0zp5v7pg6k54k9f7dg8ax40gc5la9yz7k2hkp5skd91rj0") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.48 (c (n "kcl-lib") (v "0.1.48") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.15") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.2.69") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "1k9c8fifjvgq83mgzvwk45j76iia2ad0cwkj0nq932j8amr5vyyj") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.49 (c (n "kcl-lib") (v "0.1.49") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.16") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.0") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "035g1kq921ffcns8j0bfgx09j44187j92xlk59dx7c42db4869hg") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.50 (c (n "kcl-lib") (v "0.1.50") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.16") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.0") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "0ds2xhpfrr5sxkzya7h3kp7jbbvw99inbbs7bdpzgmqzrp4p2ykv") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.51 (c (n "kcl-lib") (v "0.1.51") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "base64") (r "^0.22.0") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("cargo" "derive" "env" "unicode"))) (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.17") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.0") (f (quote ("js" "requests"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl" "chrono-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "validator") (r "^0.18.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "0df53yxnjcmzp7vwcxyhd1ymszi67m812iwdcj29lj27c4z3d9r5") (f (quote (("engine") ("default" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.53 (c (n "kcl-lib") (v "0.1.53") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (o #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.17") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.0") (f (quote ("js" "requests" "clap"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl" "chrono-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "validator") (r "^0.18.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "1nbiljm6s0vd8flqqalx7s4v1fdqj657437xwiijj28rjxh73dbl") (f (quote (("engine") ("default" "cli" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.54 (c (n "kcl-lib") (v "0.1.54") (d (list (d (n "anyhow") (r "^1.0.82") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (o #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.17") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.1") (f (quote ("js" "requests" "clap"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl" "chrono-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "validator") (r "^0.18.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "0lipd6hzfyd02p3fdmja3ymxr0r1pd5s0wsd7rympn2bhpmjbv0q") (f (quote (("engine") ("default" "cli" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.55 (c (n "kcl-lib") (v "0.1.55") (d (list (d (n "anyhow") (r "^1.0.83") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (o #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.17") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.1") (f (quote ("js" "requests" "clap"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl" "chrono-impl"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "validator") (r "^0.18.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (k 0)))) (h "11dhyvi4im3fad3lpmc7skcffqmrmlwvhsh4ymqlz7v3lq33h352") (f (quote (("engine") ("default" "cli" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.56 (c (n "kcl-lib") (v "0.1.56") (d (list (d (n "anyhow") (r "^1.0.86") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (o #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.18") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.1") (f (quote ("js" "requests" "clap"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.13") (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl" "chrono-impl" "no-serde-warnings"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "validator") (r "^0.18.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^1.3.0") (k 0)))) (h "146iviblpjfc07v0zs4rnd7blcpqj9xbgxyzfqwv5spfmcmkc3nn") (f (quote (("engine") ("default" "cli" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

(define-public crate-kcl-lib-0.1.57 (c (n "kcl-lib") (v "0.1.57") (d (list (d (n "anyhow") (r "^1.0.86") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-recursion") (r "^1.1.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 0)) (d (n "base64") (r "^0.22.1") (d #t) (k 2)) (d (n "bson") (r "^2.10.0") (f (quote ("uuid-1" "chrono"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "chrono") (r "^0.4.38") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (o #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "databake") (r "^0.1.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "derive-docs") (r "^0.1.18") (d #t) (k 0)) (d (n "expectorate") (r "^1.1.0") (d #t) (k 2)) (d (n "form_urlencoded") (r "^1.2.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "git_rev") (r "^0.1.0") (d #t) (k 0)) (d (n "gltf-json") (r "^1.4.1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "image") (r "^0.24.9") (d #t) (k 2)) (d (n "insta") (r "^1.38.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 2)) (d (n "js-sys") (r "^0.3.69") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "kittycad") (r "^0.3.1") (f (quote ("js" "requests" "clap"))) (k 0)) (d (n "kittycad-execution-plan-macros") (r "^0.1.9") (d #t) (k 0)) (d (n "kittycad-execution-plan-traits") (r "^0.1.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "parse-display") (r "^0.9.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.26") (f (quote ("stream" "rustls-tls"))) (k 0)) (d (n "ropey") (r "^1.6.1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.17") (f (quote ("impl_json_schema" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("sync" "time"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-native-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "^0.8.13") (d #t) (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("runtime-agnostic"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tower-lsp") (r "^0.20.0") (f (quote ("proposed"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ts-rs") (r "^7.1.1") (f (quote ("uuid-impl" "url-impl" "chrono-impl" "no-serde-warnings"))) (d #t) (k 0)) (d (n "twenty-twenty") (r "^0.7.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "validator") (r "^0.18.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.91") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.69") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "winnow") (r "^0.5.40") (d #t) (k 0)) (d (n "zip") (r "^1.3.0") (k 0)))) (h "1z1mkck18pg5kjvdj15sdb8zsba99mc1gaifkmnixk6nrhnk4sbg") (f (quote (("engine") ("default" "cli" "engine")))) (s 2) (e (quote (("cli" "dep:clap")))) (r "1.73")))

