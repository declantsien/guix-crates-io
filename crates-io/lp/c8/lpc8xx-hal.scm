(define-module (crates-io lp c8 lpc8xx-hal) #:use-module (crates-io))

(define-public crate-lpc8xx-hal-0.5.0 (c (n "lpc8xx-hal") (v "0.5.0") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1ksng0wm9kjbjkf8a5722dpng6897xm2jvy50fm4zwg370g10v5y") (f (quote (("rt" "lpc82x-pac/rt" "lpc845-pac/rt") ("default" "82x") ("compiletest" "compiletest_rs") ("845" "lpc845-pac") ("82x" "lpc82x-pac"))))))

(define-public crate-lpc8xx-hal-0.6.0 (c (n "lpc8xx-hal") (v "0.6.0") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "termion") (r "^1.5.3") (d #t) (k 1)) (d (n "void") (r "^1.0.2") (k 0)))) (h "07adxnlrp1szrvbsyljpyshbf5s6j1yxa9asz9p017far7p19rc7") (f (quote (("rt-selected") ("default" "845-rt") ("compiletest" "compiletest_rs") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac"))))))

(define-public crate-lpc8xx-hal-0.6.1 (c (n "lpc8xx-hal") (v "0.6.1") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "termion") (r "^1.5.3") (d #t) (k 1)) (d (n "void") (r "^1.0.2") (k 0)))) (h "061zcnrri3mm4ck5h1ij7rxpjmf15vjfccvkv4y8bdlwyi5jjxmc") (f (quote (("rt-selected") ("default" "845-rt") ("compiletest" "compiletest_rs") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac"))))))

(define-public crate-lpc8xx-hal-0.7.0 (c (n "lpc8xx-hal") (v "0.7.0") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "termion") (r "^1.5.3") (o #t) (d #t) (k 1)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1wzjf6x060zpyzn7krpcxl9dq9mdbxf5gc1157jvwfzjacln2qn3") (f (quote (("rt-selected") ("no-target-warning") ("compiletest" "compiletest_rs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

(define-public crate-lpc8xx-hal-0.7.1 (c (n "lpc8xx-hal") (v "0.7.1") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)) (d (n "termion") (r "^1.5.3") (o #t) (d #t) (k 1)) (d (n "void") (r "^1.0.2") (k 0)))) (h "04awyd600i86x6a2yi10grp3w3zgirs53n6yl0gglnqysvxn73si") (f (quote (("rt-selected") ("no-target-warning") ("compiletest" "compiletest_rs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

(define-public crate-lpc8xx-hal-0.8.0 (c (n "lpc8xx-hal") (v "0.8.0") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.2.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "termion") (r "^1.5.3") (o #t) (d #t) (k 1)) (d (n "void") (r "^1.0.2") (k 0)))) (h "0wcw47ccvncj0gqf4pc21f1ja8az3pzvj620jp5vjyfayqlsizgs") (f (quote (("rt-selected") ("no-target-warning") ("compiletest" "compiletest_rs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

(define-public crate-lpc8xx-hal-0.8.1 (c (n "lpc8xx-hal") (v "0.8.1") (d (list (d (n "compiletest_rs") (r "^0.3.23") (o #t) (d #t) (k 0)) (d (n "cortex-m") (r "^0.6.1") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.3") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.2.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "termion") (r "^1.5.3") (o #t) (d #t) (k 1)) (d (n "void") (r "^1.0.2") (k 0)))) (h "180ywcdq939saq5ngcsmlsbsnxg5gqwnawnvzmryqrqbibl9vvj0") (f (quote (("rt-selected") ("no-target-warning") ("docs") ("compiletest" "compiletest_rs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

(define-public crate-lpc8xx-hal-0.8.2 (c (n "lpc8xx-hal") (v "0.8.2") (d (list (d (n "cortex-m") (r "^0.6.3") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.13") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.5.5") (d #t) (k 2)) (d (n "crossterm") (r "^0.17.7") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.2.2") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.35") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1050iwrcplxlrkp76y5k43jbcv8jrg4ifkh5grqksjx8qw6hw436") (f (quote (("rt-selected") ("no-target-warning") ("docs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

(define-public crate-lpc8xx-hal-0.9.0 (c (n "lpc8xx-hal") (v "0.9.0") (d (list (d (n "cortex-m") (r "^0.6.4") (d #t) (k 0)) (d (n "cortex-m-rt") (r "^0.6.13") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "=0.6.0-alpha.0") (d #t) (k 2)) (d (n "crossterm") (r "^0.19.0") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-alpha") (r "=1.0.0-alpha.4") (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-time") (r "^0.10.1") (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.3.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.35") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "17sf604z9qcphzd1r3f9d6yhvzrybdss5x1abispj86093c9mp87") (f (quote (("rt-selected") ("no-target-warning") ("docs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

(define-public crate-lpc8xx-hal-0.10.0 (c (n "lpc8xx-hal") (v "0.10.0") (d (list (d (n "cortex-m") (r "^0.7.2") (d #t) (k 0)) (d (n "cortex-m-rt") (r ">=0.6.15, <0.8") (o #t) (d #t) (k 0)) (d (n "cortex-m-rtic") (r "^0.6.0-rc.2") (d #t) (k 2)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2.4") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-alpha") (r "=1.0.0-alpha.6") (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-time") (r "^0.12.0") (d #t) (k 0)) (d (n "lpc82x-pac") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "lpc845-pac") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (k 0)) (d (n "panic-rtt-target") (r "^0.1.1") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "rtt-target") (r "^0.3.0") (f (quote ("cortex-m"))) (d #t) (k 2)) (d (n "trybuild") (r "^1.0.35") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0.2") (k 0)))) (h "1bdmyaa2wbh6c180casmpymz5i6bv51dzysn0fqnr0cp4q0vkbm1") (f (quote (("rt-selected") ("no-target-warning") ("docs") ("845m301jhi48" "845" "48") ("845m301jhi33" "845" "33") ("845m301jbd64" "845" "64") ("845m301jbd48" "845" "48") ("845-rt" "845" "cortex-m-rt" "lpc845-pac/rt" "rt-selected") ("845" "lpc845-pac") ("82x-rt" "82x" "cortex-m-rt" "lpc82x-pac/rt" "rt-selected") ("82x" "lpc82x-pac") ("824m201jhi33" "824" "33") ("824m201jdh20" "824" "20") ("824" "82x") ("822m101jhi33" "822" "33") ("822m101jdh20" "822" "20") ("822" "82x") ("64") ("48") ("33") ("20"))))))

