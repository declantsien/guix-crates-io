(define-module (crates-io hm #{11}# hm11) #:use-module (crates-io))

(define-public crate-hm11-0.1.0 (c (n "hm11") (v "0.1.0") (d (list (d (n "cortex-m") (r "^0.5.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "heapless") (r "^0.4.0") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.3.1") (f (quote ("rt" "stm32l4x2"))) (d #t) (k 2)))) (h "14x6zsivcgqs5k7y0azvwx0jxqb5i1jyzzj3w76znnx1pixl2hkd")))

(define-public crate-hm11-0.2.0 (c (n "hm11") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.5.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "heapless") (r "^0.4.0") (f (quote ("const-fn"))) (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.3.1") (f (quote ("rt" "stm32l4x2"))) (d #t) (k 2)))) (h "0g5589xkcxrak1dfmls4jwzk8gwasjjrvbihqfw0q1xwamni4fb2")))

(define-public crate-hm11-0.2.1 (c (n "hm11") (v "0.2.1") (d (list (d (n "cortex-m") (r "^0.5.7") (d #t) (k 2)) (d (n "cortex-m-rt") (r "^0.6.5") (d #t) (k 2)) (d (n "cortex-m-semihosting") (r "^0.3.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "heapless") (r "^0.4.1") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 0)) (d (n "nb") (r "^0.1.1") (d #t) (k 2)) (d (n "panic-semihosting") (r "^0.5.0") (d #t) (k 2)) (d (n "stm32l4xx-hal") (r "^0.3.3") (f (quote ("rt" "stm32l4x2"))) (d #t) (k 2)))) (h "1gqvrxhs2hdzdpsnc56vl4fa3an08bdbxnbvqlanxkxpzj1bdaxz") (f (quote (("const-fn" "heapless/const-fn"))))))

