(define-module (crates-io sy nd synd-o11y) #:use-module (crates-io))

(define-public crate-synd-o11y-0.1.1 (c (n "synd-o11y") (v "0.1.1") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14.0") (f (quote ("trace" "metrics" "logs" "grpc-tonic"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.2") (f (quote ("logs" "rt-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("smallvec" "fmt" "ansi" "std" "env-filter" "time"))) (k 0)))) (h "07jw2f2dkk34jl0q2b8gcrjp5zpflqjswari8xd9ib52kjpr0y7y")))

(define-public crate-synd-o11y-0.1.2 (c (n "synd-o11y") (v "0.1.2") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14.0") (f (quote ("trace" "metrics" "logs" "grpc-tonic"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.2") (f (quote ("logs" "rt-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("smallvec" "fmt" "ansi" "std" "env-filter" "time"))) (k 0)))) (h "1za702rb4xl0pcgx1akfwgpygzmdsh22a0qz7685gz7c5dqsd566")))

(define-public crate-synd-o11y-0.1.3 (c (n "synd-o11y") (v "0.1.3") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (k 0)) (d (n "opentelemetry-http") (r "^0.10.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14.0") (f (quote ("trace" "metrics" "logs" "grpc-tonic"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21.2") (f (quote ("logs" "rt-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("smallvec" "fmt" "ansi" "std" "env-filter" "time"))) (k 0)))) (h "11gkxi0jmd412kiw0x0hn53vfxxk27s7p7ygs555cjcjvb6mvcfs")))

(define-public crate-synd-o11y-0.1.4 (c (n "synd-o11y") (v "0.1.4") (d (list (d (n "axum") (r "^0.7.4") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (k 0)) (d (n "opentelemetry-http") (r "^0.11.0") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "metrics" "logs" "grpc-tonic"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "rt-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("smallvec" "fmt" "ansi" "std" "env-filter" "time"))) (k 0)))) (h "109hscqjny0yaljjcf2mkpa1i46pwff3an6i0fd417byqfxl23yr")))

(define-public crate-synd-o11y-0.1.5 (c (n "synd-o11y") (v "0.1.5") (d (list (d (n "axum") (r "^0.7.5") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (k 0)) (d (n "opentelemetry-http") (r "^0.11.1") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "metrics" "logs" "grpc-tonic"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3.0") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "rt-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("smallvec" "fmt" "ansi" "std" "env-filter" "time"))) (k 0)))) (h "1bgjfmnaippgzmqwzzgpvzb2lxm4jpi0kb9kilrc1rg3lhn14ixx") (s 2) (e (quote (("opentelemetry-stdout" "dep:opentelemetry-stdout" "dep:serde_json"))))))

(define-public crate-synd-o11y-0.1.6 (c (n "synd-o11y") (v "0.1.6") (d (list (d (n "axum") (r "^0.7.5") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (d #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.3.0") (k 0)) (d (n "opentelemetry-http") (r "^0.11.1") (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.15.0") (f (quote ("trace" "metrics" "logs" "grpc-tonic"))) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.3.0") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.22.1") (f (quote ("logs" "rt-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("smallvec" "fmt" "ansi" "std" "env-filter" "time"))) (k 0)))) (h "16g8rnl9rdanm177n95adzi85zp9id093fmhya4pnf37vl1sv4fk") (s 2) (e (quote (("opentelemetry-stdout" "dep:opentelemetry-stdout" "dep:serde_json"))))))

