(define-module (crates-io sy nd synd-feed) #:use-module (crates-io))

(define-public crate-synd-feed-0.1.1 (c (n "synd-feed") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "feed-rs") (r "^1.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "11gynv1nfl5dwszj587zga7qrnbqvcrhzjfqh66lk4wpigsf0msi")))

(define-public crate-synd-feed-0.1.2 (c (n "synd-feed") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "feed-rs") (r "^1.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "01rx0hpzjrqs818jl2fj8qgrpybp8rjczxvzf8kyxdqy9n8p7am6")))

(define-public crate-synd-feed-0.1.3 (c (n "synd-feed") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "feed-rs") (r "^1.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "0jm91hz3hr5aamyr5ygnqb74vb0kykbbxnxysr4dqvnlgw4a3f7r")))

(define-public crate-synd-feed-0.1.4 (c (n "synd-feed") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "feed-rs") (r "^1.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "1yck089xa8c3mjc4ivw77gqrp217wx4aj2b8sjk08z4bvx69y4sc")))

(define-public crate-synd-feed-0.1.5 (c (n "synd-feed") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "feed-rs") (r "^1.4") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "07dz51swfb2zb93nl4jps62qgymd052cc10rh8phhq5ybxnwx3h5")))

(define-public crate-synd-feed-0.2.0 (c (n "synd-feed") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "async-graphql") (r "^7.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.79") (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "feed-rs") (r "^1.4") (k 0)) (d (n "futures-util") (r "^0.3.30") (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)))) (h "153rk1p1i513bm9xf0phwsyvc35nkk28k4js5iz5wg0j1x2959gg") (s 2) (e (quote (("graphql" "dep:async-graphql"))))))

(define-public crate-synd-feed-0.3.0 (c (n "synd-feed") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "async-graphql") (r "^7.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.79") (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "feed-rs") (r "^1.4") (k 0)) (d (n "futures-util") (r "^0.3.30") (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "synd-o11y") (r "^0.1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "175p6z0hjalmykzlays76dnhmswpa5bdnlmmsx94y65mqll5sc42") (s 2) (e (quote (("graphql" "dep:async-graphql"))))))

(define-public crate-synd-feed-0.3.1 (c (n "synd-feed") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "async-graphql") (r "^7.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.79") (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "feed-rs") (r "^1.4") (k 0)) (d (n "futures-util") (r "^0.3.30") (k 0)) (d (n "moka") (r "^0.12.4") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "synd-o11y") (r "^0.1.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "1ag6m6zrq2y1vzz0868dbn0y0039affg2rfb8h7sd9dmsfvlxc8z") (s 2) (e (quote (("graphql" "dep:async-graphql"))))))

(define-public crate-synd-feed-0.3.2 (c (n "synd-feed") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (f (quote ("std"))) (k 0)) (d (n "async-graphql") (r "^7.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.79") (k 0)) (d (n "chrono") (r "^0.4.31") (k 0)) (d (n "feed-rs") (r "^1.4") (k 0)) (d (n "futures-util") (r "^0.3.30") (k 0)) (d (n "moka") (r "^0.12.7") (f (quote ("future" "future"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("rustls-tls" "json" "stream"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "synd-o11y") (r "^0.1.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rsj1lss7x4vccckyvvxzxrkzp9ngxrgkzy6n9hd0gvc98cfx9hv") (s 2) (e (quote (("graphql" "dep:async-graphql"))))))

