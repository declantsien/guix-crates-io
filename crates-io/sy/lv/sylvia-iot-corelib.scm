(define-module (crates-io sy lv sylvia-iot-corelib) #:use-module (crates-io))

(define-public crate-sylvia-iot-corelib-0.0.1 (c (n "sylvia-iot-corelib") (v "0.0.1") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1gzpf6sfc0dikbg4lnd54m142syysbd6ssv619fgfrk4np541a53")))

(define-public crate-sylvia-iot-corelib-0.0.2 (c (n "sylvia-iot-corelib") (v "0.0.2") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.1.8") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "02rv02yav666f7r207b58ij62slz4crpwpv46p16vq59zsmgbwb6")))

(define-public crate-sylvia-iot-corelib-0.0.3 (c (n "sylvia-iot-corelib") (v "0.0.3") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.1.9") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.156") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "03z5xqcy5jfbmlzwmvv4bacjpvqbvn7zr3wq52gsg67xpxj534j3")))

(define-public crate-sylvia-iot-corelib-0.0.4 (c (n "sylvia-iot-corelib") (v "0.0.4") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.1.13") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "00aq7v3mwqk20xcgq84xgyzrvk7d9wf4cr96sk6fd0c6z4kkbvkp")))

(define-public crate-sylvia-iot-corelib-0.0.5 (c (n "sylvia-iot-corelib") (v "0.0.5") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.1.13") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0m60mmkccc5p1lnzyq5h0y2yiljrwn8p5dkz4dkbg6959411fgsg")))

(define-public crate-sylvia-iot-corelib-0.0.6 (c (n "sylvia-iot-corelib") (v "0.0.6") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1b2y4r11ka4d7n572r297fzbbj8m2hs2mrn6nc7nml86lyhnmi2d")))

(define-public crate-sylvia-iot-corelib-0.0.7 (c (n "sylvia-iot-corelib") (v "0.0.7") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.2.4") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "03qn9qjwqj42xy0c0kclcmnvcrbvbww6mhcdfnfyfcg1fvwcwf1y")))

(define-public crate-sylvia-iot-corelib-0.0.8 (c (n "sylvia-iot-corelib") (v "0.0.8") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.2.5") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1vhwihilgvvkfxyqjjk6353cqsh1zczpsylg7jasc6l7p6jj3ygl")))

(define-public crate-sylvia-iot-corelib-0.0.9 (c (n "sylvia-iot-corelib") (v "0.0.9") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1fji7avg5mbhr7hzx588n5dp3hh4sv37pywdd9pfqydjzgzka71g")))

(define-public crate-sylvia-iot-corelib-0.0.10 (c (n "sylvia-iot-corelib") (v "0.0.10") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "00bbr4x47xpzvccbkmq1xzp4ndgw14yis1gispv5rv00836vny92")))

(define-public crate-sylvia-iot-corelib-0.0.11 (c (n "sylvia-iot-corelib") (v "0.0.11") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.2.7") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0nn1x55f1r3bbjxc8nlda8znwhnhaldw1g6760pn7hdszjpjib2g")))

(define-public crate-sylvia-iot-corelib-0.0.12 (c (n "sylvia-iot-corelib") (v "0.0.12") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0j4md550wi28w3y2p2q9mihpjbgabmmhbixj9g1h7gv0jywg22cw")))

(define-public crate-sylvia-iot-corelib-0.0.13 (c (n "sylvia-iot-corelib") (v "0.0.13") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.0") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "15aqdb00r5fxh54zr61zx1d91b1vw6hp1sagw8p1yyipjj5igjrc")))

(define-public crate-sylvia-iot-corelib-0.0.14 (c (n "sylvia-iot-corelib") (v "0.0.14") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.1") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1ssqryh07qh3bipichvwf1jmgwwp7vjs1laqn3ivg3lwjnngy5f9")))

(define-public crate-sylvia-iot-corelib-0.0.15 (c (n "sylvia-iot-corelib") (v "0.0.15") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.10") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0gk217gdbsrz2r1x39ywryzkh1jplcnmc1yi2b9y6mg8nsnadjc2")))

(define-public crate-sylvia-iot-corelib-0.0.16 (c (n "sylvia-iot-corelib") (v "0.0.16") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.11") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.167") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0h4m0y43bvbn938m30082rk2g58xif9mvzz0qpnqywhdp7a60p4s")))

(define-public crate-sylvia-iot-corelib-0.0.17 (c (n "sylvia-iot-corelib") (v "0.0.17") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.11") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.102") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0qdmzshfkys6j0pn9kp5jnpj65l9fghv6wgw3m597qi8f2d2242f")))

(define-public crate-sylvia-iot-corelib-0.0.18 (c (n "sylvia-iot-corelib") (v "0.0.18") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.17") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0ys593j36da0l8wskp9x6ha4xgklzmjcajbqiilri486h96las83")))

(define-public crate-sylvia-iot-corelib-0.0.19 (c (n "sylvia-iot-corelib") (v "0.0.19") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1vp7dipi2ix363babmla35p48rpx3w3hhj902z0ryblfh15pxlpa")))

(define-public crate-sylvia-iot-corelib-0.0.20 (c (n "sylvia-iot-corelib") (v "0.0.20") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.177") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "15wr4d29093y0fkcv99nl6gg02am6fc0fw7s2mszw335g3qpdwls")))

(define-public crate-sylvia-iot-corelib-0.0.21 (c (n "sylvia-iot-corelib") (v "0.0.21") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "07jjvvbyxhfr22k8jlhgbpf7c8s3py9121h6bdd97j3app4zibh2") (y #t)))

(define-public crate-sylvia-iot-corelib-0.0.22 (c (n "sylvia-iot-corelib") (v "0.0.22") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.181") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1z9airxklm2kk77qv6h2816f84cwi9jrd19246i2iqwmsdmhmfpi")))

(define-public crate-sylvia-iot-corelib-0.0.23 (c (n "sylvia-iot-corelib") (v "0.0.23") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0xsx48cb7xhd17jfxfa0l4i7rn327808943i2rfrlla2nnsrf7qf")))

(define-public crate-sylvia-iot-corelib-0.0.24 (c (n "sylvia-iot-corelib") (v "0.0.24") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.21") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1k3rrq91f4m2msjg7p90ia7wsdb2hvjwbwvgrnr1z7fxm1vxcgbq")))

(define-public crate-sylvia-iot-corelib-0.0.25 (c (n "sylvia-iot-corelib") (v "0.0.25") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.22") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "15mq9v22rmpf3za70f0y7ya66hyzblc8xg4bi3qnpq9v9md43k64")))

(define-public crate-sylvia-iot-corelib-0.0.26 (c (n "sylvia-iot-corelib") (v "0.0.26") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0r89j20ya89ij4ygqdw5jf45wbdna3k9bvzg6g9pz0zgxp8jbzw5")))

(define-public crate-sylvia-iot-corelib-0.0.27 (c (n "sylvia-iot-corelib") (v "0.0.27") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1l4ahfgppcwmvxirclkm259662jcgkzpvgdlpginmn7j1pnl6lw2")))

(define-public crate-sylvia-iot-corelib-0.0.28 (c (n "sylvia-iot-corelib") (v "0.0.28") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.3.23") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "08z5m2c80rx34kh13fq2sfl363dpkfrpv5fprif6cr429dm355a5")))

(define-public crate-sylvia-iot-corelib-0.0.29 (c (n "sylvia-iot-corelib") (v "0.0.29") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.186") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "14mjajiyaxbxssph3j7zxdj6mfw8j7ag59f9vv41rdis7z6cykl8") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.30 (c (n "sylvia-iot-corelib") (v "0.0.30") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.187") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0720cvdgcnh32859q2sxp7zm5nfv6d9hi93i4n1yy1q1gymm31iy") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.31 (c (n "sylvia-iot-corelib") (v "0.0.31") (d (list (d (n "actix-web") (r "^4.3.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.0") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0zaybnfll1q3si99zxr7jfa06f3xd46sd8gmk4i36waxx5258nyv") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.32 (c (n "sylvia-iot-corelib") (v "0.0.32") (d (list (d (n "actix-web") (r "^4.4.0") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "0sk013ng8pfry8lrjn71raf6kgy6n6mcsywxqy3kssps208j05dj") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.33 (c (n "sylvia-iot-corelib") (v "0.0.33") (d (list (d (n "actix-web") (r "^4.4.0") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "1hxhn5hd2xm7bj4y72p3m8pnsqgkg85qanh06y6py6l8f9bqyrfv") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.34 (c (n "sylvia-iot-corelib") (v "0.0.34") (d (list (d (n "actix-web") (r "^4.4.0") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.6") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 0)))) (h "0226sl5s0mvbfca06xb7y0bihakz9r3kmbjn22g0hq1249dz3q7y") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.35 (c (n "sylvia-iot-corelib") (v "0.0.35") (d (list (d (n "actix-web") (r "^4.4.0") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.2.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0dd70qka09nsw4zh1qg4926mdfwkikr1apdyfzcfqmzxlijfsd44") (r "1.70")))

(define-public crate-sylvia-iot-corelib-0.0.36 (c (n "sylvia-iot-corelib") (v "0.0.36") (d (list (d (n "actix-web") (r "^4.5.1") (f (quote ("rustls"))) (k 0)) (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.5.0") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log4rs") (r "^1.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "00n9avxv1d0mzhj4lmd8mwqax7nr44mmvyskvycpa4p8in7y1czm") (r "1.75")))

(define-public crate-sylvia-iot-corelib-0.1.0 (c (n "sylvia-iot-corelib") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.83") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (d #t) (k 0)) (d (n "axum-test") (r "^14.9.1") (d #t) (k 2)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "log4rs") (r "^1.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0bq46zlafzffkkxp19bvz2mxa5x0vxajxx06sanhjvj8jhyahdi8") (r "1.75")))

(define-public crate-sylvia-iot-corelib-0.1.1 (c (n "sylvia-iot-corelib") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.85") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (d #t) (k 0)) (d (n "axum-test") (r "^14.9.1") (d #t) (k 2)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "log4rs") (r "^1.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "072dxmvxsc29rwlykvndkz9iplmsqd94fz0bnyh78m45fzarsyrm") (r "1.75")))

(define-public crate-sylvia-iot-corelib-0.1.2 (c (n "sylvia-iot-corelib") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (d #t) (k 0)) (d (n "axum-test") (r "^14.9.1") (d #t) (k 2)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "log4rs") (r "^1.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "1bijgq0isw5bqpzdnp4a1k9z52lx15d214pjn9vg6qqsvlhqgnag") (r "1.75")))

(define-public crate-sylvia-iot-corelib-0.1.3 (c (n "sylvia-iot-corelib") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "axum") (r "^0.7.5") (d #t) (k 0)) (d (n "axum-test") (r "^14.9.1") (d #t) (k 2)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("serde"))) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("std" "help" "usage" "error-context"))) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "laboratory") (r "^2.0.0") (d #t) (k 2)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "log4rs") (r "^1.3.0") (d #t) (k 0)) (d (n "pbkdf2") (r "^0.12.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.203") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0xy6zl43jykkvcjwkbh66787nqi49wc9706vy7cfncfp6y94bpc2") (r "1.75")))

