(define-module (crates-io sy lv sylvia) #:use-module (crates-io))

(define-public crate-sylvia-0.1.0 (c (n "sylvia") (v "0.1.0") (h "0y68s0fc1c0m49d9gp3sc6r9w0vavdz5l5s88j5c9s41drrnl9mv")))

(define-public crate-sylvia-0.1.1 (c (n "sylvia") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^1") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^0.13.2") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.1") (d #t) (k 0)))) (h "01xgfjk1dkaz1d065898yhmsp7x2sfgzc5kwqbblr2f4wj09h2sm")))

(define-public crate-sylvia-0.1.2 (c (n "sylvia") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "cosmwasm-std") (r "^1") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^0.13.2") (d #t) (k 2)) (d (n "schemars") (r "^0.8.10") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.1") (d #t) (k 0)))) (h "1859q9xd1yf633wdbfc7300mmwmgyqp5m7wc4maw8xc3f7jfib8b")))

(define-public crate-sylvia-0.2.1 (c (n "sylvia") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.1") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.15.1") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^0.15.1") (d #t) (k 2)) (d (n "konst") (r "^0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.2.1") (d #t) (k 0)))) (h "0qrd9qb6qxylk0aka6d3mhkp1bcib84r9z4r3fhncf1cn04klclv")))

(define-public crate-sylvia-0.2.2 (c (n "sylvia") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.1") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.1") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.2.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 2)))) (h "0h7wb064ja7cq1hsqvdxyfs13h1fqmsqg2hs4gg8i0rcw9613qqc")))

(define-public crate-sylvia-0.3.0 (c (n "sylvia") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "119vhxjq9y55higfy3z847sv867jpqdcs6h8kg4xp4fzj0k7d345") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test"))))))

(define-public crate-sylvia-0.3.1 (c (n "sylvia") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "1cc0s8kcb5zabz0k18dx43l2npkhgr8g2qzgcy5i9419vlwl4laq") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test"))))))

(define-public crate-sylvia-0.3.2 (c (n "sylvia") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "109ivf8p3m453wk2m93aqzrmbz6p45px3rgf37p2p1awr9d1lcjf") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.4.0 (c (n "sylvia") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "00lpbdwg8d8f19646j5rfrdw1bakvylf0r7r0hjq3iqr3yzqzswq") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.4.1 (c (n "sylvia") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.4.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "180gkzii9bxhrlkir2cyawrnb4bwdbmzmi6j0dlhabxqbhzm46v7") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.4.2 (c (n "sylvia") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "1kk13qzcy9j2x5lwm5njxamqzcb9cqzzlvv8x8qpkwwqyrhcqgv5") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.5.0 (c (n "sylvia") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.2") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0yac871gp4cc8q7dwdnj65724xlrl2yy6m8l5is7d2mw76p0mz36") (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.6.0 (c (n "sylvia") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0q6l54qwnwrqscxx35df28yvk3xsx7pnl5rs9a2w9wq7i2vq2vzz") (y #t) (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.6.1 (c (n "sylvia") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "1hdlbq2d2wklvnhgq5qgrlakh8r68693gr2mnwfl5yc15k9nci14") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.7.0 (c (n "sylvia") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0n288b3kh0cpbzmjqh2hbahsghg0di3fdvis0zyvgak9r3fgm4nh") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.7.1 (c (n "sylvia") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0lfg4qmznvq80gn58ad9yxcbn7ln264g2a7hai8ya039yh2xan7k") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.8.0 (c (n "sylvia") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.3") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0w6hrpdjng5g6nxid1b1kadzjvddn0rpncx0dchk59k6ig090vws") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.8.1 (c (n "sylvia") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.3") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0018n4xcd9xy6i85g5q5fl1ccwdhxd0bpww7p3d99d2r0s98hczk") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.9.0 (c (n "sylvia") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.3") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.16.5") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^0.5.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "1xfk0jnvqly45faa42fzvhf65hfd8kh2z56mqrsiwgdp1abbgg09") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.9.1 (c (n "sylvia") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.5") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.18.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.18") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.0.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.9.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)))) (h "0j0bn0g050llx025gkz8arwq0yq42hwd8vsmfq623hy31f88z91h") (s 2) (e (quote (("stargate" "cosmwasm-std/stargate" "cw-multi-test?/stargate") ("staking" "cosmwasm-std/staking" "cw-multi-test?/staking") ("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative"))))))

(define-public crate-sylvia-0.9.2 (c (n "sylvia") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.5") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.19.0") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 2)) (d (n "cw-utils") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.2") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.9.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 2)))) (h "1fjlm1hblqgj5nxk04wnk4knq5nla30wi0jf3jpdyc004gmpivzs") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_4" "dep:cw-multi-test" "cosmwasm-std/cosmwasm_1_4" "cw-multi-test?/cosmwasm_1_4") ("cosmwasm_1_3" "dep:cw-multi-test" "cosmwasm-std/cosmwasm_1_3" "cw-multi-test?/cosmwasm_1_3") ("cosmwasm_1_2" "dep:cw-multi-test" "cosmwasm-std/cosmwasm_1_2" "cw-multi-test?/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2") ("cosmwasm_1_1" "dep:cw-multi-test" "cosmwasm-std/cosmwasm_1_1" "cw-multi-test?/cosmwasm_1_1"))))))

(define-public crate-sylvia-0.9.3 (c (n "sylvia") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.5") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.20.0") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 2)) (d (n "cw-utils") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.2") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.9.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 2)))) (h "1m3rz9iw2r1di1n3zk4ba723pqv92q190gfryzrnpzg6vph4x7d9") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_4" "cosmwasm-std/cosmwasm_1_4" "cw-multi-test?/cosmwasm_1_4") ("cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_3" "cw-multi-test?/cosmwasm_1_3") ("cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_2" "cw-multi-test?/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cw-multi-test?/cosmwasm_1_1"))))))

(define-public crate-sylvia-0.10.0 (c (n "sylvia") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.5") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.20.0") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 2)) (d (n "cw-utils") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.2") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.10.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 2)))) (h "1f4rgplb7lx2siyr1sg4inyl4rhfczr32awf9pkcjv7f8n0lbiiz") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_4" "cosmwasm-std/cosmwasm_1_4" "cw-multi-test?/cosmwasm_1_4" "cosmwasm_1_3") ("cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_3" "cw-multi-test?/cosmwasm_1_3" "cosmwasm_1_2") ("cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_2" "cw-multi-test?/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2" "cosmwasm_1_1") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cw-multi-test?/cosmwasm_1_1"))))))

(define-public crate-sylvia-0.10.1 (c (n "sylvia") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^1.5") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^1.5") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^0.20.0") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^1.2.0") (d #t) (k 2)) (d (n "cw-utils") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^1.0.2") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.0") (d #t) (k 0)) (d (n "sylvia-derive") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 2)))) (h "15y4fyq3kxp9d6ygfzys6i3m7c89jg0yxv6vbdg07v154n4qwk76") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_4" "cosmwasm-std/cosmwasm_1_4" "cw-multi-test?/cosmwasm_1_4" "cosmwasm_1_3") ("cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_3" "cw-multi-test?/cosmwasm_1_3" "cosmwasm_1_2") ("cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_2" "cw-multi-test?/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2" "cosmwasm_1_1") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1" "cw-multi-test?/cosmwasm_1_1"))))))

(define-public crate-sylvia-1.0.0 (c (n "sylvia") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^2.0.0") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^2.0.0") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^2.0.0") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^2.0.0") (d #t) (k 2)) (d (n "cw-utils") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^2.0.0") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.1") (d #t) (k 0)) (d (n "sylvia-derive") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 2)))) (h "07168sr117dp5qaq5dlh7ini9ap3rxa2zbz663i1i2h6hkmg3viz") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator") ("cosmwasm_2_0" "cosmwasm-std/cosmwasm_2_0" "cosmwasm_1_4") ("cosmwasm_1_4" "cosmwasm-std/cosmwasm_1_4" "cosmwasm_1_3") ("cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_3" "cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2" "cosmwasm_1_1"))))))

(define-public crate-sylvia-1.0.1 (c (n "sylvia") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.81") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^2.0.0") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^2.0.0") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^2.0.0") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^2.0.0") (d #t) (k 2)) (d (n "cw-utils") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^2.0.0") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.1") (d #t) (k 0)) (d (n "sylvia-derive") (r "^1.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.91") (d #t) (k 2)))) (h "112yssm6h78ad4m2v1vh38ci4rpsfhb11jvvifv10z74wja084l2") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator") ("cosmwasm_2_0" "cosmwasm-std/cosmwasm_2_0" "cosmwasm_1_4") ("cosmwasm_1_4" "cosmwasm-std/cosmwasm_1_4" "cosmwasm_1_3") ("cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_3" "cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2" "cosmwasm_1_1"))))))

(define-public crate-sylvia-1.0.2 (c (n "sylvia") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.82") (d #t) (k 2)) (d (n "cosmwasm-schema") (r "^2.0.2") (d #t) (k 0)) (d (n "cosmwasm-std") (r "^2.0.2") (f (quote ("staking"))) (d #t) (k 0)) (d (n "cw-multi-test") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "cw-multi-test") (r "^2.0.1") (d #t) (k 2)) (d (n "cw-storage-plus") (r "^2.0.0") (d #t) (k 2)) (d (n "cw-utils") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "cw-utils") (r "^2.0.0") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (o #t) (d #t) (k 0)) (d (n "konst") (r "^0.3.8") (d #t) (k 0)) (d (n "schemars") (r "^0.8.16") (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (k 0)) (d (n "serde-cw-value") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-json-wasm") (r "^1.0.1") (d #t) (k 0)) (d (n "sylvia-derive") (r "^1.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 2)) (d (n "trybuild") (r "^1.0.91") (d #t) (k 2)))) (h "1bvfgvm30b2jjm2qjnnkxipyzwcnq7x1z518rmnxk3lzil4cxd7i") (f (quote (("stargate" "cosmwasm-std/stargate") ("iterator" "cosmwasm-std/iterator") ("cosmwasm_2_0" "cosmwasm-std/cosmwasm_2_0" "cosmwasm_1_4") ("cosmwasm_1_4" "cosmwasm-std/cosmwasm_1_4" "cosmwasm_1_3") ("cosmwasm_1_3" "cosmwasm-std/cosmwasm_1_3" "cosmwasm_1_2") ("cosmwasm_1_1" "cosmwasm-std/cosmwasm_1_1")))) (s 2) (e (quote (("mt" "sylvia-derive/mt" "dep:cw-multi-test" "dep:anyhow" "dep:derivative") ("cosmwasm_1_2" "cosmwasm-std/cosmwasm_1_2" "dep:cw-utils" "sylvia-derive/cosmwasm_1_2" "cosmwasm_1_1"))))))

