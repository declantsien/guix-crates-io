(define-module (crates-io sy mb symbolic-minidump) #:use-module (crates-io))

(define-public crate-symbolic-minidump-1.1.5 (c (n "symbolic-minidump") (v "1.1.5") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^1.1.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^1.1.5") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std"))) (d #t) (k 0)))) (h "10bxf042ivj0qhq1w480si4039im3x0bxf23zkdd5fwidlypl764")))

(define-public crate-symbolic-minidump-2.0.0 (c (n "symbolic-minidump") (v "2.0.0") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.0") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std"))) (d #t) (k 0)))) (h "18adsjrfgcjp3ldbfdsnr44dg341gkmh8qy9ghkcdcyx8l660wxk")))

(define-public crate-symbolic-minidump-2.0.1 (c (n "symbolic-minidump") (v "2.0.1") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std"))) (d #t) (k 0)))) (h "0qn6h34i9a3l1xyqxrhic1w5l74vqgk715rk5r9vzmqzlx48v8rh")))

(define-public crate-symbolic-minidump-2.0.2 (c (n "symbolic-minidump") (v "2.0.2") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.2") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std"))) (d #t) (k 0)))) (h "1lbibnfq9i2lx0f9hrmvr1qmhpxqkc46kvmmq88vjdw20dbpa1m8")))

(define-public crate-symbolic-minidump-2.0.3 (c (n "symbolic-minidump") (v "2.0.3") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std"))) (d #t) (k 0)))) (h "1j5g96a1xlnnqigv9ahs9rwijcly59c93caklz6vrjc1zmmyifr2")))

(define-public crate-symbolic-minidump-2.0.4 (c (n "symbolic-minidump") (v "2.0.4") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.5") (f (quote ("use_std"))) (d #t) (k 0)))) (h "1lnxdx4ggy1rz10vbvzj0j52qqrbirfhch1xh5wzppdw2d4bjw76")))

(define-public crate-symbolic-minidump-2.0.5 (c (n "symbolic-minidump") (v "2.0.5") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.5") (d #t) (k 0)))) (h "10mzdlyrcaszgdprag9vxsbz2raagg2dd0ay956ayidkmbbq3xrx")))

(define-public crate-symbolic-minidump-2.0.6 (c (n "symbolic-minidump") (v "2.0.6") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.6") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.6") (d #t) (k 0)))) (h "0aykfh03f1ni41fh82mcpj7cagkdrwd12808gcq32gk2hml1fbwp")))

(define-public crate-symbolic-minidump-2.0.7 (c (n "symbolic-minidump") (v "2.0.7") (d (list (d (n "cc") (r "^1.0") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.7") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^2.0.7") (d #t) (k 0)))) (h "09jrrmfgp0gi3dxqawyl86kavkyjw5mlk9z5zsdcjdqi8yss4qjn")))

(define-public crate-symbolic-minidump-3.0.1 (c (n "symbolic-minidump") (v "3.0.1") (d (list (d (n "cc") (r "^1.0.8") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^3.0.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^3.0.1") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^3.0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.6.1") (d #t) (k 0)))) (h "1iri47splhdhi05qzw153bcf5szmnmirzxpyn1i34gnn2wj9qvrf") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-4.0.0 (c (n "symbolic-minidump") (v "4.0.0") (d (list (d (n "cc") (r "^1.0.8") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^4.0.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^4.0.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^4.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.6.1") (d #t) (k 0)))) (h "0k3ldpa7369mffxz1swhb8jzcy798hcgglbza8xfwrp4hcra3gql") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.0.0 (c (n "symbolic-minidump") (v "5.0.0") (d (list (d (n "cc") (r "^1.0.10") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.0.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.0.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.0.0") (d #t) (k 2)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "0vffqcb8l2w8ydlq5z74bk2w0vij3wgqlr4yfjnvnw3ls8y2cs7g") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.0.1 (c (n "symbolic-minidump") (v "5.0.1") (d (list (d (n "cc") (r "^1.0.10") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.0.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.0.1") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.0.1") (d #t) (k 2)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "0nd8mmkfc8600mw13rqkpg7kd998bllszc1x00q8nl4iz0la78bx") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.0.2 (c (n "symbolic-minidump") (v "5.0.2") (d (list (d (n "cc") (r "^1.0.15") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.0.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.0.2") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "0dhfgqrqvk8lfl81pmc5sa7p5dgc8y2yy1gvllsaqaym3f609fqf") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.1.0 (c (n "symbolic-minidump") (v "5.1.0") (d (list (d (n "cc") (r "^1.0.15") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.1.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.1.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "09rjcfvnl68m4p38fcy1dcn76dapngpbs4hf1l50i802jdr61l32") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.1.1 (c (n "symbolic-minidump") (v "5.1.1") (d (list (d (n "cc") (r "^1.0.15") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.1.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.1.1") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.1.1") (d #t) (k 2)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "15pqn5d7pw9bfknpdh96v5466zklcc983l9i9n8qr0v0yy4psm6j") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.1.2 (c (n "symbolic-minidump") (v "5.1.2") (d (list (d (n "cc") (r "^1.0.15") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "gimli") (r "^0.15.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.1.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.1.2") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.1.2") (d #t) (k 2)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "04ag39f23y04rjyg4jgqpd03k0kki06nwf6cmb1pz1hwrash231f") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.2.0 (c (n "symbolic-minidump") (v "5.2.0") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.2.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.2.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "01psjf9q3iabdrbggdqbkkav6fbirrb5jbhhklbwaf5v31brvbkq") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.3.0 (c (n "symbolic-minidump") (v "5.3.0") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.3.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.3.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.3.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0aycvrvgnqwlwf1aanwqjmcw1m7s9ga2shdg0v4n6nqmyvcfsbpn") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.4.0 (c (n "symbolic-minidump") (v "5.4.0") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.4.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.4.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.4.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0483i55jcb7www074h9qzxpvxr8rlvx94a87a6pjxcf60mxg2ngg") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.0 (c (n "symbolic-minidump") (v "5.5.0") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0lic7zfb3hy6xc04qwbw8zhi4vvsvjj7sc78k3sfqqwrvxr27bql") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.1 (c (n "symbolic-minidump") (v "5.5.1") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.1") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.1") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1xhy0zxabcflyxgy8kq9s83f4slqkkak3w2sasyzbnzfbzh1gh4b") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.2 (c (n "symbolic-minidump") (v "5.5.2") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.2") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.2") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "04wpmiydkk67pdxh3c9zp9rbvjmj2l0klighgbg9ai5bvb50pvf0") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.3 (c (n "symbolic-minidump") (v "5.5.3") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.3") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.3") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "08a5zvzwvp9cawvglr0ff3wvxw4gm0vgky4xkxgxaffhmildivnf") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.4 (c (n "symbolic-minidump") (v "5.5.4") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.4") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.4") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0bybxrxcd8lpspdhsavnd0050k3wh51504045h4x4m8d0bds5x8d") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.5 (c (n "symbolic-minidump") (v "5.5.5") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.5") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.5") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0k247iwf4fq21ypwig6mkdn5a5i85xb95jlk2p6dnxxjdrydgsn4") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.5.6 (c (n "symbolic-minidump") (v "5.5.6") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.6") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.5.6") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.6") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0b4b98qi6yyn858qx6b0bbrp76yqrhacs6837nls9nkxacbwr7kf") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.0 (c (n "symbolic-minidump") (v "5.7.0") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.0") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0fwdk87xczq4w224abq7zksdmxzg708g6fp0a3d3xsci1lz7plrk") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.1 (c (n "symbolic-minidump") (v "5.7.1") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.1") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.1") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1f3m39i13rfvc1bllgwb235blqp0j1ik52mn6grrx9xw0i99z4hn") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.2 (c (n "symbolic-minidump") (v "5.7.2") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.2") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.2") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1r7qd6dhbxx7xapw66n4s650m3xm6p92wy2dhcsy7k2887dvf02z") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.3 (c (n "symbolic-minidump") (v "5.7.3") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.3") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.3") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0ikab7x0qqpgj0frg7z0vs776igcnwfx1rmims01vda9l8xvyygr") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.4 (c (n "symbolic-minidump") (v "5.7.4") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.4") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.4") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1vvr542m3q7lzg949qvg31yzkvb10jsvr8ayrpi1ph6n9xcvbl49") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.5 (c (n "symbolic-minidump") (v "5.7.5") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.5") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.5") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1snxndyslcima2qrhzgvdnmw3n17w775l0008a5fviji2j9qdccd") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.6 (c (n "symbolic-minidump") (v "5.7.6") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.6") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.6") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.6") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "044qdqlb5l262zg5f1gn31r5lkkchji7f8yfd73mid258p5z76ji") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.7 (c (n "symbolic-minidump") (v "5.7.7") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.7") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.7") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.7") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0xmv22qk78fjf7fvgwvci71vp64xn88ln4wzw88ax41z3ffcm4f2") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-5.7.8 (c (n "symbolic-minidump") (v "5.7.8") (d (list (d (n "cc") (r "^1.0.25") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "gimli") (r "^0.16.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.8") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^5.7.8") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.8") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0xm1lhm7drzi5jbn5w662s67fr5dvg4xh8i8bf99nqhzi9b78s1p") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-minidump-6.0.0 (c (n "symbolic-minidump") (v "6.0.0") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.0.0") (d #t) (k 0)))) (h "0i256pk3j4c1syax5fmpjncfbmkyr1qp8s24z0nj6kayx8wqyxw0")))

(define-public crate-symbolic-minidump-6.0.2 (c (n "symbolic-minidump") (v "6.0.2") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.0.2") (d #t) (k 0)))) (h "19zbpi44i1lsszh78jmxg4vpf7rb3dwiijglnrwblfjzd3692pmy") (y #t)))

(define-public crate-symbolic-minidump-6.0.3 (c (n "symbolic-minidump") (v "6.0.3") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.0.3") (d #t) (k 0)))) (h "1a41qp84yxki8yf9f3sypskph3j5waaxjlmdgpgggasbxjf386px")))

(define-public crate-symbolic-minidump-6.0.4 (c (n "symbolic-minidump") (v "6.0.4") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.0.4") (d #t) (k 0)))) (h "1x6nc1xfx61apk0i3nsfjbqy6a3sz79cqlgb0dszy8y40jdwj9z0")))

(define-public crate-symbolic-minidump-6.0.5 (c (n "symbolic-minidump") (v "6.0.5") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.0.5") (d #t) (k 0)))) (h "0kbka3k9a29cv9n8vwg0ffw9i9528hv2dy0kcki8iz51yg6rmnyh")))

(define-public crate-symbolic-minidump-6.0.6 (c (n "symbolic-minidump") (v "6.0.6") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.6") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.0.6") (d #t) (k 0)))) (h "01a9gpw5l8bz4p5zcf5b2f8wl3fv15q8v4v2w1w8mikl3d37zh1f")))

(define-public crate-symbolic-minidump-6.1.0 (c (n "symbolic-minidump") (v "6.1.0") (d (list (d (n "cc") (r "^1.0.31") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.1.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.1.0") (d #t) (k 0)))) (h "1qfwiidcri4wdagaznjk1423jd93bbr8ia0s57nwcan3j09hhk9j")))

(define-public crate-symbolic-minidump-6.1.3 (c (n "symbolic-minidump") (v "6.1.3") (d (list (d (n "cc") (r "^1.0.37") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.1.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.1.3") (d #t) (k 0)))) (h "199iwdzjz2cq58q3kfmrn25abjw26k2668fvk2k7x5csb6ns0jsz")))

(define-public crate-symbolic-minidump-6.1.4 (c (n "symbolic-minidump") (v "6.1.4") (d (list (d (n "cc") (r "^1.0.37") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^6.1.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^6.1.4") (d #t) (k 0)))) (h "1cmwyz7n2kil7fkgj538ffz7yz6dhgqsa9da7ai1d9kqx1av8zy9")))

(define-public crate-symbolic-minidump-7.1.1 (c (n "symbolic-minidump") (v "7.1.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.1.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.1.1") (d #t) (k 0)))) (h "1sjijl3jni3ib5ssjhixmny2ycp0wlr0qkr2cncg46kmg9qrnjn2")))

(define-public crate-symbolic-minidump-7.2.0 (c (n "symbolic-minidump") (v "7.2.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.2.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.2.0") (d #t) (k 0)))) (h "08mi79wih6lq1bi6mssf7222akr6jmk6alxcsrqw441qsg3japxr")))

(define-public crate-symbolic-minidump-7.3.0 (c (n "symbolic-minidump") (v "7.3.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.0") (d #t) (k 0)))) (h "1ivyi6gabr0zh60y9h4ysfnkcs5jfzwnfx7r92b0pjmbznadfq19")))

(define-public crate-symbolic-minidump-7.3.1 (c (n "symbolic-minidump") (v "7.3.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.1") (d #t) (k 0)))) (h "0f7xfr49yf23rmypmja122nvz3d5796z6dzxpzbaza3ligb9whj8")))

(define-public crate-symbolic-minidump-7.3.2 (c (n "symbolic-minidump") (v "7.3.2") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.2") (d #t) (k 0)))) (h "06f2r0sb4kqaq54prr5z965g2gghcrbsaikvg4r5bfjfw933i5hi")))

(define-public crate-symbolic-minidump-7.3.3 (c (n "symbolic-minidump") (v "7.3.3") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.3") (d #t) (k 0)))) (h "1f0q04wfmxi3ns3mqdwsbjvkn912nimkgqph5mmq32jxyy55fnkn")))

(define-public crate-symbolic-minidump-7.3.4 (c (n "symbolic-minidump") (v "7.3.4") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.4") (d #t) (k 0)))) (h "0kxmmfbnr3dqj14db08yqk5hjxr4l8a8waq6darakphxlyhp15ph")))

(define-public crate-symbolic-minidump-7.3.5 (c (n "symbolic-minidump") (v "7.3.5") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.5") (d #t) (k 0)))) (h "1z83ljsib7xxxy992ycv9pigyr7dqdd6kxmqa04mwk3p3vpz6472")))

(define-public crate-symbolic-minidump-7.3.6 (c (n "symbolic-minidump") (v "7.3.6") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.6") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.3.6") (d #t) (k 0)))) (h "042ga7xm1sldn75yp1j6iqxhkilya0snrkx05yjyaivq5pbjyvlm")))

(define-public crate-symbolic-minidump-7.4.0 (c (n "symbolic-minidump") (v "7.4.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.4.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.4.0") (d #t) (k 0)))) (h "0y20cfarqkxg3kd53310xbp333iqhm2mlw0rpfp2iawv426g4v4b")))

(define-public crate-symbolic-minidump-7.5.0 (c (n "symbolic-minidump") (v "7.5.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^7.5.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^7.5.0") (d #t) (k 0)))) (h "1w8mjj0617b6jj69j2dm2wmy4f4df1a81s56pprahp4cgir7dhkr")))

(define-public crate-symbolic-minidump-8.0.0 (c (n "symbolic-minidump") (v "8.0.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0hfrcg2mq2axz5nad2siba562z0amn3b4j829hszq1z8i8wj7nd2")))

(define-public crate-symbolic-minidump-8.0.1 (c (n "symbolic-minidump") (v "8.0.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "08b6abmcgvv3a6zimxckrw7w4f61l31w3pchkqb264w5pz0glaqv")))

(define-public crate-symbolic-minidump-8.0.2 (c (n "symbolic-minidump") (v "8.0.2") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "03qhbh5vrzw7sbmlrv7wpbl5pzqj21c7fia0p2xgqxw51nqvzjm3")))

(define-public crate-symbolic-minidump-8.0.3 (c (n "symbolic-minidump") (v "8.0.3") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "03wl6chq5y1vmpzdiy50fp0mlkjwncr2hzbqy3f9nx5nfkqzzw10")))

(define-public crate-symbolic-minidump-8.0.4 (c (n "symbolic-minidump") (v "8.0.4") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.4") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "074jym89yv12yzch7wxmzq4kvxagpkms8jinbvrdk0x3xsm008sa")))

(define-public crate-symbolic-minidump-8.0.5 (c (n "symbolic-minidump") (v "8.0.5") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.0.5") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1mpa3is3q5a241qhf9hrpxpl34hc5v9vgjq0y8kdrwnikpjnjxg5")))

(define-public crate-symbolic-minidump-8.1.0 (c (n "symbolic-minidump") (v "8.1.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.1.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "1hsnxj506q0k225liv0qdaabibsipld5rhf1fdw6dcapllklpk7p")))

(define-public crate-symbolic-minidump-8.2.0 (c (n "symbolic-minidump") (v "8.2.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.2.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "17j33rv0lazxbzal4bxshnky2xbvckzx5lljbsyfmxjr9ymq0lnr")))

(define-public crate-symbolic-minidump-8.2.1 (c (n "symbolic-minidump") (v "8.2.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.2.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "10wjfmzg8psranxn9x30cghkhqlkjvd01zvslm34n16vkr06znic")))

(define-public crate-symbolic-minidump-8.3.0 (c (n "symbolic-minidump") (v "8.3.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.3.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "1rv9c27w0yy9576745v6bs6jbvrr3fjlrfkh79ghb57nik1yy1w5")))

(define-public crate-symbolic-minidump-8.3.1 (c (n "symbolic-minidump") (v "8.3.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.3.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "0mxk7k5fyyyggav6ffdwkyj2b4gnsh02ciyhnxzgy943cyarm8p1")))

(define-public crate-symbolic-minidump-8.3.2 (c (n "symbolic-minidump") (v "8.3.2") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.3.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "0d402p9sbl3bpz5d1h83pqjm7x9lags1l24n75hf580n9hvxknyi")))

(define-public crate-symbolic-minidump-8.4.0 (c (n "symbolic-minidump") (v "8.4.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.4.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "0pgp99lx6kz11mx4znpnp611ms6kb95qkk1xjxfc648ym358v041")))

(define-public crate-symbolic-minidump-8.5.0 (c (n "symbolic-minidump") (v "8.5.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.5.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "1pcha6i2vghl3qgbqjpkbhr0zzdjql1zq1cmsxnyz09sn2651cp8")))

(define-public crate-symbolic-minidump-8.6.0 (c (n "symbolic-minidump") (v "8.6.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.6.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "13z76snvfq7y5vqcs9bxaif0j9lx9cxf3nqc2mi6p0wiaf2ag34x")))

(define-public crate-symbolic-minidump-8.6.1 (c (n "symbolic-minidump") (v "8.6.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.6.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "124sh3296x6b8fsh0rfj97k7far9kpdp462k63dy27i7ny109sg5")))

(define-public crate-symbolic-minidump-8.7.0 (c (n "symbolic-minidump") (v "8.7.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.7.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "18s6ynjipn7rhdx68qr8i5al4mi4jsg3rig6w1vblkh8a3l02i1v") (f (quote (("processor" "lazy_static" "regex") ("default" "processor"))))))

(define-public crate-symbolic-minidump-8.7.1 (c (n "symbolic-minidump") (v "8.7.1") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.7.1") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "0s8xpy1n913bp5vpcra1290jv5fjpv0n610bqvwg7cjfyica1gds") (f (quote (("processor" "lazy_static" "regex") ("default" "processor"))))))

(define-public crate-symbolic-minidump-8.7.2 (c (n "symbolic-minidump") (v "8.7.2") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.7.2") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.7.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "06lw8qfrmz8mcb3a983xnvs4bc3rxcxmc3ijn0x24vpbv3w74rnc") (f (quote (("processor" "lazy_static" "regex") ("default" "processor"))))))

(define-public crate-symbolic-minidump-8.7.3 (c (n "symbolic-minidump") (v "8.7.3") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.7.3") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.7.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "0anqvb2fzvd593rl86gsmfwl5xsw3lvs9ahlgs5gc7im622li7fm") (f (quote (("processor" "lazy_static" "regex") ("default" "processor"))))))

(define-public crate-symbolic-minidump-8.8.0 (c (n "symbolic-minidump") (v "8.8.0") (d (list (d (n "cc") (r "^1.0.50") (f (quote ("parallel"))) (d #t) (k 1)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "symbolic-common") (r "^8.8.0") (d #t) (k 0)) (d (n "symbolic-debuginfo") (r "^8.8.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.1") (d #t) (k 2)))) (h "12drv6b1xflzq1ljxxns0j7dlc8lgqnfw4q49ybymq2ikv2flxf3") (f (quote (("processor" "lazy_static" "regex") ("default" "processor"))))))

