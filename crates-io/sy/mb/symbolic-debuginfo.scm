(define-module (crates-io sy mb symbolic-debuginfo) #:use-module (crates-io))

(define-public crate-symbolic-debuginfo-1.1.5 (c (n "symbolic-debuginfo") (v "1.1.5") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "if_chain") (r "^0.1") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "scroll") (r "^0.7") (d #t) (k 0)) (d (n "symbolic-common") (r "^1.1.5") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "0090vcy6hljf1lhlipr2p54w85ggjvjngvahixr75rjngvk9hv0n")))

(define-public crate-symbolic-debuginfo-2.0.0 (c (n "symbolic-debuginfo") (v "2.0.0") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "if_chain") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "00acnl4zi9742l0sy98figm0vlhpcsv93dn5xajvvh7wcc7wr5yf")))

(define-public crate-symbolic-debuginfo-2.0.1 (c (n "symbolic-debuginfo") (v "2.0.1") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "if_chain") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.1") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "141svcfr8r8wjrlhjd6k0vbpq9hlhghlvdhsscjhdr08lqi0a0kh")))

(define-public crate-symbolic-debuginfo-2.0.2 (c (n "symbolic-debuginfo") (v "2.0.2") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "if_chain") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.2") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "1mvsks092lva8l6c8c670mqg19yh15k9n6prp7nn0fyzq0yc0n8n")))

(define-public crate-symbolic-debuginfo-2.0.3 (c (n "symbolic-debuginfo") (v "2.0.3") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "if_chain") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.3") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "13gl832a56d0dyd22pipibw22labdcl7irp0q6ha0002xzwi4nga")))

(define-public crate-symbolic-debuginfo-2.0.4 (c (n "symbolic-debuginfo") (v "2.0.4") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.4") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "067zhvl37r15vj4qx8nfz9zgqfpagy4ndsm5krbfgd3dmmlraw74")))

(define-public crate-symbolic-debuginfo-2.0.5 (c (n "symbolic-debuginfo") (v "2.0.5") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.5") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "1csjgs8h0jxyk1gnljy56k92yjal3yfgapvjpg30638d81w0fsy4")))

(define-public crate-symbolic-debuginfo-2.0.6 (c (n "symbolic-debuginfo") (v "2.0.6") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.6") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.5") (d #t) (k 0)))) (h "14ahz9brdid8ghc7cqdn3cf3r4673av9rf3dnzs5rw7370hpphry")))

(define-public crate-symbolic-debuginfo-2.0.7 (c (n "symbolic-debuginfo") (v "2.0.7") (d (list (d (n "gimli") (r "^0.15") (d #t) (k 0)) (d (n "goblin") (r "^0.0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "memmap") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^0.2") (d #t) (k 0)) (d (n "scroll") (r "^0.8") (d #t) (k 0)) (d (n "symbolic-common") (r "^2.0.7") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6") (d #t) (k 0)))) (h "00hijgjxg285z69l6rwnlg5h4ysxd3wlds8anlibc45s411ip85z")))

(define-public crate-symbolic-debuginfo-3.0.1 (c (n "symbolic-debuginfo") (v "3.0.1") (d (list (d (n "goblin") (r "^0.0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^3.0.1") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.1") (d #t) (k 0)))) (h "0nwiylpln8nq3xm6pflqrgsakrk782586cvg9qghgn13laxi6pjm") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-4.0.0 (c (n "symbolic-debuginfo") (v "4.0.0") (d (list (d (n "goblin") (r "^0.0.14") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.33") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^4.0.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.1") (d #t) (k 0)))) (h "0zi3zcfngbypdi86n2j7hnd9sma0xv4g3ay8ps124h7928vi4n4w") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.0.0 (c (n "symbolic-debuginfo") (v "5.0.0") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "goblin") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.0.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "1999rh7knmqiv3vr4qawh1g11rv38i2ywl5l2q3k3rkr5pc44ydi") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.0.1 (c (n "symbolic-debuginfo") (v "5.0.1") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "goblin") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^0.2.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.42") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.0.1") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "0cj3xlw0ylnhg6s6l6kiagy4b438xbi53wzn8zjdgsbw4w2yqwd7") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.0.2 (c (n "symbolic-debuginfo") (v "5.0.2") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "goblin") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.0.2") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "04z5v7acyxzigdwyf7lm7ayv5wk2csp8yfcsl0r08j6vg5lpbs3j") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.1.0 (c (n "symbolic-debuginfo") (v "5.1.0") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "goblin") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.1.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "1875li6kl0bvsyzckxbkx7c9pxfl6vmnhcrd2y1lx1myryv2n0v0") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.1.1 (c (n "symbolic-debuginfo") (v "5.1.1") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "goblin") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.1.1") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "14l3scqymgn5l1g1ryq5pz2vr9639q9x6gy1hc5ix4a7askb9sbf") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.1.2 (c (n "symbolic-debuginfo") (v "5.1.2") (d (list (d (n "failure") (r "^0.1.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "goblin") (r "^0.0.15") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.1.2") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6.3") (d #t) (k 0)))) (h "17fp5c3wa9a7x3jxa08f2a0m4lpz8lml5l9nxcqkqvfgbi1ql7af") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.2.0 (c (n "symbolic-debuginfo") (v "5.2.0") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.2.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "01rbl6izg5ydwrd4n8ic0ism4fka1d2q82026p9r790l00g8lsgd") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.3.0 (c (n "symbolic-debuginfo") (v "5.3.0") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.3.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1iq7siyjjcbmq2dfzpcr2mpma12rpv3rf9x7k1fxgcfcch3mli4f") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.4.0 (c (n "symbolic-debuginfo") (v "5.4.0") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.4.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.4.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0h7p8p1xf7zaa014hbsjb8lqcqc85197qlgrgcrk0mh1c5z8aglg") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.0 (c (n "symbolic-debuginfo") (v "5.5.0") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "055nsbk8aa4cvncd0adm3kpnaagrzmiqwxhm6r2jhc6f4vs60g6p") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.1 (c (n "symbolic-debuginfo") (v "5.5.1") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.1") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.1") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0h1m5v5ni2115jjbqdflyfzcmfa6rsk7bw4d2n8r9zmgxjhvsybw") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.2 (c (n "symbolic-debuginfo") (v "5.5.2") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.2") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.2") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0q4d20b1xsjk6km9xdvari3npf95ajhr1fqb81z5lc47fn6qv09s") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.3 (c (n "symbolic-debuginfo") (v "5.5.3") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.3") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.3") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1j33mhh8nc9jgw9vwg6nmlx3mlcaq3ybrcwmdh6b7ydbbjpchrmx") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.4 (c (n "symbolic-debuginfo") (v "5.5.4") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.4") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.4") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1s68b4z4fv0xfc33pwy1zpp1izqix9v78x46ply9rrgbspn135yj") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.5 (c (n "symbolic-debuginfo") (v "5.5.5") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.5") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.5") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1zc098hyahiqsv9dmmcqgid8nz0l615y23iy2gyaijc46nck6j4a") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.5.6 (c (n "symbolic-debuginfo") (v "5.5.6") (d (list (d (n "failure") (r "^0.1.2") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.2") (d #t) (k 0)) (d (n "goblin") (r "^0.0.17") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.79") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.5.6") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.5.6") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0f74dy6i8kx5yiqkq87g28z690mkbv19spaw6g722hp3xg7s316v") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.0 (c (n "symbolic-debuginfo") (v "5.7.0") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.0") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.0") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0zy6hzhzsg2l8jggh7g0379h10kqjzhfj0n8n6k1mkwwxsg86snn") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.1 (c (n "symbolic-debuginfo") (v "5.7.1") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.1") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.1") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "03hj0sd63c927gccywvany4vk9gj5nngvq4dki1njhqkws8r4zfy") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.2 (c (n "symbolic-debuginfo") (v "5.7.2") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.5") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.2") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.2") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "12fr72nx5dz06qvc6yi008657my70pzycx9rbz3mf4qwkccwjsbn") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.3 (c (n "symbolic-debuginfo") (v "5.7.3") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.3") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.3") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "17x9a8frgy5p8mwhg6g941rlvqwj3a4ham9dnmsv62pv47q0f4mz") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.4 (c (n "symbolic-debuginfo") (v "5.7.4") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.4") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.4") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0k3pvlgn19xqdlpwlw5dcx996w8glfraviqdlkgiqssqcvarvww8") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.5 (c (n "symbolic-debuginfo") (v "5.7.5") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.5") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.5") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1x39l46lcwzaidgx254zjllsjp85iqgjb7wp763r1x6r4865pd0v") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.6 (c (n "symbolic-debuginfo") (v "5.7.6") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.6") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.6") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0r0lap1g0v1d8alc8wzzcxg7vfqgmw7z9v17gkzjkyzh9anpinfj") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.7 (c (n "symbolic-debuginfo") (v "5.7.7") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.7") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.7") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "0zzqxzms8lp90y6q145ykq58x99c3zy16psybnz5qjn6lvlmcjd0") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-5.7.8 (c (n "symbolic-debuginfo") (v "5.7.8") (d (list (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "goblin") (r "^0.0.19") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (o #t) (d #t) (k 0)) (d (n "serde_plain") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^5.7.8") (f (quote ("with_objects" "with_dwarf"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.8") (d #t) (k 2)) (d (n "uuid") (r "^0.7.1") (d #t) (k 0)))) (h "1x1z4v1v6cpi7h7zi42x2gbiq2va2p33qn38w809cryidjlinhb1") (f (quote (("with_serde" "serde" "serde_plain") ("default"))))))

(define-public crate-symbolic-debuginfo-6.0.0 (c (n "symbolic-debuginfo") (v "6.0.0") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.17.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.21") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pdb") (r "^0.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.0") (d #t) (k 0)))) (h "0x1nq5x95zw01jxh9jmnzkx80gv145a1s70nzr44i7bsqyxmv378")))

(define-public crate-symbolic-debuginfo-6.0.3 (c (n "symbolic-debuginfo") (v "6.0.3") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.17.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.21") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pdb") (r "^0.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.3") (d #t) (k 0)))) (h "0phrcnhhpbi3qfyg6r5x27gxxbrnfz7k1xih72sj4spjrfsnhvnh")))

(define-public crate-symbolic-debuginfo-6.0.4 (c (n "symbolic-debuginfo") (v "6.0.4") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.17.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.21") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pdb") (r "^0.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.4") (d #t) (k 0)))) (h "0b118b73796c1j8xf44mmy5d643w8w1d0q93cax7fp9khcg71439")))

(define-public crate-symbolic-debuginfo-6.0.5 (c (n "symbolic-debuginfo") (v "6.0.5") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.17.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.21") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pdb") (r "^0.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.5") (d #t) (k 0)))) (h "13rwfbps15k6d2nmlzxfmc49cwim96zym4k2qa4l4rlnqp5jbbg7")))

(define-public crate-symbolic-debuginfo-6.0.6 (c (n "symbolic-debuginfo") (v "6.0.6") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.17.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.21") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pdb") (r "^0.3.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.0.6") (d #t) (k 0)))) (h "1xklgplz1fc7p2cqxpgr11sdczjwa12k4cdpgp7wss9rcbhzq3p7")))

(define-public crate-symbolic-debuginfo-6.1.0 (c (n "symbolic-debuginfo") (v "6.1.0") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.1.6") (d #t) (k 0)) (d (n "flate2") (r "^1.0.6") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.17.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.22") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 0)) (d (n "pdb") (r "^0.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.1.0") (d #t) (k 0)))) (h "0rb4xir3bj9fbfigqjmkhjz6qpz98qasiwpi8vyw96mnlps0njlj")))

(define-public crate-symbolic-debuginfo-6.1.3 (c (n "symbolic-debuginfo") (v "6.1.3") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.18.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.22") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8.0") (d #t) (k 0)) (d (n "pdb") (r "^0.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.1.3") (d #t) (k 0)))) (h "0mz472g55dplb0lgbfdljm6gg3xy69idjw8cc5ssm8y1hxhk207b")))

(define-public crate-symbolic-debuginfo-6.1.4 (c (n "symbolic-debuginfo") (v "6.1.4") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.7") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.18.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.0.23") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.8.0") (d #t) (k 0)) (d (n "pdb") (r "^0.5.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.9") (d #t) (k 0)) (d (n "symbolic-common") (r "^6.1.4") (d #t) (k 0)))) (h "0519vk4rw4az4g1llx6jwziwg8zzy417gasq2d6gcw18mn7pmi32")))

(define-public crate-symbolic-debuginfo-7.1.1 (c (n "symbolic-debuginfo") (v "7.1.1") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.1") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.1.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1bf0f0cx19f9pz0sy4kxjlysrczq99853d433pwnn97s3g12iw4j")))

(define-public crate-symbolic-debuginfo-7.2.0 (c (n "symbolic-debuginfo") (v "7.2.0") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.1") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.2.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "0h3sji234ccz30zbnbw9n1hbb6y84ycj9vqdayl2hpnibsfn2ms9")))

(define-public crate-symbolic-debuginfo-7.3.0 (c (n "symbolic-debuginfo") (v "7.3.0") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.1") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "10256iaqv6qb2nk0wlkfz0i2s2dcd6hzdri0ysl1j4qav1qksay4")))

(define-public crate-symbolic-debuginfo-7.3.1 (c (n "symbolic-debuginfo") (v "7.3.1") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.1") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1a56q5wmrmb39q05qy2a36s4dglqgr4b3i92g6j6v6ds5z4b37pl")))

(define-public crate-symbolic-debuginfo-7.3.2 (c (n "symbolic-debuginfo") (v "7.3.2") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.2") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "094afl7wi7bp4f05zizhlx8gixxdgl1hb53vqx4zjjb9q8x138fr")))

(define-public crate-symbolic-debuginfo-7.3.3 (c (n "symbolic-debuginfo") (v "7.3.3") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.3") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1ppxy8x60zfq23hxcjmpr44h9xqnzk259qid4jbb0pqqh9w5flsa")))

(define-public crate-symbolic-debuginfo-7.3.4 (c (n "symbolic-debuginfo") (v "7.3.4") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.4") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "0kj5921h2z1mpadisfwdl0wh9y50avx6y9r7jsy8bbmfln2l319v")))

(define-public crate-symbolic-debuginfo-7.3.5 (c (n "symbolic-debuginfo") (v "7.3.5") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.5") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1kqnf89a4wr2xjnjh466c0lkfg807za37ks3jfzfn7a2pbxgyisg")))

(define-public crate-symbolic-debuginfo-7.3.6 (c (n "symbolic-debuginfo") (v "7.3.6") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.3.6") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "12iw2g0i5ks8b6cbpi36padqh3pyfxg07vlp0v6cd4v84zmxg5hg")))

(define-public crate-symbolic-debuginfo-7.4.0 (c (n "symbolic-debuginfo") (v "7.4.0") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.4.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1i98aaqxql47hzinzi8c03waw8509f4zwfcgqa2v04q44nw4md0h")))

(define-public crate-symbolic-debuginfo-7.5.0 (c (n "symbolic-debuginfo") (v "7.5.0") (d (list (d (n "dmsort") (r "^1.0.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^7.5.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1jsqly6kjx4yi8zj5nchvyjclhgbsb35mfvn7wk3pp4mbwjd81fs")))

(define-public crate-symbolic-debuginfo-8.0.0 (c (n "symbolic-debuginfo") (v "8.0.0") (d (list (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.22.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.68.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "0q8k2sdd0gb127a2csp8d5vd3d9gqqcwg4l263hk19npcz6qp60d")))

(define-public crate-symbolic-debuginfo-8.0.1 (c (n "symbolic-debuginfo") (v "8.0.1") (d (list (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.22.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.68.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1yr9qmghwgfhlq12frsilq21jld0z3fzgmqkfwyvm1xfhy5fcs1y")))

(define-public crate-symbolic-debuginfo-8.0.2 (c (n "symbolic-debuginfo") (v "8.0.2") (d (list (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.22.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.2.3") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.68.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "0kx8xfm374ai50y2gd6q55bk4p8p0hcins4p5l0mn559xr4c6khl")))

(define-public crate-symbolic-debuginfo-8.0.3 (c (n "symbolic-debuginfo") (v "8.0.3") (d (list (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.3.1") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.59.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "111lqii3kcll9bdjq27g5qimdal22irj77pc0m4cwl6idvya44k0")))

(define-public crate-symbolic-debuginfo-8.0.4 (c (n "symbolic-debuginfo") (v "8.0.4") (d (list (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.3.1") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.59.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "046jrdn9gr7fqp9f5n3jnkfxlk1vnqnzsmr39xjqljn6r5r9pksk")))

(define-public crate-symbolic-debuginfo-8.0.5 (c (n "symbolic-debuginfo") (v "8.0.5") (d (list (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.3.1") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.6.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.59.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "0c3kdp9v18848whn11xyvb08gnhwrj6vqzls3xxaw6s1x0ygrnfb")))

(define-public crate-symbolic-debuginfo-8.1.0 (c (n "symbolic-debuginfo") (v "8.1.0") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.3.1") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.18.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.59.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1gwvyb2vpp3zya2w68vai07xay7ik0pfhqzsp84zaxcm7ig6xv3g")))

(define-public crate-symbolic-debuginfo-8.2.0 (c (n "symbolic-debuginfo") (v "8.2.0") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.24.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.1") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^6.1.2") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "07apirn9glkn9ql9xdg2l5ch3rbl1hnxas9fgd1251kxps3bsx7f")))

(define-public crate-symbolic-debuginfo-8.2.1 (c (n "symbolic-debuginfo") (v "8.2.1") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.24.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.1") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^6.1.2") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1fd3ybz3hcwwm6gh3rj6ijbvwlg03x1kspsswwq2amzm9zx44brf")))

(define-public crate-symbolic-debuginfo-8.3.0 (c (n "symbolic-debuginfo") (v "8.3.0") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.24.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^6.1.2") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.4.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1vhn513j0li6hwvy6934221v55wka4bzn4ra36ackz797rsv9fim")))

(define-public crate-symbolic-debuginfo-8.3.1 (c (n "symbolic-debuginfo") (v "8.3.1") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.25.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.3.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1nfrjq58zffgvrkbwmfhcd543lbr625fjqr6w53zqssnl2fsl7pg")))

(define-public crate-symbolic-debuginfo-8.3.2 (c (n "symbolic-debuginfo") (v "8.3.2") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.25.0") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "1b4086qcqlc7xpb2f3xgcvf5gmgl31wnslx8pbb9zv08c2d9gz5b")))

(define-public crate-symbolic-debuginfo-8.4.0 (c (n "symbolic-debuginfo") (v "8.4.0") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "02fl7l97crihjmbsck2cd0357gf35lp7aqbfd4j3mrs5adkq2fzi")))

(define-public crate-symbolic-debuginfo-8.5.0 (c (n "symbolic-debuginfo") (v "8.5.0") (d (list (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (k 0)) (d (n "goblin") (r "^0.4.2") (d #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "symbolic-common") (r "^8.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "walrus") (r "^0.19.0") (d #t) (k 0)) (d (n "wasmparser") (r "^0.77.0") (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (d #t) (k 0)))) (h "01jxqhvbk4kkbi6s07yzkv6m3jhdz0122w8aqslpmj790pqbad5c")))

(define-public crate-symbolic-debuginfo-8.6.0 (c (n "symbolic-debuginfo") (v "8.6.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.4.2") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.6.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.82") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1gn2vxa12w2ryamjpzqypkpn0h4j2ajh6rwbfpj8mr1j72kfhr8p") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-8.6.1 (c (n "symbolic-debuginfo") (v "8.6.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.6.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.82") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "02b9ysphnc70jc0gwlskd9z4pfa62kschqcaliin15siwkzari0n") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-8.7.0 (c (n "symbolic-debuginfo") (v "8.7.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.7.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.83") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1wfhdgri3px361lq6km80y17zmqnjs0q8fqgkir5nk2hysil3rnv") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-8.7.1 (c (n "symbolic-debuginfo") (v "8.7.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.83") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "07m42rw0l5lvfz9865h8dw7jbdsm1s0r6q0wkbp8ra3j8pya3inp") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-8.7.2 (c (n "symbolic-debuginfo") (v "8.7.2") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.7.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.83") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0s23b6dmax3djzsycnwj8a6fbgglkwvjca55674vcjcghpwy9szz") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-8.7.3 (c (n "symbolic-debuginfo") (v "8.7.3") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.7.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.83") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0p82mq5sf2fgfza6jb5cpynd056f6pk7krj1ykldmg5yilkcq006") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-8.8.0 (c (n "symbolic-debuginfo") (v "8.8.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^8.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.83") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.5.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1mph2xjyk24p65niiksk5j6hdqyhimyf5h6235lbpmn1kyzxlr8i") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.0.0 (c (n "symbolic-debuginfo") (v "9.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.84.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "09xzry909gfmp9blh2v0rhkhd9rfgc9j074a6j4b3ibqv6b3dr9a") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.1.0 (c (n "symbolic-debuginfo") (v "9.1.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.85.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0pb4r4272340ab6iwp7chy2jl1wzs6svfhb5ing20clkl3laka49") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.1.1 (c (n "symbolic-debuginfo") (v "9.1.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.1.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.85.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1ph3afnxpskf48r8xgsq9nafj41f5vd9k4dicb0vqv5fz4fgvrjv") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.1.2 (c (n "symbolic-debuginfo") (v "9.1.2") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.1.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.89.1") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "047n6j99mwpz2m1fyzl64i05m7dxw8k7w1hx5ci6qji4p8awl01i") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.1.3 (c (n "symbolic-debuginfo") (v "9.1.3") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.1.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.89.1") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1fm6lwdsx2hnr27dsq33g3z1whvwg7zn44v3swik35m2blyycn4x") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.1.4 (c (n "symbolic-debuginfo") (v "9.1.4") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.1.4") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0ygi2ff80i8s8d0ry8l4wm43pp4w42cbzc29yxfmmxgw9dam4h08") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.2.0 (c (n "symbolic-debuginfo") (v "9.2.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "16mdd66077wsn3rr6445g2f1w25cp5jbs6ybhld5fqlhdfi3ikhy") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-9.2.1 (c (n "symbolic-debuginfo") (v "9.2.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^9.2.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1jmgz68pjpq9bhk3saa7s7jhx7w5hh4gfwwv8sn6j64c3wxf3k1m") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.0.0 (c (n "symbolic-debuginfo") (v "10.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.0.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.0.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1ikn1l7mz967n2sbg8zp70rmvqhm3yvfa2imngr1n2pfi3pb69gz") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.1.0 (c (n "symbolic-debuginfo") (v "10.1.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.1.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "14a9cwm74j0m91ndfjmjzqzsi6fncwaq4xp683xmv9lisz6vjrdq") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.1.1 (c (n "symbolic-debuginfo") (v "10.1.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.5.1") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.1.1") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.1.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.90.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "15gkqgb1knm79sv15jk0jkn1q323mxfby47q3ppwb5i2k9m6j6gm") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.1.2 (c (n "symbolic-debuginfo") (v "10.1.2") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.1.2") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.1.2") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "15gl8wgd39l6knvdq3xx74zvmj7n7a6xdsjpiisk1f9qbiq8lc0y") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.1.3 (c (n "symbolic-debuginfo") (v "10.1.3") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.1.3") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.1.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0m31jg93mhi95xwkngwwnv2vkndkdr041lm4x8z94v1iffqbkqgm") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.1.4 (c (n "symbolic-debuginfo") (v "10.1.4") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.1.4") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.1.4") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1455ld0hqwfn5jf5ndwx3qgp45lp2vwqi8qfwaw0k85pzg69nq3z") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.1.5 (c (n "symbolic-debuginfo") (v "10.1.5") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.1.5") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.1.5") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "02vb60kvdhwg0paxk3vgg761dmc6d9wj0688p0a2aqq88yrcmw50") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.2.0 (c (n "symbolic-debuginfo") (v "10.2.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.26.1") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.2.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.94.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0d2l8nv1plyr0nvhaiq8y52glqsyljjrkjzrfaplx0xmjrm7d54g") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-10.2.1 (c (n "symbolic-debuginfo") (v "10.2.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^10.2.1") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^10.2.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0ryzhd5466lzzwb6nhk4lvgnn5zn3pwrf8gn7mczx7n1yscdix8h") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-11.0.0 (c (n "symbolic-debuginfo") (v "11.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^11.0.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^11.0.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0hhddi3gx4n5vabd8av99dbsy28h9v9j2wjb346dxqm09233vyxn") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-11.1.0 (c (n "symbolic-debuginfo") (v "11.1.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^11.1.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^11.1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0k26gjv9pg0v3zf8g66qi5gpag6yhcsxqnhlpqs3hk48sc0c2hm4") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.0.0 (c (n "symbolic-debuginfo") (v "12.0.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.0.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.0.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "10jc8ylf52xa3d7vypm9aviw9c7wpd1ccfliil67kyj17hcksgka") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "lazycell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "lazycell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "lazycell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.0 (c (n "symbolic-debuginfo") (v "12.1.0") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1q5viad93mx6wgzizjsrffrqbr7dbp58iq7q71jrp7g6wr8pllzc") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.1 (c (n "symbolic-debuginfo") (v "12.1.1") (d (list (d (n "bitvec") (r "^1.0.0") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.1") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.0") (o #t) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.0.0") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.1") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "wasmparser") (r "^0.95.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.2") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0bdvmksjif32m8hfm51rwih8w5b7n3ipa69ryq29d8fjyb4wzn50") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.2 (c (n "symbolic-debuginfo") (v "12.1.2") (d (list (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.2") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.2") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0j4c6qbs0c9nq3rhnbqlspabdws7ziw781zgi729ad6aqhi22kiv") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.3 (c (n "symbolic-debuginfo") (v "12.1.3") (d (list (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.3") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "18az91b44mnsjhy6b2bzh0imhj9r7g6jqvhzw0ckmp76b88qqlq2") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.4 (c (n "symbolic-debuginfo") (v "12.1.4") (d (list (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.4") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.4") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0zbwdyd9svhjh8dgp23s56z4v8m3942sf8j27482c64cr11cm60w") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.5 (c (n "symbolic-debuginfo") (v "12.1.5") (d (list (d (n "bitvec") (r "^1.0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.5") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.5") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0n0ygbmg0h9cvd4c09wb8g9lk1d1d95bmbqm97fhrc2zrbs668r2") (f (quote (("wasm" "bitvec" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.1.6 (c (n "symbolic-debuginfo") (v "12.1.6") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.1.6") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.1.6") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1i3bc2dj3fhslid9wszdbh8sj17r9sdn009mya3zs2wqxl38a5r9") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.2.0 (c (n "symbolic-debuginfo") (v "12.2.0") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.2.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.2.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0wxdjgjyry8y92iicqz9lq91f04p6sn7p9nd533akrzh9ksiqq5p") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.3.0 (c (n "symbolic-debuginfo") (v "12.3.0") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.2.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.27.2") (f (quote ("read" "std"))) (o #t) (k 0)) (d (n "goblin") (r "^0.6.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.3.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0jspxc6a7spm55kbajd9b0mhiiiwjnlny2b8s1b2zs7kf25ihji1") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.4.0 (c (n "symbolic-debuginfo") (v "12.4.0") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.4.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.4.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1swz07fglldwqd7ngab9x0ydw1n7xj9hvnjhnnpvb9wfbaws3yby") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.4.1 (c (n "symbolic-debuginfo") (v "12.4.1") (d (list (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.4.1") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.4.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.102.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1iqrn1awax78g99sk25wyrxm2ki4plf08xa84ivfq7fscbjpl6bz") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.5.0 (c (n "symbolic-debuginfo") (v "12.5.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.5.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.5.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.2") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "1vjydp35yyl7d37fzdgbg0q0nfai1j1l3mys4cdd5di87dwqi4dr") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.6.0 (c (n "symbolic-debuginfo") (v "12.6.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.6.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.6.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.2") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "0nj4mlsnr5vzi5gcz34hxn942jylam4dhisa135i3fdj7j2q9cpk") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.7.0 (c (n "symbolic-debuginfo") (v "12.7.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.7.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.7.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.113.2") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "02h3j016gbsgcds4ihvzzzrllf6008q57pczirjzgjc4vdd8x6vk") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.7.1 (c (n "symbolic-debuginfo") (v "12.7.1") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.1") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.7.1") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.7.1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "04apnc8p7hhzlhh96jdq9g9rk6071xfq7xn6kz8z9n31sdvwbdgw") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

(define-public crate-symbolic-debuginfo-12.8.0 (c (n "symbolic-debuginfo") (v "12.8.0") (d (list (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "debugid") (r "^0.8.0") (d #t) (k 0)) (d (n "dmsort") (r "^1.0.2") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.3") (o #t) (d #t) (k 0)) (d (n "elsa") (r "^1.8.0") (o #t) (d #t) (k 0)) (d (n "fallible-iterator") (r "^0.3.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "gimli") (r "^0.28.1") (f (quote ("read" "std" "fallible-iterator"))) (o #t) (k 0)) (d (n "goblin") (r "^0.7.1") (o #t) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (o #t) (d #t) (k 0)) (d (n "nom-supreme") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "pdb-addr2line") (r "^0.10.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (o #t) (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (o #t) (d #t) (k 0)) (d (n "symbolic-common") (r "^12.8.0") (d #t) (k 0)) (d (n "symbolic-ppdb") (r "^12.8.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "wasmparser") (r "^0.118.0") (o #t) (d #t) (k 0)) (d (n "zip") (r "^0.6.4") (f (quote ("deflate"))) (o #t) (k 0)))) (h "016cccwlvvl5zx55szmd3zcp6i7yidp1p7qmb9y98xvpwrxpflpb") (f (quote (("wasm" "dwarf" "wasmparser") ("sourcebundle" "lazy_static" "once_cell" "parking_lot" "regex" "serde_json" "zip" "js" "debugid/serde") ("ppdb" "symbolic-ppdb") ("ms" "elsa" "flate2" "goblin/pe32" "goblin/pe64" "goblin/std" "once_cell" "parking_lot" "pdb-addr2line" "scroll" "smallvec") ("macho" "dwarf" "elementtree" "goblin/mach32" "goblin/mach64" "goblin/std" "scroll" "smallvec") ("js") ("elf" "dwarf" "flate2" "goblin/endian_fd" "goblin/elf32" "goblin/elf64" "goblin/std" "scroll") ("dwarf" "gimli" "once_cell") ("default" "breakpad" "elf" "macho" "ms" "ppdb" "sourcebundle" "js" "wasm") ("breakpad" "nom" "nom-supreme" "regex"))))))

