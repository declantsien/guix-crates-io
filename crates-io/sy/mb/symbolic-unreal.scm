(define-module (crates-io sy mb symbolic-unreal) #:use-module (crates-io))

(define-public crate-symbolic-unreal-5.7.0 (c (n "symbolic-unreal") (v "5.7.0") (d (list (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "bytes") (r "^0.4.10") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.0") (d #t) (k 2)))) (h "02q6bkmwm507f4mn0ws3a70lxsqsip24m7nvmhh56qrbp70pc4mh")))

(define-public crate-symbolic-unreal-5.7.1 (c (n "symbolic-unreal") (v "5.7.1") (d (list (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "bytes") (r "^0.4.10") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.1") (d #t) (k 2)))) (h "1xqzbvdvizv65a7awgs3wjd2x2cyhbbn2a3mirpl7b4w877r2gij")))

(define-public crate-symbolic-unreal-5.7.2 (c (n "symbolic-unreal") (v "5.7.2") (d (list (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.2") (d #t) (k 2)))) (h "04ald1gw9y7fznyys0sgj6c1r1wlc9nyp564gs60wh0j6jzjsrpa")))

(define-public crate-symbolic-unreal-5.7.3 (c (n "symbolic-unreal") (v "5.7.3") (d (list (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.3") (d #t) (k 2)))) (h "09f59gv3ln9q2n6slr7dgcpnws49aqvnb2zf169vjp5z9vpr6x3s")))

(define-public crate-symbolic-unreal-5.7.4 (c (n "symbolic-unreal") (v "5.7.4") (d (list (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.4") (d #t) (k 2)))) (h "19i0kw2hn9b2ichgh0wpqjz1aiz9irhziqx98y039f4knd5m73v4")))

(define-public crate-symbolic-unreal-5.7.5 (c (n "symbolic-unreal") (v "5.7.5") (d (list (d (n "anylog") (r "^0.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.5") (d #t) (k 2)))) (h "043yak2mkxif4dx5w1h8smz585mpcw6jrpv2yhqwyk8dmb5wrd40")))

(define-public crate-symbolic-unreal-5.7.6 (c (n "symbolic-unreal") (v "5.7.6") (d (list (d (n "anylog") (r "^0.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.6") (d #t) (k 2)))) (h "0dqnsxqp7x8819sdlvjlfj74wlixbp3z56gb82j7n4v53aq9h9j1")))

(define-public crate-symbolic-unreal-5.7.7 (c (n "symbolic-unreal") (v "5.7.7") (d (list (d (n "anylog") (r "^0.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.7") (d #t) (k 2)))) (h "0797y64fkn4ri8rzlpvv3n6wz5077l4lpf0xvjjn77mihqq25728")))

(define-public crate-symbolic-unreal-5.7.8 (c (n "symbolic-unreal") (v "5.7.8") (d (list (d (n "anylog") (r "^0.3.1") (d #t) (k 0)) (d (n "bytes") (r "^0.4.11") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("derive"))) (d #t) (k 0)) (d (n "symbolic-testutils") (r "^5.7.8") (d #t) (k 2)))) (h "1dz3ixyvkx55nvifgq3m6lifw3805xbf8mq2a64p95av8rnrfp7n")))

(define-public crate-symbolic-unreal-6.0.0 (c (n "symbolic-unreal") (v "6.0.0") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1ikaffkzav838c5mxpq3lg6qcs2iljj75i4l2b6chzq2f7svxha2") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.0.3 (c (n "symbolic-unreal") (v "6.0.3") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "03hjng4nkykahd0c7mdhm39mlpi7i5a9k90gbdfh53yp1w67dl8g") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.0.4 (c (n "symbolic-unreal") (v "6.0.4") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "026gy5i8nnpym4zxpgvywar65698ym9jq5cawk42gp2rp8ic3dws") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.0.5 (c (n "symbolic-unreal") (v "6.0.5") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1ngddq2p526zz50jwka84rni07708lj1xzp4z887ykgfaac1vnq4") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.0.6 (c (n "symbolic-unreal") (v "6.0.6") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0s68m31r86p8k1973i7609rnsp1v4wbwr2wz4q0ggadjaapgb578") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.1.0 (c (n "symbolic-unreal") (v "6.1.0") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.7.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1fwlil6f60nwlwvfs6wfbjxcnkdhx58ghfmw6xd7fif2qnd0csll") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.1.3 (c (n "symbolic-unreal") (v "6.1.3") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "01xfl7p516kxqybgfckqghygzv2m3mdz5h9s2jjxfigpm8g6zrvr") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-6.1.4 (c (n "symbolic-unreal") (v "6.1.4") (d (list (d (n "anylog") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "compress") (r "^0.1.2") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.91") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0ijj73ah8zpx88sp6ddwkz6hz9n3500775q1ar0v2idfvbsbj74x") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.1.1 (c (n "symbolic-unreal") (v "7.1.1") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0wymw0jcf1skpxmv4aa24f7pm08zmpfflww3yvx93i9amlqi3x6x") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.2.0 (c (n "symbolic-unreal") (v "7.2.0") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.8.1") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1fl9v1icp38psi2d3s3sn80pichp47k1kjnm1f1cqz6gcp23f4r3") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.0 (c (n "symbolic-unreal") (v "7.3.0") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "181rrnqv8czawc8ppbhx8mnk0sgvw0sa5yg6bh1sps71v2j0m9gf") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.1 (c (n "symbolic-unreal") (v "7.3.1") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "12la3wqwkpwydyx67m2rxslkfmfxw3rwy8badzadydjdnvaqkc4q") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.2 (c (n "symbolic-unreal") (v "7.3.2") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "12qm3iycb2avyvnlwa1n0dfpw9v0clslcd0pl8phn1gicf44gdwv") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.3 (c (n "symbolic-unreal") (v "7.3.3") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0blgd3i5dj14m52h2wghfnyij0h10v3vcivhs1mvy3m6d3wlxnr0") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.4 (c (n "symbolic-unreal") (v "7.3.4") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1c4iqlss0mlqgr9slyg5qy6nd2axf9npnz9c9f6ljbamg4n3mgq6") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.5 (c (n "symbolic-unreal") (v "7.3.5") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "09i3cldgxlw3nj6s56kymyism3fd0mgclp8wm1vpiyz5y04yl50i") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.3.6 (c (n "symbolic-unreal") (v "7.3.6") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "08gplb5b3zs3895qx3b5fixmabp7qbbyslxfpblzgvj38v3i5kf4") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.4.0 (c (n "symbolic-unreal") (v "7.4.0") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1hc11gq50kqsblz3d9baq460k4kg8sjkkvbs77f802098vq5q5vm") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-7.5.0 (c (n "symbolic-unreal") (v "7.5.0") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^0.15.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "0fgsc82dqxbfxq3mq4yk5nfhz8dn9skjpfa4mi9wg1mncdvyx2ql") (f (quote (("with-serde" "serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.0.0 (c (n "symbolic-unreal") (v "8.0.0") (d (list (d (n "anylog") (r "^0.5.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0bqm5kk1rjjq02ir5h3q4inpnvxa6n7xnfz89ifiy956zm35gkhp") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.0.1 (c (n "symbolic-unreal") (v "8.0.1") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0l855mzf0n4jqcapa6ms0w69dsjygvxyv1fi13fz8ixch389f03y") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.0.2 (c (n "symbolic-unreal") (v "8.0.2") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0bgr06kfbyfw8nppkr4a1z1pqg2rkzj435ij1p7f11zr5nzx485b") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.0.3 (c (n "symbolic-unreal") (v "8.0.3") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1bkljcksmkri8hx6g37iaxmm5jlnq3a06rkk17477ll91kflzlcx") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.0.4 (c (n "symbolic-unreal") (v "8.0.4") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "09g6f2xqpd8j61m1ab85rja3fvz14zjsl0rkj7wr388q82prviq0") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.0.5 (c (n "symbolic-unreal") (v "8.0.5") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1sr866kcdl2rv43h0rhi3r5bblzfin5pr4y3h1g6yspgnaxj46ai") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.1.0 (c (n "symbolic-unreal") (v "8.1.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1mwl6zx2kn19vzjnwiwwzsf5l3whmq2p9h5n3b682a1vb7plrr4k") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.2.0 (c (n "symbolic-unreal") (v "8.2.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "107jg6g5j7qkl90r47hkypyc1fl6hzpcdqx4p8iicdknjdnkvspk") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.2.1 (c (n "symbolic-unreal") (v "8.2.1") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "18i0788vgn51b6xb6rqk90b54gbz23za5yf0jj6gndb7abc21r4v") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.3.0 (c (n "symbolic-unreal") (v "8.3.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^0.5.6") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0cw2kpsnap94ia0d6g2sc8qcm9miccklc2af97jz1jln6vmpqqc3") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.3.1 (c (n "symbolic-unreal") (v "8.3.1") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1g683kyzqhh7ppadqw4349pgd8kgmajjhxgrm72x62929xr37sjr") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.3.2 (c (n "symbolic-unreal") (v "8.3.2") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1qc2ih4xbvncr5fz82w5hya1vhfhw6spc78d9k69irilzfsc27j9") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.4.0 (c (n "symbolic-unreal") (v "8.4.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1lgyyhfmzy5w9cnshy39ivwdsbnbqvv4hshniz0qwa6idj3sh77j") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.5.0 (c (n "symbolic-unreal") (v "8.5.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.5.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.10.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1wnpf3b1nzbn9faynb9x1pa1zs9zd4v0igqbk0204z21d02zin8z") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.6.0 (c (n "symbolic-unreal") (v "8.6.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1187656n4jcpsf4rg8fs4v9vhml7bmhh41vhvs623zahfxcgzbri") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.6.1 (c (n "symbolic-unreal") (v "8.6.1") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "150i4lkax2ky66adb2r5242w916rca5cw4avs6jnhblra2mj0flz") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.7.0 (c (n "symbolic-unreal") (v "8.7.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1cfrc2j43q5v90ycj9gzxv9j7n9ki5x0585blc5i68d31zi5bqsp") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.7.1 (c (n "symbolic-unreal") (v "8.7.1") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "15lmabzfm0frzm6hf9jzgncdrchmrwip7fczg37qpz2i47byqyj1") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.7.2 (c (n "symbolic-unreal") (v "8.7.2") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0svjcjdb40nd7h2v1b88qx523zl5y2g3qn2ahkw6083m5wj2l4i6") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.7.3 (c (n "symbolic-unreal") (v "8.7.3") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0hsk4w6bgs8659dr9f650yiwlmlax1fz60vyrsqb35p8q85d7a3s") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-8.8.0 (c (n "symbolic-unreal") (v "8.8.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "198p08jk90blfyjmn9dli388fgjrs2gxj96nqlmaaw6bzs4j3vzw") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.0.0 (c (n "symbolic-unreal") (v "9.0.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0hcj1l7hb6sj269isana77p3zk57j16zhbm799k2jrggj410lmfb") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.1.0 (c (n "symbolic-unreal") (v "9.1.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0zirmybi8aslwqjn5pw681m5x3isid76a8pwgsv2nkgv1wghjpln") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.1.1 (c (n "symbolic-unreal") (v "9.1.1") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.3.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1n3bhnzzg8idxap1nnphvhj1icz0qrwxa4nd7rfm4blb0v1cmsmv") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.1.2 (c (n "symbolic-unreal") (v "9.1.2") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1434fp3aiwbybx4xdd5rcwlv28l221mciqzmxjc95qs11xxi7wa7") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.1.3 (c (n "symbolic-unreal") (v "9.1.3") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^0.7.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0g3nzcjsmg0csiby2k7gc0py5bq9ya5wyngwypyhra47zm5d49kq") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.1.4 (c (n "symbolic-unreal") (v "9.1.4") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0lf1izcg5mw62ppszyiih3hshx63g6mwbzpw2sj1zprkbkxx6g1g") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.2.0 (c (n "symbolic-unreal") (v "9.2.0") (d (list (d (n "anylog") (r "^0.6.1") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1c0172hl9rqwnm12b2x0s3lwzq37i9kpq3cmsv1375vidrym8h9q") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-9.2.1 (c (n "symbolic-unreal") (v "9.2.1") (d (list (d (n "anylog") (r "^0.6.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1r0w1c0vilc658h1ldld4h1ql7byc6r4gvrn5n8wl8n7crdis15m") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.0.0 (c (n "symbolic-unreal") (v "10.0.0") (d (list (d (n "anylog") (r "^0.6.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0snnl52jcdh4bv3j600zcr6ch5i323nfkv8ici122l8pnp8j8glg") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.1.0 (c (n "symbolic-unreal") (v "10.1.0") (d (list (d (n "anylog") (r "^0.6.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0zr4rr5snwmd74jbak07145szaj06g3f7y11w02wwglj8ypjrrxs") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.1.1 (c (n "symbolic-unreal") (v "10.1.1") (d (list (d (n "anylog") (r "^0.6.2") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1g288zyj2d940nfb529ha4p73k103slxjq589smgxkbrz8aws3n6") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.1.2 (c (n "symbolic-unreal") (v "10.1.2") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0d4xp87aivnkkdhx3pb0vb5zs9x5xbl1xxn81q5f4yvcz16n78yi") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.1.3 (c (n "symbolic-unreal") (v "10.1.3") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1cr7asx53jfklvmhps9ffidc57k5vqvhr9kihd7896gkv4ri8f0f") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.1.4 (c (n "symbolic-unreal") (v "10.1.4") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1i3lab8m75rjp3xgzn16na5xwbf86a7x05jg3fbr7047x47rkj2h") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.1.5 (c (n "symbolic-unreal") (v "10.1.5") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1s09irdhg2j1p0qk175x72vb31xp56kv1b0mnnxlr1fa8j5xq8b3") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.2.0 (c (n "symbolic-unreal") (v "10.2.0") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0sczdrh96gkqk2h5i6rp22y8bkxqk2qgqw990kcgq9rpqyms6vn9") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-10.2.1 (c (n "symbolic-unreal") (v "10.2.1") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1qc21shmnq4jw12sga7gpxg2xlaxjxcf51mwv9c5czvh14laq725") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-11.0.0 (c (n "symbolic-unreal") (v "11.0.0") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0g5i38w75zf2jm4r7skz5fhwzqimyq2pvldpqh4nw1jchfcd0cic") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-11.1.0 (c (n "symbolic-unreal") (v "11.1.0") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0s3xn9pa9877fldcfnj3lynibj8mbrvh7zs4s50405l4pl3q3spq") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.0.0 (c (n "symbolic-unreal") (v "12.0.0") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0pmv2iav2jjz2nd961b9ipmhk6d7c9s5qaw49rdpf69zf2cgpgif") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.0 (c (n "symbolic-unreal") (v "12.1.0") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "000sm6d9sdp19va55rgdf1kbxz2n8dnl1vax985bcirli3hq7kzz") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.1 (c (n "symbolic-unreal") (v "12.1.1") (d (list (d (n "anylog") (r "^0.6.3") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.7") (d #t) (k 0)) (d (n "elementtree") (r "^1.2.2") (d #t) (k 0)) (d (n "flate2") (r "^1.0.13") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.18.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.5") (d #t) (k 0)) (d (n "scroll") (r "^0.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "similar-asserts") (r "^1.0.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "time") (r "^0.3.5") (f (quote ("formatting"))) (d #t) (k 0)))) (h "16picf6frzglid8cc7l4a750jswzz198z834s9d00gnml137hxd0") (f (quote (("serde" "serde_" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.2 (c (n "symbolic-unreal") (v "12.1.2") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1nm1mi7ns66bax36j9w2c3nxb75wk1i081vl81wyav4h4ipxmbyz") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.3 (c (n "symbolic-unreal") (v "12.1.3") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1sw3h7agkgyk3gm64qk236kvmizqyr7krv1wfas2v0mbdmdwx0xq") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.4 (c (n "symbolic-unreal") (v "12.1.4") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0yjrfqhi3a1jaqp8g83qainpsb6xqs3ywzga3ax2ll71r4243jzq") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.5 (c (n "symbolic-unreal") (v "12.1.5") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1714djr3vlf9jrlnkj4zp69pkskys656mfrj7c2k6x0nqj1qvhcs") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.1.6 (c (n "symbolic-unreal") (v "12.1.6") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0nz0fyd2f4qlllvdkqpfwhfmlhwzkwsvdvn49vwfcj39i6xk9839") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.2.0 (c (n "symbolic-unreal") (v "12.2.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0fx1qsqy7hd8axapj3hq0knzz26vhm2ljng1vp4dpph4ir64knvd") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.3.0 (c (n "symbolic-unreal") (v "12.3.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1kh4bnvp96w9gcvdrb2jv0sl3kkzyk19kvj1lrmmz5i71isql62g") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.4.0 (c (n "symbolic-unreal") (v "12.4.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0w8d00zf758whpnjgm5w42whas16dw1fp2iwq5xag03mq1yxaniw") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.4.1 (c (n "symbolic-unreal") (v "12.4.1") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1909mf64bz90mfbbwrs9vnvbhiyash3p17n1fb3fvlqaid9ipygi") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.5.0 (c (n "symbolic-unreal") (v "12.5.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1br9k2c0jbk9lsn2fsf5kmx9dy3v7zldc7pim943nwafr87lv0y2") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.6.0 (c (n "symbolic-unreal") (v "12.6.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1q2m4ska2z4wg647hvdqn9v5b2zbw1mfdsp9crwqfqlmfdzmk1ix") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.7.0 (c (n "symbolic-unreal") (v "12.7.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "177kbimqxdj6rjyjb5xqf85c0jznc1293jvnil9wb6r387d5m3ar") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.7.1 (c (n "symbolic-unreal") (v "12.7.1") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "1jfp2ybmz5npq695a62q8v2bkmmd50065niblgqggv4jhgjyjsj9") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.8.0 (c (n "symbolic-unreal") (v "12.8.0") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.11.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.154") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "0fsp7022kgvvn7cf0pr4wxiv9j9j9rd5wxmzwsiam745wrdn6crp") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

(define-public crate-symbolic-unreal-12.9.1 (c (n "symbolic-unreal") (v "12.9.1") (d (list (d (n "anylog") (r "^0.6.4") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("std"))) (k 0)) (d (n "elementtree") (r "^1.2.3") (d #t) (k 0)) (d (n "flate2") (r "^1.0.25") (f (quote ("rust_backend"))) (k 0)) (d (n "insta") (r "^1.28.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "scroll") (r "^0.12.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.171") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "similar-asserts") (r "^1.4.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.39") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("formatting"))) (d #t) (k 0)))) (h "04i78l4sjqni67sxlhz0n7qbhxfh2p9myamb0x432v973br0vg82") (s 2) (e (quote (("serde" "dep:serde" "chrono/serde"))))))

