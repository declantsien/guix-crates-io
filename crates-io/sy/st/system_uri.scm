(define-module (crates-io sy st system_uri) #:use-module (crates-io))

(define-public crate-system_uri-0.2.0 (c (n "system_uri") (v "0.2.0") (d (list (d (n "error-chain") (r "^0.11.0-rc") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.2.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "~0.2.29") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2.29") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 2)) (d (n "winapi") (r "~0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "~0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "xdg-basedir") (r "~1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0rh4p3i2g408pqw54aif15bgazszrdwp32qsykjbn6q12cqh1gyp") (f (quote (("ffi" "libc" "ffi_utils") ("default" "ffi"))))))

(define-public crate-system_uri-0.2.2 (c (n "system_uri") (v "0.2.2") (d (list (d (n "error-chain") (r "^0.11.0-rc") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "~0.2.29") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2.29") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 2)) (d (n "winapi") (r "~0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "~0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "xdg-basedir") (r "~1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1d9pj6g5p3r9p9qq1kh0a5igfbs54rgdswg00zkibclcpl4wh29x") (f (quote (("ffi" "libc" "ffi_utils") ("default" "ffi"))))))

(define-public crate-system_uri-0.2.3 (c (n "system_uri") (v "0.2.3") (d (list (d (n "error-chain") (r "^0.11.0-rc") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "~0.2.29") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2.29") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.3.16") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 2)) (d (n "winapi") (r "~0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "~0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "xdg-basedir") (r "~1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "01nzr1f9sxk6azmfqrrdbc00ifl5nr4pwqpdwbiyiikhyhgv66x2") (f (quote (("ffi" "libc" "ffi_utils") ("default" "ffi"))))))

(define-public crate-system_uri-0.3.0 (c (n "system_uri") (v "0.3.0") (d (list (d (n "error-chain") (r "^0.11.0-rc") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.3.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "~0.2.33") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2.33") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 2)) (d (n "winapi") (r "~0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "~0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "xdg-basedir") (r "~1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "171anknq66bm9rj0i50lf7hq2cvazl21n62dbbil18palza0bzy2") (f (quote (("ffi" "libc" "ffi_utils") ("default" "ffi"))))))

(define-public crate-system_uri-0.4.0 (c (n "system_uri") (v "0.4.0") (d (list (d (n "error-chain") (r "^0.11.0-rc") (d #t) (k 0)) (d (n "ffi_utils") (r "~0.4.0") (o #t) (d #t) (k 0)) (d (n "libc") (r "~0.2.33") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "~0.2.33") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.3.18") (d #t) (k 2)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 2)) (d (n "winapi") (r "~0.2.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winreg") (r "~0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "xdg-basedir") (r "~1.0.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0wcghfnp5sczi2gsqpa93wnpxy15b85jg5akvhqda6y9im20z358") (f (quote (("ffi" "libc" "ffi_utils") ("default" "ffi"))))))

