(define-module (crates-io sy nt syntastica-parsers) #:use-module (crates-io))

(define-public crate-syntastica-parsers-0.1.0 (c (n "syntastica-parsers") (v "0.1.0") (d (list (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "syntastica-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "syntastica-macros") (r "^0.1.0") (d #t) (k 1)) (d (n "tree-sitter") (r "^0.20.10") (d #t) (k 0)))) (h "01k7p71jd893mnfq5k9v2xnbjdwyxnh3s9wi1y0cn4n21x3r31f7") (f (quote (("some") ("most" "some") ("default") ("all" "most"))))))

(define-public crate-syntastica-parsers-0.3.0 (c (n "syntastica-parsers") (v "0.3.0") (d (list (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (o #t) (d #t) (k 1)) (d (n "syntastica-core") (r "^0.3.0") (d #t) (k 0)) (d (n "syntastica-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "syntastica-queries") (r "^0.3.0") (d #t) (k 0)) (d (n "tree-sitter-asm") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "^0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "^0.20.3") (o #t) (d #t) (k 0)))) (h "185s57va5djr4p7i87dw6fymficqwh0rd8n7wizjqcbk4m9lbigb") (f (quote (("default") ("all" "most")))) (s 2) (e (quote (("some" "dep:tree-sitter-c" "dep:tree-sitter-cpp" "dep:tree-sitter-css" "dep:tree-sitter-go" "dep:tree-sitter-java" "dep:tree-sitter-javascript" "dep:tree-sitter-json" "dep:tree-sitter-python" "dep:tree-sitter-rust") ("most" "some" "dep:tree-sitter-asm") ("docs" "dep:document-features" "dep:rustc_version"))))))

(define-public crate-syntastica-parsers-0.4.1 (c (n "syntastica-parsers") (v "0.4.1") (d (list (d (n "document-features") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (o #t) (d #t) (k 1)) (d (n "strum") (r "^0.25.0") (f (quote ("derive" "phf"))) (d #t) (k 0)) (d (n "syntastica-core") (r "^0.4.1") (f (quote ("runtime-c"))) (k 0)) (d (n "syntastica-macros") (r "^0.4.1") (d #t) (k 0)) (d (n "syntastica-queries") (r "^0.4.1") (d #t) (k 0)) (d (n "tree-sitter-asm") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c") (r "=0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-c-sharp") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-comment") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-cpp") (r "=0.20.2") (o #t) (d #t) (k 0)) (d (n "tree-sitter-css") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ebnf") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-embedded-template") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-go") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-hexdump") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-java") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-javascript") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-json") (r "=0.19.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-lua") (r "=0.0.18") (o #t) (d #t) (k 0)) (d (n "tree-sitter-md") (r "=0.1.5") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ocaml") (r "=0.20.4") (o #t) (d #t) (k 0)) (d (n "tree-sitter-python") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-regex") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-ruby") (r "=0.20.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rush") (r "=0.1.0") (o #t) (d #t) (k 0)) (d (n "tree-sitter-rust") (r "=0.20.3") (o #t) (d #t) (k 0)) (d (n "tree-sitter-scala") (r "=0.20.1") (o #t) (d #t) (k 0)) (d (n "tree-sitter-toml") (r "=0.20.0") (o #t) (d #t) (k 0)))) (h "1sh4shbf3xjdsaryk4iymma393vxbzkcjhsx03l8rdxvmk2walas") (f (quote (("some" "c" "cpp" "css" "go" "java" "javascript" "json" "lua" "python" "rust" "toml") ("most" "some" "asm" "c_sharp" "comment" "markdown" "markdown_inline" "regex" "ruby" "scala") ("default") ("all" "most" "ebnf" "ejs" "erb" "hexdump" "ocaml" "ocaml_interface" "rush")))) (s 2) (e (quote (("toml" "dep:tree-sitter-toml") ("scala" "dep:tree-sitter-scala") ("rust" "dep:tree-sitter-rust") ("rush" "dep:tree-sitter-rush") ("ruby" "dep:tree-sitter-ruby") ("regex" "dep:tree-sitter-regex") ("python" "dep:tree-sitter-python") ("ocaml_interface" "dep:tree-sitter-ocaml") ("ocaml" "dep:tree-sitter-ocaml") ("markdown_inline" "dep:tree-sitter-md") ("markdown" "dep:tree-sitter-md") ("lua" "dep:tree-sitter-lua") ("json" "dep:tree-sitter-json") ("javascript" "dep:tree-sitter-javascript") ("java" "dep:tree-sitter-java") ("hexdump" "dep:tree-sitter-hexdump") ("go" "dep:tree-sitter-go") ("erb" "dep:tree-sitter-embedded-template") ("ejs" "dep:tree-sitter-embedded-template") ("ebnf" "dep:tree-sitter-ebnf") ("docs" "dep:document-features" "dep:rustc_version") ("css" "dep:tree-sitter-css") ("cpp" "dep:tree-sitter-cpp") ("comment" "dep:tree-sitter-comment") ("c_sharp" "dep:tree-sitter-c-sharp") ("c" "dep:tree-sitter-c") ("asm" "dep:tree-sitter-asm"))))))

