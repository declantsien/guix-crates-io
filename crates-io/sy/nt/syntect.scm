(define-module (crates-io sy nt syntect) #:use-module (crates-io))

(define-public crate-syntect-0.3.2 (c (n "syntect") (v "0.3.2") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "1jlmq7xd1g5jlmg74cwaq7kz0hz4biklgqsr0l2rdrvsp7wl0fzb")))

(define-public crate-syntect-0.3.3 (c (n "syntect") (v "0.3.3") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0s2ydlcpgvnpfffir73a49di6lzsxmi50s9a0ydqdylxp68f1il0")))

(define-public crate-syntect-0.4.0 (c (n "syntect") (v "0.4.0") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "1yiv0ppd2kf548a7w8wy585dcj04adcwdragcbaxvdcm89zfm520")))

(define-public crate-syntect-0.5.0 (c (n "syntect") (v "0.5.0") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "1wf6rk469ah68d72li26vislgr0c1dzg3alj04qx7h52s2a7rq6j")))

(define-public crate-syntect-0.6.0 (c (n "syntect") (v "0.6.0") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0vzkdx32ivfqln5g7vrmv0i8diw3dg34xvdcxbqz9sd9p95gv2hn")))

(define-public crate-syntect-0.7.0 (c (n "syntect") (v "0.7.0") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0lkix6h3y2hvpqa5r3sbfr8bc9xlgs1xbwjqg7k7k39p7fr6ngnk")))

(define-public crate-syntect-1.0.0 (c (n "syntect") (v "1.0.0") (d (list (d (n "bincode") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^0.6") (d #t) (k 0)) (d (n "plist") (r "^0.0.13") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0xm1pcqn4daisyc7ljs85lj8mc06grsmymi0krsxq1vfspdixvqv")))

(define-public crate-syntect-1.0.1 (c (n "syntect") (v "1.0.1") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^1.1.0") (d #t) (k 0)) (d (n "plist") (r "^0.0.14") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0lw4asxydim6m6m1zm9jl1sxk2kfwhg8gkq1nwzril3a95qsql99")))

(define-public crate-syntect-1.0.2 (c (n "syntect") (v "1.0.2") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^1.1.0") (d #t) (k 0)) (d (n "plist") (r "^0.0.14") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0hpmzhl43lqrhcmn1yvrsj16q0frh92gfi3l2sc9q9gbxh5q76yq")))

(define-public crate-syntect-1.0.3 (c (n "syntect") (v "1.0.3") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^1.1.0") (d #t) (k 0)) (d (n "plist") (r "^0.0.14") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "0zc0zv9bvb2aqxgmh50a4v462ygg2z2xzanc1fmp6l6qfalli4zc")))

(define-public crate-syntect-1.0.4 (c (n "syntect") (v "1.0.4") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^1.1.0") (d #t) (k 0)) (d (n "plist") (r "^0.0.14") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "1s0kccll4w7fb3rhhwnxbdm1b9cmdfjsiv8i1jw1p6ynkwpbg9wb") (f (quote (("static-onig" "onig/static-libonig"))))))

(define-public crate-syntect-1.1.0 (c (n "syntect") (v "1.1.0") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.7") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.1") (d #t) (k 0)) (d (n "onig") (r "^1.1.0") (d #t) (k 0)) (d (n "plist") (r "^0.0.14") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.3.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3") (d #t) (k 0)))) (h "1zf09xb39k9szkpsqmyd5ya6a5wpiivq3ana6l2wkygplzgpimp9") (f (quote (("static-onig" "onig/static-libonig"))))))

(define-public crate-syntect-1.1.1 (c (n "syntect") (v "1.1.1") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (d #t) (k 0)) (d (n "plist") (r "^0.1.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (d #t) (k 0)))) (h "12l43nvkjhgndydbmgswbbr2anlmk8ap8chvww4zmmb8mw2bwy9z") (f (quote (("static-onig" "onig/static-libonig"))))))

(define-public crate-syntect-1.2.0 (c (n "syntect") (v "1.2.0") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "onig") (r "^1.2.0") (d #t) (k 0)) (d (n "plist") (r "^0.1.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (d #t) (k 0)))) (h "0z2ffni39i0ppd0m84ijzfwi132mwcw0x6yk2wfpawfrpglyfa37") (f (quote (("static-onig" "onig/static-libonig") ("html" "assets") ("default" "assets" "html") ("assets"))))))

(define-public crate-syntect-1.3.0 (c (n "syntect") (v "1.3.0") (d (list (d (n "bincode") (r "^0.6") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "onig") (r "^1.2") (d #t) (k 0)) (d (n "plist") (r "^0.1.1") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "0sabdmym6yv2nq534ipwswpsqifwy45rs8abbx7ghjfx9cgln814") (f (quote (("yaml-load" "yaml-rust") ("static-onig" "onig/static-libonig") ("html" "assets") ("default" "assets" "html" "yaml-load") ("assets"))))))

(define-public crate-syntect-1.4.0 (c (n "syntect") (v "1.4.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "1ifwr2lc050509rnssalj132khqvxw3bx56j3c152ibmv9vc2i67") (f (quote (("yaml-load" "yaml-rust") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("default" "parsing" "assets" "html" "yaml-load") ("assets"))))))

(define-public crate-syntect-1.5.0 (c (n "syntect") (v "1.5.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "0snar0y9y9npl6airx02cx4a90bk2c9gn7jnijczwhjw3ikabmzy") (f (quote (("yaml-load" "yaml-rust") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("default" "parsing" "assets" "html" "yaml-load") ("assets"))))))

(define-public crate-syntect-1.6.0 (c (n "syntect") (v "1.6.0") (d (list (d (n "bincode") (r "^0.8") (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "0xpysqvl06a3pvzd5j3as60g3pkblihc51hf0bwf50nzs49mdxz2") (f (quote (("yaml-load" "yaml-rust") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("default" "parsing" "assets" "html" "yaml-load") ("assets"))))))

(define-public crate-syntect-1.7.0 (c (n "syntect") (v "1.7.0") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "0ah8dgbphl41rzcvlh63c9i5g0nbkg6ra2xja7gvzsxnwm2n6hrg") (f (quote (("yaml-load" "yaml-rust" "parsing") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-1.7.1 (c (n "syntect") (v "1.7.1") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "1n07ihlz6d0dmzpjhrj7w37q6rrmrfaf5ag3vd9ny3v00a8wgbh6") (f (quote (("yaml-load" "yaml-rust" "parsing") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-1.7.2 (c (n "syntect") (v "1.7.2") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "134m4729m0njvdi4j0z8v04zmjd5pqy2xxyfj9ldv3ykqfi45p7g") (f (quote (("yaml-load" "yaml-rust" "parsing") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-1.7.3 (c (n "syntect") (v "1.7.3") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "1mh7mqh4dxy09bfgk6gyx1j2yab89qcnrgzaknmysqhmbw5mybc8") (f (quote (("yaml-load" "yaml-rust" "parsing") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-1.8.0 (c (n "syntect") (v "1.8.0") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "1f19nlzj2z1xishl4v0is4xzf3rxryy99mqzmmmf5mic5ikjn3mq") (f (quote (("yaml-load" "yaml-rust" "parsing") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-1.8.1 (c (n "syntect") (v "1.8.1") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "1ig304wa9037i84mnsjrw13yaaczgqrjbzcxr6qplcl8bhh9hn7z") (f (quote (("yaml-load" "yaml-rust" "parsing") ("static-onig" "onig/static-libonig") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-1.8.2 (c (n "syntect") (v "1.8.2") (d (list (d (n "bincode") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^0.8.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^1.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.3.5") (o #t) (d #t) (k 0)))) (h "0nkmdwqiv4j8bf5ng3fb1g4fvsqylphkjkgh58rsz101vjfdsbwx") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets")))) (y #t)))

(define-public crate-syntect-2.0.0 (c (n "syntect") (v "2.0.0") (d (list (d (n "bincode") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libflate") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "onig") (r "^3.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.4.0") (d #t) (k 2)) (d (n "rayon") (r "^0.9.0") (d #t) (k 2)) (d (n "regex") (r "^0.2.1") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1b99f53n7qks2siiw7n5rdzzak6mzhfbs49qyn6i2qd74p5zz7yv") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "libflate" "bincode") ("dump-load" "flate2" "bincode") ("dump-create-rs" "libflate" "bincode") ("dump-create" "flate2" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-2.0.1 (c (n "syntect") (v "2.0.1") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "01nnapvdbb0i8c5xajkfp3apcb7ni9lma055yw08x7jcd0gldszc") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-2.1.0 (c (n "syntect") (v "2.1.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^0.2") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0y7cgjfxwxca4dmpq9av4ar4drqi0hk0vhi20lsgqjldp06nz2nw") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.0.0 (c (n "syntect") (v "3.0.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^4.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1mz2v4cxnfa8m62n26sqzlcnifasyx9szy7faw3bcidc93xqdish") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.0.1 (c (n "syntect") (v "3.0.1") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^4.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1zq6w7mqp2sa9y5pc539j7yw69dc33q03pyksa72q0dlp2nd0vmp") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.0.2 (c (n "syntect") (v "3.0.2") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^4.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.5.0") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "16jrpgd4axh75argvz3sw4ygraqhqqjgya6fb802v2m6jzgxjbg0") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.1.0 (c (n "syntect") (v "3.1.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^4.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "04djb2gidbp9nqrh1s26m8vbzp4ll6wx0s4zh74k6lb5j4dx9zkj") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.2.0 (c (n "syntect") (v "3.2.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^4.1") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0yqnja471ddz90q8wm8mmk37jxg5y0fg09rpzhpijhx5qlqqh2z8") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.2.1 (c (n "syntect") (v "3.2.1") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0ily2w2h14s38h80nphyvkb7g5bynnjn06xhs23i3j6m9y0ihnzv") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-3.3.0 (c (n "syntect") (v "3.3.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1f6qn1yy15b0hq9h6q1rikqnm3lh56ic6bq3ywsmdsjy8ni9splm") (f (quote (("yaml-load" "yaml-rust" "parsing") ("parsing" "onig" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create") ("assets"))))))

(define-public crate-syntect-4.0.0 (c (n "syntect") (v "4.0.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0dbf4a0zdn2kfi48apjp8fw4n2l110dq5l58lv3l3dv97xkn9rnh") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.1.0 (c (n "syntect") (v "4.1.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0cf7hj4dia1r9an1vm7s05scydfdj2jdnwg3whcyjc77wrmmwkr7") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.1.1 (c (n "syntect") (v "4.1.1") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^5.0") (o #t) (d #t) (k 0)) (d (n "plist") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "08gnswryxph77mmfwl3wxkp2gl7v4ffgvic3xgxkk3nkliv95ivb") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.2.0 (c (n "syntect") (v "4.2.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "078n87bi76qi2nyyq314ms9qgz1zm2g5qq9vjc6cp742l5n3md43") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing" "assets") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.3.0 (c (n "syntect") (v "4.3.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1nzfh8r72k4l4jbrc7w9cjjcz90hj9amrgimyrwvr4a8rzylaymm") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.4.0 (c (n "syntect") (v "4.4.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "121y6rswylvbhaz8krjb9aa7h16f6ly2sdbbka1hr1dm0pgphfaf") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.5.0 (c (n "syntect") (v "4.5.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1r9ij3qmq4cs83jwpk1043sai1dwdghb8lwkm34rs12d7frc5yib") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.6.0 (c (n "syntect") (v "4.6.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "lazycell") (r "^1.0") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "0cd0rbi5r83p9pqph0gyj3vgr18ihh54amv9dvh0pvl0prdq284b") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing") ("html" "parsing") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets"))))))

(define-public crate-syntect-4.7.0 (c (n "syntect") (v "4.7.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "fancy-regex") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1p1hr7iqgv3lhim72bpd3cghp15gq7ah0l7irn8fl8sj53ds2zmj") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("plist-load" "plist") ("parsing" "regex-syntax" "fnv") ("metadata" "parsing" "plist-load") ("html" "parsing") ("dump-load-rs" "flate2/rust_backend" "bincode") ("dump-load" "flate2/default" "bincode") ("dump-create-rs" "flate2/rust_backend" "bincode") ("dump-create" "flate2/default" "bincode") ("default-onig" "parsing" "assets" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets")))) (y #t)))

(define-public crate-syntect-4.7.1 (c (n "syntect") (v "4.7.1") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "fancy-regex") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "15il843v6csn2w0pv9mrxdbn69ycvngs4a7fm214wv8j90bl777c") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("parsing" "regex-syntax" "fnv" "dump-create" "dump-load") ("metadata" "parsing") ("html" "parsing") ("dump-load-rs" "dump-load") ("dump-load" "flate2" "bincode") ("dump-create-rs" "dump-create") ("dump-create" "flate2" "bincode") ("default-onig" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "assets" "html" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig") ("assets")))) (y #t)))

(define-public crate-syntect-5.0.0 (c (n "syntect") (v "5.0.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "fancy-regex") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1a3n6mial29jv916wg7y0qlqs26da0yalfl0qy29lzcxgp159i66") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("plist-load" "plist") ("parsing" "regex-syntax" "fnv" "dump-create" "dump-load") ("metadata" "parsing" "plist-load") ("html" "parsing") ("dump-load" "flate2" "bincode") ("dump-create" "flate2" "bincode") ("default-themes" "dump-load") ("default-syntaxes" "parsing" "dump-load") ("default-onig" "parsing" "default-syntaxes" "default-themes" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "default-syntaxes" "default-themes" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig"))))))

(define-public crate-syntect-5.1.0 (c (n "syntect") (v "5.1.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "fancy-regex") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "14cg314vzabi45cdbqgcpav0dlx3d18blp24n3z8pl7q7cq4naz0") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("plist-load" "plist") ("parsing" "regex-syntax" "fnv" "dump-create" "dump-load") ("metadata" "parsing" "plist-load") ("html" "parsing") ("dump-load" "flate2" "bincode") ("dump-create" "flate2" "bincode") ("default-themes" "dump-load") ("default-syntaxes" "parsing" "dump-load") ("default-onig" "parsing" "default-syntaxes" "default-themes" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "default-syntaxes" "default-themes" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig"))))))

(define-public crate-syntect-5.2.0 (c (n "syntect") (v "5.2.0") (d (list (d (n "bincode") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fancy-regex") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "onig") (r "^6.0") (o #t) (k 0)) (d (n "plist") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "public-api") (r "^0.33.1") (d #t) (k 2)) (d (n "rayon") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "regex-syntax") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rustdoc-json") (r "^0.8.8") (d #t) (k 2)) (d (n "rustup-toolchain") (r "^0.1.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2.0") (d #t) (k 0)) (d (n "yaml-rust") (r "^0.4.5") (o #t) (d #t) (k 0)))) (h "1ca68wxr8qs99ivqc266492sz8qwfngswizr7hrh8mlrcfiwykc7") (f (quote (("yaml-load" "yaml-rust" "parsing") ("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("plist-load" "plist") ("parsing" "regex-syntax" "fnv" "dump-create" "dump-load") ("metadata" "parsing" "plist-load") ("html" "parsing") ("dump-load" "flate2" "bincode") ("dump-create" "flate2" "bincode") ("default-themes" "dump-load") ("default-syntaxes" "parsing" "dump-load") ("default-onig" "parsing" "default-syntaxes" "default-themes" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-onig") ("default-fancy" "parsing" "default-syntaxes" "default-themes" "html" "plist-load" "yaml-load" "dump-load" "dump-create" "regex-fancy") ("default" "default-onig"))))))

