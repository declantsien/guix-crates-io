(define-module (crates-io sy n- syn-next) #:use-module (crates-io))

(define-public crate-syn-next-0.15.0-rc1 (c (n "syn-next") (v "0.15.0-rc1") (d (list (d (n "proc-macro2") (r "^0.4.4") (k 0)) (d (n "quote") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "1389acbgfzq5707x952c95whavfvazapgc7925jynccx5kxv1z99") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2/proc-macro" "quote/proc-macro") ("printing" "quote") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-0.15.0-rc2 (c (n "syn-next") (v "0.15.0-rc2") (d (list (d (n "proc-macro2") (r "^0.4.4") (k 0)) (d (n "quote") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "123axgrp7jnj1l8n80972a74zdwmyaqrjk82wqcc6y4rq7hqsny7") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2/proc-macro" "quote/proc-macro") ("printing" "quote") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-0.15.0-rc3 (c (n "syn-next") (v "0.15.0-rc3") (d (list (d (n "proc-macro2") (r "^0.4.4") (k 0)) (d (n "quote") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "1jjca9mv1zh2mlr8g7yjs59k60kv56xw2qpkl75ibxrv833n98bx") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2/proc-macro" "quote/proc-macro") ("printing" "quote") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-0.15.0-rc4 (c (n "syn-next") (v "0.15.0-rc4") (d (list (d (n "proc-macro2") (r "^0.4.4") (k 0)) (d (n "quote") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "02gb2zdg5ripymipi1q2qmpqv7ai04i4yh8qs4i7qdps3iisp0bf") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2/proc-macro" "quote/proc-macro") ("printing" "quote") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-1.0.0-rc1 (c (n "syn-next") (v "1.0.0-rc1") (d (list (d (n "insta") (r "^0.9") (d #t) (k 2)) (d (n "proc-macro2-next") (r "^1.0.0-rc1") (k 0)) (d (n "quote-next") (r "^1.0.0-rc1") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "ref-cast") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "termcolor") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "1yrm0hqm77s51bd4lnr6m0gf63hgjf4kimv9z3fwr7nlhmqf09gm") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2-next/proc-macro" "quote-next/proc-macro") ("printing" "quote-next") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-1.0.0-rc2 (c (n "syn-next") (v "1.0.0-rc2") (d (list (d (n "insta") (r "^0.9") (d #t) (k 2)) (d (n "proc-macro2-next") (r "^1.0.0-rc1") (k 0)) (d (n "quote-next") (r "^1.0.0-rc1") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "ref-cast") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "termcolor") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "1h6jyznsx1j3k751hlbgd1z65qj097kyb8fjykzdj8vqdqnsciv3") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2-next/proc-macro" "quote-next/proc-macro") ("printing" "quote-next") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-1.0.0-rc3 (c (n "syn-next") (v "1.0.0-rc3") (d (list (d (n "insta") (r "^0.9") (d #t) (k 2)) (d (n "proc-macro2-next") (r "^1.0.0-rc3") (k 0)) (d (n "quote-next") (r "^1.0.0-rc3") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "ref-cast") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "termcolor") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "04jgnv98w1gf5idzk5m8sca7vs7r19ygjsgwwrb5lbjcfs358735") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2-next/proc-macro" "quote-next/proc-macro") ("printing" "quote-next") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

(define-public crate-syn-next-1.0.0-rc4 (c (n "syn-next") (v "1.0.0-rc4") (d (list (d (n "insta") (r "^0.9") (d #t) (k 2)) (d (n "proc-macro2-next") (r "^1.0.0-rc3") (k 0)) (d (n "quote-next") (r "^1.0.0-rc3") (o #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 2)) (d (n "ref-cast") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 2)) (d (n "termcolor") (r "^1.0") (d #t) (k 2)) (d (n "unicode-xid") (r "^0.2") (d #t) (k 0)) (d (n "walkdir") (r "^2.1") (d #t) (k 2)))) (h "1hhcz2l5ir5q66k8mv08r28g3awh210zq934l1x9yfn5py7qxmpg") (f (quote (("visit-mut") ("visit") ("proc-macro" "proc-macro2-next/proc-macro" "quote-next/proc-macro") ("printing" "quote-next") ("parsing") ("full") ("fold") ("extra-traits") ("derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls")))) (y #t)))

