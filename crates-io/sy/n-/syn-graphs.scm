(define-module (crates-io sy n- syn-graphs) #:use-module (crates-io))

(define-public crate-syn-graphs-0.1.0 (c (n "syn-graphs") (v "0.1.0") (d (list (d (n "colored") (r "^2.0.4") (d #t) (k 2)) (d (n "derive-quote-to-tokens") (r "^0.1.0") (d #t) (k 0)) (d (n "derive-syn-parse") (r "^0.1.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("display"))) (k 0)) (d (n "either") (r "^1.9.0") (d #t) (k 2)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "miette") (r "^5.10.0") (f (quote ("fancy"))) (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.67") (f (quote ("span-locations"))) (k 0)) (d (n "proc-macro2") (r "^1.0.67") (f (quote ("span-locations"))) (k 2)) (d (n "quote") (r "^1.0.33") (k 0)) (d (n "syn") (r "^2.0.37") (f (quote ("parsing" "printing" "extra-traits"))) (k 0)) (d (n "syn-miette") (r "^0.1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 2)))) (h "0flawhmnd9bsxbi1z272pp46fs8vg1rksfwj3h23qfgfdd4w1myr")))

(define-public crate-syn-graphs-0.2.0 (c (n "syn-graphs") (v "0.2.0") (d (list (d (n "colored") (r "^2.0.4") (d #t) (k 2)) (d (n "derive-quote-to-tokens") (r "^0.1.1") (d #t) (k 0)) (d (n "derive-syn-parse") (r "^0.1.5") (d #t) (k 0)) (d (n "include_dir") (r "^0.7.3") (d #t) (k 2)) (d (n "miette") (r "^5.10.0") (f (quote ("fancy"))) (d #t) (k 2)) (d (n "petgraph") (r "^0.6.4") (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.67") (f (quote ("span-locations"))) (k 0)) (d (n "quote") (r "^1.0.33") (k 0)) (d (n "syn") (r "^2.0.37") (f (quote ("parsing" "printing" "extra-traits" "clone-impls"))) (k 0)) (d (n "syn-miette") (r "^0.1.0") (d #t) (k 2)))) (h "1why1jjsvhbqjd2ycycd9gssymp87cjbrrgw68n694847c7bn9jq")))

