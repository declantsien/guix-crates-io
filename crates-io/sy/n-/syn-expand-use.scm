(define-module (crates-io sy n- syn-expand-use) #:use-module (crates-io))

(define-public crate-syn-expand-use-0.1.0 (c (n "syn-expand-use") (v "0.1.0") (d (list (d (n "quote") (r "^0.5.1") (o #t) (k 0)) (d (n "quote") (r "^0.5.1") (d #t) (k 2)) (d (n "syn") (r "^0.13.1") (f (quote ("full"))) (k 0)) (d (n "syn") (r "^0.13.1") (f (quote ("full" "extra-traits"))) (d #t) (k 2)))) (h "1143ghcrr2b94y4kjcsy9dbhx5wy5svyf9f5mwp8aspd0m5qx5zv") (f (quote (("visit-mut" "syn/visit-mut") ("visit" "syn/visit") ("proc-macro" "syn/proc-macro" "quote/proc-macro") ("printing" "syn/printing" "quote") ("parsing" "syn/parsing") ("fold" "syn/fold") ("extra-traits" "syn/extra-traits") ("derive" "syn/derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls" "syn/clone-impls"))))))

(define-public crate-syn-expand-use-0.2.0 (c (n "syn-expand-use") (v "0.2.0") (d (list (d (n "quote") (r "^0.5.1") (o #t) (k 0)) (d (n "quote") (r "^0.5.1") (d #t) (k 2)) (d (n "syn") (r "^0.13.1") (f (quote ("full"))) (k 0)) (d (n "syn") (r "^0.13.1") (f (quote ("full" "extra-traits"))) (d #t) (k 2)))) (h "0vngqwfzcmwkhpmd1ns88lm61p12vha3kkf2840bhdwy8v5y23mf") (f (quote (("visit-mut" "syn/visit-mut") ("visit" "syn/visit") ("proc-macro" "syn/proc-macro" "quote/proc-macro") ("printing" "syn/printing" "quote") ("parsing" "syn/parsing") ("fold" "syn/fold") ("extra-traits" "syn/extra-traits") ("derive" "syn/derive") ("default" "derive" "parsing" "printing" "clone-impls" "proc-macro") ("clone-impls" "syn/clone-impls"))))))

