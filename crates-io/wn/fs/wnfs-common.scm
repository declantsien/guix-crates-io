(define-module (crates-io wn fs wnfs-common) #:use-module (crates-io))

(define-public crate-wnfs-common-0.1.18 (c (n "wnfs-common") (v "0.1.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1b1zfr0gz38svvqjkpl3nwcmmg9k626zj665qrg89nj8hhww3r9r") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-common-0.1.19 (c (n "wnfs-common") (v "0.1.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1la646i27j9y7k99vj6saaql9m54hk2g2nnmbxjja1fasnm0zdza") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-common-0.1.20 (c (n "wnfs-common") (v "0.1.20") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ha19sw1knq4ffn3pc9sgawmc6d89541wms2q0b5n07vry6075xm") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-common-0.1.21 (c (n "wnfs-common") (v "0.1.21") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1f1ylridcw52hwaaff3b9xb3qjm78m0lb0f5gbqgw4kn7rpg2vvf") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-common-0.1.23 (c (n "wnfs-common") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1dr45rhq0wl0ly5490wjs4wk2qvgxifc1s6skbaflriq9xcb9z2x") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-common-0.1.24 (c (n "wnfs-common") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "base64-serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64-serde") (r "^0.7") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1n54ig7gvdykdhg4spsz14hg0hx8dbpk79x8fpqvpfrvnw1x4z8f") (s 2) (e (quote (("test_utils" "dep:proptest" "dep:base64-serde" "dep:base64" "dep:serde_json"))))))

(define-public crate-wnfs-common-0.1.22 (c (n "wnfs-common") (v "0.1.22") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gkbdpc59nkrniha4bzz3sx9i5vwid2bxf14lij04b8q5ap5ykx6") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-common-0.1.25 (c (n "wnfs-common") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "base64-serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64-serde") (r "^0.7") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08b5diqzbpsbhbjx6ahr5qq3zfmkkhwybyh0c5ia0q59km12jq5j") (s 2) (e (quote (("test_utils" "dep:proptest" "dep:base64-serde" "dep:base64" "dep:serde_json"))))))

(define-public crate-wnfs-common-0.1.26 (c (n "wnfs-common") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "base64-serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64-serde") (r "^0.7") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_ipld_dagcbor") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1azganrrp8z5g4p9rjmf4xpsw7mgqm9y33s4sdhg0ba071za958k") (s 2) (e (quote (("test_utils" "dep:proptest" "dep:base64-serde" "dep:base64" "dep:serde_json"))))))

(define-public crate-wnfs-common-0.2.0 (c (n "wnfs-common") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 2)) (d (n "base64-serde") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64-serde") (r "^0.7") (d #t) (k 2)) (d (n "bytes") (r "^1.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock" "std"))) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "dashmap") (r "^5.5.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_ipld_dagcbor") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1wzl9qvxfx9s4fvcks79w75bv3fj64zinpaymq7lakfcrjg1la0v") (s 2) (e (quote (("test_utils" "dep:proptest" "dep:base64-serde" "dep:base64" "dep:serde_json")))) (r "1.75")))

