(define-module (crates-io wn fs wnfs-nameaccumulator) #:use-module (crates-io))

(define-public crate-wnfs-nameaccumulator-0.1.23 (c (n "wnfs-nameaccumulator") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8.2") (f (quote ("prime" "zeroize"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "1lbnbj4v30pd4as0na5zhilks6skvyvx10gylvv3618alcqdlkjh")))

(define-public crate-wnfs-nameaccumulator-0.1.25 (c (n "wnfs-nameaccumulator") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8.2") (f (quote ("prime" "zeroize"))) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "0442408qfp1sbfk958pz0kkb3kq5czgdypb12wxskzbz673m3crx")))

(define-public crate-wnfs-nameaccumulator-0.1.26 (c (n "wnfs-nameaccumulator") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8.2") (f (quote ("prime" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rug") (r "^1.22") (f (quote ("rand" "integer" "num-traits"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "=0.1.26") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "14s5v4jc9hhrh0zk00myarj7a04kpcaqq547jx9lxz62bpqkh76m") (f (quote (("default" "num-bigint-dig")))) (s 2) (e (quote (("rug" "dep:rug") ("num-bigint-dig" "dep:num-bigint-dig"))))))

(define-public crate-wnfs-nameaccumulator-0.2.0 (c (n "wnfs-nameaccumulator") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "insta") (r "^1.31.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "num-bigint-dig") (r "^0.8.2") (f (quote ("prime" "zeroize"))) (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.45") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "rug") (r "^1.24") (f (quote ("rand" "integer" "num-traits"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.9") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "=0.2.0") (d #t) (k 0)) (d (n "zeroize") (r "^1.6") (d #t) (k 0)))) (h "0bcx2gm1h94f3d31nll57n0wm60pxilpic9wgjw8vkkl3lj3aypm") (f (quote (("default" "num-bigint-dig")))) (s 2) (e (quote (("rug" "dep:rug") ("num-bigint-dig" "dep:num-bigint-dig"))))))

