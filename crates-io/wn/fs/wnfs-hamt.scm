(define-module (crates-io wn fs wnfs-hamt) #:use-module (crates-io))

(define-public crate-wnfs-hamt-0.1.18 (c (n "wnfs-hamt") (v "0.1.18") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.18") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.18") (f (quote ("test_utils"))) (d #t) (k 2)))) (h "1ipvy4qdia834skb31c072brqyn4lh4kv2vyxy5zjpr5sw721vzh") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.19 (c (n "wnfs-hamt") (v "0.1.19") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.19") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.19") (f (quote ("test_utils"))) (d #t) (k 2)))) (h "0dq7h1p53dki52s5h01p22c2bb049hyxxkwckfaddg8jgbm2qg2k") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.20 (c (n "wnfs-hamt") (v "0.1.20") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.20") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.20") (f (quote ("test_utils"))) (d #t) (k 2)))) (h "0z98bsk9k6584md0qhkn9p9y0h8jzmhdlnjgjaf33fpidgmzbpcl") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.21 (c (n "wnfs-hamt") (v "0.1.21") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "sha3") (r "^0.10") (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.21") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.21") (f (quote ("test_utils"))) (d #t) (k 2)))) (h "1rc4ix575lhj64i9fkfgajz01ff9kbcg1ky62gsczjscdlfiv2p6") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.23 (c (n "wnfs-hamt") (v "0.1.23") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.23") (d #t) (k 0)))) (h "0r4vk5vgimyvrb1da2gqy3xll8vvl2sl5dsmb9pfwhinvwxma6jf") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.24 (c (n "wnfs-hamt") (v "0.1.24") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "insta") (r "^1.30") (f (quote ("json"))) (d #t) (k 0)) (d (n "insta") (r "^1.30") (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-byte-array") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "^0.1.24") (d #t) (k 0)))) (h "0vlyr83vxmhnmb5z4mmrlxg5f6yfq4gywmwch0i702an283fb8dh") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.25 (c (n "wnfs-hamt") (v "0.1.25") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "insta") (r "^1.30") (f (quote ("json"))) (d #t) (k 0)) (d (n "insta") (r "^1.30") (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-byte-array") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "=0.1.25") (d #t) (k 0)))) (h "0wkm1pjzrcl7plcjmjc209jj94f6m7j58pln6xbgykib6dlw81qg") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.1.26 (c (n "wnfs-hamt") (v "0.1.26") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "insta") (r "^1.30") (f (quote ("json"))) (d #t) (k 0)) (d (n "insta") (r "^1.30") (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-byte-array") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_ipld_dagcbor") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "testresult") (r "^0.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "=0.1.26") (d #t) (k 0)))) (h "1m2318phyfsskskmmfmympwvj4h8pw81w2a43ky9f40jj851x9bx") (f (quote (("test_utils" "proptest"))))))

(define-public crate-wnfs-hamt-0.2.0 (c (n "wnfs-hamt") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "bitvec") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "blake3") (r "^1.4") (f (quote ("traits-preview"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock" "std"))) (k 0)) (d (n "either") (r "^1.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "insta") (r "^1.30") (f (quote ("json"))) (d #t) (k 0)) (d (n "insta") (r "^1.30") (d #t) (k 2)) (d (n "libipld") (r "^0.16") (f (quote ("dag-cbor" "derive" "serde-codec"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "multihash") (r "^0.18") (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "proptest") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "semver") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde-byte-array") (r "^0.1.2") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.12") (d #t) (k 0)) (d (n "serde_ipld_dagcbor") (r "^0.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 2)) (d (n "test-strategy") (r "^0.3") (d #t) (k 2)) (d (n "testresult") (r "^0.3.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wnfs-common") (r "=0.2.0") (d #t) (k 0)))) (h "0vnwxdgb1h8qcyh05c3fgig9d601wrqm0zafaia58155hnkzzwb1") (f (quote (("test_utils" "proptest")))) (r "1.75")))

