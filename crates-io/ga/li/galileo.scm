(define-module (crates-io ga li galileo) #:use-module (crates-io))

(define-public crate-galileo-0.1.0-alpha.0 (c (n "galileo") (v "0.1.0-alpha.0") (d (list (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.13.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "csv") (r "^1.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "galileo-mvt") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "galileo-types") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "geo") (r "^0.27") (d #t) (k 2)) (d (n "geo-types") (r "^0.7") (d #t) (k 2)) (d (n "geozero") (r "^0.11") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (o #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1") (d #t) (k 0)) (d (n "maybe-sync") (r "^0.1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "maybe-sync") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "notify") (r "^6.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "rt" "rt-multi-thread"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "HtmlImageElement" "HtmlCanvasElement" "CanvasRenderingContext2d" "ImageData" "Request" "Headers" "RequestInit" "RequestMode" "Response" "Worker" "DedicatedWorkerGlobalScope" "MessageEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (d #t) (k 0)))) (h "1xkb14p14i7skf4gfrqz22rnq0dixp957vgclklkvhxqdh6sc0rc") (f (quote (("web" "wasm-bindgen-futures" "serde") ("default" "wgpu" "tokio" "image" "serde"))))))

(define-public crate-galileo-0.1.0 (c (n "galileo") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "csv") (r "^1.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "galileo-mvt") (r "^0.1.0") (d #t) (k 0)) (d (n "galileo-types") (r "^0.1.0") (d #t) (k 0)) (d (n "geo") (r "^0.27") (d #t) (k 2)) (d (n "geo-types") (r "^0.7") (d #t) (k 2)) (d (n "geojson") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "geojson") (r "^0.24") (d #t) (k 2)) (d (n "geozero") (r "^0.11") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "las") (r "^0.8") (f (quote ("laz"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1") (d #t) (k 0)) (d (n "maybe-sync") (r "^0.1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "maybe-sync") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "notify") (r "^6.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "quick_cache") (r "^0.4") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("native-tls-vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-derive") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "HtmlImageElement" "HtmlCanvasElement" "CanvasRenderingContext2d" "ImageData" "Request" "Headers" "RequestInit" "RequestMode" "Response" "Worker" "DedicatedWorkerGlobalScope" "MessageEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (o #t) (d #t) (k 0)))) (h "0cp06060z7a0zbsn3kxf1319a0i79lnlnbvbhzy4jxa1a9fas8qz") (f (quote (("default" "wgpu" "serde" "winit") ("_tests")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "raw-window-handle") ("geojson" "dep:geojson" "galileo-types/geojson"))))))

(define-public crate-galileo-0.1.1 (c (n "galileo") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bytemuck") (r "^1.14") (f (quote ("derive" "extern_crate_alloc"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "csv") (r "^1.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5") (d #t) (k 0)) (d (n "galileo-mvt") (r "^0.1.1") (d #t) (k 0)) (d (n "galileo-types") (r "^0.1.1") (d #t) (k 0)) (d (n "geo") (r "^0.27") (d #t) (k 2)) (d (n "geo-types") (r "^0.7") (d #t) (k 2)) (d (n "geojson") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "geojson") (r "^0.24") (d #t) (k 2)) (d (n "geozero") (r "^0.11") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png" "jpeg"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "las") (r "^0.8") (f (quote ("laz"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^1") (d #t) (k 0)) (d (n "maybe-sync") (r "^0.1") (f (quote ("sync"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "maybe-sync") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nalgebra") (r "^0.32") (d #t) (k 0)) (d (n "notify") (r "^6.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2.17") (d #t) (k 0)) (d (n "quick_cache") (r "^0.4") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("native-tls-vendored"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-derive") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element" "HtmlImageElement" "HtmlCanvasElement" "CanvasRenderingContext2d" "ImageData" "Request" "Headers" "RequestInit" "RequestMode" "Response" "Worker" "DedicatedWorkerGlobalScope" "MessageEvent"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^0.2") (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "winit") (r "^0.29") (f (quote ("android-native-activity"))) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05"))) (o #t) (d #t) (k 0)))) (h "0y6n2yyj4wbkdqgrprzfwglj8ac5v4q545zzlzazg88x2ikw8sd7") (f (quote (("default" "wgpu" "serde" "winit") ("_tests")))) (s 2) (e (quote (("wgpu" "dep:wgpu" "raw-window-handle") ("geojson" "dep:geojson" "galileo-types/geojson"))))))

