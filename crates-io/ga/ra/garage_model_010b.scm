(define-module (crates-io ga ra garage_model_010b) #:use-module (crates-io))

(define-public crate-garage_model_010b-0.0.1 (c (n "garage_model_010b") (v "0.0.1") (d (list (d (n "arc-swap") (r "^0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.30") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "garage_rpc") (r "^0.1") (d #t) (k 0)) (d (n "garage_table") (r "^0.1") (d #t) (k 0)) (d (n "garage_util") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rmp-serde") (r "^0.14.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (k 0)) (d (n "serde_bytes") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 0)) (d (n "sled") (r "^0.31") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "rt-threaded" "io-driver" "net" "tcp" "time" "macros" "sync" "signal" "fs"))) (k 0)))) (h "0a04h4x4dl6yaq9kriipqaghy8wsq74chqp7316klhhgmy5d8yxa")))

