(define-module (crates-io ga rd garde-fr) #:use-module (crates-io))

(define-public crate-garde-fr-0.18.0 (c (n "garde-fr") (v "0.18.0") (d (list (d (n "card-validate") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (k 0)) (d (n "garde_derive") (r "^0.18.0") (o #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "idna") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.112") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)))) (h "0zgz4h9pfsxazqmv7cps0bw3srdg8jsaiassvw71w9aya9hxbp23") (f (quote (("pattern" "regex") ("full" "derive" "serde" "url" "credit-card" "phone-number" "email" "email-idna" "regex" "unicode") ("email" "regex")))) (s 2) (e (quote (("url" "dep:url") ("unicode" "dep:unicode-segmentation") ("serde" "dep:serde" "compact_str/serde" "smallvec/serde") ("regex" "dep:regex" "dep:once_cell" "garde_derive?/regex") ("phone-number" "dep:phonenumber") ("js-sys" "dep:js-sys") ("email-idna" "dep:idna") ("derive" "dep:garde_derive") ("credit-card" "dep:card-validate"))))))

(define-public crate-garde-fr-0.18.1 (c (n "garde-fr") (v "0.18.1") (d (list (d (n "card-validate") (r "^2.3") (o #t) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (k 0)) (d (n "garde_derive") (r "^0.18.0") (o #t) (k 0)) (d (n "glob") (r "^0.3.1") (d #t) (k 2)) (d (n "idna") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.29") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 2)) (d (n "phonenumber") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.112") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "smallvec") (r "^1.11.0") (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.38") (d #t) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 2)))) (h "0b0ihxjjjp1ibxi47f6296c1d68jk88k035ck0hwy7wgmagf3yai") (f (quote (("pattern" "regex") ("full" "derive" "serde" "url" "credit-card" "phone-number" "email" "email-idna" "regex" "unicode") ("email" "regex")))) (s 2) (e (quote (("url" "dep:url") ("unicode" "dep:unicode-segmentation") ("serde" "dep:serde" "compact_str/serde" "smallvec/serde") ("regex" "dep:regex" "dep:once_cell" "garde_derive?/regex") ("phone-number" "dep:phonenumber") ("js-sys" "dep:js-sys") ("email-idna" "dep:idna") ("derive" "dep:garde_derive") ("credit-card" "dep:card-validate"))))))

