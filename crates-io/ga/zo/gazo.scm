(define-module (crates-io ga zo gazo) #:use-module (crates-io))

(define-public crate-gazo-0.0.2 (c (n "gazo") (v "0.0.2") (d (list (d (n "clap") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "memmap2") (r "^0.5.4") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "resize") (r "^0.7.3") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0-beta.3") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0-beta.3") (f (quote ("client" "unstable"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.1.0-beta.3") (f (quote ("client"))) (d #t) (k 0)))) (h "1ry8hdb4gw0kk18dahpa0c0rgjywfcwrs3m4mdmm3ffc6b7am63m") (s 2) (e (quote (("clap-region-parsing" "dep:clap" "dep:regex"))))))

(define-public crate-gazo-0.0.3 (c (n "gazo") (v "0.0.3") (d (list (d (n "clap") (r "^3.2.1") (o #t) (d #t) (k 0)) (d (n "memmap2") (r "^0.5.4") (d #t) (k 0)) (d (n "nix") (r "^0.24.1") (f (quote ("fs"))) (d #t) (k 0)) (d (n "regex") (r "^1.5.6") (o #t) (d #t) (k 0)) (d (n "resize") (r "^0.7.3") (d #t) (k 0)) (d (n "rgb") (r "^0.8.33") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "wayland-client") (r "^0.30.0") (d #t) (k 0)) (d (n "wayland-protocols") (r "^0.30.0") (f (quote ("client" "unstable"))) (d #t) (k 0)) (d (n "wayland-protocols-wlr") (r "^0.1.0") (f (quote ("client"))) (d #t) (k 0)))) (h "09dih9yxs8w3g48s4d7i1n9dhg8b5v8gy7v9pwfj7jw7h3h9fnsi") (s 2) (e (quote (("clap-region-parsing" "dep:clap" "dep:regex"))))))

