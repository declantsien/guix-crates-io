(define-module (crates-io ga nd gandi-live-dns) #:use-module (crates-io))

(define-public crate-gandi-live-dns-1.5.0 (c (n "gandi-live-dns") (v "1.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "die-exit-2") (r "^0.4") (d #t) (k 0)) (d (n "die-exit-2") (r "^0.4") (f (quote ("test"))) (d #t) (k 2)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "governor") (r "^0.5") (d #t) (k 0)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "18ak1ac4xk68c5lbyvsi1qr19x5jllni866zl61ck5f1jq7kh85g")))

(define-public crate-gandi-live-dns-1.7.0 (c (n "gandi-live-dns") (v "1.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "die-exit") (r "^0.4") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "governor") (r "^0.5") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "die-exit") (r "^0.4") (f (quote ("test"))) (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)))) (h "18gh9m5b381zi49zryykvnqawl6qmvgi7y9zac075f7a9dbgl5i7")))

(define-public crate-gandi-live-dns-1.8.0 (c (n "gandi-live-dns") (v "1.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "die-exit") (r "^0.4") (d #t) (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "governor") (r "^0.5") (d #t) (k 0)) (d (n "json") (r "^0.12") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.23") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "die-exit") (r "^0.4") (f (quote ("test"))) (d #t) (k 2)) (d (n "httpmock") (r "^0.6") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 2)))) (h "131nlc8bg3ciw8gz5l80bd7256bsn9nkdaqjf0hrv1b3970yg7i7")))

