(define-module (crates-io no ti notify) #:use-module (crates-io))

(define-public crate-notify-0.0.1 (c (n "notify") (v "0.0.1") (d (list (d (n "time") (r "*") (d #t) (k 0)))) (h "01fpxhmbcwfg1kgdadaqf537zmn5z2ajd2i662jxld81ivv4i4q4")))

(define-public crate-notify-1.0.3 (c (n "notify") (v "1.0.3") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0agspl0vglwjn5bpmpdla6m9df47vjy9br82q7wfp35vjf88qdz4")))

(define-public crate-notify-1.0.4 (c (n "notify") (v "1.0.4") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "03h7jl23rk409l1qrlglg2f6rp1xks1wg5imdcdc0dww3a9q3nks")))

(define-public crate-notify-1.0.5 (c (n "notify") (v "1.0.5") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "1vqy6y9c8z22piq8bv5i14qnc1yz8in1ra3n3l0gdg56jbwh2da3")))

(define-public crate-notify-1.1.1 (c (n "notify") (v "1.1.1") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "15p6l93qnsa7fygdvfvzb94zz4q45g5k8p7j2nxqx73spyfzbzqq")))

(define-public crate-notify-1.1.2 (c (n "notify") (v "1.1.2") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "11z267gn3fsii13gdzlmx7yz0jrgg68n0cp0d6q0vjfb2gjys55a")))

(define-public crate-notify-1.1.3 (c (n "notify") (v "1.1.3") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "14nzzsh4y15wlzwg0vz24sjzj921l5bbzfsi1cppraar32d2qpkh")))

(define-public crate-notify-1.2.0 (c (n "notify") (v "1.2.0") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "1z6rwmnviz5d5q2cyyil2zkd4wyjhfv08dipnjbb2bf32smh9i1b")))

(define-public crate-notify-1.2.1 (c (n "notify") (v "1.2.1") (d (list (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "1zqq6hfnfp874mmlpikpxmr9yfydkgd75pccdznd0h88mxmkj1dz")))

(define-public crate-notify-1.2.2 (c (n "notify") (v "1.2.2") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0bb1kcsrwlxw049fz74bfblafviab9iadz43j0f7pca1a0riq31z")))

(define-public crate-notify-2.0.0-pre1 (c (n "notify") (v "2.0.0-pre1") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "0cvx07d1arvbb08nrvxck347hgmw5kw83hbbxq9isb0dk6ji9y71")))

(define-public crate-notify-2.0.0 (c (n "notify") (v "2.0.0") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "10ikd3na7gf7zcdyzzfv1qyy8bfy6lwii5pma2c43bff7c48wlig")))

(define-public crate-notify-2.1.0 (c (n "notify") (v "2.1.0") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "1v9bvqycf5n9i44wsm08g4ng2aqwr3lnqxl77c35xpvlgfg7rzpv")))

(define-public crate-notify-2.2.0 (c (n "notify") (v "2.2.0") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "1srypdr1x6qbpi99243gn4rgg8dp240qkkhr3hn5y39yg9z323fq")))

(define-public crate-notify-2.3.0 (c (n "notify") (v "2.3.0") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "1m5ja9kyrcmj9zp8316gc5w9vskjard6dhgsl2ic8bjhk8rb97y0")))

(define-public crate-notify-2.3.1 (c (n "notify") (v "2.3.1") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "0f8k2icjj68d5ljmvy8j217hz156a9g0r69raig7j3fjsdnrl3ib")))

(define-public crate-notify-2.3.2 (c (n "notify") (v "2.3.2") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "1zjpjyi6a9fv9qhfzvq25w7fdg0wjmkcnrb8afwqfaiswxh42ahh")))

(define-public crate-notify-2.3.3 (c (n "notify") (v "2.3.3") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "0xfl33kac266929mb8ss09r0yahy6kq7d4d0cmgx6gmmdd7671bi")))

(define-public crate-notify-2.4.0 (c (n "notify") (v "2.4.0") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "1xzc2j60nm902v341bf41wfzwsmrqaqpnfnml0jr5b55njnpvkyc")))

(define-public crate-notify-2.4.1 (c (n "notify") (v "2.4.1") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)))) (h "0rv7mg1mv5yf0hj3l69waip2ww99h5v7cwdhwx2b5lmd9mdw4yrf")))

(define-public crate-notify-2.5.0 (c (n "notify") (v "2.5.0") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "1gz9lcs563jfnwyg458rsciajh20j5ja7wqyfc3m0hrkpbqp77qr")))

(define-public crate-notify-2.5.1 (c (n "notify") (v "2.5.1") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walker") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "0zd9j30apd4kk9mmax7s63038if0bj735gv50s4sf6y2rsv0maxn")))

(define-public crate-notify-2.5.2 (c (n "notify") (v "2.5.2") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "mio") (r "^0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "16mzbkzy6fgcczbpkpgd5rpqfv2sfd8qxkyhs3p9y9cn56ajbnaw")))

(define-public crate-notify-2.5.3 (c (n "notify") (v "2.5.3") (d (list (d (n "bitflags") (r "*") (d #t) (k 0)) (d (n "filetime") (r "*") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "i686-unknown-linux-musl") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "libc") (r "*") (d #t) (k 0)) (d (n "log") (r "*") (d #t) (k 0)) (d (n "mio") (r "^0.5") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5") (d #t) (t "i686-unknown-linux-musl") (k 0)) (d (n "mio") (r "^0.5") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^1.1.0") (d #t) (k 2)) (d (n "time") (r "*") (d #t) (k 0)) (d (n "walkdir") (r "^0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "0n5gl5nd2i4i2lvd3mmij4mis7zlnlcsj388ygkdr1i84jphmcka")))

(define-public crate-notify-2.5.4 (c (n "notify") (v "2.5.4") (d (list (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "i686-unknown-linux-musl") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.3.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "i686-unknown-linux-musl") (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^2.0.1") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "14z2af94xzyvph50alnjnqr5pv4iwv2jra3b9b5d7nihggp3p5pl")))

(define-public crate-notify-2.5.5 (c (n "notify") (v "2.5.5") (d (list (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "i686-apple-darwin") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "x86_64-apple-darwin") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "i686-unknown-linux-musl") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "inotify") (r "^0.1.12") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "x86_64-pc-windows-msvc") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.3.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "i686-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "i686-unknown-linux-musl") (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "x86_64-unknown-linux-gnu") (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "x86_64-unknown-linux-musl") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^2.0.1") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "i686-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "i686-pc-windows-msvc") (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "x86_64-pc-windows-gnu") (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "x86_64-pc-windows-msvc") (k 0)))) (h "0zcjihls58im4236qkfd0fwl0gabw5lz1mk7sxmczxc5fyxggl8h")))

(define-public crate-notify-2.6.0 (c (n "notify") (v "2.6.0") (d (list (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.3.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^2.0.1") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1hh1c9kg56x4jaf5zjc2bpqc1mkg5aby23xirhikqlbc9v2nadjx")))

(define-public crate-notify-2.6.1 (c (n "notify") (v "2.6.1") (d (list (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.3.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^2.0.1") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "11vl57x5f7zhh2r8dqns9nyp1sks25ff7rvipycggadvkqrfmcfl")))

(define-public crate-notify-2.6.2 (c (n "notify") (v "2.6.2") (d (list (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.11") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.3.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^2.0.1") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0wp9hwrjkm9al66pqwqsw5kdq5gypz977ndpx4pk6q3mj3f0bids")))

(define-public crate-notify-2.6.3 (c (n "notify") (v "2.6.3") (d (list (d (n "bitflags") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.3.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "tempfile") (r "^2.0.1") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "01ww38i69mrjiwp6rn9rl0pkp8r8fl027c1888n9adv3jgn7w3jf")))

(define-public crate-notify-3.0.0 (c (n "notify") (v "3.0.0") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0daqq0bvg2i1mg56wjnc81q9amz66id36bi7x3972pvii6lwha9a") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-3.0.1 (c (n "notify") (v "3.0.1") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.2.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0kjj6d852c2aqhh9icpxzmsi4wnf4f4ah0wgyf9v2aa3i6kd9z8k") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.0 (c (n "notify") (v "4.0.0") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "time") (r "^0.1.34") (d #t) (k 0)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0qzsy7b3cnfcb8sjx8ng21m8gmlry7f11ikfb44r5af85hk2iil7") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.1 (c (n "notify") (v "4.0.1") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.15") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1qamvxki1ks4ji1kpm19j3jrrj27hql90k4lz2vynv1czw0l9399") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.2 (c (n "notify") (v "4.0.2") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^0.1.5") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1y5fb71kw6f3f6mgxcnxb1bcn8dpc9v6s348br972k3ns38dynvl") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.3 (c (n "notify") (v "4.0.3") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1sx4jmn4axfx9wk7mq0x9jm3383ihh09q3s4pfh11wlq63d14f2w") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.4 (c (n "notify") (v "4.0.4") (d (list (d (n "bitflags") (r "^0.7.0") (d #t) (k 0)) (d (n "filetime") (r "^0.1.9") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.5.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.2.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0hkzplw69ngyn8p9z5333gd7d88y7s8ljgxy0x5pi03nr90fy8yh") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.5 (c (n "notify") (v "4.0.5") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1pwlxzz7hcw3rsz3iv8r92pvwipidjkp3mby3s1ksxbcpjpf0xaz") (f (quote (("timing_tests") ("manual_tests")))) (y #t)))

(define-public crate-notify-4.0.6 (c (n "notify") (v "4.0.6") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0y40gmqz3mcr277ij1srwp4148ql838jj4s01zilm5klq7ccygl7") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.7 (c (n "notify") (v "4.0.7") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0zfwg2pscrcwjr6cyrrpjsis9hyi6qsv5c2i1nq194clrwvwys69") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.8 (c (n "notify") (v "4.0.8") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0bb9hxhdi5k2m7ckdz1jzba6lpb5hd7si20w0nxqhkl12zj0bdn9") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.9 (c (n "notify") (v "4.0.9") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "13crpg94l1db1xx14ki7ywcvdarxwlw9qr9vx4zavvdpshmyviww") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.10 (c (n "notify") (v "4.0.10") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.2.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^0.1.3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0hw9x1czrmggkcy3zp6xl593y1i5jql15vs7qc78lkg4jcb5icdb") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.11 (c (n "notify") (v "4.0.11") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.1") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1rh44s1rag63s3b8wxi19njqkziyp10jnxyfd1gi5mhxm2ba9cff") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.12 (c (n "notify") (v "4.0.12") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "= 0.2.5") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0hwrljl7936v7phgm8gp9j9pbak4slgrgkdccwcd93pa2cgxfwim") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.0 (c (n "notify") (v "5.0.0-pre.0") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.7") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "08cwfvjgxh4rm44xxhmvz61694zrwhr9gmw84c46hfyiix0cal90") (f (quote (("timing_tests") ("manual_tests")))) (y #t)))

(define-public crate-notify-5.0.0-pre.1 (c (n "notify") (v "5.0.0-pre.1") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.7") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "0l7d7cqd0s23r8mz2zpxiqx3908rziv14g1gxhh2xg9l7x4swhnp") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.13 (c (n "notify") (v "4.0.13") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.5") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "1jzkkyafrr9bl0rm2lksmmpyn6ksbc98l8swnpn1s17yp2ifz48i") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.14 (c (n "notify") (v "4.0.14") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.5") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.6.1") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kernel32-sys") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempdir") (r "^0.3.4") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.5") (d #t) (t "cfg(windows)") (k 0)))) (h "12vpbg8j49196rxkm01hw2xfr0mk005ljmx0p9kwf6xj6gy2i5hr") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.2 (c (n "notify") (v "5.0.0-pre.2") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.8") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1hvkssakq5iac8aizhq2xynr9srg0sdy20n3k1azpgw8a6vc003v") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.15 (c (n "notify") (v "4.0.15") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.5") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.7") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1gadf8jf1vz7sip37rlwa66vw85ripy6977ibcfbiynii1v4mbl0") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.3 (c (n "notify") (v "5.0.0-pre.3") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.8") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "03kxlcnpg8xkhp3g04y8basy7kpkzwjx97hfp9hb3d48rw3kdl3p") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.4 (c (n "notify") (v "5.0.0-pre.4") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.8") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1d9vl3032flslqk7s0nci64cxl5njdykcmndg51qibgxkn44dfd8") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.5 (c (n "notify") (v "5.0.0-pre.5") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "12q9ds3wgrcxfwyw2388x01qwni04wwxx9pck2k8jyqd6r94braq") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.6 (c (n "notify") (v "5.0.0-pre.6") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1hzlm8lscdbrd2gsniikqv4cv0g0w10yfpp61b0bkv9l6jwq5zg5") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.16 (c (n "notify") (v "4.0.16") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.5") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.7") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0cqmmw4z7g655r65vxld54ii4yysyis01c8ivcfhbgf9hw70i695") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.7 (c (n "notify") (v "5.0.0-pre.7") (d (list (d (n "anymap") (r "^0.12.1") (d #t) (k 0)) (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "^2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^3") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1rqcsjaavq125k20dx789wmw518n4cyy0vkia2a7bigql2cpdghy") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.8 (c (n "notify") (v "5.0.0-pre.8") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent") (r "~2.0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "~3.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0jq1ixzi7rgq233dxbxkn129n8lidswp1glsgbdhvw7ig38brfs6") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-4.0.17 (c (n "notify") (v "4.0.17") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "filetime") (r "^0.2.5") (d #t) (k 0)) (d (n "fsevent") (r "^0.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "fsevent-sys") (r "^2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.7") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.6.15") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio-extras") (r "^2.0.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0msjyj1l30l12v6q9mjc1ascx7dwyz7z07sp7v9bz9yvag4ch0xf") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.9 (c (n "notify") (v "5.0.0-pre.9") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "028x8ilcn6m51k65cb1lddl96vqnvkman0vrgn8xnr6xgvbnk65q") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.10 (c (n "notify") (v "5.0.0-pre.10") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "180rx1h4ywivmdq8nky4j6gn7m958045ikr66lfwm4v8l81q5wai") (f (quote (("timing_tests") ("manual_tests"))))))

(define-public crate-notify-5.0.0-pre.11 (c (n "notify") (v "5.0.0-pre.11") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0b03am43jg1rc6qqw52ik4dh5xay4bv8rzggkb4jxy0w5gnyf566") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent"))))))

(define-public crate-notify-5.0.0-pre.12 (c (n "notify") (v "5.0.0-pre.12") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "09k3xlxdvr8j3hs58iq7dpg1jyb3r2360vxp9f47mj5jkcjjk9i0") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent"))))))

(define-public crate-notify-5.0.0-pre.13 (c (n "notify") (v "5.0.0-pre.13") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.7.7") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0za8mpacxkr62fii5h7ny4h396y0m8myd3hf08njqdg2h21kap94") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent"))))))

(define-public crate-notify-5.0.0-pre.14 (c (n "notify") (v "5.0.0-pre.14") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0x0bvyn9ym7kf6hhp6iqwqhnhr1nmddp6lgvk3h94dd6f3dj4g6i") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent"))))))

(define-public crate-notify-5.0.0-pre.15 (c (n "notify") (v "5.0.0-pre.15") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19z76zjfghj4h4dgpaqh0il855v7c6k5byr0bih2820bmm29hgsm") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent")))) (r "1.56")))

(define-public crate-notify-5.0.0-pre.16 (c (n "notify") (v "5.0.0-pre.16") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.0.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "14wnn6f44rpjccv332qi3qs2vxjw4yh2992f5w40hichsqa663sk") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.56")))

(define-public crate-notify-5.0.0 (c (n "notify") (v "5.0.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("fileapi" "handleapi" "ioapiset" "minwinbase" "synchapi" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02j9pxil0nf766dyj4ha0ss428s07qjkbmh19h11rbmb13d6cb7d") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.56")))

(define-public crate-notify-5.1.0 (c (n "notify") (v "5.1.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.42.0") (f (quote ("Win32_System_Threading" "Win32_Foundation" "Win32_Storage_FileSystem" "Win32_Security" "Win32_System_WindowsProgramming" "Win32_System_IO"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1a8vxbyh3aghyyvg76x4zzdwhr0d9p20x706vf7y81lalq58bsjq") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.56")))

(define-public crate-notify-5.2.0 (c (n "notify") (v "5.2.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.45.0") (f (quote ("Win32_System_Threading" "Win32_Foundation" "Win32_Storage_FileSystem" "Win32_Security" "Win32_System_WindowsProgramming" "Win32_System_IO"))) (d #t) (t "cfg(windows)") (k 0)))) (h "11l4r19z69mplx124hsvm2flf740ykykwkzs7vz46njmrbhn77vj") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.56")))

(define-public crate-notify-6.0.0 (c (n "notify") (v "6.0.0") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.45.0") (f (quote ("Win32_System_Threading" "Win32_Foundation" "Win32_Storage_FileSystem" "Win32_Security" "Win32_System_WindowsProgramming" "Win32_System_IO"))) (d #t) (t "cfg(windows)") (k 0)))) (h "18ijj0qpkra1gr61w4wn6pvcjjmab1qcvxffr0kwl66y6k3sd6sd") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.60")))

(define-public crate-notify-6.0.1 (c (n "notify") (v "6.0.1") (d (list (d (n "bitflags") (r "^1.0.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.6") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.45.0") (f (quote ("Win32_System_Threading" "Win32_Foundation" "Win32_Storage_FileSystem" "Win32_Security" "Win32_System_WindowsProgramming" "Win32_System_IO"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0lcbb6kfsrbjjzapq61402f711hi1337cv9dxjmj1sjpbmws4f2p") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.60")))

(define-public crate-notify-6.1.0 (c (n "notify") (v "6.1.0") (d (list (d (n "bitflags") (r "^2.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.22") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89, <1.0.172") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_System_Threading" "Win32_Foundation" "Win32_Storage_FileSystem" "Win32_Security" "Win32_System_WindowsProgramming" "Win32_System_IO"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01whkmdl3drpk0m222jfqa5wggqwagh1fcpm5ijfjacc0lxlzgrx") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.60")))

(define-public crate-notify-6.1.1 (c (n "notify") (v "6.1.1") (d (list (d (n "bitflags") (r "^2.3.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "filetime") (r "^0.2.22") (d #t) (k 0)) (d (n "fsevent-sys") (r "^4") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "kqueue") (r "^1.0") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "kqueue") (r "^1.0.4") (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "libc") (r "^0.2.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"freebsd\", target_os = \"openbsd\", target_os = \"netbsd\", target_os = \"dragonflybsd\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "mio") (r "^0.8") (f (quote ("os-ext"))) (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.23.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.89") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.39") (d #t) (k 2)) (d (n "tempfile") (r "^3.2.0") (d #t) (k 2)) (d (n "walkdir") (r "^2.2.2") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_System_Threading" "Win32_Foundation" "Win32_Storage_FileSystem" "Win32_Security" "Win32_System_WindowsProgramming" "Win32_System_IO"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0bad98r0ilkhhq2jg3zs11zcqasgbvxia8224wpasm74n65vs1b2") (f (quote (("timing_tests") ("manual_tests") ("macos_kqueue" "kqueue" "mio") ("macos_fsevent" "fsevent-sys") ("default" "macos_fsevent" "crossbeam-channel")))) (r "1.60")))

