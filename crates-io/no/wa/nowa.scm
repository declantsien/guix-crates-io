(define-module (crates-io no wa nowa) #:use-module (crates-io))

(define-public crate-nowa-1.0.0 (c (n "nowa") (v "1.0.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "16gjv07nalmzp8vafgdh8ndvd9bxs8vrppyzwdc80r1bfmxhlw42")))

(define-public crate-nowa-1.0.1 (c (n "nowa") (v "1.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0bi4r1gqzvzndqmah6s1liyk0gs7rgd06xdx96q0bjkz6xmcrjhn")))

(define-public crate-nowa-1.0.2 (c (n "nowa") (v "1.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0h1bzqpag6ajvlvm5lk8qi9h4imcyy82rjx05ylczbxhkjpywnyw")))

(define-public crate-nowa-1.0.3 (c (n "nowa") (v "1.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1c4gjhxpl45q9l7x6lxx15086zrxdqzvrcb5hdkhjkvwwrljqji3")))

(define-public crate-nowa-1.0.4 (c (n "nowa") (v "1.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0whnixw3b71fa2rsw7c5l2g3inbb02f6vg5v9laj4929l3hxgihx")))

(define-public crate-nowa-1.1.0 (c (n "nowa") (v "1.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1ymiw7nv7bbg726cbfn2blks58zm3c96k7w7bwrjzdxi4njn5jix")))

(define-public crate-nowa-1.1.1 (c (n "nowa") (v "1.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libm") (r ">=0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0bmf8r5ma2a37gg5d9jz5aplm0mixpw5akjywsbc9lmidjqja85k")))

