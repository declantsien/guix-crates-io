(define-module (crates-io no de node-replication) #:use-module (crates-io))

(define-public crate-node-replication-0.1.0 (c (n "node-replication") (v "0.1.0") (d (list (d (n "arr_macro") (r "^0.1.2") (d #t) (k 0)) (d (n "btfs") (r "^0.0.4") (d #t) (k 2)) (d (n "chashmap") (r "^2.2") (d #t) (k 2)) (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "core_affinity") (r "^0.5.10") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.6") (k 0)) (d (n "csv") (r "^1.1.3") (d #t) (k 2)) (d (n "dashmap") (r "^3.11.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "evmap") (r "^8") (d #t) (k 2)) (d (n "flurry") (r "^0.3.0") (d #t) (k 2)) (d (n "hwloc") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "num_cpus") (r "^1.12") (d #t) (k 2)) (d (n "parking_lot") (r "^0.7.1") (d #t) (k 2)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "urcu-sys") (r "=0.0.5") (d #t) (k 2)) (d (n "x86") (r "^0.34.0") (d #t) (k 2)) (d (n "zipf") (r "^6.1") (d #t) (k 2)))) (h "1p4hgmgykbrba0g1aki2ymavrv4xlxq45lz6xpgqi9a63rpm6lkw") (f (quote (("smokebench") ("cmp"))))))

(define-public crate-node-replication-0.1.1 (c (n "node-replication") (v "0.1.1") (d (list (d (n "chashmap") (r "^2.2") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.8.5") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "180f3pwwb3gk9acnmiiikqg29hlr5b4h0qv8hrv58c374plr8fal") (f (quote (("unstable"))))))

