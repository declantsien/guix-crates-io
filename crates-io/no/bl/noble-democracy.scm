(define-module (crates-io no bl noble-democracy) #:use-module (crates-io))

(define-public crate-noble-democracy-2.0.0 (c (n "noble-democracy") (v "2.0.0") (d (list (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "fabric-benchmarking") (r "^2.0.0") (o #t) (k 0)) (d (n "fabric-support") (r "^2.0.0") (k 0)) (d (n "fabric-system") (r "^2.0.0") (k 0)) (d (n "hex-literal") (r "^0.3.1") (d #t) (k 2)) (d (n "noble-balances") (r "^2.0.1") (d #t) (k 2)) (d (n "noble-scheduler") (r "^2.0.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 2)) (d (n "tet-io") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tetcore-storage") (r "^2.0.2") (d #t) (k 2)) (d (n "tp-runtime") (r "^2.0.2") (k 0)))) (h "0xfh23rkvah23y41jbf5q8skj1fp5na65j8ayfz81xcrwa5nq0h1") (f (quote (("std" "serde" "codec/std" "tetcore-std/std" "tet-io/std" "fabric-benchmarking/std" "fabric-support/std" "tp-runtime/std" "fabric-system/std") ("runtime-benchmarks" "fabric-benchmarking" "fabric-system/runtime-benchmarks" "fabric-support/runtime-benchmarks" "tp-runtime/runtime-benchmarks") ("default" "std"))))))

