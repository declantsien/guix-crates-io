(define-module (crates-io no bl noble-babe) #:use-module (crates-io))

(define-public crate-noble-babe-2.0.1 (c (n "noble-babe") (v "2.0.1") (d (list (d (n "codec") (r "^2.0.1") (f (quote ("derive"))) (k 0) (p "tetsy-scale-codec")) (d (n "fabric-benchmarking") (r "^2.0.0") (o #t) (k 0)) (d (n "fabric-benchmarking") (r "^2.0.0") (d #t) (k 2)) (d (n "fabric-support") (r "^2.0.0") (k 0)) (d (n "fabric-system") (r "^2.0.0") (k 0)) (d (n "noble-authorship") (r "^2.0.1") (k 0)) (d (n "noble-balances") (r "^2.0.1") (d #t) (k 2)) (d (n "noble-offences") (r "^2.0.0") (d #t) (k 2)) (d (n "noble-session") (r "^2.0.0") (k 0)) (d (n "noble-staking") (r "^2.0.0") (d #t) (k 2)) (d (n "noble-staking-reward-curve") (r "^2.0.0") (d #t) (k 2)) (d (n "noble-timestamp") (r "^2.0.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "tet-application-crypto") (r "^2.0.2") (k 0)) (d (n "tet-core") (r "^2.0.2") (d #t) (k 2)) (d (n "tet-io") (r "^2.0.2") (k 0)) (d (n "tetcore-std") (r "^2.0.2") (k 0)) (d (n "tp-consensus-babe") (r "^0.8.2") (k 0)) (d (n "tp-consensus-vrf") (r "^0.8.2") (k 0)) (d (n "tp-inherents") (r "^2.0.2") (k 0)) (d (n "tp-runtime") (r "^2.0.2") (k 0)) (d (n "tp-session") (r "^2.0.2") (k 0)) (d (n "tp-staking") (r "^2.0.2") (k 0)) (d (n "tp-timestamp") (r "^2.0.2") (k 0)))) (h "0zakihj6zzsyyi1064saa7m42gxr35zl722wm0258cbng0866wyp") (f (quote (("std" "codec/std" "fabric-benchmarking/std" "fabric-support/std" "fabric-system/std" "noble-authorship/std" "noble-session/std" "noble-timestamp/std" "serde" "tet-application-crypto/std" "tp-consensus-babe/std" "tp-consensus-vrf/std" "tp-inherents/std" "tet-io/std" "tp-runtime/std" "tp-session/std" "tp-staking/std" "tetcore-std/std" "tp-timestamp/std") ("runtime-benchmarks" "fabric-benchmarking") ("default" "std"))))))

