(define-module (crates-io no st nostr) #:use-module (crates-io))

(define-public crate-nostr-0.0.0 (c (n "nostr") (v "0.0.0") (h "07c5yns2njr157lqwp2a2ffzmkmzss7jp3p4243f42hrq48v853v") (y #t)))

(define-public crate-nostr-0.1.5 (c (n "nostr") (v "0.1.5") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "12znx06zdg5qqg0gqmvikpdpc9a9yqbkglq4syqn4s05mias5bwz") (r "1.64")))

(define-public crate-nostr-0.2.0 (c (n "nostr") (v "0.2.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1ang3jp4lr51mnx8q1dapb00x6h4gb1dw3hj910lvw44y53c19hz") (r "1.64")))

(define-public crate-nostr-0.2.1 (c (n "nostr") (v "0.2.1") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "06h33c77c8qx6cjmrikqhmhaa502ahwq3y8xlmj14rnc0k3qc4j2") (r "1.64")))

(define-public crate-nostr-0.3.0 (c (n "nostr") (v "0.3.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip32") (r "^0.4") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zzvgd8qq2mn065bjcr0yn5rb308mcvsxwjjg670yvqgaa3yvn2a") (r "1.64")))

(define-public crate-nostr-0.4.0 (c (n "nostr") (v "0.4.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip32") (r "^0.4") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0k2zw5pwk2mqhrx7b09r47zldaxhglgg2539chsr39an7ws7g5vh") (r "1.64")))

(define-public crate-nostr-0.4.1 (c (n "nostr") (v "0.4.1") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip32") (r "^0.4") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0xz850rlw85ns70mw92nai2knb9wqk93y2ff51jhmkxh8bxcr8cj") (r "1.64")))

(define-public crate-nostr-0.5.0 (c (n "nostr") (v "0.5.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1g3f17kz16l8azd76vcd1i8cljdmp5j184pv6fwzcrl2kc68gl61") (f (quote (("nip06" "bip32") ("default" "nip06")))) (r "1.64")))

(define-public crate-nostr-0.5.1 (c (n "nostr") (v "0.5.1") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip32") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0da4w2z74ks2brcri32lagm6mr095lb4m0nlp6ywh702k3rhqzjp") (f (quote (("default")))) (s 2) (e (quote (("nip06" "dep:bip32")))) (r "1.64")))

(define-public crate-nostr-0.6.0 (c (n "nostr") (v "0.6.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1mvcrphmlm153732h0y2mb1qqvc52bvz42pz236q0ipvan6g63ww") (f (quote (("default")))) (s 2) (e (quote (("nip06" "dep:bip39" "dep:bitcoin")))) (r "1.64")))

(define-public crate-nostr-0.7.0 (c (n "nostr") (v "0.7.0") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1hjxvr27dhbqfr6wjjz1xf40hfxdbkxpb3z6knhb8ybmzsz5qw48") (f (quote (("default")))) (s 2) (e (quote (("nip06" "dep:bip39" "dep:bitcoin")))) (r "1.64")))

(define-public crate-nostr-0.7.1 (c (n "nostr") (v "0.7.1") (d (list (d (n "aes") (r "^0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("rand" "rand-std" "serde" "bitcoin_hashes"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0c3aq4p47hkh969b5p4krzin3zjfwfd5n0kbvqlwcxvsjn9kic5w") (f (quote (("default")))) (s 2) (e (quote (("nip06" "dep:bip39" "dep:bitcoin")))) (r "1.64")))

(define-public crate-nostr-0.8.0 (c (n "nostr") (v "0.8.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "17wrarlf547zj2c6ag5502l6f3nznslbprq6bydqi5ksr0pknyxp") (f (quote (("default" "all-nips") ("all-nips" "nip04" "nip06")))) (s 2) (e (quote (("nip06" "dep:bip39") ("nip04" "dep:aes" "dep:base64" "dep:cbc")))) (r "1.64.0")))

(define-public crate-nostr-0.9.0 (c (n "nostr") (v "0.9.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "12fibphy038k2sf9hfhkzy6ma3kw1vmjvq9597xiazvihkqzgmmp") (f (quote (("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11")))) (s 2) (e (quote (("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc")))) (r "1.64.0")))

(define-public crate-nostr-0.10.0 (c (n "nostr") (v "0.10.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "12m4vjp9vqv0g3yaj7glrr9ingvw8c7la5lm208lmp48gja0ih65") (f (quote (("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11")))) (y #t) (s 2) (e (quote (("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.11.0 (c (n "nostr") (v "0.11.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "17871ayp3fqfv7m3ncmf8isb8rcngmn5wmrncqz2mvscg5w8fq0m") (f (quote (("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11")))) (s 2) (e (quote (("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.12.0 (c (n "nostr") (v "0.12.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0a485122f9aanfiknbjapwd586y7rvy024qsi8z4lx4jbyx3d8ww") (f (quote (("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11")))) (s 2) (e (quote (("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.13.0 (c (n "nostr") (v "0.13.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.17") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1sbbjsc6yzhm4a4gmj5vq1js6sqvj8xyxzw7gxl4bn91sacnq5qf") (f (quote (("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11")))) (s 2) (e (quote (("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.14.0 (c (n "nostr") (v "0.14.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "01gws9djwllpvrl21n3jq0srmlll4fh5jnqi0s23s0823699pbd9") (f (quote (("nip26") ("full" "all-nips" "event") ("default" "full") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("event" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.14.2 (c (n "nostr") (v "0.14.2") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0djfk055a4yvn0jkdryqr8q2irdyy66sgraq7g14vhi4xp5j5mx8") (f (quote (("nip26") ("full" "all-nips" "event") ("default" "full") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("event" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.15.0 (c (n "nostr") (v "0.15.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0yk8sc0sf85xyavdls907jn61cd6iiggc2v59kx8rcbp9wvp24sn") (f (quote (("nip26") ("full" "all-nips" "event") ("default" "full") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("event" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.16.0 (c (n "nostr") (v "0.16.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0skh3zhnhh2gjp705kvz5fy2v6isrs4xmf27a9sibmh1w9cr49ii") (f (quote (("nip26") ("default" "all-nips" "base") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (y #t) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking") ("base" "dep:log" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url")))) (r "1.64.0")))

(define-public crate-nostr-0.16.1 (c (n "nostr") (v "0.16.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1grff4h99b90zb913548akpkqz4rkvzjpsb8d3vzgcm6i4rqppgb") (f (quote (("nip26") ("default" "all-nips" "base") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (y #t) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking") ("base" "dep:log" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url")))) (r "1.64.0")))

(define-public crate-nostr-0.16.2 (c (n "nostr") (v "0.16.2") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "0r59b5vr26zf35hawv8vvr4685ms4459d7a0vgfjqhrdnpla79y6") (f (quote (("nip26") ("default" "all-nips" "base") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking") ("base" "dep:log" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url")))) (r "1.64.0")))

(define-public crate-nostr-0.17.0 (c (n "nostr") (v "0.17.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "instant") (r "^0.1") (f (quote ("stdweb" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "194asqn880rj09ym6sw7h1fbsxn2b84807yamg6iy9krqwrfx1bm") (f (quote (("nip26") ("default" "all-nips" "base") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking") ("base" "dep:log" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url")))) (r "1.64.0")))

(define-public crate-nostr-0.18.0 (c (n "nostr") (v "0.18.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1c21syg479j7w2img81gc1h0ykcpjw9cq4izmk0678dik4k2ixi8") (f (quote (("vanity" "nip19") ("nip26") ("default" "all-nips" "base") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (y #t) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking") ("base" "dep:instant" "dep:log" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url")))) (r "1.64.0")))

(define-public crate-nostr-0.18.1 (c (n "nostr") (v "0.18.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (k 0)))) (h "1vmhv62qv3q9wwy2n73ih9xj4dccx597mf615gxxv33n0dhl9h1m") (f (quote (("vanity" "nip19") ("nip26") ("default" "all-nips" "base") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip13" "nip19" "nip26")))) (s 2) (e (quote (("nip19" "dep:serde") ("nip13" "dep:log") ("nip11" "dep:reqwest" "dep:serde" "dep:url") ("nip06" "dep:bip39") ("nip05" "dep:reqwest" "dep:serde_json") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("blocking" "reqwest?/blocking") ("base" "dep:instant" "dep:log" "dep:once_cell" "dep:regex" "dep:serde" "dep:serde_json" "dep:url")))) (r "1.64.0")))

(define-public crate-nostr-0.19.0 (c (n "nostr") (v "0.19.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rp8kgclcpdyh2y7p67771ai5vql4fgvcbjf24rnjkxsz2qzwniw") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip03" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.19.1 (c (n "nostr") (v "0.19.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0kmqwkybrcf00nclwx3qjjbkp62vif5k6fqa482iqi041fk1lp57") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip03" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.19.2 (c (n "nostr") (v "0.19.2") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0p0va6xj8cf39d7jlynxxqcwnic50cnan8j155x626ry35qpzai4") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip03" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.19.3 (c (n "nostr") (v "0.19.3") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1zxs0zf5h99hjpmhqg6v788c22ri4pipkcshhirci4b0mx9iirdj") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip03" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.19.4 (c (n "nostr") (v "0.19.4") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1ml6q51g7p4izkl2h7m2lf0nxbafg126bhwwip4pxk14pmp1v5j3") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip03" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.19.5 (c (n "nostr") (v "0.19.5") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1wm3qbhssqcz20q0ilay1am5ia5r5264w9544qra39hd3vk8axrp") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip03" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.20.0 (c (n "nostr") (v "0.20.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "02p6r10bs5rvvrx936dzc8993x2g2phxnzrwwv3x9sfcadyd7n6g") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.21.0 (c (n "nostr") (v "0.21.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "15wf7j3a8hkfrzppi660qm1c6921syd12m80lmqikflxx2bd1g1r") (f (quote (("vanity" "nip19") ("nip46" "nip04") ("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip19" "nip46")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.22.0-bitcoin-v0.29 (c (n "nostr") (v "0.22.0-bitcoin-v0.29") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.19") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "15rw5n3k1g2vnksxdys41kwc72ihynif8wiaxmvm1lcga1ly6biy") (f (quote (("vanity" "nip19") ("nip47" "nip04") ("nip46" "nip04") ("nip21" "nip19") ("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip19" "nip21" "nip46" "nip47")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.22.0 (c (n "nostr") (v "0.22.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.19") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "01wml17jx3v6066iidamwnr053lcc49lj2p3l5p7psbvq7zgd3x3") (f (quote (("vanity" "nip19") ("nip47" "nip04") ("nip46" "nip04") ("nip21" "nip19") ("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip19" "nip21" "nip46" "nip47")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.23.0 (c (n "nostr") (v "0.23.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.12") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("bitcoin_hashes" "global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tungstenite") (r "^0.19") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0lkr8q5r1lpf0dyxxvf32m3zwj3maihxrjmaxlgynkkg21sqynjj") (f (quote (("vanity" "nip19") ("nip47" "nip04") ("nip46" "nip04") ("nip21" "nip19") ("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip19" "nip21" "nip46" "nip47")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.23.0-bitcoin-v0.29 (c (n "nostr") (v "0.23.0-bitcoin-v0.29") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "bitcoin") (r "^0.29") (o #t) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1") (f (quote ("alloc"))) (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("bitcoin_hashes" "global-context" "rand-std" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "tungstenite") (r "^0.19") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 2)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "018vf8wa26p4mcid5cbkj2ncaakx3025igxz5m3b7j15925kqa3z") (f (quote (("vanity" "nip19") ("nip47" "nip04") ("nip46" "nip04") ("nip21" "nip19") ("default" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip19" "nip21" "nip46" "nip47")))) (s 2) (e (quote (("nip19" "dep:bech32") ("nip11" "dep:reqwest") ("nip06" "dep:bip39" "dep:bitcoin") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking")))) (r "1.64.0")))

(define-public crate-nostr-0.24.0 (c (n "nostr") (v "0.24.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)))) (h "180lmvrnlbzknwsbwz4babzxf7pjigdndkbdz5mh583ylf4g02nz") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip46" "nip47")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "serde/std" "serde_json/std" "tracing/std" "url-fork/std") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.25.0 (c (n "nostr") (v "0.25.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)))) (h "1r5si94slgjjk2z313dh8r7g1i24bd3wx13ziq7may1c7nws2r8v") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip46" "nip47")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "negentropy/std" "serde/std" "serde_json/std" "tracing/std" "url-fork/std") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.26.0 (c (n "nostr") (v "0.26.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)))) (h "18adsmy9cfdqqliyrrf4c45pp6wqi4y51rhz7zx5l7jzxfczmbbj") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip44" "nip46" "nip47")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "negentropy/std" "serde/std" "serde_json/std" "tracing/std" "url-fork/std") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.26.1 (c (n "nostr") (v "0.26.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)))) (h "1jcdyk72d5cyj0q8c47md0jrswgpy77pl8ifqyb7pwn1hdzpfzwl") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip44" "nip46" "nip47")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "negentropy/std" "serde/std" "serde_json/std" "tracing/std" "url-fork/std") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.26.2 (c (n "nostr") (v "0.26.2") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)))) (h "07lbihihviz19v12vqxvi1r7wvkr36pdjv3p44vlszfscn6gnl48") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip44" "nip46" "nip47")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "negentropy/std" "serde/std" "serde_json/std" "tracing/std" "url-fork/std") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.26.3 (c (n "nostr") (v "0.26.3") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "csv") (r "^1.1.5") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls-webpki-roots" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)))) (h "0xn1j9w330jrd9k1xskrckdhc1dzrvz0m2zs2998h04aa9zqdh2v") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip11" "nip44" "nip46" "nip47")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "negentropy/std" "serde/std" "serde_json/std" "tracing/std" "url-fork/std") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.27.0 (c (n "nostr") (v "0.27.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1j281ynxwmlmjvnq0g14y086zwc0vnqs6l26w3rmxmlgjn6j4iry") (f (quote (("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip57")))) (s 2) (e (quote (("std" "dep:once_cell" "cbc?/std" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "chacha20?/std" "negentropy/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "url-fork/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "cbc?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.28.0 (c (n "nostr") (v "0.28.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1xzn6myqmjbdn7hvhjvr9zypa6cnn66l07p800zldzb24h8dhz9j") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (s 2) (e (quote (("std" "dep:once_cell" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.28.1 (c (n "nostr") (v "0.28.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1nipbm2sqdlcinf17zgrxhjwzc0fpkbwmsqbcqjqnswx3qhb9av2") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (s 2) (e (quote (("std" "dep:once_cell" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.29.0 (c (n "nostr") (v "0.29.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07a4ky07apz0myl726pqvqr4xxa9jlch26aa9sfz7y0wyk18am15") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (y #t) (s 2) (e (quote (("std" "dep:once_cell" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.29.1 (c (n "nostr") (v "0.29.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.30") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bmwrg1il8hc6972nq7jc4gbl8rb8864l8n6a102pk78g12y7r15") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (s 2) (e (quote (("std" "dep:once_cell" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.30.0 (c (n "nostr") (v "0.30.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.31") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1gszidwigkvifj45hdafypak76kffzfbghlpkfxc985ciy426wm2") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04" "nip44") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (s 2) (e (quote (("std" "dep:once_cell" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.31.0 (c (n "nostr") (v "0.31.0") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.31") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1c8qar85ybhyhm6cj22k85zayy9p15zbjvq0x17c0la9gz6vkfwc") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04" "nip44") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (y #t) (s 2) (e (quote (("std" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "once_cell/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "once_cell/alloc" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.31.1 (c (n "nostr") (v "0.31.1") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.31") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1c5wz01ylnxy59y932nz0inqqg0ryzh71fjy29nb8qdv55a0p6zg") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04" "nip44") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (s 2) (e (quote (("std" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "once_cell/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "once_cell/alloc" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

(define-public crate-nostr-0.31.2 (c (n "nostr") (v "0.31.2") (d (list (d (n "aes") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (o #t) (k 0)) (d (n "bip39") (r "^2.0") (o #t) (k 0)) (d (n "bitcoin") (r "^0.31") (f (quote ("rand" "serde"))) (k 0)) (d (n "cbc") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chacha20") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (f (quote ("getrandom"))) (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "negentropy") (r "^0.3") (k 0)) (d (n "nostr-ots") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 2)) (d (n "once_cell") (r "^1.19") (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("json" "rustls-tls" "socks"))) (o #t) (k 0)) (d (n "scrypt") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (k 0)) (d (n "tracing") (r "^0.1") (k 0)) (d (n "unicode-normalization") (r "^0.1") (o #t) (k 0)) (d (n "url") (r "^2.5") (f (quote ("serde"))) (o #t) (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("serde"))) (o #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window"))) (o #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0b7ybjv5kvddgf42niya0651l163i56b0vzs968pz4spfdf0ckzd") (f (quote (("nip59" "nip44") ("nip47" "nip04") ("nip46" "nip04" "nip44") ("default" "std" "all-nips") ("all-nips" "nip04" "nip05" "nip06" "nip07" "nip11" "nip44" "nip46" "nip47" "nip49" "nip57" "nip59")))) (s 2) (e (quote (("std" "dep:url" "base64?/std" "bitcoin/std" "bitcoin/rand-std" "bip39?/std" "cbc?/std" "chacha20?/std" "chacha20poly1305?/std" "negentropy/std" "once_cell/std" "scrypt?/std" "serde/std" "serde_json/std" "serde_json/preserve_order" "tracing/std" "unicode-normalization?/std" "wasm-bindgen?/std") ("nip57" "dep:aes" "dep:cbc") ("nip49" "dep:chacha20poly1305" "dep:scrypt" "dep:unicode-normalization") ("nip44" "dep:base64" "dep:chacha20") ("nip11" "dep:reqwest") ("nip07" "dep:js-sys" "dep:wasm-bindgen" "dep:wasm-bindgen-futures" "dep:web-sys") ("nip06" "dep:bip39") ("nip05" "dep:reqwest") ("nip04" "dep:aes" "dep:base64" "dep:cbc") ("nip03" "dep:nostr-ots") ("blocking" "reqwest?/blocking") ("alloc" "dep:url-fork" "cbc?/alloc" "chacha20poly1305?/alloc" "base64?/alloc" "bitcoin/no-std" "once_cell/alloc" "serde/alloc" "serde_json/alloc")))) (r "1.64.0")))

