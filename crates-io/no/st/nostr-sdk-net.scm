(define-module (crates-io no st nostr-sdk-net) #:use-module (crates-io))

(define-public crate-nostr-sdk-net-0.20.0 (c (n "nostr-sdk-net") (v "0.20.0") (d (list (d (n "futures-channel") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "httparse") (r "^1.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("BinaryType" "Blob" "CloseEvent" "ErrorEvent" "Event" "MessageEvent" "WebSocket"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "webpki-roots") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0q049ga2w64hnd12i5jrd6v40yb69wm2yhqgl5pigcqrd4j5qmr9") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.21.0 (c (n "nostr-sdk-net") (v "0.21.0") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.18") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "webpki-roots") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0and3p2d9p6csr4p4zha8naf9n6vvvxa3g2rzbx5rj77xbgxysan") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.22.0 (c (n "nostr-sdk-net") (v "0.22.0") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.19") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "webpki-roots") (r "^0.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1acr81pmlmfnmb3wb0ihddqnxmyympfhcahsgqh8z6g9qc7576hd") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.23.0 (c (n "nostr-sdk-net") (v "0.23.0") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.19") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "webpki") (r "^0.22") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "webpki-roots") (r "^0.23") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0p6nc3rpwsiimi23h7yxqcnkqy6ihdcj5f58maqn8z6wlxbycq8b") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.23.1 (c (n "nostr-sdk-net") (v "0.23.1") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0ij7f34jpaha4agdiarnp639climj4rq4pwl0kwn0wqb657i0vb2") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.24.0 (c (n "nostr-sdk-net") (v "0.24.0") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("std"))) (k 0)) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1vl4f00031x8sinj9prk9ky550d1sygdnx26bg13f5bs4sq5hh7s") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.25.0 (c (n "nostr-sdk-net") (v "0.25.0") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("std"))) (k 0)) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1cjh9nvi7k0jyc28pv1i89aamqjg7n8xy9inq1dapqg2ki4nmmhq") (r "1.64.0")))

(define-public crate-nostr-sdk-net-0.26.0 (c (n "nostr-sdk-net") (v "0.26.0") (d (list (d (n "futures-util") (r "^0.3") (f (quote ("sink" "std"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("net" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-rustls") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-socks") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.20") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url-fork") (r "^3.0") (f (quote ("std"))) (k 0)) (d (n "wasm-ws") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "webpki-roots") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0cikwbhmh580xcgsxvd1ikd05grgpwqijzp7bqzm2yz5kd6wzv6p") (r "1.64.0")))

