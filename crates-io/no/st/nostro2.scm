(define-module (crates-io no st nostro2) #:use-module (crates-io))

(define-public crate-nostro2-0.1.0 (c (n "nostro2") (v "0.1.0") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.19.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "05r81ds1wzqijrjjyji8zfa4nds88gqfm21r79pnhp2qlwv2dlp8")))

(define-public crate-nostro2-0.1.1 (c (n "nostro2") (v "0.1.1") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.19.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0ivz2mwsm57mnhdgpycnpn9kcv92jl0kyvq6cdxsqqzgdmnmyz64")))

(define-public crate-nostro2-0.1.2 (c (n "nostro2") (v "0.1.2") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.19.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0gg5kbilrkk47fv21998hz4aq66yhv9lmyh2g56ygp8q05l14zyb")))

(define-public crate-nostro2-0.1.3 (c (n "nostro2") (v "0.1.3") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "httparse") (r "^1.8.0") (d #t) (k 0)) (d (n "native-tls") (r "^0.2.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10.5") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tungstenite") (r "^0.19.0") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1mxk388l0c6jrly4xj8jinymnx3iqsqgixbwqf0zcs2p8515yg6c")))

(define-public crate-nostro2-0.1.4 (c (n "nostro2") (v "0.1.4") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1qqr1ambil3x1mvyalx1b8gz0r8yqcand3kw5srqyd7r9bv2pkih")))

(define-public crate-nostro2-0.1.5 (c (n "nostro2") (v "0.1.5") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "142gggsg6kq3a55bg7cz069lgs1hnvwn1gbiv98y8inlfsprd25l")))

(define-public crate-nostro2-0.1.6 (c (n "nostro2") (v "0.1.6") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0c0y0rpb8d8bayi67pysdjqbcjf5f2gsvvk32bij60bdskfhajks")))

(define-public crate-nostro2-0.1.7 (c (n "nostro2") (v "0.1.7") (d (list (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1mm3hxbcxha6g50q9k2r0vrxb2cjj40wg9f9yhsz0scc32d43qm5")))

(define-public crate-nostro2-0.1.8 (c (n "nostro2") (v "0.1.8") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0sc4xcfxsddw13ygp58phikgwp6wpxz48bar8w7kxkal55cs2sih")))

(define-public crate-nostro2-0.1.9 (c (n "nostro2") (v "0.1.9") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1g2zgh5db6frax3980pab81d8sail0k0xyicy52cy0yq4xrpkdkh")))

(define-public crate-nostro2-0.1.10 (c (n "nostro2") (v "0.1.10") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.18.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "00ify3f8rqm0ikcjj80nri759r2p4357vk6hryqmibcjayd9s9rl")))

(define-public crate-nostro2-0.1.11 (c (n "nostro2") (v "0.1.11") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.2.1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1d6mvs2bwv72333an7c4372jwjgqy42pyjs8cqv5xvhaqijcg94w")))

(define-public crate-nostro2-0.1.12 (c (n "nostro2") (v "0.1.12") (d (list (d (n "async-utility") (r "^0.1.1") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.2.1") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "1djvxscvmr9j3s24wjj17hc4p8g8mvw639ab6hgw48zaq7j709kx")))

(define-public crate-nostro2-0.1.13 (c (n "nostro2") (v "0.1.13") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("sync" "rt" "macros"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("native-tls"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "0f616181mqc81qjz02v0wx7yssq2qnnv31ryf8510qap0rcy0pbk")))

(define-public crate-nostro2-0.1.14 (c (n "nostro2") (v "0.1.14") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 0)) (d (n "tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (k 0)))) (h "1phh84ljj78rfv161fjiwnb67gl07i4ipmawha8bzfhh626am456")))

(define-public crate-nostro2-0.1.15 (c (n "nostro2") (v "0.1.15") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0xy7qsjv79nwnxky500y9mr2bz3ani6r82hk6ginklmsjccz6z2m")))

(define-public crate-nostro2-0.1.16 (c (n "nostro2") (v "0.1.16") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "10hy9zxx4yj4b81166frl8qhyf8sqdf5b99lfb4dvlsfbsgbz28f")))

(define-public crate-nostro2-0.1.17 (c (n "nostro2") (v "0.1.17") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0kwr246379v2xpm0p823jdfv06b18q8sfmah3r0bw7lqws613ilk")))

(define-public crate-nostro2-0.1.18 (c (n "nostro2") (v "0.1.18") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "10gn67209i9hc8fw047blfyddg4hbfwccy708fpfy8k8qgbldakv")))

(define-public crate-nostro2-0.1.19 (c (n "nostro2") (v "0.1.19") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ll1sl69d6p9fmsa9yifp2nnaw9mlacfbx2biwm69qagmbavyakp")))

(define-public crate-nostro2-0.1.20 (c (n "nostro2") (v "0.1.20") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0g0k4xflfi8dplcyj5cql3jz449aki150675a4kn847lcvqvagp8")))

(define-public crate-nostro2-0.1.21 (c (n "nostro2") (v "0.1.21") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (f (quote ("spanish"))) (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1x101j8nmwakfl3y51kgi5k52kn63p1i676p3qgric1b0xjxbx5l")))

(define-public crate-nostro2-0.1.22 (c (n "nostro2") (v "0.1.22") (d (list (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (f (quote ("spanish"))) (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "15lc7gs6bq84l7pzjr84ibkmz6lvyb5yvbbpg7lwdgkd6nmgk8i1")))

(define-public crate-nostro2-0.1.23 (c (n "nostro2") (v "0.1.23") (d (list (d (n "aes") (r "^0.8.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (f (quote ("spanish"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "libaes") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "07yvv8jjy37nfvi2iwdz7nm291s4qw1vwyd6mwzycq8i31hrbgys")))

(define-public crate-nostro2-0.1.24 (c (n "nostro2") (v "0.1.24") (d (list (d (n "aes") (r "^0.8.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (f (quote ("spanish"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "libaes") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "19hz9cpm0ysbmaa02b4vxhj4dd510qji9jyrcg4kcr21phbax8di")))

(define-public crate-nostro2-0.1.25 (c (n "nostro2") (v "0.1.25") (d (list (d (n "aes") (r "^0.8.4") (d #t) (k 0)) (d (n "base64") (r "^0.21.5") (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (d #t) (k 0)) (d (n "bip39") (r "^2.0.0") (f (quote ("spanish"))) (d #t) (k 0)) (d (n "cbc") (r "^0.1.2") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "chacha20") (r "^0.9.1") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (f (quote ("sink" "std"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hkdf") (r "^0.12.4") (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (d #t) (k 0)) (d (n "libaes") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "ring") (r "^0.17.8") (f (quote ("wasm32_unknown_unknown_js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "rustls-pki-types") (r "^1.4.0") (f (quote ("web"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("test-util" "macros" "net"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-tungstenite") (r "^0.21.0") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-tungstenite-wasm") (r "^0.3.1") (f (quote ("rustls-tls-webpki-roots"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "wasm-bindgen") (r "=0.2.92") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.42") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-time") (r "^1.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1zqajkm85ldy84318pcb0bww19i4hc5xa59i37lgp3lj5wlgna03")))

