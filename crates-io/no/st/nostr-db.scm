(define-module (crates-io no st nostr-db) #:use-module (crates-io))

(define-public crate-nostr-db-0.1.0 (c (n "nostr-db") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "05ndlq5kikbw99givpf3hmqlwp4cyb9fhd21yy6j3l3skbxxibil") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-nostr-db-0.2.0 (c (n "nostr-db") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.2.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "06pkgiycdcddz84an4p08f9j0nkqvxzznrahia536xi5lwcxykds") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-nostr-db-0.3.0 (c (n "nostr-db") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "1hvm2qq31syhjxh3sn15kbdjjnfsicjmrjrp1qiazz4aamby1nhx") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-nostr-db-0.4.0 (c (n "nostr-db") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "0fdwiibj1y4hgvdggirwkpmrjlvzsr22fyn1i5vb0k6ahngvaj5q") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-nostr-db-0.4.1 (c (n "nostr-db") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "03qfq0pc94spa9bym183h751mg9bwdn1zh8s2ah6s2jbmkhnfwzi") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-nostr-db-0.4.2 (c (n "nostr-db") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.3.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "1gjzxh5pzw27myilcz2if5i4vn9zgk185dckh07d79ah5i3013r2") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

(define-public crate-nostr-db-0.4.3 (c (n "nostr-db") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 2)) (d (n "charabia") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "nostr-kv") (r "^0.3.1") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.42") (f (quote ("validation"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("global-context" "rand-std"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (k 0)))) (h "0rq9yfrqfmwh71gdlmqnmzzkcn73k0sgfmm28d957r1jxwfk51fz") (f (quote (("search" "charabia")))) (s 2) (e (quote (("zstd" "dep:zstd"))))))

