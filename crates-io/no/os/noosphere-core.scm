(define-module (crates-io no os noosphere-core) #:use-module (crates-io))

(define-public crate-noosphere-core-0.1.0-alpha.1 (c (n "noosphere-core") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.4") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0b53c4z4ndgc50dyz7dq6cl9gclfv4vvwvkj4sda8piygslql73j") (r "1.60.0")))

(define-public crate-noosphere-core-0.1.0 (c (n "noosphere-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.4") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.1.1-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "07iysp3ra5aalnz9nnjm4v8rahx3iv9vqaby83rxk843aqr3k183") (r "1.60.0")))

(define-public crate-noosphere-core-0.2.0 (c (n "noosphere-core") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.4") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.1.1-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "06pvipb5s8yvqnxbh92gjh9hkd5fk9jrflsdjlfnl9x8riy21i3i") (r "1.60.0")))

(define-public crate-noosphere-core-0.3.0 (c (n "noosphere-core") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.4") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0zkjpani5qs7mrniqlf1qw2s78z3b0j0g8wghh3bkbmmw6ssnik6") (r "1.60.0")))

(define-public crate-noosphere-core-0.4.0 (c (n "noosphere-core") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "09iymfhgd96jx1318k5xbgdn97rchg9ci6nhsqas9yhn3l3y562x") (r "1.60.0")))

(define-public crate-noosphere-core-0.5.0 (c (n "noosphere-core") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "13al67vxd1q8q6di8aw6zq4bs83l0wnxw28igabwgi1nx2j4g6fk") (r "1.60.0")))

(define-public crate-noosphere-core-0.5.1 (c (n "noosphere-core") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "12y5g2bssd43z9ayjl8xrz2s94j6p4v4l0ifnqpp7ciizbf3ybrx") (r "1.60.0")))

(define-public crate-noosphere-core-0.6.0 (c (n "noosphere-core") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "04yi7vp67yvad7xrybcfsfn31x4wgmzvh2vi3inr9h3s170lfsdw") (r "1.60.0")))

(define-public crate-noosphere-core-0.6.1 (c (n "noosphere-core") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1cyr6zw2jk3qkpv4ra4l60sv047kqz5cd563lszvz0j78fmnxgl7") (r "1.60.0")))

(define-public crate-noosphere-core-0.6.2 (c (n "noosphere-core") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0fwh5l54b87h4phxak6pzlqa07i9nwryky2qv5zgmvl6lqnhzvad") (r "1.60.0")))

(define-public crate-noosphere-core-0.6.3 (c (n "noosphere-core") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "log") (r "~0.4") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "016p77rkdkyp5kz8xgplriis837p3vqlx18189mpib14kf5zvvnb") (r "1.60.0")))

(define-public crate-noosphere-core-0.7.0 (c (n "noosphere-core") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "crdts") (r "^7") (d #t) (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.3.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1390q0xq3qlf4y6v840d1r3bjnj4yb6pvr8k6rfcqr4h3jx8g1wp") (r "1.60.0")))

(define-public crate-noosphere-core-0.8.0 (c (n "noosphere-core") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "~0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0ca1bxiwqwj0270z585193v6ka2789082xlxmasqnjjw7dq9ll44") (r "1.60.0")))

(define-public crate-noosphere-core-0.9.0 (c (n "noosphere-core") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "17nysi6p6jxa5zv2ad78g1ckbard7kl6yb6yw8b2hbr89kkw96s4") (r "1.60.0")))

(define-public crate-noosphere-core-0.9.1 (c (n "noosphere-core") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0jnq8cqsvgclh8r3nrb124784ihrvl619zgafpng7ra1c5wvx240") (r "1.60.0")))

(define-public crate-noosphere-core-0.9.2 (c (n "noosphere-core") (v "0.9.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0kvrpvd76006sqa9lh0mr53ybknw0z54csy6lbhjx22h8fjbihyl") (r "1.60.0")))

(define-public crate-noosphere-core-0.9.3 (c (n "noosphere-core") (v "0.9.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.5.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1mm0pl09qkirrjsz16i3lg94pjdcwysbibbxs9669i3i5pbdyq08") (r "1.60.0")))

(define-public crate-noosphere-core-0.10.1 (c (n "noosphere-core") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.5.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "06n6cdz72rbdwdjwd5q8l5kic1i8v8wfsnaxzp7wi8pmzvrpavdg") (r "1.60.0")))

(define-public crate-noosphere-core-0.11.0 (c (n "noosphere-core") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "fvm_ipld_amt") (r "~0.5") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.5.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_ipld_dagcbor") (r "~0.2") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0yssan9chi7bhlgrg57ib66gdqhrcgyzmcvx8rfailf00ppl81a2") (r "1.60.0")))

(define-public crate-noosphere-core-0.12.0 (c (n "noosphere-core") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "0fbr51gjvxpyik6d85hxjy1j7c494zl9ymvv75cgpfcrsjzp7s1s") (r "1.60.0")))

(define-public crate-noosphere-core-0.12.1 (c (n "noosphere-core") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "0wh39a0g9r42ciz38lfbaglns4hzwp1rmvymvqc40qghks7l81mh") (r "1.60.0")))

(define-public crate-noosphere-core-0.12.2 (c (n "noosphere-core") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry") (r "^0.31.5") (f (quote ("reqwest" "rustls" "backtrace" "contexts" "panic" "anyhow"))) (o #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0nc7s3y8g1mwr63ndrw43d2w5rk915cvssy3qiwwp5plbpn7d2va") (s 2) (e (quote (("sentry" "dep:sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.12.3 (c (n "noosphere-core") (v "0.12.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "11ma30yzjsydj1fhs7l9z3xymgx67nsg8mrglkss8zcy8pxl6nww") (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.13.1 (c (n "noosphere-core") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "0zslvxwc8mvzmw1i0csfscjs249yjjlnzi9lppl66r16n0xfkchq") (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.13.2 (c (n "noosphere-core") (v "0.13.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "0bfcmnm2fqrm28r00n2zihn0lfd5xn43sdsw9c225jsdiirn3mq5") (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.14.0 (c (n "noosphere-core") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "0da7hk26my5n756vw2srz8b7rx4gpjp20brhf07dcld04xq1343y") (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.15.0 (c (n "noosphere-core") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.24") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "19lyw9yw9jv0a0qjjy8l58yxcn283s2c1fgsjrznhbis4ya33qff") (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.15.1 (c (n "noosphere-core") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-std") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "1dajfin4y6i6q35adnxmslq9grhiyfgpay86lg542xyci77phmpc") (f (quote (("helpers")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.15.2 (c (n "noosphere-core") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "~0.8") (d #t) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_bytes") (r "~0.11") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "1nz29w9kxbfacbj783fafbgvv34lg4w5rz6as8dcdvirjr50ib03") (f (quote (("helpers")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.16.0 (c (n "noosphere-core") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.4") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0bh0kwivsxzbm0y9c8yzyb088cp6p0sjdif1ada5zxsqflcm7rvv") (f (quote (("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.17.0 (c (n "noosphere-core") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.4") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "00jjmsdvrkhjhxv7bs94jki3zwacdbdaqagx7q5wh7l0hf13qcj0") (f (quote (("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.17.1 (c (n "noosphere-core") (v "0.17.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.5") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0p1838py0i8q0v2h5nzh90hqhqm4iky07k2y6hjysl85b0w40l03") (f (quote (("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.17.2 (c (n "noosphere-core") (v "0.17.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.6") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1536yb6256ry8v51zdranx6cdzzvhncf10miy0snm4yx05h7ynsq") (f (quote (("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.17.3 (c (n "noosphere-core") (v "0.17.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "byteorder") (r "^1.5") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.6.7") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0xm3lwk0dr9pcmraqghs7sdgqhzjq73wqv9qccsnzfcqk599fsp3") (f (quote (("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.18.0 (c (n "noosphere-core") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "headers") (r "=0.3.8") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "=0.11.20") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.18") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0zlyq7mihzs7fl401102ibb5xwhwlgqs9lk7x1pqh0fsq5y8fm81") (f (quote (("test-gateway") ("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

(define-public crate-noosphere-core-0.18.1 (c (n "noosphere-core") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-once-cell") (r "~0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "axum-extra") (r "^0.9.1") (f (quote ("typed-header"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ed25519-zebra") (r "^3") (d #t) (k 0)) (d (n "fastcdc") (r "^3.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "~0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "http") (r "^1") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-collections") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "=0.11.20") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "sentry-tracing") (r "^0.31.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_urlencoded") (r "~0.7") (d #t) (k 0)) (d (n "strum") (r "^0.25") (d #t) (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tiny-bip39") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.18") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-streams") (r "^0.3.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("ReadableStream"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0iqmi2xli0qk5bb59mmfbyy32p53h26k5dfy4blsbvgifqlgwk3y") (f (quote (("helpers") ("default")))) (s 2) (e (quote (("sentry" "dep:sentry-tracing")))) (r "1.60.0")))

