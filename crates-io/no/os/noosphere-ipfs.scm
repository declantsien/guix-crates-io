(define-module (crates-io no os noosphere-ipfs) #:use-module (crates-io))

(define-public crate-noosphere-ipfs-0.1.1 (c (n "noosphere-ipfs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ji4wcdaln8mb9cyg2xc1ssmgy5b3v2lcz3y41qisg5aw3bl7bbl") (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.1.2 (c (n "noosphere-ipfs") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rjh18klxhmfrnz84rd9mpkjjc815i4czzavywaqyp1qgv16dkbb") (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.2.0 (c (n "noosphere-ipfs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1p3s10dif8813pcr419k0a95l0yi9h1vp8m1jqqf8rqwfiivl16s") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.3.0 (c (n "noosphere-ipfs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "00lqslc333da46y0a3a16yrln7jv1jvjmd3vw8x0hbqhrbigyglg") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.3.1 (c (n "noosphere-ipfs") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1kfxyxf3hk7xl7ahd008i9m367sasi61jc51x8zib9i5dd23s13g") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.3.2 (c (n "noosphere-ipfs") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1nrmasc6zzw1cqn9sb8931mh7rxhk8rh00dhzh1b3yjdcnkaisq0") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.3.3 (c (n "noosphere-ipfs") (v "0.3.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1agdpajmgra4ykyzr7kbkhgmsgkzwsk8s0pgkgn1bgjyi0jwk00c") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.3.4 (c (n "noosphere-ipfs") (v "0.3.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rmlcw3znbyn3zbm82pjvrdal4ia7rxdhyn51c7is680xim3rb9q") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.4.1 (c (n "noosphere-ipfs") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "116vb1qdp3k87hks05287pq4p301izwrj0jwqn6z60rrijijridq") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.4.3 (c (n "noosphere-ipfs") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0bha0472hbrf24dm24cwmyj38ln91bn6r8dvqhphqlmcgzi01pwx") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.4.4 (c (n "noosphere-ipfs") (v "0.4.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "~0.14") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1cw1kvlwj7jhgabajaazpb3kdm8yn5rqm8b9s34qzdzkjyki8lil") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.5.0 (c (n "noosphere-ipfs") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1gi24gasnkbbar4hclvmayz447vqv3w33z24iwnzrgmjgy5c2fhk") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.5.1 (c (n "noosphere-ipfs") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "095psdvsg6660lai5qc3lxrgx58141mj5cvingvp4g18ahnavj2g") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.5.2 (c (n "noosphere-ipfs") (v "0.5.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0xkbsdkwyjvp2w4s1629qk9z9l47il9wfar81is17ckh5qrasm8z") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.5.3 (c (n "noosphere-ipfs") (v "0.5.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.12.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "10hbh30z4clhcvykifgd3wqlb7vcpmpgsnhbzq560y4762qvgwg8") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.6.1 (c (n "noosphere-ipfs") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1mczd2hk75mbywx3bmsxkhzrlyjs73dwkv4sw1a12szqwv6448x5") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.7.0 (c (n "noosphere-ipfs") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.13.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "16lwybldscwbcraqgarkkmj65nq0y0z8i2ai8j0w2wnd3g86dkb0") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.7.1 (c (n "noosphere-ipfs") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0mhsb1x8n0f33vk42hrp00c91pdlzl6lmqvnpryav0wgnmj94mw6") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.7.2 (c (n "noosphere-ipfs") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "01fsixx26x2l98x9w31wm6zi8ani6ak8qb9q0ky76mya32fpx0qd") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.7.3 (c (n "noosphere-ipfs") (v "0.7.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rand") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "02gy5g6ywyykh3naa3yaz36xf4l7xlg1j9dyc7y2vv99qzszk0cy") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.7.4 (c (n "noosphere-ipfs") (v "0.7.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1y79qabilg8ph51qhm8jif3wmys1mnmww8gqkjllnyvrij3yiksb") (f (quote (("test_kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.0 (c (n "noosphere-ipfs") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0azim5dv4ridg3rxv37p7g5c2ds26ddkg7r6k7nm2wxp74lnz2hp") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.1 (c (n "noosphere-ipfs") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "07zkjzwzxh3ifsd4f6kyxhah11hn67w3w5iafdvcqfrkfxhgpjg8") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.2 (c (n "noosphere-ipfs") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1xz3j9pq684bgqaz6gmsn6f05xr4amz9pchnrp3ngy9jvx7gczvf") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.3 (c (n "noosphere-ipfs") (v "0.8.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0j7jh801m3cnxcqnn8i3gpjbjvqpwyarx6ac5v2ccg6fvx991i1a") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.4 (c (n "noosphere-ipfs") (v "0.8.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "07y4jrdbalxsjw0bx8wwxzcffs4vjfl43ds314d4qi4147bvc308") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.5 (c (n "noosphere-ipfs") (v "0.8.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0n65zfd6xy41fpp8gw8qsh275398zxpkv33wq7270j47dv0xg25b") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

(define-public crate-noosphere-ipfs-0.8.6 (c (n "noosphere-ipfs") (v "0.8.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "^0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util"))) (d #t) (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "17alc3xlynyz1qq3cicjk7k60gfyn6rs80sp0i8nqdrbxgdhyk05") (f (quote (("test-kubo") ("storage" "ucan") ("default" "storage")))) (r "1.60.0")))

