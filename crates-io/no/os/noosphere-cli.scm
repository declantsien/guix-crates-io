(define-module (crates-io no os noosphere-cli) #:use-module (crates-io))

(define-public crate-noosphere-cli-0.1.0-alpha.1 (c (n "noosphere-cli") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.14") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1mx1hl631inpapi8130i13nplm5midklipf94j3gabjq5s3figp5") (r "1.60.0")))

(define-public crate-noosphere-cli-0.1.0 (c (n "noosphere-cli") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.14") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0qc6n9b8idhf04mab6rvmca4y3x8chdr8fjwsk28xqhzpwgn2jwd") (r "1.60.0")))

(define-public crate-noosphere-cli-0.1.1 (c (n "noosphere-cli") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.14") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1aqzgyjf6mfnyq2p9f3vcs4pzc1v9abqdz6ammvmrlz5biy3syb8") (r "1.60.0")))

(define-public crate-noosphere-cli-0.2.1 (c (n "noosphere-cli") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.1.1-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.14") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0l40ffg3b93sfcwpq0g74l28fd0hnbi5xpr2c8j3fiihcq6axhxs") (r "1.60.0")))

(define-public crate-noosphere-cli-0.3.0 (c (n "noosphere-cli") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.14") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0s998qv63igzpmjszzydyjcfym9xa41mr2sf0f84xiwalc983p5y") (r "1.60.0")))

(define-public crate-noosphere-cli-0.5.0 (c (n "noosphere-cli") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0xhnmnysad07r9jgbh9hddvja71h8y93gvvkbr1v8308vacl4l53") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.6.0 (c (n "noosphere-cli") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "09929f0w5fii2mn2nmbc0nbzc1ngp0ygz046z569xsxkyk5d52i0") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.6.1 (c (n "noosphere-cli") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper") (r "~0.14") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "hyper-multipart-rfc7578") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ipfs-api-prelude") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1lk75f3w12yhadq1xx90jbq6p1fc2mwprlikzy9fk41cjbi7dgfi") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.6.3 (c (n "noosphere-cli") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0vm0a5rd41sh1wsxfz5c2cvlipyzypwf0ihislqkv7h8ybkbi6vr") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.6.4 (c (n "noosphere-cli") (v "0.6.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0zrsfjh97bv9v2nnyv0nb5pn0i7k073kyyn16vdmpmkc8m65l57n") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.6.5 (c (n "noosphere-cli") (v "0.6.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0nimlxgs8rnsw9rzma1hkg8aw2jh0q2szj7d8k6x8apg0gs3gcxa") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.6.6 (c (n "noosphere-cli") (v "0.6.6") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.5.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-fs") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ivikmcmwrmfrzkl5zfgbch1lsh3gzymhawlj1l3pp434y1wdnmm") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.7.0 (c (n "noosphere-cli") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0j0jmihy9b4prfxd491h49qh6m3vx3v6dywbzj7lxggs7zphrrq6") (r "1.60.0")))

(define-public crate-noosphere-cli-0.8.0 (c (n "noosphere-cli") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "06f726pm27wi95vn19bamdpa9220waym9ffz058qglwl6mpjq5dj") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.9.0 (c (n "noosphere-cli") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1inx5wxh20cm744m73waid68bs5h7cm51l4azgjgp0h876pgbmm8") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.9.1 (c (n "noosphere-cli") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "03ymbrvwva7igalqnry2jc86q7xd4nk520mrskxbqik3lh6ksgdp") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.9.2 (c (n "noosphere-cli") (v "0.9.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1d2c2ksw1casb1s9zkjw2z9cq6k41bxxdlq8zi3c9vv4rvhwpyzi") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.9.3 (c (n "noosphere-cli") (v "0.9.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.3.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "08j1qz1fd8v17zdv25n25n0ps52kjj4ljykxpl1lcfd9rpx7fpv1") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.9.4 (c (n "noosphere-cli") (v "0.9.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1fw8hrddi3kgndazhcp7c1r55fzi6pk47p1m1pxxq1nw7fqzwjir") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.9.5 (c (n "noosphere-cli") (v "0.9.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.3.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "169yfkfavj4kgcm8b49b7rkkmrfg1z51cp9ikkbh5lxq8cvj3w23") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.1 (c (n "noosphere-cli") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "14c7zqw1agcjaalvslkwa7f3jvq9chwhsjmjxx9x1b91zykn83zk") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.3 (c (n "noosphere-cli") (v "0.10.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1av99s9f7smmnkzl20s9p0g3402hcg19xndai2l2wig81im8kwxk") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.4 (c (n "noosphere-cli") (v "0.10.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "15g5mbrv3lppifky5kq3csh9lm75wli6pcn45rpdwjsfi0slrvlq") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.5 (c (n "noosphere-cli") (v "0.10.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "072ap7f29arlg257q6j20j1zgh0w84p2gxd1dh9h7fq51ac7yi9c") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.6 (c (n "noosphere-cli") (v "0.10.6") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0mmajjwprcacnsspjp2bamq1nvh55c00k03mprp5fgzypsc2ki2n") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.7 (c (n "noosphere-cli") (v "0.10.7") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1s8n2psr96v0z0pd80yz24k1rwcpm8xdcfj92ds2fqxkbcy1y159") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.8 (c (n "noosphere-cli") (v "0.10.8") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0jk7kw96r692yccvq5rs1lpvqfl4jx7h0az3rl3dwzmlc0q7hrqb") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.9 (c (n "noosphere-cli") (v "0.10.9") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1a2avywk9j915pbgk7jid3ry21vxvbipdr5x8z15dkn45m4ri4q2") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.10 (c (n "noosphere-cli") (v "0.10.10") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "07x1xak4sj5hycsvb4ih2b2cnibs42b4hznr6br4xp4c49kpd0vn") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.10.11 (c (n "noosphere-cli") (v "0.10.11") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.4.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0dq63pljwpl4zmj2378m16zhmrjwbglp36d1n36miian66v8v3vk") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.11.0 (c (n "noosphere-cli") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1a89ha7ah179f3mks5p00amjjsldq1miw7kdik72hwipq55n1ph1") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.11.1 (c (n "noosphere-cli") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0s3pkw56ghc41gr9z0r7wi85h9yyjh3lyd22s9zvmdaav10q466n") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.11.2 (c (n "noosphere-cli") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "14sl1q8wb96qc287wq8djg5dc85m76wvjd6rgx5wxlbkyszl7p5h") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.11.3 (c (n "noosphere-cli") (v "0.11.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0n7288zi84vdx59m4wsh27lczqva78v1z3g3bsrp97wpl004s9gs") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.12.1 (c (n "noosphere-cli") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ylh4d690cv56q4lqbfc5pyb023s9jk1f749i5vl5in3vhciy661") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.12.2 (c (n "noosphere-cli") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1zcvcivm0bcz83mmn3l20lyq0c21xlia5rwa8nn7c64dij84mvhk") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.13.0 (c (n "noosphere-cli") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1p6vh7hpnpw19m8x1gnwdpd9gr0jyg7p6nb5kmj97arhh8qiap8y") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.13.1 (c (n "noosphere-cli") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1cah7550qf3kzpxdia2w00rv19lpwl3hz0wn4ypila6klrva2fhs") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.13.2 (c (n "noosphere-cli") (v "0.13.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1q879hfhncml8xa08zcnkfsgxl3crwvx96lr2myj2zdia8bw3zl0") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.14.0 (c (n "noosphere-cli") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "047haqhc0am2ha7vl7hqng8ilc90zasddisab7ii783qykrzyvwn") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.14.1 (c (n "noosphere-cli") (v "0.14.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ignore") (r "^0.4.20") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.14.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "13hdlfgwhk1qknvspj617kmdlmy1129qbibrjr2z8vbslc5n1i2d") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.14.2 (c (n "noosphere-cli") (v "0.14.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.14.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-sphere") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rp0n6rdn908rynb6f78qbf7dc23j9f2691h1wi6n7w24c0yxsjj") (f (quote (("test_kubo")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.15.0 (c (n "noosphere-cli") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0l18iymk423jp8hiz713jk9ik2plf9hg80mzg88g4apzc5pzx7px") (f (quote (("rocksdb" "noosphere/rocksdb") ("helpers" "tracing-subscriber" "noosphere-ns") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.15.1 (c (n "noosphere-cli") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1bn2516hckz8436l8zpn18bha15vwik3dghfjv8ags2xxz2nmvz3") (f (quote (("rocksdb" "noosphere/rocksdb") ("helpers" "tracing-subscriber" "noosphere-ns") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.15.2 (c (n "noosphere-cli") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0z2yxybfdkgqz2zavdj56plpf9sz08c9hcdjvjz5r6fr1lk3pbkh") (f (quote (("rocksdb" "noosphere/rocksdb") ("helpers" "tracing-subscriber" "noosphere-ns") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.15.3 (c (n "noosphere-cli") (v "0.15.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "11gas98yfj127927cbyz72wccpqfa449ig2jmfy1x9jijz78r0js") (f (quote (("rocksdb" "noosphere/rocksdb") ("helpers" "tracing-subscriber" "noosphere-ns") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.15.4 (c (n "noosphere-cli") (v "0.15.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.10.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.16") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "158l2z9b0jm1njncg0cq337isdp58wn97l6rhqja7ih3im0av3xx") (f (quote (("rocksdb" "noosphere/rocksdb") ("helpers" "tracing-subscriber" "noosphere-ns") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.16.0 (c (n "noosphere-cli") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.18") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1cx9b26lnx6yl6nak8p13iv73fb3xqljvj9a7s0xxcymcdp5dq11") (f (quote (("rocksdb" "noosphere/rocksdb") ("helpers" "tracing-subscriber" "noosphere-ns") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-cli-0.17.0 (c (n "noosphere-cli") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.16.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.18.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-gateway") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.12.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "^0.2.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "symlink") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3.18") (f (quote ("env-filter" "tracing-log" "json"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "vergen") (r "^8.2.6") (f (quote ("build" "cargo" "git" "gitcl"))) (d #t) (k 1)) (d (n "vergen-pretty") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1i9kmj9ns2a5ax2gnr448758wj87qwn07qf6m3mnq5v39fddxyzf") (f (quote (("rocksdb" "noosphere/rocksdb") ("observability" "noosphere-gateway/observability") ("helpers" "tracing-subscriber" "noosphere-ns") ("default" "observability")))) (r "1.60.0")))

