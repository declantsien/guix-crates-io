(define-module (crates-io no os noosphere-gateway) #:use-module (crates-io))

(define-public crate-noosphere-gateway-0.1.0 (c (n "noosphere-gateway") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs") (r "^0.1.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1a5271qknbkydp6qv7l1fm00c9ggb2p4f690z7zlvkpqii9j23cf") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.2.0 (c (n "noosphere-gateway") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0hzxk9i6bhpspn0p8pwc5zvkk1sn7png6vg88hm5dl3cfsww2qsa") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.3.0 (c (n "noosphere-gateway") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00clk7527xxxrddgj5i8amsghdmvvidzcjckq6xj57hpjmm62c0m") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.3.1 (c (n "noosphere-gateway") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ij6skwrssfasjnpm83f34agiikxnd9lmlka615gqdp5c25v76bf") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.3.2 (c (n "noosphere-gateway") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1wr48ajsfb7r43i40y1paf0mbnxh779z16gxg4awyd0wlki39c1s") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.3.3 (c (n "noosphere-gateway") (v "0.3.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "06l3i14s2rpwp72xpscpvj7cl1ifk2bcglc7hnzri6z6cc297pf0") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.3.4 (c (n "noosphere-gateway") (v "0.3.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rkbgllbig3hzdm21i6jd8bjh01niydnld7bh24wab2ziydzjhgr") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.3.5 (c (n "noosphere-gateway") (v "0.3.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.5.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1shaswqwxqn9qjx0gbsrgyapgh3pksfyx0hjh6qhl7qyb1l5xdfr") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.1 (c (n "noosphere-gateway") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "174b6iyp0cqj0fg4w04r3x0icjvq5n58kxm91m5bbb3ifr251xki") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.3 (c (n "noosphere-gateway") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0rb043yzgi1y25sbkcsw2k9pra094wadq4wl3vzq01h19ify96j1") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.4 (c (n "noosphere-gateway") (v "0.4.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "074n21139psh158j0mq0zlr6a71hq6v9dv3w1s0dvk61lp2nkqq8") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.5 (c (n "noosphere-gateway") (v "0.4.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0041yrsp3vzcxbdh4arg27ladmcrkl41wr6fx7hv03ldzxx1611r") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.6 (c (n "noosphere-gateway") (v "0.4.6") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ix6z6q682hpw230hk1k54nwhrc9v33ryv32x1qndahc4sv14cv0") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.7 (c (n "noosphere-gateway") (v "0.4.7") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "15cpl8sn1bnxdc1sapx627cc5isgmyp8y1yrad7nsr15790xyahk") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.8 (c (n "noosphere-gateway") (v "0.4.8") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.6.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0libhk0nmyjy6qksxzr3vr8cn49dnbn06ldanw9l8qplk41wdpbs") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.9 (c (n "noosphere-gateway") (v "0.4.9") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0j70gwsshmk1l519sig4zkyfy66wkb7spj89112iqzh6xjzrzmzw") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.10 (c (n "noosphere-gateway") (v "0.4.10") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0lyija3dn2znpa1n9xdxlhmmy8hq0z0y40xsfdqfz88nxplxwq2i") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.4.11 (c (n "noosphere-gateway") (v "0.4.11") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "cargo"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "globset") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "multipart") (r "~0.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.11") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "path-absolutize") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "pathdiff") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml_edit") (r "~0.15") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "whoami") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "106rznpyz70r7n4fyd3qy8gpq2yr47lim1krnqqsclm4zmjn4928") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.5.0 (c (n "noosphere-gateway") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ycixzq23g1yqjzsy5mzz0j6rf6fv5zjcgj510n7vyq00i65q9y8") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.5.1 (c (n "noosphere-gateway") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1wfpdxk7b1a4mrlvf3i4wgf7f53xhz68q0akdhbb5win6yws39aw") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.5.2 (c (n "noosphere-gateway") (v "0.5.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1y2rsm1vgg5m68l9zmy8lv31inr8ns019r1qil0d60r5agyr7wj6") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.5.3 (c (n "noosphere-gateway") (v "0.5.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.19") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "11k2xx2qfxckj5i402324396ryf4ms9kfimbys2n0s7g5lns44yr") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.6.1 (c (n "noosphere-gateway") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-car") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0g9i2dkb9zlsmwydhyab8qfsi3nyp2cggfgfj3padb4g6jgf7kni") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.7.0 (c (n "noosphere-gateway") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1jwidk3figfvm5r4qdhky4dhwsg6998mj1l4dr2ij4ms3r7g0sig") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.7.1 (c (n "noosphere-gateway") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "18l5bj2w9dkkhmymqp2rz4z4438zzgjz591m2nwbqn3gfl5gc6pv") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.7.2 (c (n "noosphere-gateway") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.11") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.9.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "~0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "18xq9si1hv2xggmzxnarbj2phvkw33ldxhrlj9rv693gqzcpqppn") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.8.0 (c (n "noosphere-gateway") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "03ryqv2h445693r3bi4agjs8qykjvnxqasangn2r43aqphwgzn52") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.8.1 (c (n "noosphere-gateway") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "19njl79ll239aw3qbw9383l0kx41jkv8lfxsck63zml721d87rg9") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.8.2 (c (n "noosphere-gateway") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-api") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-sphere") (r "^0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wnfs-namefilter") (r "^0.1.21") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1byglhhls063acyiv7qv93qlm7p45585xdci3m3dcxp5vwqa7c92") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.9.0 (c (n "noosphere-gateway") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deterministic-bloom") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1l0nxg2jpqbvzc8q9dq1d8gwzsz6yrsks211cb6v0yxwy5cavwiq") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.10.0 (c (n "noosphere-gateway") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deterministic-bloom") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.0") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.0") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-ipfs") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0w1iz7l42dr272cib6v9lmk1j514lksn58l6lxhsgi49nmpw0yhf") (r "1.60.0")))

(define-public crate-noosphere-gateway-0.10.1 (c (n "noosphere-gateway") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.1") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.1") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-ipfs") (r "^0.8.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1hdc2n27nybkdlrq0cdjicd8yaq597yiw0rbxw8cdpbah9j72ymj") (f (quote (("test-kubo")))) (r "1.60.0")))

(define-public crate-noosphere-gateway-0.10.2 (c (n "noosphere-gateway") (v "0.10.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.17.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.2") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-ipfs") (r "^0.8.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0jyyx2i6pb5yg19dqnm8yva63ppx7p605y3fbmjmw4frz9mraxj7") (f (quote (("test-kubo")))) (r "1.60.0")))

(define-public crate-noosphere-gateway-0.10.3 (c (n "noosphere-gateway") (v "0.10.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.17.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.3") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-ipfs") (r "^0.8.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0fn1513mvzgc60410rg5f4mm9vv2wbfk8w1sjwwwqwyq6y5i205a") (f (quote (("test-kubo")))) (r "1.60.0")))

(define-public crate-noosphere-gateway-0.11.0 (c (n "noosphere-gateway") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("headers" "macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.18.0") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-ipfs") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.11.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "=0.11.20") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "044714hwyf7bq73yhfdqdb03sw11a28470bq3rz5pnynyaj081gf") (f (quote (("test-kubo")))) (r "1.60.0")))

(define-public crate-noosphere-gateway-0.12.0 (c (n "noosphere-gateway") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.7.3") (f (quote ("macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-extra") (r "^0.9.1") (f (quote ("typed-header"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-tracing-opentelemetry") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bytes") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "iroh-car") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "mime_guess") (r "^2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-core") (r "^0.18.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.18.1") (f (quote ("helpers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "noosphere-ipfs") (r "^0.8.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ns") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "=0.11.20") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strum_macros") (r "^0.25") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio-util") (r "^0.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("cors" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12fkfkp2s047jdfphazqq0bg9wbmz47fj3khvjm384jzg4v4mg4k") (f (quote (("test-kubo") ("observability" "axum-tracing-opentelemetry") ("default")))) (r "1.60.0")))

