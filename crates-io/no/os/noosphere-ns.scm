(define-module (crates-io no os noosphere-ns) #:use-module (crates-io))

(define-public crate-noosphere-ns-0.1.0-alpha.1 (c (n "noosphere-ns") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libp2p") (r "^0.49.0") (f (quote ("identify" "dns" "tcp" "tokio" "noise" "mplex" "yamux" "kad"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.1.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "12xd1glpmi2h0zsbmijhgxlwy7qs0pwj5hj1wlvrav5ircgjkbaq") (r "1.60.0")))

(define-public crate-noosphere-ns-0.1.0 (c (n "noosphere-ns") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (k 2)) (d (n "libp2p") (r "^0.49.0") (f (quote ("identify" "dns" "tcp" "tokio" "noise" "mplex" "yamux" "kad"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "16nraml8v7927m7rrk1sigy15wi552wz2g24r4xdp692f1jrhzly") (r "1.60.0")))

(define-public crate-noosphere-ns-0.1.1 (c (n "noosphere-ns") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.14") (d #t) (k 2)) (d (n "libp2p") (r "^0.49.0") (f (quote ("identify" "dns" "tcp" "tokio" "noise" "mplex" "yamux" "kad"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0jy20bmgzk8dvisgdz05b4k8d1k21nq6dqy8jmniypb7gvsbbiwx") (r "1.60.0")))

(define-public crate-noosphere-ns-0.3.0 (c (n "noosphere-ns") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.49.0") (f (quote ("identify" "dns" "tcp" "tokio" "noise" "mplex" "yamux" "kad"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.4.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1gzq4ksj1rz4cc274id8lplawvh8fw9d31ans9xqm3y95yhvj9pv") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml") ("default" "orb-ns")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.3.1 (c (n "noosphere-ns") (v "0.3.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.49.0") (f (quote ("identify" "dns" "tcp" "tokio" "noise" "mplex" "yamux" "kad"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0hhw46lk15xryg9a6qnw2jr1d8kc9hib4pd5an21w9s9hdphib6i") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml") ("default" "orb-ns")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.3.2 (c (n "noosphere-ns") (v "0.3.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.49.0") (f (quote ("identify" "dns" "tcp" "tokio" "noise" "mplex" "yamux" "kad"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.5.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1mnkl68cpr78qv2mswlchsbjlfamkly6qnc69vcfpgmgh9g89p3s") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml") ("default" "orb-ns")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.0 (c (n "noosphere-ns") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.7.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.2.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1hxqcikknmc4d6hnl2kdzp3i62x7cvh89y0gk7y1q3rrva9d2kk1") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.1 (c (n "noosphere-ns") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "19wqpfgcwfr0n79kmwdvdznbhws86hv5milhm2vwickj651yz9a5") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.2 (c (n "noosphere-ns") (v "0.5.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "13mhd6glh14wwm6gx73hz6r7vcz3n7lh6rzwsdd96vva8b3g3z4k") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.3 (c (n "noosphere-ns") (v "0.5.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00dpz800yzx67kicw0ab68j1ji649qdlvhsi6syiaa03h3wbmq1v") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.4 (c (n "noosphere-ns") (v "0.5.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0863b8c7w3zl3wlly58c0557rp8jkifdgq6fsfxd8xk1ny6slx5b") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.5 (c (n "noosphere-ns") (v "0.5.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.8.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1izmqhyd6nz46nwzhsghg472s9hxlx33nvprsk9fl60j4r6vrrly") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.6 (c (n "noosphere-ns") (v "0.5.6") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "~0.9") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.0") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.9.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0kzg45qly96wkk29nqs6zrp8jbxiagbk954xfsn1dy8hfpjw4pw1") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.5.7 (c (n "noosphere-ns") (v "0.5.7") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("identify" "dns" "kad" "macros" "mplex" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.9.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1g0n3pw8sd1v9v3n3dfaj7rkfjy9anj2hg5nplz85by552sp01m2") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.1 (c (n "noosphere-ns") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ss7zd11axfdhaw1dzr22h8l6nkwg8q7crdym5vbvmlj7lm7k7wd") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tracing-subscriber" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.3 (c (n "noosphere-ns") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0zg0dwzfnqxi70j1r93qsgs0v0qx3zfl5dhi3np7l86wsw9l6bcx") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.4 (c (n "noosphere-ns") (v "0.6.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1.0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rxlga77nah9whnjcbxd1d69v65mpmq8cawxmivvljn2rw4053zn") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.5 (c (n "noosphere-ns") (v "0.6.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0bsigzyrq4vanmvm2cf7vh8crjfvbbg7yb49l4n85b41k3r7k3pc") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.6 (c (n "noosphere-ns") (v "0.6.6") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0p07vlzh4qirvd8iczs3ypdsz439201wzashjplydsj81ki0028l") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.7 (c (n "noosphere-ns") (v "0.6.7") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1rnbqblca81ipmdrfr0ckb2sqf87xaxvc22zy5n4yfi8cyxbi5x6") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.6.8 (c (n "noosphere-ns") (v "0.6.8") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0pn3fy8yss2sgiqrjmi9vhc2syaahvyddxpi8zg5x4crjkwvp9qi") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.7.0 (c (n "noosphere-ns") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.9") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0d78kfzfkk0ifn0ngm4dbrsqb3pfan2ivjkvzy50ccmwq15a6dmk") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.7.1 (c (n "noosphere-ns") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.10") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1wb7y72nrcag2fmx6wpq4id3s3l5af8488q5dgxl3inl28iwc8qh") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.7.2 (c (n "noosphere-ns") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.10.11") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempdir") (r "~0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1irnvqrygikb13p20kp557q36cqfb7iibmc585jbz3q3kbw2jf9j") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.8.0 (c (n "noosphere-ns") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1bqrir1ciki6rd4szr98344r41mis0n2y4iaqz84hcnqblpchkr3") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.8.1 (c (n "noosphere-ns") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "161ciwihmbwcff4irka5j4jl3nfcdwvs7vhwbd2aailhgb1wbjyg") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.8.2 (c (n "noosphere-ns") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.15") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "07vyyafcg5cazhgh3qg2n18mk62x978jpm11rjccl2g7a71263la") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.8.3 (c (n "noosphere-ns") (v "0.8.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.11.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.12.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0gcw75yig4mh3pp9vk6y5xhiysfzbpdjga06y4n44zy0z7jrfkqv") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.9.1 (c (n "noosphere-ns") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.12.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.6.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1xgzhjpkcv8js5nmz0nkh6515lk0w2kv7yd4igk1q057mmpnc1pc") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.9.2 (c (n "noosphere-ns") (v "0.9.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.12.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.13.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0pp54mmjlnwbialhd3abhw1qx0klpiq2c24iw7kpvdmmfziz7vkw") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.9.3 (c (n "noosphere-ns") (v "0.9.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.13.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "09riabxa8rf6248b0kmnq56wkil387j2ad2fb6qs0px1c0bi308h") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.9.4 (c (n "noosphere-ns") (v "0.9.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "~0.5") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.13.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0vb4pwfl84lrskz1v87qidyqgnz18i2z9drk81g33xl246flv51y") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.10.0 (c (n "noosphere-ns") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.14.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0gm7whadlgrf9whzzc4jjshfhnlbndm7r5yz8hv74z5sm36z4zcb") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.10.1 (c (n "noosphere-ns") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.14.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "01m61zjp7kjxpmwlsr0f8418wqf3800hi1y2skjr4m6r9pydwhy3") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.10.2 (c (n "noosphere-ns") (v "0.10.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.14.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.15.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00sik03law721r2wczzp80ilz1spwkyvs1ykw3502bdpasn0bpxr") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.11.0 (c (n "noosphere-ns") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.16.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ljh8jg34dfikl4cs084q2r3dic7dw2ndiw78qh8visjr215zssi") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.11.1 (c (n "noosphere-ns") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1f2fxp0y35imrspdclws54hs9scba84i7a1h47jgplqqgbgacxvv") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.11.2 (c (n "noosphere-ns") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.2") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.7") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0hb316gk576hfhk73lmid5hm1p0alj4xn7zz1d9dffq391g2m3jz") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.11.3 (c (n "noosphere-ns") (v "0.11.3") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "10f4a58gxj8w6l9f6vakvrf58hir34kj9i7bj7z490l77318mq2h") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.11.4 (c (n "noosphere-ns") (v "0.11.4") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.15.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.17.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.4") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "14psa03m3lr1i7g0mqn8msm3c09lhkrz836070hzz8vxp50q6v24") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.11.5 (c (n "noosphere-ns") (v "0.11.5") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.18") (f (quote ("json" "headers" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.18.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0x6csmpq4alxjy41gand1nvfbl55y53jffq9z9x4ba5i9pk6l3j2") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("default" "orb-ns" "api-server") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

(define-public crate-noosphere-ns-0.12.0 (c (n "noosphere-ns") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.7.3") (f (quote ("json" "macros"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-tracing-opentelemetry") (r "^0.16.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "cid") (r "^0.10") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "home") (r "~0.5") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "libp2p") (r "^0.51.3") (f (quote ("ed25519" "identify" "dns" "kad" "macros" "noise" "serde" "tcp" "tokio" "yamux"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere") (r "^0.16.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-common") (r "^0.1.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-core") (r "^0.18.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.6") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.8") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "reqwest") (r "~0.11") (f (quote ("json" "rustls-tls"))) (o #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde_json") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("io-util" "io-std" "sync" "macros" "rt" "rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "toml") (r "~0.8") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("trace"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "void") (r "^1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1bb3v6ayh6cfyp9j8b0np6sr5z7wnz1ggsl2r9132mrw9rn0rd23") (f (quote (("orb-ns" "clap" "noosphere" "home" "toml" "noosphere-ipfs") ("observability" "axum-tracing-opentelemetry") ("default" "orb-ns" "api-server" "observability") ("api-server" "axum" "reqwest" "url" "tower-http")))) (r "1.60.0")))

