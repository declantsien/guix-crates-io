(define-module (crates-io no os noosphere-into) #:use-module (crates-io))

(define-public crate-noosphere-into-0.1.0-alpha.1 (c (n "noosphere-into") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.3") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "subtext") (r "~0.3") (f (quote ("stream"))) (d #t) (k 0)) (d (n "temp-dir") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0j69q7hpvshh0qjfbzvgy17chm0n2q8h2fyip8216a1n0nym60jk") (r "1.60.0")))

(define-public crate-noosphere-into-0.1.1-alpha.1 (c (n "noosphere-into") (v "0.1.1-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.3") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.1.1-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "subtext") (r "~0.3") (f (quote ("stream"))) (d #t) (k 0)) (d (n "temp-dir") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1q0d1bms6b6p2g7dx19j24wc6jbvf5l2v1fbkchs436k335gl1j7") (r "1.60.0")))

(define-public crate-noosphere-into-0.1.0 (c (n "noosphere-into") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.3") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "subtext") (r "~0.3") (f (quote ("stream"))) (d #t) (k 0)) (d (n "temp-dir") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "177ra92hvrcrkklw99w0pmhlzk5072kfd5nkdv4zq4nch1af4d64") (r "1.60.0")))

(define-public crate-noosphere-into-0.2.0 (c (n "noosphere-into") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.3") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "subtext") (r "~0.3") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "19abw0sqbb4ljqynls7khcq2573fx07v8rvvnxpch38ysl7dvbhy") (r "1.60.0")))

(define-public crate-noosphere-into-0.3.0 (c (n "noosphere-into") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "subtext") (r "~0.3") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0jq7ppn25vwpk96vhrj17j13s8v1v6i9j6r1m3kgjvdm844ydxgf") (r "1.60.0")))

(define-public crate-noosphere-into-0.4.0 (c (n "noosphere-into") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0d9qjc9wgmv30qwacjq3iipx3133llrjm1sylqcsm8px6kgpxcqs") (r "1.60.0")))

(define-public crate-noosphere-into-0.4.1 (c (n "noosphere-into") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.4.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1hw4m75rskzlm56af0z6d4kcwvci60dp31r6kgnkk0r8fbzkvj83") (r "1.60.0")))

(define-public crate-noosphere-into-0.4.2 (c (n "noosphere-into") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1qqp63d50hhv7843hbcxzq2wn2viv5x5zv3hic1ixm1gcqh5wc8w") (r "1.60.0")))

(define-public crate-noosphere-into-0.4.3 (c (n "noosphere-into") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "11jjw16zd9qbsxl2hxzx6zd2ws7iz63gqr3pb28pd9rs18ai119g") (r "1.60.0")))

(define-public crate-noosphere-into-0.4.4 (c (n "noosphere-into") (v "0.4.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "088jzm0m3fh3bkharh6mx4rar9c1ffflk8xihf1yzf8fi77pv7p3") (r "1.60.0")))

(define-public crate-noosphere-into-0.4.5 (c (n "noosphere-into") (v "0.4.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.4.2") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "08x07frznzxqznmj9wa7frf90jpak56hwfsira4gcbhdw98fbhyz") (r "1.60.0")))

(define-public crate-noosphere-into-0.5.0 (c (n "noosphere-into") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.1.0") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "13721ns0vhaw7yiv90hx72y0lq4yzj47x5pdcv0plx94y9cp18z0") (r "1.60.0")))

(define-public crate-noosphere-into-0.6.0 (c (n "noosphere-into") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.8.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.2.0") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing-subscriber") (r "~0.3") (f (quote ("env-filter"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "073a1pfc5076h0i5s99267bhzdyjjl9ygllbbl5vif99823imag6") (r "1.60.0")))

(define-public crate-noosphere-into-0.7.0 (c (n "noosphere-into") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.0") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0szi9bg1fcqww1v4hyyyc6h4n290nzy6n2a8595yxnp7f73xblb4") (r "1.60.0")))

(define-public crate-noosphere-into-0.7.1 (c (n "noosphere-into") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.1") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0hippbwba1caji4ri9yf339sdaasz5aqdwnxrxmc6cbc73284n1g") (r "1.60.0")))

(define-public crate-noosphere-into-0.7.2 (c (n "noosphere-into") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.2") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1d1xc4dzzdwysbayaff0dcrj7c8s1vl04zw2p7qp680r2sxa5n4k") (r "1.60.0")))

(define-public crate-noosphere-into-0.7.3 (c (n "noosphere-into") (v "0.7.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.2") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.4.0") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0jrmwb2w26z655ds5096bmpvbl737zgq46b8cgh3hx207dd497d1") (r "1.60.0")))

(define-public crate-noosphere-into-0.7.4 (c (n "noosphere-into") (v "0.7.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.3") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.4.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.4.1") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "17lpxccdqd3ggbxx0ls262m8m8mg3ansk8ggg0zmkgfz2k81cbqa") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.1 (c (n "noosphere-into") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.10.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.1") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1k3gh9hkvns99kc0q6pidpi0zz7s3jq2r5s4yh0w611h7m47n3ig") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.3 (c (n "noosphere-into") (v "0.8.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.3") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.3") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1sdxfzki1bvndz37y3bsw705821i2kgrjwhballwfldch3mf65mi") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.4 (c (n "noosphere-into") (v "0.8.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.4") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.4") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "14j8jbnhswjd6ql93dyrzqr1fr362ijb5x7k7xrzrmd7f93n07hc") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.5 (c (n "noosphere-into") (v "0.8.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0kjav5bi4kn3qa08v7wmj6pkwzazk0isxl4prp86w65fk9n2l3ws") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.6 (c (n "noosphere-into") (v "0.8.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0q92aizjzn0nfifjnfy4fhklychkyxh31wwjg1mqpv92f50hj0m8") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.7 (c (n "noosphere-into") (v "0.8.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.6") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.6") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "1ingxifw3lfbnzrby9cf9cd5nng7bgarrsbbgcn35cgyjxiqka0f") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.8 (c (n "noosphere-into") (v "0.8.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.7") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.7") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0fnysslghiarv6kpv8ri8izvkq3naq36ga0f68q9iqf1l2g8vy4y") (r "1.60.0")))

(define-public crate-noosphere-into-0.8.9 (c (n "noosphere-into") (v "0.8.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "axum-extra") (r "~0.4") (f (quote ("spa"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)))) (h "0wywn2lhqskn9y5z3qrj9idbbf3dvmcl2f0376hmybbkw7wnacpq") (r "1.60.0")))

(define-public crate-noosphere-into-0.9.0 (c (n "noosphere-into") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.0") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "0icfb5nm5agi6fj35il2smidp7iyfc8qycb8p1j88p8cfvrj4k1f") (r "1.60.0")))

(define-public crate-noosphere-into-0.9.1 (c (n "noosphere-into") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.1") (f (quote ("helpers"))) (d #t) (k 2)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)))) (h "12bir2npyq05kw49p7ni9i6065wixbl31afdz5rghgldk37rs5r2") (r "1.60.0")))

(define-public crate-noosphere-into-0.9.2 (c (n "noosphere-into") (v "0.9.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.2") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "197y7wf8kmy22hpnzq8h0w9lp363rja2csf0v4qqzylbj7fyfhln") (r "1.60.0")))

(define-public crate-noosphere-into-0.9.3 (c (n "noosphere-into") (v "0.9.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.3") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1pz16lj6j5q1l5xsyszlvp1rclg4aa4rapfi75ncpns638m9gwrd") (r "1.60.0")))

(define-public crate-noosphere-into-0.10.1 (c (n "noosphere-into") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1fnnxk9585vwym0l0n5mzmwx6f80bgl1yxywhzw52zyfyig6pyap") (r "1.60.0")))

(define-public crate-noosphere-into-0.10.2 (c (n "noosphere-into") (v "0.10.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.13.2") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.8.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0hgjcxnba360m44vr89xa43q3vy7pr4b9gjqcqljy4wwhcsgcqmj") (r "1.60.0")))

(define-public crate-noosphere-into-0.10.3 (c (n "noosphere-into") (v "0.10.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "~0.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "~0.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0im6l0sg414cmyl83ajj7aj55j4h1n9rnnnjcj4q047kdys31pl0") (r "1.60.0")))

(define-public crate-noosphere-into-0.10.4 (c (n "noosphere-into") (v "0.10.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.0") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.10.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1m22gfzmvscmwmqh6h3r2ir6i87nrfhp6kqy1vhwfhgv94g3ajk8") (r "1.60.0")))

(define-public crate-noosphere-into-0.10.5 (c (n "noosphere-into") (v "0.10.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.10.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "00rlr8p1rm0hk02c1fab51k5f9ignyagqcgqrrjci85pv3fijp87") (r "1.60.0")))

(define-public crate-noosphere-into-0.10.6 (c (n "noosphere-into") (v "0.10.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "~0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.10.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1xq2ggscmn9dhydqxl3rvgz003dziv2bqzmc9ikln8qf6gbqcvz3") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.0 (c (n "noosphere-into") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.16.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1fcawpnkcikx9zn1sq2jdrcpz0pazmkgvycshvm2daf53l441k9w") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.1 (c (n "noosphere-into") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "06ybijkh23ydhwzlc13hss4ja68rnr9sygkkqxlg2j8z6d1r66x5") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.2 (c (n "noosphere-into") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "03xhbbf7pjvh4xkalyqaliha16cy7y3ca80fz4cjlvi8833vkq9q") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.3 (c (n "noosphere-into") (v "0.11.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "0745aqh0cml07dzfh18givsabn4ngn8q9gr05gwfk8lqx80p4i4a") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.4 (c (n "noosphere-into") (v "0.11.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1x9lwi846br2gb8p493nj1wxlvq2mgjn8lmy40mml23n7q0jwm0i") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.5 (c (n "noosphere-into") (v "0.11.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-compat") (r "~0.2") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.6.18") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.18.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (k 0)) (d (n "subtext") (r "^0.3.2") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.4.3") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1xikinz8rgipk6vx305mi4lny4ymf43hj4v90bhx3wi3qbl0pfl7") (r "1.60.0")))

(define-public crate-noosphere-into-0.11.6 (c (n "noosphere-into") (v "0.11.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "async-utf8-decoder") (r "~0.3") (d #t) (k 0)) (d (n "axum") (r "^0.7.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "horrorshow") (r "~0.8") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.18.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (k 0)) (d (n "subtext") (r "^0.3.5") (f (quote ("stream"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio") (r "^1") (f (quote ("io-util" "macros" "test-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (d #t) (k 0)) (d (n "tower-http") (r "^0.5") (f (quote ("fs" "trace"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)))) (h "1d1rm1yqwdqw6xmzxsvdf9jiids8zibbh1i3srffwbj6sg0cbj6n") (r "1.60.0")))

