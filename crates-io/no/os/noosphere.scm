(define-module (crates-io no os noosphere) #:use-module (crates-io))

(define-public crate-noosphere-0.1.0-alpha.1 (c (n "noosphere") (v "0.1.0-alpha.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "noosphere-api") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)))) (h "15x5b9dfbs1sqnmxcj4jdjlckmh9pgbzg495lvdwp3mhnkf57ss4") (f (quote (("headers" "safer-ffi/headers")))) (r "1.60.0")))

(define-public crate-noosphere-0.1.0 (c (n "noosphere") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "noosphere-api") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.1.1-alpha.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "pollster") (r "~0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "12232nysxwv7jjizv54m0ns67qfni0nlfvai5481rvka863b9gam") (f (quote (("headers" "safer-ffi/headers")))) (r "1.60.0")))

(define-public crate-noosphere-0.2.0 (c (n "noosphere") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "noosphere-api") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.1.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (k 0)) (d (n "temp-dir") (r "^0.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1wqj5db6apgx7w69j9bfq7qaz85qwfwzxnqvclxy47ph33mjhggj") (f (quote (("headers" "safer-ffi/headers")))) (r "1.60.0")))

(define-public crate-noosphere-0.3.0 (c (n "noosphere") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.8") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.14") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.7.0-alpha.1") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1zr0qayi4c20vjkdav82p96yy66zvhjziyb66knrcl0xxkljbb10") (f (quote (("headers" "safer-ffi/headers")))) (r "1.60.0")))

(define-public crate-noosphere-0.4.0 (c (n "noosphere") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.3.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "~0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0d6pvf554dpgky4dhyn1pqpvs5z5hpapqzxf7nifsffp8awf87dx") (f (quote (("headers" "safer-ffi/headers")))) (r "1.60.0")))

(define-public crate-noosphere-0.5.0 (c (n "noosphere") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.4.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-storage") (r "^0.4.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "03r1r3cknzb18a38j068w2pii31axw5dd88lqv14h7645lb5wbh6") (f (quote (("kubo-storage" "noosphere-storage/kubo-storage") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.5.1 (c (n "noosphere") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.2") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.4.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.4.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1fs4df0w1mhigyk05dlqwpm1qfpiwacsvmnwsk435dvmy4s4r8cq") (f (quote (("kubo-storage" "noosphere-storage/kubo-storage") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.6.0 (c (n "noosphere") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.3") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.4.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros" "out-refs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0zsr7b82vajwb8bpk77g48rxnr8slcxqizfk9llzy0c367nhrglk") (f (quote (("kubo-storage" "noosphere-storage/kubo-storage") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.6.1 (c (n "noosphere") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.4") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.4.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros" "out-refs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1l456vdqy2qw6qi074xqczyg3bvsz8ngp2pvrypn0x50cqiv66jf") (f (quote (("kubo-storage" "noosphere-storage/kubo-storage") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.6.2 (c (n "noosphere") (v "0.6.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.5") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.2") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.4.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-storage") (r "^0.4.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros" "out-refs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0sx90d5b1p9f5np9i1m67q7pvmpj1msjzxyi2qbj036lj28a2l8z") (f (quote (("kubo-storage" "noosphere-storage/kubo-storage") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.6.3 (c (n "noosphere") (v "0.6.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.5.6") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-fs") (r "^0.5.3") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-storage") (r "^0.4.2") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros" "out-refs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "tracing-wasm") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "03zxfy6lc4x80j5bf4rrn6prxcjwnmil9bv4zrd294cz25qnbxhr") (f (quote (("kubo-storage" "noosphere-storage/kubo-storage") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.7.0 (c (n "noosphere") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.1.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.5.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "~0.0.10") (f (quote ("proc_macros" "out-refs"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1dd8yfdfy97izs5x6g2cpiypqmq0ri5106kl77kr84ial36czaww") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.8.0 (c (n "noosphere") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.8.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.6.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.2.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "18nydxjs6pszyhpmnmjwxpa2wqw601rncj5h6cjrir2j7854620n") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.8.1 (c (n "noosphere") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.7.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.2") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1f8lhynj9ir8i9mvmpmbhrxx2y3kifg5scni98ijixad2i043w5i") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.8.2 (c (n "noosphere") (v "0.8.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.7.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1zyripjbfy1qvs12p04vmvhhpb0bchqrjfl6w84l5rvi11arvwhx") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.8.3 (c (n "noosphere") (v "0.8.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.7.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "14kx93zd6gvbqqh4972fz7fr1n6y3cm35nxj3dbmbp36lbir4g4m") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.8.4 (c (n "noosphere") (v "0.8.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.2") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.7.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.3.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0jr7bs0lr53yd69bffil1kwb6zhf2aqv6d5k116hr8dc2ky36sn9") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.9.0 (c (n "noosphere") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "~0.9") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 0)) (d (n "libipld-core") (r "~0.15") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.3") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.2") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.7.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.3") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.4.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.0") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "13d4hmg035k47addn8inlx0nd4zzd94684h171jsh4j9wh2z3ayl") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.9.1 (c (n "noosphere") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.4") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.9.3") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.7.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.4.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1ssk00p8wlz1cmpg4hllc0mxiv9h1yg7m6ib78xd6a86jyiyf0ni") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.1 (c (n "noosphere") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.6") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.10.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.2") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.1.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.2") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0m88kgxjymadznhd38iavbyvbmhdsp1wbkxv8v7r4zfc3m0jp6dh") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.3 (c (n "noosphere") (v "0.10.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "106fjjkjyqsdm980h492f471rd1bk9rzhmvfdl3xpsxvk1qc3rcx") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.4 (c (n "noosphere") (v "0.10.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.8") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.4") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1wa1cig19ldkrhjifi1sbgsm57fj9pq0l6afgqsip08r77swrqkr") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.5 (c (n "noosphere") (v "0.10.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1csv47lqzz9rfsanqq87j0cwws7z1vf8j97yyffh78bwa0lfsknq") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.6 (c (n "noosphere") (v "0.10.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.5") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1yya4jman89kv4zik7jyzak6kmjydf5mnly93vy1nhgcfzvb0kvm") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.7 (c (n "noosphere") (v "0.10.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.7") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.6") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0iqp8jzg6h2f438dhzhqfvh4f1h1inbaxs2yfjarylwf67k95vsg") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.8 (c (n "noosphere") (v "0.10.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.8") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.7") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "057mb7qyvz9yi7vcskl3xk46b0v01l69xw710fcaljms5c905lvk") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.9 (c (n "noosphere") (v "0.10.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0fw2mvq6dyn3js4hc1n1hyga9ndbvkvz4n04ys039dhk541rsk0f") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.10 (c (n "noosphere") (v "0.10.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1145j7pk4zd1zsshw1kwbjv7hv4b7iljfbh06baflp1m8dm2j4c4") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.10.11 (c (n "noosphere") (v "0.10.11") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen" "stdweb"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.7.9") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.8.9") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.4.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.5.8") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.6.3") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.2.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.3") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "~0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1gf82qqgh3cc96zqgcx2zrl4h1lvnia17y6c3vjm9d66hyizlznk") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.11.0 (c (n "noosphere") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.8.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.9.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "120brycd555f5s6bxdhyxz230wfmxg4dbm9ylc11kmc2svr0k4mq") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.11.1 (c (n "noosphere") (v "0.11.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.8.1") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.9.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "10grjx4rb150p4n281v4nr47niff7zya3karvf4i81qjjar43lbf") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.11.2 (c (n "noosphere") (v "0.11.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-api") (r "^0.8.2") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.2") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.9.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "19rppz5c3a3a6ncbmg2fz4jib3g3qma5cdcj1prcykwgxj78f0az") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.11.3 (c (n "noosphere") (v "0.11.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-api") (r "^0.8.3") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.12.3") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.9.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.6.3") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.3.2") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.6") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "19897jfcsxqkpm1l4p8a7wz5n6w7dk6gv8k5in5vr5zfgqb3l56y") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.12.1 (c (n "noosphere") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.9.1") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.13.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.7.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "09bqyn97p0pydcy276pr3d72p5vvcw6pyh83lfqqsi5gc0cac1fy") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.12.2 (c (n "noosphere") (v "0.12.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.10.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.13.2") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.8.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "126v9if5i0dcc8rjdnyqhrms13l5mz9j087m7vwp5vm7r4jv9kf0") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.13.0 (c (n "noosphere") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1259ydnx9zd91k61akagaqgxbd61s5320bnil9axvkry8gwcf4xl") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.60.0")))

(define-public crate-noosphere-0.13.1 (c (n "noosphere") (v "0.13.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.11.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.14.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.9.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.7.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.0-rc1") (f (quote ("proc_macros"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1h00azql88xdgi1c1g1y2b29ixb4yfi5pq1aifxw9gbksyar5lzp") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.14.0 (c (n "noosphere") (v "0.14.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.12.0") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.10.0") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.0") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0n8gdcix9njzlbm9jl5d1zpbwaj92wgndiw0mqbcx5dax73jriww") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.14.1 (c (n "noosphere") (v "0.14.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "~0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.12.1") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.10.1") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1aashlkwm4wnkw22cigkd34kjis3aw5isy006pkki6brf2a1r0hv") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.14.2 (c (n "noosphere") (v "0.14.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 2)) (d (n "noosphere-api") (r "^0.12.2") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.15.2") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.10.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.7.4") (o #t) (d #t) (k 0)) (d (n "noosphere-sphere") (r "^0.10.2") (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.8.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rexie") (r "~0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "~0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1lb8aksx002s0glj0diwc2ndwmxsjvsk8ya4vqlz716hpf1gqw3q") (f (quote (("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.15.0 (c (n "noosphere") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.16.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "1p7yigj854iq1rcryl7x78rcz0rxnwhayn9sw3hl5h5a1456ggmp") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.15.1 (c (n "noosphere") (v "0.15.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.0") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "00jjzm48fl48rr12qbrc08pbk18sqkbjmv8gk16lg86s3z38pw49") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.15.2 (c (n "noosphere") (v "0.15.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.2") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "0hgxrnm9ymiwza40zvz3660q2ibxmjrxr189jxj4c06z20jz05s0") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.15.3 (c (n "noosphere") (v "0.15.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.2") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.2") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "04xgvx4a8ndnmgmrlsizmgxqp4pya50kx19b2xrkl91g8kkrrv2m") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.15.4 (c (n "noosphere") (v "0.15.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.17.3") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.9.3") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.2") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "00a01cll1627arp712b5n1rq655av12r6g5nfxr9phr133jwzh11") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.16.0 (c (n "noosphere") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.18.0") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.0") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "=0.11.20") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.4") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "031lsiikwgsxpg7icrgikz3gnrh0486910b9sj9g0c2yccf0z1z9") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

(define-public crate-noosphere-0.16.1 (c (n "noosphere") (v "0.16.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "~0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg_aliases") (r "^0.1.0") (d #t) (k 1)) (d (n "cid") (r "^0.10") (d #t) (k 0)) (d (n "gloo-timers") (r "^0.3") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "libipld-cbor") (r "^0.16") (d #t) (k 0)) (d (n "libipld-core") (r "^0.16") (d #t) (k 0)) (d (n "noosphere-core") (r "^0.18.1") (d #t) (k 0)) (d (n "noosphere-into") (r "^0.11.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "noosphere-ipfs") (r "^0.8.6") (o #t) (d #t) (k 0)) (d (n "noosphere-storage") (r "^0.10.1") (d #t) (k 0)) (d (n "pkg-version") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "reqwest") (r "=0.11.20") (f (quote ("json" "rustls-tls" "stream"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "rexie") (r "~0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "safer-ffi") (r "^0.1.5") (f (quote ("proc_macros" "python-headers"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "subtext") (r "^0.3.5") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tokio-stream") (r "~0.1") (d #t) (k 0)) (d (n "tokio-util") (r "~0.7") (f (quote ("io"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "ucan") (r "^0.4.0") (d #t) (k 0)) (d (n "ucan-key-support") (r "^0.1.7") (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("CryptoKey"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "witty-phrase-generator") (r "~0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)))) (h "197rwbxamr7wba1acwrz6fq4385jibi8k1i9vv7fyqz6zxfnm2sm") (f (quote (("test-kubo") ("rocksdb" "noosphere-storage/rocksdb") ("ipfs-storage" "noosphere-ipfs") ("headers" "safer-ffi/headers") ("default")))) (r "1.70.0")))

