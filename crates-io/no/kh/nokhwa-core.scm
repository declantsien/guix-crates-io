(define-module (crates-io no kh nokhwa-core) #:use-module (crates-io))

(define-public crate-nokhwa-core-0.1.0-rc.1 (c (n "nokhwa-core") (v "0.1.0-rc.1") (d (list (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (k 0)))) (h "1ym5mxb7ggccs4vpmi6k34m275d7wvlg40c6phb33qyzxyqpbjzp") (f (quote (("wgpu-types" "wgpu") ("serialize" "serde") ("mjpeg" "mozjpeg") ("docs-features") ("default"))))))

(define-public crate-nokhwa-core-0.1.0-rc.2 (c (n "nokhwa-core") (v "0.1.0-rc.2") (d (list (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (k 0)))) (h "19sha8sr5d8s9i5gbnmrd0a62qm3q9swk990k1h9iq80pyh1j1ng") (f (quote (("wgpu-types" "wgpu") ("serialize" "serde") ("mjpeg" "mozjpeg") ("docs-features") ("default"))))))

(define-public crate-nokhwa-core-0.1.0-rc.4 (c (n "nokhwa-core") (v "0.1.0-rc.4") (d (list (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opencv") (r "^0.74") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (k 0)))) (h "1141l2d4xp31769dnx8bxnm599408s0flkvi47gpbrsrc1c8rg67") (f (quote (("wgpu-types" "wgpu") ("serialize" "serde") ("opencv-mat" "opencv") ("mjpeg" "mozjpeg") ("docs-features" "serialize" "wgpu-types" "opencv/docs-only" "mjpeg") ("default"))))))

(define-public crate-nokhwa-core-0.1.0-rc.5 (c (n "nokhwa-core") (v "0.1.0-rc.5") (d (list (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opencv") (r "^0.74") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (k 0)))) (h "082w121nymc65d0mgn5idqxh85qk00535dc7b9i2jbp07am2l0iq") (f (quote (("wgpu-types" "wgpu") ("test-fail-warnings") ("serialize" "serde") ("opencv-mat" "opencv") ("mjpeg" "mozjpeg") ("docs-features" "serialize" "wgpu-types" "opencv/docs-only" "mjpeg") ("default"))))))

(define-public crate-nokhwa-core-0.1.0-rc.6 (c (n "nokhwa-core") (v "0.1.0-rc.6") (d (list (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opencv") (r "^0.74") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (k 0)))) (h "0h3glrnlrvbxn46nyj7gq6dvz608kw3chkj0mna6hi78zfphc2fk") (f (quote (("wgpu-types" "wgpu") ("test-fail-warnings") ("serialize" "serde") ("opencv-mat" "opencv") ("mjpeg" "mozjpeg") ("docs-features" "serialize" "wgpu-types" "opencv/docs-only" "mjpeg") ("default"))))))

(define-public crate-nokhwa-core-0.1.0 (c (n "nokhwa-core") (v "0.1.0") (d (list (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opencv") (r "^0.74") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.14") (o #t) (d #t) (k 0)))) (h "1x5nn7wzbi2d5kqrpkzapyiqk3xifv3sy2vyjk4bkjhpjk3izn93") (f (quote (("wgpu-types" "wgpu") ("test-fail-warnings") ("serialize" "serde") ("opencv-mat" "opencv") ("mjpeg" "mozjpeg") ("docs-features" "serialize" "wgpu-types" "opencv/docs-only" "mjpeg") ("default"))))))

(define-public crate-nokhwa-core-0.1.1 (c (n "nokhwa-core") (v "0.1.1") (d (list (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opencv") (r "^0.81") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0bil5hyqic4jn2gv0lm2w7ycxgp7lgdwddghiy5y9hjv95w6hcmh") (f (quote (("wgpu-types" "wgpu") ("test-fail-warnings") ("serialize" "serde") ("opencv-mat" "opencv") ("mjpeg" "mozjpeg") ("docs-features" "serialize" "wgpu-types" "mjpeg") ("default"))))))

(define-public crate-nokhwa-core-0.1.2 (c (n "nokhwa-core") (v "0.1.2") (d (list (d (n "bytes") (r "^1.3") (d #t) (k 0)) (d (n "image") (r "^0.24") (k 0)) (d (n "mozjpeg") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "opencv") (r "^0.81") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.16") (o #t) (d #t) (k 0)))) (h "0jbd1laamj4901rfmdr54p3z6s0kj87bw0nq878bdc9w85c0x6yb") (f (quote (("wgpu-types" "wgpu") ("test-fail-warnings") ("serialize" "serde") ("opencv-mat" "opencv") ("mjpeg" "mozjpeg") ("docs-features" "serialize" "wgpu-types" "mjpeg") ("default"))))))

