(define-module (crates-io be lo below) #:use-module (crates-io))

(define-public crate-below-0.1.0 (c (n "below") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.29") (d #t) (k 0)) (d (n "below-common") (r "^0.1") (d #t) (k 0)) (d (n "below-dump") (r "^0.1") (d #t) (k 0)) (d (n "below-model") (r "^0.1") (d #t) (k 0)) (d (n "below-store") (r "^0.1") (d #t) (k 0)) (d (n "below-thrift") (r "^0.1") (d #t) (k 0)) (d (n "below-view") (r "^0.1") (d #t) (k 0)) (d (n "below_derive") (r "^0.1") (d #t) (k 2)) (d (n "cgroupfs") (r "^0.1") (d #t) (k 2)) (d (n "cursive") (r "^0.15.0") (d #t) (k 0)) (d (n "fb_procfs") (r "^0.1") (d #t) (k 0)) (d (n "fb_stats") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (f (quote ("async-await" "compat"))) (d #t) (k 2)) (d (n "libbpf-rs") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.3.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_debug"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "slog_glog_fmt") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.7") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "tokio") (r "=0.2.13") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "=0.5.6") (d #t) (k 0)) (d (n "walkdir") (r "^2.2.9") (d #t) (k 0)))) (h "0gylr9acmvqxyxjzn9v88dcsyrsvqmwqmq93wbzr9k6vgvdprqn5")))

(define-public crate-below-0.2.0 (c (n "below") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.45") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.2.0") (d #t) (k 0)) (d (n "common") (r "^0.2.0") (d #t) (k 0) (p "below-common")) (d (n "cursive") (r "^0.16.0") (f (quote ("crossterm" "termion"))) (k 0)) (d (n "dump") (r "^0.2.0") (d #t) (k 0) (p "below-dump")) (d (n "futures") (r "^0.3.13") (f (quote ("async-await" "compat"))) (d #t) (k 2)) (d (n "libbpf-cargo") (r "^0.7.0") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.10.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.2.0") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "procfs") (r "^0.2.0") (d #t) (k 0) (p "fb_procfs")) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "store") (r "^0.2.0") (d #t) (k 0) (p "below-store")) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "tokio") (r "^0.2.25") (f (quote ("full" "test-util"))) (d #t) (k 0)) (d (n "toml") (r "=0.5.7") (d #t) (k 0)) (d (n "users") (r "^0.9") (d #t) (k 0)) (d (n "view") (r "^0.2.0") (d #t) (k 0) (p "below-view")) (d (n "walkdir") (r "^2.2.9") (d #t) (k 0)))) (h "0r9k0h120ldqd5799pz3ai98qn8qsphl4jnw5k31hqxq7s1grxj2") (f (quote (("enable_backtrace"))))))

(define-public crate-below-0.3.0 (c (n "below") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.3.0") (d #t) (k 0)) (d (n "common") (r "^0.3.0") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.3.0") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.16.0") (f (quote ("crossterm" "termion"))) (k 0)) (d (n "dump") (r "^0.3.0") (d #t) (k 0) (p "below-dump")) (d (n "libbpf-cargo") (r "^0.8.0") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.11.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.3.0") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.4") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "procfs") (r "^0.3.0") (d #t) (k 0) (p "fb_procfs")) (d (n "rand") (r "^0.7") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.4.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.5") (f (quote ("max_level_trace"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.2") (d #t) (k 0)) (d (n "store") (r "^0.3.0") (d #t) (k 0) (p "below-store")) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.3.0") (d #t) (k 0) (p "below-view")) (d (n "walkdir") (r "^2.2.9") (d #t) (k 0)))) (h "00cz7a95x2cvsj53wxqfk428c9jpp5kspvkp5qrwhiqf7dcn01iy") (f (quote (("enable_backtrace"))))))

(define-public crate-below-0.4.0 (c (n "below") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.4.0") (d #t) (k 0)) (d (n "common") (r "^0.4.0") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.4.0") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.16.0") (f (quote ("crossterm" "termion"))) (k 0)) (d (n "dump") (r "^0.4.0") (d #t) (k 0) (p "below-dump")) (d (n "libbpf-cargo") (r "^0.9.2") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.13.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.4.0") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "procfs") (r "^0.4.0") (d #t) (k 0) (p "fb_procfs")) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.4.0") (d #t) (k 0) (p "below-store")) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.4.0") (d #t) (k 0) (p "below-view")))) (h "0h784v0slznzzjsl3rv2l1wdll7q07npn8r2zsvq9jcp8rd1p8pz") (f (quote (("enable_backtrace"))))))

(define-public crate-below-0.4.1 (c (n "below") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.4.1") (d #t) (k 0)) (d (n "common") (r "^0.4.1") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.4.1") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.16.0") (f (quote ("crossterm" "termion"))) (k 0)) (d (n "dump") (r "^0.4.1") (d #t) (k 0) (p "below-dump")) (d (n "libbpf-cargo") (r "^0.9.3") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.14.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.4.1") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "procfs") (r "^0.4.1") (d #t) (k 0) (p "fb_procfs")) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.4.1") (d #t) (k 0) (p "below-store")) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.4.1") (d #t) (k 0) (p "below-view")))) (h "1sph3sbi156n25i50yr17sjii3vgc7lg417zww3rpfavryi2rxv8") (f (quote (("enable_backtrace"))))))

(define-public crate-below-0.5.0 (c (n "below") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.5.0") (d #t) (k 0)) (d (n "common") (r "^0.5.0") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.5.0") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.16.0") (f (quote ("crossterm-backend" "termion-backend"))) (k 0)) (d (n "dump") (r "^0.5.0") (d #t) (k 0) (p "below-dump")) (d (n "indicatif") (r "^0.15") (f (quote ("with_rayon"))) (d #t) (k 0)) (d (n "libbpf-cargo") (r "^0.10.0") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.16.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.98") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.5.0") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "procfs") (r "^0.5.0") (d #t) (k 0) (p "fb_procfs")) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.5.0") (d #t) (k 0) (p "below-store")) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.5.0") (d #t) (k 0) (p "below-view")))) (h "0j8ajry2r7jj2w5yfkkl4ds0a08wp0kb79p7nnsnsw801pxk1ccm") (f (quote (("enable_backtrace"))))))

(define-public crate-below-0.6.2 (c (n "below") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.6.2") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.0.4") (d #t) (k 0)) (d (n "common") (r "^0.6.2") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.6.2") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.19.0") (f (quote ("crossterm-backend" "termion-backend"))) (k 0)) (d (n "dump") (r "^0.6.2") (d #t) (k 0) (p "below-dump")) (d (n "futures") (r "^0.3.22") (f (quote ("async-await" "compat"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.16") (f (quote ("with_rayon"))) (d #t) (k 0)) (d (n "libbpf-cargo") (r "^0.12.0") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.18.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.132") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.6.2") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.6.2") (d #t) (k 0) (p "fb_procfs")) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.6.2") (d #t) (k 0) (p "below-store")) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.6.2") (d #t) (k 0) (p "below-view")))) (h "0xqc2bhhwirym0qcvb8yl65k49dw9x9x6zi8qpsggjlbi110803x") (f (quote (("enable_backtrace"))))))

(define-public crate-below-0.6.3 (c (n "below") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.6.3") (d #t) (k 0)) (d (n "clap") (r "^3.2.17") (f (quote ("derive" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.0.4") (d #t) (k 0)) (d (n "common") (r "^0.6.3") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.6.3") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.19.0") (f (quote ("crossterm-backend"))) (k 0)) (d (n "dump") (r "^0.6.3") (d #t) (k 0) (p "below-dump")) (d (n "futures") (r "^0.3.22") (f (quote ("async-await" "compat"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.1") (f (quote ("improved_unicode" "rayon" "tokio"))) (d #t) (k 0)) (d (n "libbpf-cargo") (r "^0.13.1") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.19.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.135") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.6.3") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.6.3") (d #t) (k 0) (p "fb_procfs")) (d (n "regex") (r "^1.5.4") (f (quote ("std" "unicode-perl"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.6.3") (d #t) (k 0) (p "below-store")) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.6.3") (d #t) (k 0) (p "below-view")))) (h "0r9sz81zvfwjb7fn7w2kvfdwsqvlhhs0j78y5nzi8wv9j6cjqf7g") (f (quote (("no-vendor" "libbpf-cargo/novendor" "libbpf-rs/novendor" "store/no-vendor") ("enable_backtrace"))))))

(define-public crate-below-0.7.0 (c (n "below") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.7.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.25") (f (quote ("derive" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "common") (r "^0.7.0") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.7.0") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (k 0)) (d (n "dump") (r "^0.7.0") (d #t) (k 0) (p "below-dump")) (d (n "futures") (r "^0.3.28") (f (quote ("async-await" "compat"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (f (quote ("improved_unicode" "rayon" "tokio"))) (d #t) (k 0)) (d (n "libbpf-cargo") (r "^0.20.1") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.20.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.7.0") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.7.0") (d #t) (k 0) (p "fb_procfs")) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.7.0") (d #t) (k 0) (p "below-store")) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.7.0") (d #t) (k 0) (p "below-view")))) (h "0c7b9yg5cicsb7f90gq7a8sz2cyp4cvkvh42dgbiwdc2cjawmrsp") (f (quote (("no-vendor" "libbpf-cargo/novendor" "libbpf-rs/novendor" "store/no-vendor") ("enable_backtrace"))))))

(define-public crate-below-0.7.1 (c (n "below") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.7.1") (d #t) (k 0)) (d (n "clap") (r "^3.2.25") (f (quote ("derive" "env" "regex" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.5") (d #t) (k 0)) (d (n "common") (r "^0.7.1") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.7.1") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (k 0)) (d (n "dump") (r "^0.7.1") (d #t) (k 0) (p "below-dump")) (d (n "futures") (r "^0.3.28") (f (quote ("async-await" "compat"))) (d #t) (k 0)) (d (n "indicatif") (r "^0.17.3") (f (quote ("improved_unicode" "rayon" "tokio"))) (d #t) (k 0)) (d (n "libbpf-cargo") (r "^0.21.0") (d #t) (k 1)) (d (n "libbpf-rs") (r "^0.21.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.7.1") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.7.1") (d #t) (k 0) (p "fb_procfs")) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.7.1") (d #t) (k 0) (p "below-store")) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "view") (r "^0.7.1") (d #t) (k 0) (p "below-view")))) (h "15y4w9p8lr3pm8qrdqshr5j9pf5pn7qqid5mxgy52w3grkgvg818") (f (quote (("no-vendor" "libbpf-cargo/novendor" "libbpf-rs/novendor" "store/no-vendor") ("enable_backtrace"))))))

(define-public crate-below-0.8.1 (c (n "below") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "cgroupfs") (r "^0.8.1") (d #t) (k 0)) (d (n "clap") (r "^4.5.2") (f (quote ("derive" "env" "string" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.5.1") (d #t) (k 0)) (d (n "common") (r "^0.8.1") (d #t) (k 0) (p "below-common")) (d (n "config") (r "^0.8.1") (d #t) (k 0) (p "below-config")) (d (n "cursive") (r "^0.20.0") (f (quote ("crossterm-backend"))) (k 0)) (d (n "dump") (r "^0.8.1") (d #t) (k 0) (p "below-dump")) (d (n "indicatif") (r "^0.17.6") (f (quote ("improved_unicode" "rayon" "tokio"))) (d #t) (k 0)) (d (n "libbpf-cargo") (r "^0.23") (k 1)) (d (n "libbpf-rs") (r "^0.23") (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "maplit") (r "^1.0") (d #t) (k 2)) (d (n "model") (r "^0.8.1") (d #t) (k 0) (p "below-model")) (d (n "once_cell") (r "^1.12") (d #t) (k 0)) (d (n "plain") (r "^0.2") (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "procfs") (r "^0.8.1") (d #t) (k 0) (p "fb_procfs")) (d (n "regex") (r "^1.9.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.100") (f (quote ("float_roundtrip" "unbounded_depth"))) (d #t) (k 0)) (d (n "signal-hook") (r "^0.3") (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "nested-values"))) (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "store") (r "^0.8.1") (d #t) (k 0) (p "below-store")) (d (n "tar") (r "^0.4.40") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full" "test-util" "tracing"))) (d #t) (k 0)) (d (n "uzers") (r "^0.11.3") (d #t) (k 0)) (d (n "view") (r "^0.8.1") (d #t) (k 0) (p "below-view")))) (h "108m2yfr2js2qhfclhj35zh790sxpc26711k3sh2rzvzijm4xq53") (f (quote (("no-vendor" "store/no-vendor") ("enable_backtrace") ("default" "libbpf-cargo/default" "libbpf-rs/default"))))))

