(define-module (crates-io be et beetswap) #:use-module (crates-io))

(define-public crate-beetswap-0.1.0 (c (n "beetswap") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "asynchronous-codec") (r "^0.7") (d #t) (k 0)) (d (n "blockstore") (r "^0.5") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cid") (r "^0.11") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-timer") (r "^3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (f (quote ("tokio" "tcp" "identify" "macros"))) (d #t) (k 2)) (d (n "libp2p-core") (r "^0.41") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2") (d #t) (k 0)) (d (n "libp2p-noise") (r "^0.44") (d #t) (k 2)) (d (n "libp2p-stream") (r "^0.1.0-alpha") (d #t) (k 2)) (d (n "libp2p-swarm") (r "^0.44") (d #t) (k 0)) (d (n "libp2p-swarm-test") (r "^0.3.0") (d #t) (k 2)) (d (n "libp2p-yamux") (r "^0.45") (d #t) (k 2)) (d (n "log") (r "^0.4.18") (d #t) (k 2)) (d (n "multihash") (r "^0.19") (d #t) (k 2)) (d (n "multihash-codetable") (r "^0.1") (d #t) (k 0)) (d (n "multihash-codetable") (r "^0.1") (f (quote ("digest" "sha2"))) (d #t) (k 2)) (d (n "quick-protobuf") (r "^0.8") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "time" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "unsigned-varint") (r "^0.8") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "1ldnnhjmfzz73qd99bg5grw33xjy4nww8gabbvnfngfh2lshga6n") (f (quote (("wasm-bindgen" "futures-timer/wasm-bindgen" "instant/wasm-bindgen")))) (r "1.75")))

