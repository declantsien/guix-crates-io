(define-module (crates-io be bo bebot) #:use-module (crates-io))

(define-public crate-bebot-0.1.0 (c (n "bebot") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matrix-sdk") (r "^0.6") (f (quote ("anyhow" "markdown" "rustls-tls"))) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "1sx154ad64hvca3pb2jwsns6mk75wckv6igrgr9m0haa1a0i2m6s")))

(define-public crate-bebot-0.1.1 (c (n "bebot") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matrix-sdk") (r "^0.6") (f (quote ("anyhow" "markdown" "rustls-tls"))) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "1923ynvmd221gzf3ravp1sb71zmwfpk7pv4558cmj87iavl90k3p") (y #t)))

(define-public crate-bebot-0.1.2 (c (n "bebot") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matrix-sdk") (r "^0.6") (f (quote ("anyhow" "markdown" "rustls-tls"))) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "1mndfqmfylp0rca95m73wmrhivi63f2fcvbilji81ck7qcn16m5x")))

(define-public crate-bebot-0.2.0 (c (n "bebot") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "dateparser") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matrix-sdk") (r "^0.6") (f (quote ("anyhow" "markdown" "rustls-tls"))) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("tokio-rustls" "rustls-tls-native-roots" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "02k8q6648ij6nz2jknalq35c5zk62i60w1wkxagnvjdblz752w04")))

(define-public crate-bebot-0.2.1 (c (n "bebot") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "dateparser") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matrix-sdk") (r "^0.6") (f (quote ("anyhow" "markdown" "rustls-tls"))) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("tokio-rustls" "rustls-tls-native-roots" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "0pp4m8s0chgmc2xqrbhyfd9gqh8zqj2zgv01zk20vx9z54m1hh1g")))

(define-public crate-bebot-0.2.2 (c (n "bebot") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "constant_time_eq") (r "^0.3") (d #t) (k 0)) (d (n "dateparser") (r "^0.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matrix-sdk") (r "^0.6") (f (quote ("anyhow" "markdown" "rustls-tls"))) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("tokio-rustls" "rustls-tls-native-roots" "gzip"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_regex") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (k 0)) (d (n "warp") (r "^0.3") (d #t) (k 0)))) (h "180ily60m3diy0m76h4birv7pd4rw501kn0gsjax56nq3ad979ia")))

