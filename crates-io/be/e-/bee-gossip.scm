(define-module (crates-io be e- bee-gossip) #:use-module (crates-io))

(define-public crate-bee-gossip-1.0.0-beta.1 (c (n "bee-gossip") (v "1.0.0-beta.1") (d (list (d (n "async-trait") (r "^0.1.56") (o #t) (k 0)) (d (n "bee-runtime") (r "^1.0.0-beta.1") (o #t) (k 0)) (d (n "fern") (r "^0.6.1") (k 2)) (d (n "futures") (r "^0.3.21") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 2)) (d (n "libp2p") (r "^0.45.1") (o #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serial_test") (r "^0.8.0") (k 2)) (d (n "thiserror") (r "^1.0.31") (o #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("macros" "rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("io-std" "io-util" "macros" "rt" "rt-multi-thread" "signal" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("time"))) (o #t) (k 0)))) (h "0pkwmq1gz9cmwglzv9q5fa9mcdz2ap2mlprdy2ajrhzqcd6c9f72") (f (quote (("full" "async-trait" "bee-runtime" "futures" "libp2p/dns-tokio" "libp2p/identify" "libp2p/mplex" "libp2p/noise" "libp2p/tcp-tokio" "libp2p/yamux" "log" "once_cell" "rand" "serde" "thiserror" "tokio" "tokio-stream") ("default"))))))

(define-public crate-bee-gossip-1.0.0-beta.2 (c (n "bee-gossip") (v "1.0.0-beta.2") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (k 0)) (d (n "bee-runtime") (r "^1.0.0-beta.1") (o #t) (k 0)) (d (n "fern") (r "^0.6.1") (k 2)) (d (n "futures") (r "^0.3.23") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 2)) (d (n "libp2p") (r "^0.45.1") (o #t) (k 0)) (d (n "libp2p-core") (r "^0.33.0") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (k 2)) (d (n "thiserror") (r "^1.0.32") (o #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("io-std" "io-util" "macros" "rt" "rt-multi-thread" "signal" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("time"))) (o #t) (k 0)))) (h "0308rm7fz5gw75w96nw4fqndi771cv47qh61rv3008626hj7cysd") (f (quote (("full" "async-trait" "bee-runtime" "futures" "libp2p/dns-tokio" "libp2p/identify" "libp2p/mplex" "libp2p/noise" "libp2p/tcp-tokio" "libp2p/yamux" "log" "once_cell" "rand" "serde" "thiserror" "tokio" "tokio-stream") ("default"))))))

(define-public crate-bee-gossip-1.0.0 (c (n "bee-gossip") (v "1.0.0") (d (list (d (n "async-trait") (r "^0.1.57") (o #t) (k 0)) (d (n "bee-runtime") (r "^1.0.0") (o #t) (k 0)) (d (n "fern") (r "^0.6.1") (k 2)) (d (n "futures") (r "^0.3.23") (o #t) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 2)) (d (n "libp2p") (r "^0.47.0") (o #t) (k 0)) (d (n "libp2p-core") (r "^0.35.0") (k 0)) (d (n "log") (r "^0.4.17") (o #t) (k 0)) (d (n "once_cell") (r "^1.13.0") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.143") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serial_test") (r "^0.9.0") (f (quote ("async"))) (k 2)) (d (n "thiserror") (r "^1.0.32") (o #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("io-std" "io-util" "macros" "rt" "rt-multi-thread" "signal" "time"))) (k 2)) (d (n "tokio-stream") (r "^0.1.9") (f (quote ("time"))) (o #t) (k 0)))) (h "0dj2bx3pz1lg7nb157ardkamg8yckg4j5wxzgkqc4cddy92fhrbr") (f (quote (("full" "async-trait" "bee-runtime" "futures" "libp2p/dns-tokio" "libp2p/identify" "libp2p/mplex" "libp2p/noise" "libp2p/tcp-tokio" "libp2p/yamux" "log" "once_cell" "rand" "serde" "thiserror" "tokio" "tokio-stream") ("default"))))))

