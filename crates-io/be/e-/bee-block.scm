(define-module (crates-io be e- bee-block) #:use-module (crates-io))

(define-public crate-bee-block-1.0.0-beta.1 (c (n "bee-block") (v "1.0.0-beta.1") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bee-pow") (r "^1.0.0-alpha.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.10.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "iota-crypto") (r "^0.13.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.5.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "serde") (r "^1.0.139") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)))) (h "1nwprjfi78m99f87zaqs5s7qdp0a5n6jqaa4b9nkxs87ah1ybw1k") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0-beta.2 (c (n "bee-block") (v "1.0.0-beta.2") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bee-pow") (r "^1.0.0-alpha.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.10.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "iota-crypto") (r "^0.13.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.5.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.139") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)))) (h "0lzzfhamprp76n3y4czfcd8c9wr6c4mj9iwdw62l075qasy5jj1c") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0-beta.3 (c (n "bee-block") (v "1.0.0-beta.3") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bee-pow") (r "^1.0.0-alpha.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.10.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx-bindings") (r "^1.0.0-beta.2") (o #t) (k 0) (p "inx")) (d (n "iota-crypto") (r "^0.13.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.5.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.139") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)))) (h "08c5z8h9lwmpq8kd5hql31qr26ibcz2bznzm898ba6phm73i662n") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand") ("inx" "dep:inx-bindings") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0-beta.4 (c (n "bee-block") (v "1.0.0-beta.4") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bee-pow") (r "^1.0.0-alpha.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.10.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx-bindings") (r "^1.0.0-beta.3") (o #t) (k 0) (p "inx")) (d (n "iota-crypto") (r "^0.13.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.5.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.139") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)))) (h "1vg27nkypls95vkn8riz2nvi1qj0dgdp0fjn1y7z9v17j9l6m60r") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand") ("inx" "dep:inx-bindings") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0-beta.5 (c (n "bee-block") (v "1.0.0-beta.5") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bee-pow") (r "^1.0.0-alpha.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.10.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx-bindings") (r "^1.0.0-beta.3") (o #t) (k 0) (p "inx")) (d (n "iota-crypto") (r "^0.13.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.5.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.139") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (k 0)))) (h "1xyphlnrs2vv4qp5napmijfyhkifl0c0z0mgd56pwz3fqnx3y3j0") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx-bindings") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0-beta.6 (c (n "bee-block") (v "1.0.0-beta.6") (d (list (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bee-pow") (r "^1.0.0-alpha.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.11.0") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx-bindings") (r "^1.0.0-beta.4") (o #t) (k 0) (p "inx")) (d (n "iota-crypto") (r "^0.13.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.5.0") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.143") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)))) (h "1rm4yk6sixx20vjyr2d0c21idcrpn7y415f5gm3w0b18m89c1f3c") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx-bindings") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0-beta.7 (c (n "bee-block") (v "1.0.0-beta.7") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bee-pow") (r "^1.0.0-beta.1") (k 0)) (d (n "bee-ternary") (r "^1.0.0-alpha.1") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.1") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx-bindings") (r "^1.0.0-beta.4") (o #t) (k 0) (p "inx")) (d (n "iota-crypto") (r "^0.14.0") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.6.1") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.144") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)))) (h "1xdz89db27kzncqzpn6xvfghrds5sah6671fb1cqm92w12p8wrki") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx-bindings") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.0 (c (n "bee-block") (v "1.0.0") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bee-pow") (r "^1.0.0") (k 0)) (d (n "bee-ternary") (r "^1.0.0") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.1") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx") (r "^1.0.0-beta.8") (o #t) (k 0)) (d (n "iota-crypto") (r "^0.14.3") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.6.2") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.144") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)))) (h "0qa2p54hgqrxwfbqkhx6xjsnkq4z3srb583rp4mr8wh8v3yly4kx") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx" "std") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

(define-public crate-bee-block-1.0.1 (c (n "bee-block") (v "1.0.1") (d (list (d (n "bech32") (r "^0.9.1") (k 0)) (d (n "bee-pow") (r "^1.0.0") (k 0)) (d (n "bee-ternary") (r "^1.0.0") (f (quote ("serde"))) (k 0)) (d (n "bitflags") (r "^1.3.2") (k 0)) (d (n "bytemuck") (r "^1.12.1") (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("from" "as_ref" "deref" "deref_mut"))) (k 0)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "inline-more"))) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "inx") (r "^1.0.0-beta.8") (o #t) (k 0)) (d (n "iota-crypto") (r "^0.14.3") (f (quote ("ed25519" "blake2b"))) (k 0)) (d (n "iterator-sorted") (r "^0.1.0") (k 0)) (d (n "num_cpus") (r "^1.13.1") (k 2)) (d (n "packable") (r "^0.6.2") (f (quote ("serde" "primitive-types"))) (k 0)) (d (n "prefix-hex") (r "^0.4.0") (f (quote ("primitive-types"))) (k 0)) (d (n "primitive-types") (r "^0.11.1") (f (quote ("serde"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("min_const_gen" "std_rng"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.144") (o #t) (k 0)) (d (n "serde-big-array") (r "^0.4.1") (o #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (k 0)))) (h "05vm8a0l959brs276hrfiphalq464pp43xvv1sasyhxlnr4b477n") (f (quote (("std")))) (s 2) (e (quote (("serde" "dep:serde" "serde-big-array") ("rand" "dep:rand" "std") ("inx" "dep:inx" "std") ("dto" "serde" "dep:serde_json")))) (r "1.60")))

