(define-module (crates-io be vy bevy_veilid) #:use-module (crates-io))

(define-public crate-bevy_veilid-0.1.0 (c (n "bevy_veilid") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "bevy") (r "^0.11") (d #t) (k 0)) (d (n "bevy-tokio-tasks") (r "^0.11") (d #t) (k 0)) (d (n "copypasta") (r "^0.10") (d #t) (k 0)) (d (n "mini-redis") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid_duplex") (r "^0.1.1") (d #t) (k 0)))) (h "18jhqk9i3ib0m6yky6nnc7cd7rn96x5i5m195m6hkz6q3nl5mqyw")))

(define-public crate-bevy_veilid-0.1.2 (c (n "bevy_veilid") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "bevy") (r "^0.11") (d #t) (k 0)) (d (n "bevy-tokio-tasks") (r "^0.11") (d #t) (k 0)) (d (n "copypasta") (r "^0.10") (d #t) (k 0)) (d (n "mini-redis") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid_duplex") (r "^0.1.2") (d #t) (k 0)))) (h "0pa4k6sfvqi51a3m0zbsy45kgng2h4hjk68kjyykyci613wlb7ig")))

(define-public crate-bevy_veilid-0.3.0 (c (n "bevy_veilid") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "bevy") (r "^0.13") (d #t) (k 0)) (d (n "bevy") (r "^0.13.0") (f (quote ("bevy_core_pipeline" "bevy_asset" "bevy_render" "bevy_winit" "x11"))) (k 2)) (d (n "bevy-wasm-tasks") (r "^0.13.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bevy_app") (r "^0.13.0") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.13.0") (d #t) (k 0)) (d (n "copypasta") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("time"))) (d #t) (k 2)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "veilid_duplex") (r "^0.2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Clipboard"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1f49xbcp21c5yd9vaimq1559z7z5gd9r6iyff7f9831grhd86gjr")))

