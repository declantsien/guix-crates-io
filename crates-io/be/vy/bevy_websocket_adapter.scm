(define-module (crates-io be vy bevy_websocket_adapter) #:use-module (crates-io))

(define-public crate-bevy_websocket_adapter-0.1.0 (c (n "bevy_websocket_adapter") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bevy") (r "^0.5.0") (o #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("net" "io-util" "sync" "rt-multi-thread"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.15.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14.0") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0k8mq7wb1fisnmhwdc7b77chp947qbyld6j9gb68yjvyyiwbv5mw") (f (quote (("default" "bevy-plugin") ("bevy-plugin" "bevy"))))))

(define-public crate-bevy_websocket_adapter-0.1.1 (c (n "bevy_websocket_adapter") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bevy") (r "^0.5.0") (o #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("net" "io-util" "sync" "rt-multi-thread"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.15.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14.0") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1msiyfcn0w0022zg7wk50x41lsnqbqm8073cgvlj8zjpsb0kx0cq") (f (quote (("default" "bevy-plugin") ("bevy-plugin" "bevy"))))))

(define-public crate-bevy_websocket_adapter-0.1.2 (c (n "bevy_websocket_adapter") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bevy") (r "^0.5.0") (o #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("net" "io-util" "sync" "rt-multi-thread"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.15.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14.0") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1cfpd5qa7nmwjracr46sgq6ri5ih3w1a2r43az80wrsx9yg3mfsi") (f (quote (("default" "bevy-plugin") ("bevy-plugin" "bevy"))))))

(define-public crate-bevy_websocket_adapter-0.1.3 (c (n "bevy_websocket_adapter") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bevy") (r "^0.5.0") (o #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("net" "io-util" "sync" "rt-multi-thread"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.15.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14.0") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "141pdspff8six56nw5d019prgq348zvfi03rjl7x5zhg45wc8xgz") (f (quote (("default" "bevy-plugin") ("bevy-plugin" "bevy"))))))

(define-public crate-bevy_websocket_adapter-0.1.4 (c (n "bevy_websocket_adapter") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bevy") (r "^0.5.0") (o #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("net" "io-util" "sync" "rt-multi-thread"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.15.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14.0") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0x1r38fd40242ik2ckkjn77msa5bqxycxd03rzichf721v4dbcrk") (f (quote (("default" "bevy-plugin") ("bevy-plugin" "bevy"))))))

(define-public crate-bevy_websocket_adapter-0.1.5 (c (n "bevy_websocket_adapter") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "bevy") (r "^0.5.0") (o #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("async-await" "sink" "std"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0.0") (f (quote ("net" "io-util" "sync" "rt-multi-thread"))) (k 0)) (d (n "tokio-tungstenite") (r "^0.15.0") (d #t) (k 0)) (d (n "tungstenite") (r "^0.14.0") (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0xqi518k0kq3k0b0iapwn513d9nxmv9jw4qd5kjvnwrsa8xjcbcs") (f (quote (("server") ("default" "bevy-plugin" "server" "client") ("client") ("bevy-plugin" "bevy"))))))

