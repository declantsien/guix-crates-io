(define-module (crates-io be vy bevy_stat_query) #:use-module (crates-io))

(define-public crate-bevy_stat_query-0.0.1 (c (n "bevy_stat_query") (v "0.0.1") (d (list (d (n "bevy_app") (r "^0.13") (d #t) (k 0)) (d (n "bevy_asset") (r "^0.13.0") (d #t) (k 2)) (d (n "bevy_ecs") (r "^0.13") (d #t) (k 0)) (d (n "bevy_hierarchy") (r "^0.13") (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (d #t) (k 0)) (d (n "bevy_serde_project") (r "^0.1.2") (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.1.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "ref-cast") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1b0llh3b739xncmjgzqsxf4r6rilya69mc8aybg0i91b3ch5znh3")))

(define-public crate-bevy_stat_query-0.0.2 (c (n "bevy_stat_query") (v "0.0.2") (d (list (d (n "bevy_app") (r "^0.13") (d #t) (k 0)) (d (n "bevy_asset") (r "^0.13.0") (d #t) (k 2)) (d (n "bevy_ecs") (r "^0.13") (d #t) (k 0)) (d (n "bevy_hierarchy") (r "^0.13") (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (d #t) (k 0)) (d (n "bevy_serde_project") (r "^0.1.2") (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.1.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4.3") (d #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "ref-cast") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1v54511sgmqn6kbqnqyvqfx3lkpv80x18lqsk31c2jy9kh4rdi91")))

(define-public crate-bevy_stat_query-0.0.3 (c (n "bevy_stat_query") (v "0.0.3") (d (list (d (n "bevy") (r "^0.13.1") (d #t) (k 2)) (d (n "bevy_app") (r "^0.13") (d #t) (k 0)) (d (n "bevy_defer") (r "^0.8.2") (k 2)) (d (n "bevy_ecs") (r "^0.13") (d #t) (k 0)) (d (n "bevy_hierarchy") (r "^0.13") (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (d #t) (k 0)) (d (n "bevy_serde_project") (r "^0.1.2") (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("std"))) (o #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (f (quote ("alloc"))) (k 2)) (d (n "ref-cast") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "07dmmg8p91mhvd1zzy7s6lh01mhbs1yv11wq9p7brq3b1xhpss41") (f (quote (("default" "futures"))))))

(define-public crate-bevy_stat_query-0.0.4 (c (n "bevy_stat_query") (v "0.0.4") (d (list (d (n "bevy") (r "^0.13.1") (d #t) (k 2)) (d (n "bevy_app") (r "^0.13") (d #t) (k 0)) (d (n "bevy_defer") (r "^0.9.2") (k 2)) (d (n "bevy_ecs") (r "^0.13") (d #t) (k 0)) (d (n "bevy_hierarchy") (r "^0.13") (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (d #t) (k 0)) (d (n "bevy_serde_project") (r "^0.2.2") (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (d #t) (k 0)) (d (n "bitflags") (r "^2.4.2") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.17") (d #t) (k 0)) (d (n "dyn-hash") (r "^0.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (f (quote ("std"))) (o #t) (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-rational") (r "^0.4.1") (f (quote ("serde"))) (k 0)) (d (n "num-traits") (r "^0.2.18") (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "postcard") (r "^1.0.8") (f (quote ("alloc"))) (k 2)) (d (n "ref-cast") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1hlg9d1an0j7pr6b84wm591iinb36sm851irxb7hv7gcdh0bmnk6") (f (quote (("default" "futures"))))))

