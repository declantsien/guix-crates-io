(define-module (crates-io be vy bevy_tmx) #:use-module (crates-io))

(define-public crate-bevy_tmx-0.1.0 (c (n "bevy_tmx") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bevy") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "libflate") (r "^1") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "1437n7k2cifr3slxck5q370s9alkd33af2h8nqrqvna2m42x4q9c")))

(define-public crate-bevy_tmx-0.2.0 (c (n "bevy_tmx") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-mutex") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bevy") (r "^0.5") (d #t) (k 2)) (d (n "bevy_app") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_asset") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_math") (r "^0.5") (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.5") (d #t) (k 0)) (d (n "bevy_render") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_scene") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_sprite") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_transform") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bevy_utils") (r "^0.5") (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "libflate") (r "^1") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (d #t) (k 0)))) (h "1i63iaqy5djzpghwd21za65i9hhbyxfqark4lr2lwwa8d1z627y7") (f (quote (("plugin" "bevy_app" "bevy_asset" "bevy_ecs" "bevy_render" "bevy_sprite" "bevy_transform" "bevy_scene") ("default" "plugin"))))))

