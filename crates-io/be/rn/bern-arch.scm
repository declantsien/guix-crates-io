(define-module (crates-io be rn bern-arch) #:use-module (crates-io))

(define-public crate-bern-arch-0.2.0 (c (n "bern-arch") (v "0.2.0") (d (list (d (n "cortex-m") (r "^0.7.2") (f (quote ("inline-asm"))) (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (t "cfg(not(target_os = \"none\"))") (k 0)) (d (n "r0") (r "^1.0.0") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)))) (h "0awcld6j5zbf3s2wxbdcc5zibd5xa976rgqysil9826mz0c72p00")))

(define-public crate-bern-arch-0.2.1 (c (n "bern-arch") (v "0.2.1") (d (list (d (n "cortex-m") (r "^0.7.2") (f (quote ("inline-asm"))) (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (t "cfg(not(target_os = \"none\"))") (k 0)) (d (n "r0") (r "^1.0.0") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)))) (h "1zbf9xx22dra3cykdqbl7gz8hy81zvqrbxpy68gvp1nlr9mj54c8")))

(define-public crate-bern-arch-0.2.2 (c (n "bern-arch") (v "0.2.2") (d (list (d (n "cortex-m") (r "^0.7.2") (f (quote ("inline-asm"))) (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (t "cfg(not(target_os = \"none\"))") (k 0)) (d (n "r0") (r "^1.0.0") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)))) (h "08qgm22lwm8bkrg2xx371mq48rzkhrzin4yb9yrh70fgb2m5wclz")))

(define-public crate-bern-arch-0.2.3 (c (n "bern-arch") (v "0.2.3") (d (list (d (n "cortex-m") (r "^0.7.2") (f (quote ("inline-asm"))) (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "cortex-m-rt") (r "^0.6.10") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "mockall") (r "^0.9.1") (d #t) (t "cfg(not(target_os = \"none\"))") (k 0)) (d (n "r0") (r "^1.0.0") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)))) (h "0whxxb2v7kdl5lfy13wdbj254i9rq9786j6zl213h8gysx9bwd3d")))

(define-public crate-bern-arch-0.3.0 (c (n "bern-arch") (v "0.3.0") (d (list (d (n "bern-units") (r "^0.1") (d #t) (k 0)) (d (n "cortex-m") (r "^0.7") (f (quote ("inline-asm"))) (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "cortex-m-rt") (r "^0.7") (d #t) (t "cfg(all(target_arch = \"arm\", target_os = \"none\"))") (k 0)) (d (n "mockall") (r "^0.11") (d #t) (t "cfg(not(target_os = \"none\"))") (k 0)))) (h "0w2d7wn1z8azh130zd68nlrl4jblncy3b6ziz36z1d7lfnqipqw6")))

