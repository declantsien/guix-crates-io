(define-module (crates-io be rl berlin-core) #:use-module (crates-io))

(define-public crate-berlin-core-0.2.0 (c (n "berlin-core") (v "0.2.0") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "deunicode") (r "^1.3.1") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (f (quote ("levenshtein"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("smallvec"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "ustr") (r "^0.8.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)))) (h "0gv2zk1zkw7jzyd0hb7cxw5ii5l8q9x80i3amvh0jhfal0mzc79m")))

(define-public crate-berlin-core-0.2.1 (c (n "berlin-core") (v "0.2.1") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "deunicode") (r "^1.3.1") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (f (quote ("levenshtein"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("smallvec"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "ustr") (r "^0.8.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)))) (h "1xvw5mnzn79i95fq20kd89p812qjmzmsgzdb58ly24fpsggrmkg7")))

(define-public crate-berlin-core-0.2.2 (c (n "berlin-core") (v "0.2.2") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "deunicode") (r "^1.3.1") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (f (quote ("levenshtein"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("smallvec"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "ustr") (r "^0.8.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)))) (h "1f1siv75bxksr9yhbrssqdvzv9bq1flf42svx3yf7rqp5hc1m5sr")))

(define-public crate-berlin-core-0.2.3 (c (n "berlin-core") (v "0.2.3") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "deunicode") (r "^1.3.1") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (f (quote ("levenshtein"))) (d #t) (k 0)) (d (n "indextree") (r "^4.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("smallvec"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "ustr") (r "^0.8.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)))) (h "14l8sgq5i97py00c0qr6cj604rjalv7zz7jb7zw4rjmk9jny8j98")))

(define-public crate-berlin-core-0.2.4 (c (n "berlin-core") (v "0.2.4") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "deunicode") (r "^1.3.1") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (f (quote ("levenshtein"))) (d #t) (k 0)) (d (n "indextree") (r "^4.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("smallvec"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "ustr") (r "^0.8.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)))) (h "1cx2cvxqr1m0iwqqqih408f6nghcfmn90nnk21x85rrm85an8n0g")))

(define-public crate-berlin-core-0.2.6 (c (n "berlin-core") (v "0.2.6") (d (list (d (n "ahash") (r "^0.7.6") (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 0)) (d (n "deunicode") (r "^1.3.1") (d #t) (k 0)) (d (n "fst") (r "^0.4.7") (f (quote ("levenshtein"))) (d #t) (k 0)) (d (n "indextree") (r "^4.6.0") (d #t) (k 0)) (d (n "nom") (r "^7.1.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.8") (f (quote ("smallvec"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.23.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (f (quote ("log"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "ustr") (r "^0.8.1") (f (quote ("serde" "serialization"))) (d #t) (k 0)))) (h "03r6j0w3jkznqimilay0k0125s744f2sklf4amwckljvnsdbvb1h")))

