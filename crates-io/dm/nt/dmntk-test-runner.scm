(define-module (crates-io dm nt dmntk-test-runner) #:use-module (crates-io))

(define-public crate-dmntk-test-runner-0.1.6 (c (n "dmntk-test-runner") (v "0.1.6") (d (list (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 0)))) (h "028mhwgndnjk4a4kqsmydlxs7lp3im5xqxrgjr6fm9mzny1z6mx7")))

(define-public crate-dmntk-test-runner-0.1.7 (c (n "dmntk-test-runner") (v "0.1.7") (d (list (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 0)))) (h "185s6wa8kzgqyn5isqvxpnay5ajrxw1sw3nfycdswbipvs29mgzz")))

(define-public crate-dmntk-test-runner-0.1.8 (c (n "dmntk-test-runner") (v "0.1.8") (d (list (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 0)))) (h "010l9x6xk7kw4ajs2yj0klj3x0kpy402v7smjc615srh4izq15f2")))

(define-public crate-dmntk-test-runner-0.1.9 (c (n "dmntk-test-runner") (v "0.1.9") (d (list (d (n "base64") (r "^0.20.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.16.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 0)))) (h "0lmdrv3milw8dq5hxkmnadrnv9n2mm0z4zag9a29clfqbkgm4bil")))

(define-public crate-dmntk-test-runner-0.1.10 (c (n "dmntk-test-runner") (v "0.1.10") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.16") (d #t) (k 0)))) (h "0xrwl5r4v621vvxbwcszqn0zvnmp80pc9nz9p1gs320qq275z74v")))

(define-public crate-dmntk-test-runner-0.1.11 (c (n "dmntk-test-runner") (v "0.1.11") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.159") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.19") (d #t) (k 0)))) (h "125iwfxsdhzpnqblhkfdjax0ga64p2aix0iw6mrmgbj2fyjm8ixv")))

(define-public crate-dmntk-test-runner-0.2.0 (c (n "dmntk-test-runner") (v "0.2.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)))) (h "025hncljmwz8hsbas752gyck3ca1yi0dr81ivnzcv8igxdr9gni6")))

(define-public crate-dmntk-test-runner-0.2.5 (c (n "dmntk-test-runner") (v "0.2.5") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "0fh7iy31mcqqwsxqi4km5n4vaxb56k08jlyrd0q62s9mxa0mas5i")))

(define-public crate-dmntk-test-runner-0.2.6 (c (n "dmntk-test-runner") (v "0.2.6") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking" "json"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1vgriz1ahrssnf01zbmp8gxkgaakbpzy6a6zc6mjbr2g59a21qhk")))

(define-public crate-dmntk-test-runner-0.3.0 (c (n "dmntk-test-runner") (v "0.3.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.21") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "16klaajck3mzjhzchj28hfi5hn3wzv361ssbxc83s9zq32aam0m4")))

(define-public crate-dmntk-test-runner-0.3.1 (c (n "dmntk-test-runner") (v "0.3.1") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.178") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "01qkz9wxca6c6viyffb859k7sjc0arzx29g430g8nq8j41n088wm")))

(define-public crate-dmntk-test-runner-0.3.3 (c (n "dmntk-test-runner") (v "0.3.3") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "roxmltree") (r "^0.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.178") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.104") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.25") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 0)))) (h "1qpx81j90fq0qj3iri3a9hmc02qv298ahpjk6wwainc438ryz658")))

(define-public crate-dmntk-test-runner-0.3.5 (c (n "dmntk-test-runner") (v "0.3.5") (d (list (d (n "base64") (r "^0.22.0") (d #t) (k 0)) (d (n "http") (r "^1.1.0") (d #t) (k 0)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.3") (f (quote ("blocking" "json" "rustls-tls"))) (k 0)) (d (n "roxmltree") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.33") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "0mjz3m2ccx33gzljhqmba8qf53ss51njj7v9r0lfmjhs2i1l1cdn")))

