(define-module (crates-io fc om fcomm) #:use-module (crates-io))

(define-public crate-fcomm-0.1.1 (c (n "fcomm") (v "0.1.1") (d (list (d (n "assert_cmd") (r "^2.0.4") (d #t) (k 2)) (d (n "bellperson") (r "^0.19.0") (d #t) (k 0)) (d (n "blstrs") (r "^0.4.1") (d #t) (k 0)) (d (n "ff") (r "^0.11.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libipld") (r "^0.13.1") (f (quote ("dag-json" "serde-codec"))) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "lurk") (r "^0.1.1") (d #t) (k 0) (p "lurk")) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pairing_lib") (r "^0.21") (d #t) (k 0) (p "pairing")) (d (n "predicates") (r "^2.1.1") (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)))) (h "1bx5v7kmg04lnfb9ixrgd6q5zdfhscq419mis77c9hh2kpckzhip")))

(define-public crate-fcomm-0.2.0 (c (n "fcomm") (v "0.2.0") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "bellperson") (r "^0.24") (d #t) (k 0)) (d (n "blstrs") (r "^0.6.1") (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap-verbosity-flag") (r "^1.0") (d #t) (k 0)) (d (n "ff") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "libipld") (r "^0.3.0") (f (quote ("dag-cbor" "dag-json" "serde-codec"))) (k 0) (p "lurk-ipld")) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lurk") (r "^0.2.0") (d #t) (k 0) (p "lurk")) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "pairing_lib") (r "^0.22") (d #t) (k 0) (p "pairing")) (d (n "pasta_curves") (r "^0.5.2") (f (quote ("serde"))) (d #t) (k 0) (p "fil_pasta_curves")) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.8") (d #t) (k 2)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 2)) (d (n "predicates") (r "^2.1.5") (d #t) (k 2)) (d (n "tempfile") (r "^3.5.0") (d #t) (k 2)))) (h "1yh17q5mr1llkiz0d00d7s4mcb9vw2k5s23zgnncmikrlf60wick")))

