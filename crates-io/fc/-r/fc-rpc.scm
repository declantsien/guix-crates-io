(define-module (crates-io fc -r fc-rpc) #:use-module (crates-io))

(define-public crate-fc-rpc-0.1.0 (c (n "fc-rpc") (v "0.1.0") (h "1k5afscac020nhhr15gwc0rzn10f5rlcwnznbszginwz4r2j3pc1")))

(define-public crate-fc-rpc-1.0.0 (c (n "fc-rpc") (v "1.0.0") (d (list (d (n "codec") (r "^2.0.0") (d #t) (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.7.1") (f (quote ("with-codec"))) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.11.0") (d #t) (k 0)) (d (n "evm") (r "^0.25.0") (d #t) (k 0)) (d (n "fc-consensus") (r "^1.0.0") (d #t) (k 0)) (d (n "fc-db") (r "^1.0.0") (d #t) (k 0)) (d (n "fc-rpc-core") (r "^1.0.0") (d #t) (k 0)) (d (n "fp-consensus") (r "^1.0.0") (d #t) (k 0)) (d (n "fp-evm") (r "^1.0.0") (d #t) (k 0)) (d (n "fp-rpc") (r "^1.0.0") (d #t) (k 0)) (d (n "fp-storage") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (f (quote ("compat"))) (d #t) (k 0)) (d (n "jsonrpc-core") (r "^15.0.0") (d #t) (k 0)) (d (n "jsonrpc-core-client") (r "^14.0.3") (d #t) (k 0)) (d (n "jsonrpc-derive") (r "^14.0.3") (d #t) (k 0)) (d (n "jsonrpc-pubsub") (r "^15.0.0") (d #t) (k 0)) (d (n "libsecp256k1") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "pallet-ethereum") (r "^1.0.0") (d #t) (k 0)) (d (n "pallet-evm") (r "^3.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rlp") (r "^0.5") (d #t) (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "sc-client-api") (r "^3.0.0") (d #t) (k 0)) (d (n "sc-network") (r "^0.9.0") (d #t) (k 0)) (d (n "sc-rpc") (r "^3.0.0") (d #t) (k 0)) (d (n "sc-service") (r "^0.9.0") (d #t) (k 0)) (d (n "sha3") (r "^0.8") (d #t) (k 0)) (d (n "sp-api") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-blockchain") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-io") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-storage") (r "^3.0.0") (d #t) (k 0)) (d (n "sp-transaction-pool") (r "^3.0.0") (d #t) (k 0)))) (h "1wn2x1chzc086lclm25qza3ppdb9a3z5v5c0dyf96n7c4q69k0jn") (f (quote (("rpc_binary_search_estimate"))))))

