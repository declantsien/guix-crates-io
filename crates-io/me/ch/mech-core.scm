(define-module (crates-io me ch mech-core) #:use-module (crates-io))

(define-public crate-mech-core-0.0.1 (c (n "mech-core") (v "0.0.1") (d (list (d (n "hashbrown") (r "^0.1.8") (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "rand") (r "= 0.4") (k 0)) (d (n "serde") (r "^1.0.46") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.46") (d #t) (k 0)))) (h "1f4vyvsp38lblzgnqi09zz6942yakskiksxlcd0jqajyxysniah6")))

(define-public crate-mech-core-0.0.2 (c (n "mech-core") (v "0.0.2") (d (list (d (n "hashbrown") (r "^0.4.0") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (k 0)) (d (n "rlibc") (r "= 1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.46") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.46") (d #t) (k 0)))) (h "1mqh08sgzkysqva3pr2z4f94g5fxxr7x1ixr4a0akw7805d0qj7v") (f (quote (("no-std" "rlibc") ("default"))))))

(define-public crate-mech-core-0.0.3 (c (n "mech-core") (v "0.0.3") (d (list (d (n "hashbrown") (r "^0.6.0") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "libm") (r "^0.1.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (k 0)) (d (n "rlibc") (r "= 1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.96") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.96") (d #t) (k 0)))) (h "1jsa67jzmw767wa388rga90wg8nsx14122v3vdq8scdj32vfz0bn") (f (quote (("no-std" "rlibc") ("default"))))))

(define-public crate-mech-core-0.0.4 (c (n "mech-core") (v "0.0.4") (d (list (d (n "hashbrown") (r "^0.7.1") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "rlibc") (r "= 1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.105") (d #t) (k 0)))) (h "05k4kqcqi58ax10nqi9axrkhpls7vya6z0d1s75pdm9hvssav6db") (f (quote (("no-std" "rlibc") ("default"))))))

(define-public crate-mech-core-0.0.5 (c (n "mech-core") (v "0.0.5") (d (list (d (n "hashbrown") (r "^0.7.1") (f (quote ("nightly"))) (d #t) (k 0)) (d (n "rlibc") (r "= 1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.105") (d #t) (k 0)))) (h "08v31l129wsipl50zkmji2dxw466a2jkdg6jr8fhx8gl1pdsxknn") (f (quote (("no-std" "rlibc") ("default"))))))

(define-public crate-mech-core-0.1.0 (c (n "mech-core") (v "0.1.0") (d (list (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (f (quote ("libm"))) (k 0)) (d (n "rayon") (r "^1.6.1") (o #t) (d #t) (k 0)) (d (n "rlibc") (r "=1.0") (o #t) (d #t) (k 0)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("alloc"))) (k 0)) (d (n "serde_derive") (r "^1.0.152") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (o #t) (d #t) (k 0)))) (h "17mn57r3wf8z2amv8awk6vx4kmm32sn58gc80zqc6dlsg80ajy9w") (f (quote (("stdlib" "time") ("parallel" "rayon") ("no-std" "rlibc") ("default" "stdlib" "parallel"))))))

