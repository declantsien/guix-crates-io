(define-module (crates-io me ch mecha_network_ctl) #:use-module (crates-io))

(define-public crate-mecha_network_ctl-0.1.0 (c (n "mecha_network_ctl") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "tokio-util") (r "^0") (f (quote ("codec"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wifi-ctrl") (r "^0.2.3") (d #t) (k 0)))) (h "0vvwsd4jswaipxm55vqyx0lqabdq5dpiq00vd6xa7ky525qnq639")))

(define-public crate-mecha_network_ctl-0.1.1 (c (n "mecha_network_ctl") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0") (d #t) (k 2)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "mockall") (r "^0.11.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "io-std" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "tokio-util") (r "^0") (f (quote ("codec"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "wifi-ctrl") (r "^0.2.3") (d #t) (k 0)))) (h "1ny8d0cfvjawaza46mldldf1g25fdp5c3r0d7fzj6k9mxb88fm73")))

