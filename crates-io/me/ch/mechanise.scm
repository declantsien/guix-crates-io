(define-module (crates-io me ch mechanise) #:use-module (crates-io))

(define-public crate-mechanise-0.0.1 (c (n "mechanise") (v "0.0.1") (d (list (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "19njwx8gh084ildnvxjzi0qa6f61za3lfn2aywwp4ippfzraqkzb")))

(define-public crate-mechanise-0.0.2 (c (n "mechanise") (v "0.0.2") (d (list (d (n "bytes") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (o #t) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10.3") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 0)))) (h "18mdgrbk822nw08rfmn24bwvi9qvcxrzsav8mlmn8kdiwh9zfyyq") (f (quote (("default" "logging" "streaming")))) (s 2) (e (quote (("streaming" "dep:futures-util" "dep:regex" "dep:once_cell" "dep:bytes" "reqwest/stream") ("logging" "dep:log" "dep:pretty_env_logger"))))))

