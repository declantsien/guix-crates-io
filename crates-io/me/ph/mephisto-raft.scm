(define-module (crates-io me ph mephisto-raft) #:use-module (crates-io))

(define-public crate-mephisto-raft-0.1.0 (c (n "mephisto-raft") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "fail") (r "^0.5.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "goldenfile") (r "^1.4.5") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.12.1") (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "01wpljrn1jjnb9z90ciscr3ivcbgbxz30f7897qpjsv3q922hzjf") (f (quote (("failpoints" "fail/failpoints"))))))

(define-public crate-mephisto-raft-0.2.0 (c (n "mephisto-raft") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "enum-iterator") (r "^1.4.1") (d #t) (k 0)) (d (n "fail") (r "^0.5.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "getset") (r "^0.1.1") (d #t) (k 0)) (d (n "goldenfile") (r "^1.4.5") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.12.1") (d #t) (k 1)) (d (n "protobuf-src") (r "^1.1.0") (d #t) (k 1)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)))) (h "1qmj79dqig6wplxklhmja90fa25qypqp28hcn0jhkmlrsh45h1ca") (f (quote (("failpoints" "fail/failpoints"))))))

