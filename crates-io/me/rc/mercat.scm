(define-module (crates-io me rc mercat) #:use-module (crates-io))

(define-public crate-mercat-1.0.0 (c (n "mercat") (v "1.0.0") (d (list (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "confidential_identity_core") (r "^1.0.0") (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "getrandom") (r "^0.1.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-std") (r "^4.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "0b60iyx7pk0hi5dimm06b4fsdlhaz16dbvnrf8g8d7zg2i809l47") (f (quote (("u64_backend" "confidential_identity_core/u64_backend") ("u32_backend" "confidential_identity_core/u32_backend") ("std" "serde_all" "confidential_identity_core/std" "rand_core/std" "rand/std" "codec/std" "sp-std/std" "failure/std" "criterion") ("serde_all" "serde" "serde_json" "confidential_identity_core/serde_all") ("no_std" "confidential_identity_core/no_std") ("default" "std" "u64_backend") ("avx2_backend" "confidential_identity_core/avx2_backend") ("alloc" "confidential_identity_core/alloc")))) (y #t)))

(define-public crate-mercat-1.1.0 (c (n "mercat") (v "1.1.0") (d (list (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "confidential_identity_core") (r "^1.0.0") (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "getrandom") (r "^0.1.14") (o #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "0azkdscrvna4kg4l6ipna3kzxakw4pbiwgvbzbix67dm5q7pcdf2") (f (quote (("u64_backend" "confidential_identity_core/u64_backend") ("u32_backend" "confidential_identity_core/u32_backend") ("std" "serde_all" "confidential_identity_core/std" "rand_core/std" "rand/std" "codec/std" "sp-std/std" "failure/std" "criterion") ("serde_all" "serde" "serde_json" "confidential_identity_core/serde_all") ("no_std" "confidential_identity_core/no_std") ("default" "std" "u64_backend") ("avx2_backend" "confidential_identity_core/avx2_backend") ("alloc" "confidential_identity_core/alloc")))) (y #t)))

(define-public crate-mercat-1.1.1 (c (n "mercat") (v "1.1.1") (d (list (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "confidential_identity_core") (r "^1.0.0") (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "19hdsd46nsj9ajkr4f5dsdlmj4ysz08c4y57wnwsw4baz1s700k4") (f (quote (("u64_backend" "confidential_identity_core/u64_backend") ("u32_backend" "confidential_identity_core/u32_backend") ("std" "serde_all" "confidential_identity_core/std" "rand_core/std" "rand/std" "codec/std" "sp-std/std" "failure/std" "criterion") ("serde_all" "serde" "serde_json" "confidential_identity_core/serde_all") ("no_std" "u64_backend" "confidential_identity_core/no_std") ("default" "std" "u64_backend") ("avx2_backend" "confidential_identity_core/avx2_backend") ("alloc" "confidential_identity_core/alloc")))) (y #t)))

(define-public crate-mercat-1.1.2 (c (n "mercat") (v "1.1.2") (d (list (d (n "byteorder") (r "^1.2.3") (f (quote ("i128"))) (k 0)) (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "confidential_identity_core") (r "^1.0.0") (k 0)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "failure") (r "^0.1.7") (f (quote ("derive"))) (k 0)) (d (n "getrandom") (r "^0.2.6") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("alloc"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("alloc"))) (k 0)) (d (n "serde") (r "^1.0.105") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_bytes") (r "^0.11") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha3") (r "^0.9") (k 0)) (d (n "sp-std") (r "^5.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.10") (d #t) (k 2)) (d (n "zeroize") (r "^1.1") (k 0)))) (h "1slsafpaljxjshl56ks1ignwphnx0wylrqn8ksqv7vq2j01z03kv") (f (quote (("u64_backend" "confidential_identity_core/u64_backend") ("u32_backend" "confidential_identity_core/u32_backend") ("std" "serde_all" "confidential_identity_core/std" "rand_core/std" "rand/std" "codec/std" "sp-std/std" "failure/std" "criterion") ("serde_all" "serde" "serde_json" "confidential_identity_core/serde_all") ("no_std" "u64_backend" "confidential_identity_core/no_std") ("default" "std" "u64_backend") ("avx2_backend" "confidential_identity_core/avx2_backend") ("alloc" "confidential_identity_core/alloc")))) (y #t)))

