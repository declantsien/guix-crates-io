(define-module (crates-io me mf memflow-win32) #:use-module (crates-io))

(define-public crate-memflow-win32-0.0.0 (c (n "memflow-win32") (v "0.0.0") (h "0msa70yxvacbnl5zmmqkaidr5dziyz5jq95swxgvry1vm279haw5")))

(define-public crate-memflow-win32-0.1.1 (c (n "memflow-win32") (v "0.1.1") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "dataview") (r "^0.1") (d #t) (k 0)) (d (n "dataview") (r "^0.1") (d #t) (k 1)) (d (n "dirs") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "memflow") (r "^0.1") (k 0)) (d (n "no-std-compat") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9") (k 0)) (d (n "progress-streams") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simple_logger") (r "^1.0") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 1)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "win_key_codes") (r "^0.1") (d #t) (k 2)))) (h "0i7xccvypsyz6bqg9xpgg2lb570ykdjb82rnmdd9r5c4pj3krfnq") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "pbr" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress") ("collections") ("alloc"))))))

(define-public crate-memflow-win32-0.1.3 (c (n "memflow-win32") (v "0.1.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "dataview") (r "^0.1") (d #t) (k 0)) (d (n "dataview") (r "^0.1") (d #t) (k 1)) (d (n "dirs") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "memflow") (r "^0.1") (k 0)) (d (n "no-std-compat") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9") (k 0)) (d (n "progress-streams") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simple_logger") (r "^1.0") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 1)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "win_key_codes") (r "^0.1") (d #t) (k 2)))) (h "1l1vgc39vd11ic7drchbgx05ahwbbdalfz64kmn3mszlhb7r430w") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "pbr" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress") ("collections") ("alloc"))))))

(define-public crate-memflow-win32-0.1.4 (c (n "memflow-win32") (v "0.1.4") (d (list (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "dataview") (r "^0.1") (d #t) (k 0)) (d (n "dataview") (r "^0.1") (d #t) (k 1)) (d (n "dirs") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "memflow") (r "^0.1") (k 0)) (d (n "no-std-compat") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9") (k 0)) (d (n "progress-streams") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simple_logger") (r "^1.0") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 1)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "win_key_codes") (r "^0.1") (d #t) (k 2)))) (h "0m3x1llj6vg36wbfmyqxzkfq9z9hdkqln2z403v43xzh256b5iyb") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "pbr" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress") ("collections") ("alloc"))))))

(define-public crate-memflow-win32-0.1.5 (c (n "memflow-win32") (v "0.1.5") (d (list (d (n "clap") (r "^2.33") (d #t) (k 2)) (d (n "colored") (r "^2.0") (d #t) (k 2)) (d (n "dataview") (r "^0.1") (d #t) (k 0)) (d (n "dataview") (r "^0.1") (d #t) (k 1)) (d (n "dirs") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "memflow") (r "^0.1") (k 0)) (d (n "no-std-compat") (r "^0.4") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pbr") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "pdb") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9") (k 0)) (d (n "progress-streams") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simple_logger") (r "^1.0") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 1)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "ureq") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "win_key_codes") (r "^0.1") (d #t) (k 2)))) (h "1pc26l6m7f2njjn9b1v4p6v392ffbqb1shbgb7rjj420fl6nskm6") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "pbr" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex") ("collections") ("alloc"))))))

(define-public crate-memflow-win32-0.2.0-beta1 (c (n "memflow-win32") (v "0.2.0-beta1") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("pe32" "pe64"))) (k 0)) (d (n "indicatif") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "^0.2.0-beta") (k 0)) (d (n "memflow") (r "^0.2.0-beta") (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9.0") (k 0)) (d (n "progress-streams") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.11.1") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (f (quote ("alloc"))) (k 0)))) (h "18y5h0is3v6aw2ns964dlpb7all4fjnyppf1ijxlz255wn6lb6fk") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std" "pelite/std" "goblin/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "goblin/std") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "indicatif" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default"))))))

(define-public crate-memflow-win32-0.2.0-beta2 (c (n "memflow-win32") (v "0.2.0-beta2") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("pe32" "pe64"))) (k 0)) (d (n "indicatif") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "^0.2.0-beta") (k 0)) (d (n "memflow") (r "^0.2.0-beta") (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9.0") (k 0)) (d (n "progress-streams") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.11.1") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (f (quote ("alloc"))) (k 0)))) (h "0p11prkxkb7grijrg43r0pzqv8dk5x5ca57kazscbf0qsfc3xzc8") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std" "pelite/std" "goblin/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "goblin/std") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "indicatif" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default"))))))

(define-public crate-memflow-win32-0.2.0-beta4 (c (n "memflow-win32") (v "0.2.0-beta4") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "goblin") (r "^0.4.3") (f (quote ("pe32" "pe64"))) (k 0)) (d (n "indicatif") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "^0.2.0-beta") (k 0)) (d (n "memflow") (r "^0.2.0-beta") (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9.0") (k 0)) (d (n "progress-streams") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.11.1") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (f (quote ("alloc"))) (k 0)))) (h "0r0v8jbgpggpry7c8ii3pkjzl8yk1wi396f5jrmg5v8wvhcdni7l") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std" "pelite/std" "goblin/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "goblin/std") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "indicatif" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default"))))))

(define-public crate-memflow-win32-0.2.0-beta7 (c (n "memflow-win32") (v "0.2.0-beta7") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "indicatif") (r "^0.16.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "^0.2.0-beta7") (k 0)) (d (n "memflow") (r "^0.2.0-beta7") (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pdb") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "pelite") (r "^0.9.0") (k 0)) (d (n "progress-streams") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.11.1") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "ureq") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "widestring") (r "^0.5.1") (f (quote ("alloc"))) (k 0)))) (h "1rg0av7par50ip8ikcd3zcxnf5dngygsjm086nj818zl78bhsdmb") (f (quote (("symstore" "dirs" "ureq" "pdb") ("std" "no-std-compat/std" "memflow/std" "pelite/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive") ("download_progress" "indicatif" "progress-streams") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default"))))))

(define-public crate-memflow-win32-0.2.0-beta9 (c (n "memflow-win32") (v "0.2.0-beta9") (d (list (d (n "clap") (r "^3.0.5") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "^0.2.0-beta9") (k 0)) (d (n "memflow") (r "^0.2.0-beta9") (k 1)) (d (n "memflow-win32-defs") (r "^0.2.0-beta9") (k 0)) (d (n "memflow-win32-defs") (r "^0.2.0-beta9") (f (quote ("symstore"))) (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pelite") (r "^0.9.0") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.11.1") (d #t) (k 2)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 2)) (d (n "widestring") (r "^0.5.1") (f (quote ("alloc"))) (k 0)))) (h "0kws7cq7axny6hzmfqi41ad1ir9rsnjbkv32a3cbrky43mzhw968") (f (quote (("symstore" "memflow-win32-defs/symstore") ("std" "no-std-compat/std" "memflow/std" "pelite/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "memflow-win32-defs/serde") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive" "memflow-win32-defs/serde") ("download_progress" "memflow-win32-defs/download_progress") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default"))))))

(define-public crate-memflow-win32-0.2.0-beta10 (c (n "memflow-win32") (v "0.2.0-beta10") (d (list (d (n "clap") (r "^4.0.26") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "=0.2.0-beta10") (k 0)) (d (n "memflow") (r "=0.2.0-beta10") (k 1)) (d (n "memflow-win32-defs") (r "^0.2.0-beta10") (k 0)) (d (n "memflow-win32-defs") (r "^0.2.0-beta10") (f (quote ("symstore"))) (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pelite") (r "^0.10.0") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "toml") (r "^0.7.3") (d #t) (k 1)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (f (quote ("alloc"))) (k 0)))) (h "0bqddpi8f4yqfyrvix7yngxv7rijrlslidgfzi6vbxzzrzzypw3d") (f (quote (("symstore" "memflow-win32-defs/symstore") ("std" "no-std-compat/std" "memflow/std" "pelite/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "memflow-win32-defs/serde") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive" "memflow-win32-defs/serde") ("download_progress" "memflow-win32-defs/download_progress") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default")))) (r "1.65")))

(define-public crate-memflow-win32-0.2.0-beta11 (c (n "memflow-win32") (v "0.2.0-beta11") (d (list (d (n "clap") (r "^4.0.26") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "=0.2.0-beta11") (k 0)) (d (n "memflow") (r "=0.2.0-beta11") (k 1)) (d (n "memflow-win32-defs") (r "^0.2.0-beta11") (k 0)) (d (n "memflow-win32-defs") (r "^0.2.0-beta11") (f (quote ("symstore"))) (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pelite") (r "^0.10.0") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "toml") (r "^0.7.3") (d #t) (k 1)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (f (quote ("alloc"))) (k 0)))) (h "02wlzhpgzfcwnv9xdirf4kl3gy7v0yiq7vz5m47rmfnfvj7qc0xl") (f (quote (("symstore" "memflow-win32-defs/symstore") ("std" "no-std-compat/std" "memflow/std" "pelite/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "memflow-win32-defs/serde") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive" "memflow-win32-defs/serde") ("download_progress" "memflow-win32-defs/download_progress") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default")))) (r "1.65")))

(define-public crate-memflow-win32-0.2.0 (c (n "memflow-win32") (v "0.2.0") (d (list (d (n "clap") (r "^4.0.26") (f (quote ("cargo"))) (d #t) (k 2)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "memflow") (r "^0.2") (k 0)) (d (n "memflow") (r "^0.2") (k 1)) (d (n "memflow-win32-defs") (r "^0.2") (k 0)) (d (n "memflow-win32-defs") (r "^0.2") (f (quote ("symstore"))) (d #t) (k 1)) (d (n "no-std-compat") (r "^0.4.1") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "pelite") (r "^0.10.0") (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive" "alloc"))) (k 1)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 2)) (d (n "toml") (r "^0.7.3") (d #t) (k 1)) (d (n "toml") (r "^0.7.3") (d #t) (k 2)) (d (n "widestring") (r "^1.0.2") (f (quote ("alloc"))) (k 0)))) (h "1s7q17pf9zhw4k290fqj84dgzwxh0qyy91gbas7clfzvzk3pjy3k") (f (quote (("symstore" "memflow-win32-defs/symstore") ("std" "no-std-compat/std" "memflow/std" "pelite/std") ("serde_derive" "serde" "memflow/serde_derive" "pelite/std" "pelite/serde" "memflow-win32-defs/serde") ("plugins" "memflow/plugins") ("embed_offsets" "serde" "memflow/serde_derive" "memflow-win32-defs/serde") ("download_progress" "memflow-win32-defs/download_progress") ("default" "std" "serde_derive" "embed_offsets" "symstore" "download_progress" "regex" "memflow/default")))) (r "1.65")))

