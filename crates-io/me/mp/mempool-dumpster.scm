(define-module (crates-io me mp mempool-dumpster) #:use-module (crates-io))

(define-public crate-mempool-dumpster-0.1.0 (c (n "mempool-dumpster") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.30") (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.6") (d #t) (k 0)) (d (n "polars") (r "^0.32.1") (f (quote ("parquet" "lazy"))) (d #t) (k 0)) (d (n "scraper") (r "^0.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "15nkgj6p2s2bxvidzz2kar0livrqkbbjiii54rspzy8gv5rgdxcl")))

(define-public crate-mempool-dumpster-0.1.1 (c (n "mempool-dumpster") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.30") (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "csv") (r "^1.2.2") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.6") (d #t) (k 0)) (d (n "polars") (r "^0.32.1") (f (quote ("parquet" "lazy"))) (d #t) (k 0)) (d (n "scraper") (r "^0.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter"))) (d #t) (k 0)) (d (n "ureq") (r "^2.7.1") (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (d #t) (k 0)))) (h "179bfxwpl523j9w9ww1agwwxy34jwwgp6wii165i74pc6n7bslxl")))

