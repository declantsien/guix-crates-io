(define-module (crates-io me mp memphis-rust-community) #:use-module (crates-io))

(define-public crate-memphis-rust-community-0.1.0 (c (n "memphis-rust-community") (v "0.1.0") (d (list (d (n "async-nats") (r "^0.29.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1m6r7wvy40bmsrwsgr6qv2rfycgkphbwq57dmgx1m92rbgyv2n78")))

(define-public crate-memphis-rust-community-0.1.1 (c (n "memphis-rust-community") (v "0.1.1") (d (list (d (n "async-nats") (r "^0.29.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0sfzf4mw3zg08xngn71pckashwawqmy1z871h9zrfy8wj47qfhzc")))

(define-public crate-memphis-rust-community-0.1.2 (c (n "memphis-rust-community") (v "0.1.2") (d (list (d (n "async-nats") (r "^0.29.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "17dp7vkd0acf00ald455vhhhxj40ig1axqsw08kq09vgi25ski73")))

(define-public crate-memphis-rust-community-0.1.3 (c (n "memphis-rust-community") (v "0.1.3") (d (list (d (n "async-nats") (r "^0.29.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1d0fzaac6sfvrv1phq7qqldsai2p8l0gnyw095sbd9jyszrcmk3i")))

(define-public crate-memphis-rust-community-0.2.0 (c (n "memphis-rust-community") (v "0.2.0") (d (list (d (n "async-nats") (r "^0.29.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.17") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1qb44jicikd5yyq0qg23skiblkmh5cdmc1gdx0c0b4g960fdg487") (f (quote (("validator_protobuf" "schemaverse") ("validator_graphql" "schemaverse") ("schemaverse") ("producers") ("full" "producers" "consumers" "schemaverse" "validator_json" "validator_graphql" "validator_protobuf") ("default" "producers" "consumers") ("consumers")))) (s 2) (e (quote (("validator_json" "schemaverse" "dep:jsonschema"))))))

(define-public crate-memphis-rust-community-0.2.1 (c (n "memphis-rust-community") (v "0.2.1") (d (list (d (n "async-nats") (r "^0.29.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.17") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1bbyj1l57mlnridam9737yz276qlfz66hyz6lmkna168831fr19i") (f (quote (("validator_protobuf" "schemaverse") ("validator_graphql" "schemaverse") ("schemaverse") ("producers") ("full" "producers" "consumers" "schemaverse" "validator_json" "validator_graphql" "validator_protobuf") ("default" "producers" "consumers") ("consumers")))) (s 2) (e (quote (("validator_json" "schemaverse" "dep:jsonschema"))))))

(define-public crate-memphis-rust-community-0.3.0 (c (n "memphis-rust-community") (v "0.3.0") (d (list (d (n "async-nats") (r "^0.31.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.17") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0700gfm4gyc1qzw9f4l06z2fqqdsj9aicljkancg7cqxm2hv2fqw") (f (quote (("validator_protobuf" "schemaverse") ("validator_graphql" "schemaverse") ("schemaverse") ("producers") ("full" "producers" "consumers" "schemaverse" "validator_json" "validator_graphql" "validator_protobuf") ("default" "producers" "consumers") ("consumers")))) (y #t) (s 2) (e (quote (("validator_json" "schemaverse" "dep:jsonschema"))))))

(define-public crate-memphis-rust-community-0.3.1 (c (n "memphis-rust-community") (v "0.3.1") (d (list (d (n "async-nats") (r "^0.31.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.17") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s5a43zq6b8xn7xzir7frgq7apjs036m2qgxfvxvfcblm9j7707f") (f (quote (("validator_protobuf" "schemaverse") ("validator_graphql" "schemaverse") ("schemaverse") ("producers") ("full" "producers" "consumers" "schemaverse" "validator_json" "validator_graphql" "validator_protobuf") ("default" "producers" "consumers") ("consumers")))) (s 2) (e (quote (("validator_json" "schemaverse" "dep:jsonschema"))))))

(define-public crate-memphis-rust-community-0.3.2 (c (n "memphis-rust-community") (v "0.3.2") (d (list (d (n "async-nats") (r "^0.31.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.17") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.8") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "04b41pknxkgj8cd9wlmxq4dq933zczvh30ivc6rizsbq426j90xw") (f (quote (("validator_protobuf" "schemaverse") ("validator_graphql" "schemaverse") ("schemaverse") ("producers") ("full" "producers" "consumers" "schemaverse" "validator_json" "validator_graphql" "validator_protobuf") ("default" "producers" "consumers") ("consumers")))) (s 2) (e (quote (("validator_json" "schemaverse" "dep:jsonschema"))))))

(define-public crate-memphis-rust-community-0.4.0 (c (n "memphis-rust-community") (v "0.4.0") (d (list (d (n "async-nats") (r "^0.32.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "jsonschema") (r "^0.17.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 2)) (d (n "murmur3") (r "^0.5.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tokio-util") (r "^0.7.9") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0kbiwq482mk79787xy5xz85q51dfkrm518cbhvqpf17ls202fczb") (f (quote (("validator_protobuf" "schemaverse") ("validator_graphql" "schemaverse") ("schemaverse") ("producers") ("full" "producers" "consumers" "schemaverse" "validator_json" "validator_graphql" "validator_protobuf") ("default" "producers" "consumers") ("consumers")))) (s 2) (e (quote (("validator_json" "schemaverse" "dep:jsonschema"))))))

