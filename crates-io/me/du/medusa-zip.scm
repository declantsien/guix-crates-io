(define-module (crates-io me du medusa-zip) #:use-module (crates-io))

(define-public crate-medusa-zip-0.0.1 (c (n "medusa-zip") (v "0.0.1") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "12lzsb7q9f0izgmkdxcgig52w1y9rv5wxnyjx2jj33r34v61rsk7")))

(define-public crate-medusa-zip-0.0.2 (c (n "medusa-zip") (v "0.0.2") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.2") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1fjngj4863xk6zyiccbpk2s3wp073drcs1cjx75w57wrd3mv321j")))

(define-public crate-medusa-zip-0.0.3 (c (n "medusa-zip") (v "0.0.3") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.3") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "08xziifdv2y0xrkvr45g8gqhhs1rhbnj1zgq5ccvnalhvdnkh5cl")))

(define-public crate-medusa-zip-0.0.4 (c (n "medusa-zip") (v "0.0.4") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "01c9pnw8fqx7ycf7541gib41mwj2s7kfysl788gndisp77zw7f4z")))

(define-public crate-medusa-zip-0.0.6 (c (n "medusa-zip") (v "0.0.6") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.6") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1dff04vmxjk7giww4sj70d2ssiq2pnfaxisl7b5w7l9iqb0dc5wz")))

(define-public crate-medusa-zip-0.0.7 (c (n "medusa-zip") (v "0.0.7") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.7") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "0bpsfgv140pbxyn22x19rj9q28607mqzlyswb9j4hsc0bs0w482g")))

(define-public crate-medusa-zip-0.0.8 (c (n "medusa-zip") (v "0.0.8") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "0iqkfp3ynwxcn2f3yy8695l1ddjxbchf878hm3rqmf6ipmzw2p3n")))

(define-public crate-medusa-zip-0.0.9 (c (n "medusa-zip") (v "0.0.9") (d (list (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "libmedusa-zip") (r "^0.0.9") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.23") (f (quote ("local-offset" "parsing"))) (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("io-util" "io-std" "macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("deflate" "time" "rayon" "merge"))) (k 0) (p "zip-merge")))) (h "1w01332gyzbn7w6xjdkjj8kd99lqdfkwvdm98fhd7ln8xlsn9610")))

