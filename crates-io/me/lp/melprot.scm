(define-module (crates-io me lp melprot) #:use-module (crates-io))

(define-public crate-melprot-0.13.0 (c (n "melprot") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "09lscsnfhm6a53nc1k2y60g1vcjxv9c9b08cpgwnmf1dwayai9k6") (y #t)))

(define-public crate-melprot-0.13.1 (c (n "melprot") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "1klwfjl8pdizfmg63xv22p23r27qr7w4534ag5q1cj0nd2ldx0yg")))

(define-public crate-melprot-0.13.2 (c (n "melprot") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "1pipp8b5z6b9xc9g8cnmyqz5kyy3qh41qv043vfx0ahjfg0jmhw6")))

(define-public crate-melprot-0.13.3 (c (n "melprot") (v "0.13.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "1lz6xn7lwirgg67zcs6p76h2nw2zql0raypil9dh327p1jvavzmi")))

(define-public crate-melprot-0.13.4 (c (n "melprot") (v "0.13.4") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "1qj6icbm55qc845sj6cx8bgvd2am93gggab83db6r13ijrjd765s")))

(define-public crate-melprot-0.13.7 (c (n "melprot") (v "0.13.7") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "1k8ghlkw4g1d48j6qld80wwavlaj1pw40pb981kglg2gkg9hwiad")))

(define-public crate-melprot-0.13.8 (c (n "melprot") (v "0.13.8") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "argh") (r "^0.1.9") (d #t) (k 2)) (d (n "arrayref") (r "^0.3.6") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.3.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lru") (r "^0.7.8") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.3") (d #t) (k 0)) (d (n "melnet2") (r "^0.3") (d #t) (k 0)) (d (n "melstructs") (r "^0.3") (d #t) (k 0)) (d (n "mini-moka") (r "^0.10.0") (d #t) (k 0)) (d (n "nanorpc") (r "^0.1.12") (d #t) (k 0)) (d (n "novasmt") (r "^0.2.19") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smol_str") (r "^0.1.23") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.49") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.13") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.6") (d #t) (k 0)))) (h "1knln1sdngsyy9bklcdd9zskbljvj6hqs47l5bq6snwnihayxhc6")))

