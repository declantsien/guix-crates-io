(define-module (crates-io me lw melwallet-cli) #:use-module (crates-io))

(define-public crate-melwallet-cli-0.8.0 (c (n "melwallet-cli") (v "0.8.0") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.7") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.9.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "melprot") (r "^0.13.4") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "melvm") (r "^0.1.0") (d #t) (k 0)) (d (n "melwallet") (r "^0.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.23") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.7") (d #t) (k 0)) (d (n "tabwriter") (r "^1.2.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (k 0)))) (h "0z35v3wj96n0vl2hdp8c9z5fwlx4pa8fpz9r754r3yjjsij1hzf3")))

(define-public crate-melwallet-cli-0.8.3 (c (n "melwallet-cli") (v "0.8.3") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.7") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.9.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.5") (d #t) (k 0)) (d (n "melnet2") (r "^0.3.1") (d #t) (k 0)) (d (n "melprot") (r "^0.13.7") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "melvm") (r "^0.1.0") (d #t) (k 0)) (d (n "melwallet") (r "^0.1.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.23") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.7") (d #t) (k 0)) (d (n "tabwriter") (r "^1.2.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (k 0)))) (h "0pw4piz54jrjbqw4x3wc2idrw8mj9lga0h8k7gnm4cvcipn455xy")))

(define-public crate-melwallet-cli-0.8.4 (c (n "melwallet-cli") (v "0.8.4") (d (list (d (n "acidjson") (r "^0.1.2") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0.7") (d #t) (k 2)) (d (n "base32") (r "^0.4.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.1") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^1.0.1") (d #t) (k 0)) (d (n "fastrand") (r "^1.9.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.5") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "melbootstrap") (r "^0.8.5") (d #t) (k 0)) (d (n "melnet2") (r "^0.3.1") (d #t) (k 0)) (d (n "melprot") (r "^0.13.7") (d #t) (k 0)) (d (n "melstructs") (r "^0.3.2") (d #t) (k 0)) (d (n "melvm") (r "^0.1.0") (d #t) (k 0)) (d (n "melwallet") (r "^0.1.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "rpassword") (r "^7.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "smol") (r "^1.2.5") (d #t) (k 0)) (d (n "smolscale") (r "^0.3.23") (d #t) (k 0)) (d (n "stdcode") (r "^0.1.7") (d #t) (k 0)) (d (n "tabwriter") (r "^1.2.1") (f (quote ("ansi_formatting"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tmelcrypt") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.9") (d #t) (k 0)))) (h "1856rma2nmrl1clcw8h9i4m0b8d4mwx9sv1s9hychfah6zaa0nfc")))

