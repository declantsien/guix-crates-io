(define-module (crates-io me ta metaldb) #:use-module (crates-io))

(define-public crate-metaldb-1.0.0 (c (n "metaldb") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "metaldb-derive") (r "^1.0.0") (d #t) (k 2)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.18.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0a3v3mi8p29iv58xb6n7xpgrh3aggc51bfvpn4rakdgg4f1dgl8v") (f (quote (("with-serde") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy"))))))

