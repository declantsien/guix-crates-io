(define-module (crates-io me ta meta_tools) #:use-module (crates-io))

(define-public crate-meta_tools-0.1.0 (c (n "meta_tools") (v "0.1.0") (d (list (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "wtest_basic") (r "~0.1") (d #t) (k 2)))) (h "1cijs50py5zyjjr14627ly5p74nmazvcj6q3j50ldvm8fgb6c0qs")))

(define-public crate-meta_tools-0.1.2 (c (n "meta_tools") (v "0.1.2") (d (list (d (n "either") (r "~1.6") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "wtest_basic") (r "~0.1") (d #t) (k 2)))) (h "09k7qbrpakj2s3yx7spj6jriawd8mr5s8cr4b3n2214ai3y0cljz")))

(define-public crate-meta_tools-0.2.0 (c (n "meta_tools") (v "0.2.0") (d (list (d (n "either") (r "~1.6") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "wtest_basic") (r "~0.1") (d #t) (k 2)))) (h "17aqnahynd1k4ibr4mxmvkrgi08bx3z6mcfhvj5f42wnr0ivjsl0")))

(define-public crate-meta_tools-0.2.1 (c (n "meta_tools") (v "0.2.1") (d (list (d (n "either") (r "~1.6") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "1jcyq0fpfbr7k0nf8zqy9qfx1mam18lqi20nycmkgxmn81bm369w")))

(define-public crate-meta_tools-0.2.2 (c (n "meta_tools") (v "0.2.2") (d (list (d (n "either") (r "~1.6") (d #t) (k 0)) (d (n "for_each") (r "~0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "0pj9v3fh8wnji7i6p6cianwf4c1h9wswy6mv3n1clwksg2cr7h1b")))

(define-public crate-meta_tools-0.2.3 (c (n "meta_tools") (v "0.2.3") (d (list (d (n "for_each") (r "~0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "1z132fmlybpmgkf82cddncqlarp4knyzvhrh1wjmxljhhcf71i4l")))

(define-public crate-meta_tools-0.2.4 (c (n "meta_tools") (v "0.2.4") (d (list (d (n "for_each") (r "~0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "1m5p08blz7yyb31fs1dw7k632j11j2xryz5lxz54cxw2lvjgnhnb")))

(define-public crate-meta_tools-0.2.5 (c (n "meta_tools") (v "0.2.5") (d (list (d (n "for_each") (r "^0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "1dlp2v8mvq9p10wkjyirpvccmmhhy5ilbimf9vf62czawliav610")))

(define-public crate-meta_tools-0.2.6 (c (n "meta_tools") (v "0.2.6") (d (list (d (n "for_each") (r "~0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "153vp4j9p9lrhghanjn8hqk6hn2ds9frvhq7lnqzkb3paf5gpccn")))

(define-public crate-meta_tools-0.2.7 (c (n "meta_tools") (v "0.2.7") (d (list (d (n "for_each") (r "~0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "1rljz51nrjq5gxlf08brrsiv1v0hjjakijsyy00bdphhsakhgw8d")))

(define-public crate-meta_tools-0.2.9 (c (n "meta_tools") (v "0.2.9") (d (list (d (n "for_each") (r "~0.1") (d #t) (k 0)) (d (n "impls_index") (r "~0.1") (d #t) (k 0)) (d (n "literally") (r "~0.1") (d #t) (k 0)) (d (n "mod_interface") (r "~0.1") (d #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "0cj8dm7lfj30aii4vmdzw96v36ws8l6112cg9zgjkipbrwzlxmj1")))

(define-public crate-meta_tools-0.2.10 (c (n "meta_tools") (v "0.2.10") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)))) (h "0522373va46jify11rqb4mqrw8k8nzk9pfpw7xf5cqccdvjxq5rw") (f (quote (("default" "for_each" "impls_index" "mod_interface" "collection_make") ("collection_make" "literally") ("all" "for_each" "impls_index" "mod_interface" "collection_make"))))))

(define-public crate-meta_tools-0.2.11 (c (n "meta_tools") (v "0.2.11") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "17j5ss6l22xiil69gkmiwmx5zkh1v13hlg6nnc93fgv87cnci1xi") (f (quote (("options" "woptions") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make") ("collection_make" "literally") ("all" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make"))))))

(define-public crate-meta_tools-0.2.12 (c (n "meta_tools") (v "0.2.12") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "15npf2g8xsjhzpdak8nmmwnihmm4cja4z8k7aai9xp1wr6c0qqg6") (f (quote (("options" "woptions") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make") ("collection_make" "literally") ("all" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make"))))))

(define-public crate-meta_tools-0.2.13 (c (n "meta_tools") (v "0.2.13") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "13jgwj4dxnld3l1g32p46q2ry6j98srcll0dy76s17vpf9dsh7cy") (f (quote (("use_std") ("use_alloc") ("options" "woptions") ("full" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std" "use_alloc") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.2.14 (c (n "meta_tools") (v "0.2.14") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "0ngzq0l9h1763wgc5iqf2z74h4jnqrzcwbm4w15m2s72cnc16jip") (f (quote (("use_std") ("use_alloc") ("options" "woptions") ("full" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std" "use_alloc") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.2.15 (c (n "meta_tools") (v "0.2.15") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "04wkqx84p3scriq2qhq6k822vyr8r530r061aw2d0w60c6nf9b67") (f (quote (("use_std") ("use_alloc") ("options" "woptions") ("full" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std" "use_alloc") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.2.16 (c (n "meta_tools") (v "0.2.16") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "1xhc91h2y1k6a1w4jm93hxdq17z9i9mv4hw538w2ysv2486rd0m9") (f (quote (("use_std") ("use_alloc") ("options" "woptions") ("full" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std" "use_alloc") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.2.17 (c (n "meta_tools") (v "0.2.17") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "0f0pgn4i7dnk5rjqhdngv7yl12l88m622abgwmfsgshg33v6ym2v") (f (quote (("use_std") ("use_alloc") ("options" "woptions") ("full" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std" "use_alloc") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "use_std") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.2.18 (c (n "meta_tools") (v "0.2.18") (d (list (d (n "for_each") (r "~0.1") (o #t) (k 0)) (d (n "former") (r "~0.1") (o #t) (k 0)) (d (n "impls_index") (r "~0.1") (o #t) (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "~0.1") (o #t) (k 0)) (d (n "paste") (r "~1.0") (o #t) (k 0)) (d (n "test_tools") (r "~0.1") (d #t) (k 2)) (d (n "woptions") (r "~0.1") (o #t) (k 0)))) (h "152paf17bb2f4a0ibwigl6q67an30vw2bgvxbbxvkd95pbvz37hy") (f (quote (("use_std") ("use_alloc") ("options" "woptions") ("idents_concat" "paste") ("full" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "idents_concat" "use_std") ("default" "for_each" "impls_index" "mod_interface" "former" "options" "collection_make" "idents_concat" "use_std") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.3.0 (c (n "meta_tools") (v "0.3.0") (d (list (d (n "for_each") (r "^0.3.0") (f (quote ("enabled"))) (k 0)) (d (n "impls_index") (r "^0.2.0") (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "^0.3.0") (f (quote ("enabled"))) (k 0)) (d (n "paste") (r "~1.0") (o #t) (k 0)) (d (n "test_tools") (r "^0.1.5") (d #t) (k 2)))) (h "16a7wx1sb8ilsysdbiyfcjy902qdr0ffgf33kc0mfggan0viss9g") (f (quote (("use_alloc") ("no_std") ("impls_index" "impls_index/enabled") ("idents_concat" "paste") ("full" "enabled" "for_each" "impls_index" "collection_make" "idents_concat") ("for_each" "for_each/enabled") ("enabled") ("default" "enabled" "for_each" "impls_index" "collection_make" "idents_concat") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.4.0 (c (n "meta_tools") (v "0.4.0") (d (list (d (n "for_each") (r "^0.3.0") (f (quote ("enabled"))) (k 0)) (d (n "impls_index") (r "^0.2.0") (k 0)) (d (n "literally") (r "~0.1") (o #t) (k 0)) (d (n "mod_interface") (r "^0.3.0") (f (quote ("enabled"))) (k 0)) (d (n "paste") (r "~1.0") (o #t) (k 0)) (d (n "test_tools") (r "^0.1.5") (d #t) (k 2)))) (h "0h23x82n1hb3r39jiwhm632qfhlawd8acx8ac3j6sjhdhs76lcxp") (f (quote (("use_alloc") ("no_std") ("impls_index" "impls_index/enabled") ("idents_concat" "paste") ("full" "enabled" "for_each" "impls_index" "collection_make" "idents_concat") ("for_each" "for_each/enabled") ("enabled") ("default" "enabled" "for_each" "impls_index" "collection_make" "idents_concat") ("collection_make" "literally"))))))

(define-public crate-meta_tools-0.5.0 (c (n "meta_tools") (v "0.5.0") (d (list (d (n "for_each") (r "^0.3.0") (k 0)) (d (n "impls_index") (r "^0.2.0") (k 0)) (d (n "literally") (r "~0.1.3") (o #t) (k 0)) (d (n "mod_interface") (r "^0.4.0") (f (quote ("default"))) (k 0)) (d (n "paste") (r "~1.0.14") (o #t) (k 0)) (d (n "test_tools") (r "^0.3.0") (d #t) (k 2)))) (h "09n8yy23sqw6vj3cy4g4bbqhsqixcqmggwib6fblilg7lzpcq6fj") (f (quote (("use_alloc") ("no_std") ("meta_mod_interface" "mod_interface/enabled") ("meta_impls_index" "impls_index/enabled") ("meta_idents_concat" "paste") ("meta_for_each" "for_each/enabled") ("meta_constructors" "literally") ("full" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat") ("enabled") ("default" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat"))))))

(define-public crate-meta_tools-0.6.0 (c (n "meta_tools") (v "0.6.0") (d (list (d (n "for_each") (r "~0.4.0") (k 0)) (d (n "impls_index") (r "~0.3.0") (k 0)) (d (n "literally") (r "~0.1.3") (o #t) (k 0)) (d (n "mod_interface") (r "~0.8.0") (f (quote ("default"))) (k 0)) (d (n "paste") (r "~1.0.14") (o #t) (k 0)) (d (n "test_tools") (r "~0.5.0") (d #t) (k 2)))) (h "19kyp9nij7y5sry8s8ddb5069jaq554fyp5rh5gbzv0cbn70bqkh") (f (quote (("use_alloc") ("no_std") ("meta_mod_interface" "mod_interface/enabled") ("meta_impls_index" "impls_index/enabled") ("meta_idents_concat" "paste") ("meta_for_each" "for_each/enabled") ("meta_constructors" "literally") ("full" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat") ("enabled") ("default" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat"))))))

(define-public crate-meta_tools-0.7.0 (c (n "meta_tools") (v "0.7.0") (d (list (d (n "for_each") (r "~0.5.0") (k 0)) (d (n "impls_index") (r "~0.4.0") (k 0)) (d (n "literally") (r "~0.1.3") (o #t) (k 0)) (d (n "mod_interface") (r "~0.14.0") (f (quote ("default"))) (k 0)) (d (n "paste") (r "~1.0.14") (o #t) (k 0)) (d (n "test_tools") (r "~0.6.0") (d #t) (k 2)))) (h "0aayhkzl6pk9jg6ada4yy90jglgmaqgq7djbq9shaz71kwgsg930") (f (quote (("use_alloc") ("no_std") ("meta_mod_interface" "mod_interface/enabled") ("meta_impls_index" "impls_index/enabled") ("meta_idents_concat" "paste") ("meta_for_each" "for_each/enabled") ("meta_constructors" "literally") ("full" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat") ("enabled") ("default" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat"))))))

(define-public crate-meta_tools-0.8.0 (c (n "meta_tools") (v "0.8.0") (d (list (d (n "for_each") (r "~0.6.0") (k 0)) (d (n "impls_index") (r "~0.5.0") (k 0)) (d (n "literally") (r "~0.1.3") (o #t) (k 0)) (d (n "mod_interface") (r "~0.15.0") (f (quote ("default"))) (k 0)) (d (n "paste") (r "~1.0.14") (o #t) (k 0)) (d (n "test_tools") (r "~0.7.0") (d #t) (k 2)))) (h "0iw6klmlxrxq2nb1hakrqv1a84agb26fpd2jh4gbp3i1r0hmpz42") (f (quote (("use_alloc") ("no_std") ("meta_mod_interface" "mod_interface/enabled") ("meta_impls_index" "impls_index/enabled") ("meta_idents_concat" "paste") ("meta_for_each" "for_each/enabled") ("meta_constructors" "literally") ("full" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat") ("enabled") ("default" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat"))))))

(define-public crate-meta_tools-0.9.0 (c (n "meta_tools") (v "0.9.0") (d (list (d (n "for_each") (r "~0.7.0") (k 0)) (d (n "impls_index") (r "~0.6.0") (k 0)) (d (n "literally") (r "~0.1.3") (o #t) (k 0)) (d (n "mod_interface") (r "~0.16.0") (f (quote ("default"))) (k 0)) (d (n "paste") (r "~1.0.14") (o #t) (k 0)) (d (n "test_tools") (r "~0.7.0") (d #t) (k 2)))) (h "0jncgkna9v0pnrynh4y3f5vdjb59qpir4f0z84wazihq5zgks19c") (f (quote (("use_alloc") ("no_std") ("meta_mod_interface" "mod_interface/enabled") ("meta_impls_index" "impls_index/enabled") ("meta_idents_concat" "paste") ("meta_for_each" "for_each/enabled") ("meta_constructors" "literally") ("full" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat") ("enabled") ("default" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat"))))))

(define-public crate-meta_tools-0.10.0 (c (n "meta_tools") (v "0.10.0") (d (list (d (n "for_each") (r "~0.8.0") (k 0)) (d (n "impls_index") (r "~0.7.0") (k 0)) (d (n "literally") (r "~0.1.3") (o #t) (k 0)) (d (n "mod_interface") (r "~0.18.0") (f (quote ("default"))) (k 0)) (d (n "paste") (r "~1.0.14") (o #t) (k 0)) (d (n "test_tools") (r "~0.8.0") (d #t) (k 2)))) (h "0vzpnwy5r7v9nbqn4x9z5bqdwd93vm5zb8w2rz756qz18h8szrmy") (f (quote (("use_alloc" "no_std") ("no_std") ("meta_mod_interface" "mod_interface/enabled") ("meta_impls_index" "impls_index/enabled") ("meta_idents_concat" "paste") ("meta_for_each" "for_each/enabled") ("meta_constructors" "literally") ("full" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat") ("enabled") ("default" "enabled" "meta_for_each" "meta_impls_index" "meta_constructors" "meta_idents_concat"))))))

