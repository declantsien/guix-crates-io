(define-module (crates-io me ta metaemu-concrete) #:use-module (crates-io))

(define-public crate-metaemu-concrete-0.3.0 (c (n "metaemu-concrete") (v "0.3.0") (d (list (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "fugue") (r "^0.2.8") (d #t) (k 0)) (d (n "fugue-db") (r "^0.2") (d #t) (k 0)) (d (n "fugue-fp") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metaemu-hooks") (r "^0.3") (d #t) (k 0)) (d (n "metaemu-intrinsics") (r "^0.3") (d #t) (k 0)) (d (n "metaemu-loader") (r "^0.3") (d #t) (k 0)) (d (n "metaemu-machine") (r "^0.3") (d #t) (k 0)) (d (n "metaemu-microx") (r "^0.3") (d #t) (k 0)) (d (n "metaemu-state") (r "^0.3") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "serde_any") (r "^0.5") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "ux") (r "^0.1") (d #t) (k 0)))) (h "1mkxhxyibx8mg9a7wrg71qdm7hlzi9jxlnl3pbf3l9v8g6kkdy4k")))

