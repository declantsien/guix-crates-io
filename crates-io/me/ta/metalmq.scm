(define-module (crates-io me ta metalmq) #:use-module (crates-io))

(define-public crate-metalmq-0.1.0 (c (n "metalmq") (v "0.1.0") (d (list (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metalmq-client") (r "^0.2") (d #t) (k 0)) (d (n "metalmq-codec") (r "^0.2") (d #t) (k 0)) (d (n "termcolor") (r "^1.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s2mmbk1hqmlff4d6b3df8hipinmq5m8xdkrz9yv6zycc3k3vf8d") (f (quote (("integration-tests") ("default"))))))

(define-public crate-metalmq-0.2.1 (c (n "metalmq") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cucumber") (r "^0.8") (d #t) (k 2) (p "cucumber_rust")) (d (n "env_logger") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metalmq-client") (r "^0.2") (d #t) (k 0)) (d (n "metalmq-codec") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt" "rt-multi-thread" "signal" "sync"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("codec"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cyswgixi3bp41b65gajf65k8v8ajhnkz8ay1nha92v3mrh015cx") (f (quote (("integration-tests") ("default"))))))

(define-public crate-metalmq-0.2.2 (c (n "metalmq") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metalmq-client") (r "^0.2") (d #t) (k 0)) (d (n "metalmq-codec") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt" "rt-multi-thread" "signal" "sync"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)))) (h "04bfn9iba9slfyjiq9nhc7wrynrazn3w0bhvvw24ynb0dk6bn37i") (f (quote (("integration-tests") ("default"))))))

(define-public crate-metalmq-0.3.0 (c (n "metalmq") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "usage"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metalmq-client") (r "^0.3") (d #t) (k 0)) (d (n "metalmq-codec") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "net" "rt" "rt-multi-thread" "signal" "sync"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)) (d (n "toml") (r "^0.7") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "bencher") (r "^0.1") (d #t) (k 2)))) (h "0qg57d5snzx1d6pc1qcyn2hr7jhhb53da2imbv3wfmc4z5vyi1rx") (f (quote (("integration-tests") ("default"))))))

