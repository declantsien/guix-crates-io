(define-module (crates-io me di mediaflow) #:use-module (crates-io))

(define-public crate-mediaflow-0.1.0 (c (n "mediaflow") (v "0.1.0") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)))) (h "1c4fsy6ac7ggyn4khz5njwybpfcfxa5qkf40vb7rbg7b50d7qznl") (f (quote (("cli" "clap"))))))

(define-public crate-mediaflow-0.1.1 (c (n "mediaflow") (v "0.1.1") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)))) (h "0wcj749cr16220fy1q5dwa3hhfxb4chkwv1kx34xs6kcnlib9lm1") (f (quote (("cli" "clap"))))))

(define-public crate-mediaflow-0.2.0 (c (n "mediaflow") (v "0.2.0") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)))) (h "1i0piqws4ydv3mhgcrfpk144b4dhrmhj73lzw6g37q01rz0igbjx") (f (quote (("cli" "clap"))))))

(define-public crate-mediaflow-0.3.0 (c (n "mediaflow") (v "0.3.0") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)))) (h "0fx0yh2dz28zfp6p6f96vy9wp2h55rp5r1rjfbqdmzk7b8kfp461") (f (quote (("cli" "clap"))))))

(define-public crate-mediaflow-0.4.0 (c (n "mediaflow") (v "0.4.0") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "03gycwnrkrw3zhq10s5x9pxg5bhby5bzwn5n8k11lmc38b2dagqj") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.5.0 (c (n "mediaflow") (v "0.5.0") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0bfiz2w3817a1bgfqkyvpsj7ng8q507y92rhgq5qz3hw3g886vnc") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.6.0 (c (n "mediaflow") (v "0.6.0") (d (list (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.6.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3.0.1") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1rdnfj4al7fv02yn5yvsi07vcjvdimchsqa8150v6kgj53rf0gsl") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.6.1 (c (n "mediaflow") (v "0.6.1") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mediaflow_core") (r "^0.6.1") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.6.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0z3zfj60l0fkabaq29gq6fczl2ih4b06sdy8rprmz4g5lvd9mr9b") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.6.2 (c (n "mediaflow") (v "0.6.2") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mediaflow_core") (r "^0.6.2") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.6.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0ilrr70dnjwyn6xcgpldph10g2gyr806g098f06rsbjxm5hg2x7z") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.7.0 (c (n "mediaflow") (v "0.7.0") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mediaflow_core") (r "^0.7.0") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1brkdzq9hgin7s7grnfjxkswc0ap1z3919calq3d17q22rgv3c3s") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.8.0 (c (n "mediaflow") (v "0.8.0") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mediaflow_core") (r "^0.8.0") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0rmhz10ycj7cfff3vh7rrr9k27ffa52n9vk9xb9ydb5psgzshb0p") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

(define-public crate-mediaflow-0.9.0 (c (n "mediaflow") (v "0.9.0") (d (list (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "configparser") (r "^3") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "http-serde") (r "^1.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mediaflow_core") (r "^0.9.0") (d #t) (k 0)) (d (n "mediaflow_derive") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "json"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-aux") (r "^3") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "rt-multi-thread"))) (d #t) (k 0)) (d (n "url") (r "^2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1nacwsdawvmyf48y1p80fsknklf5ra6mys53n2svmrbfh1kvzk5l") (f (quote (("cli" "clap" "env_logger" "configparser" "dirs"))))))

