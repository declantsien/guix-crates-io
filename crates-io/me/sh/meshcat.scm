(define-module (crates-io me sh meshcat) #:use-module (crates-io))

(define-public crate-meshcat-0.1.1 (c (n "meshcat") (v "0.1.1") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize" "rand"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "rmpv") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.14.0") (d #t) (k 0)) (d (n "urdf-rs") (r "^0.6.9") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10.0") (d #t) (k 0)))) (h "0yq81al8qz6xq7y3wf6pfxrn2wjqv5hslxq47ax9n88zp8iq159l")))

(define-public crate-meshcat-0.1.2 (c (n "meshcat") (v "0.1.2") (d (list (d (n "base64") (r "^0.21.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize" "rand"))) (d #t) (k 0)) (d (n "rmp") (r "^0.8.11") (d #t) (k 0)) (d (n "rmp-serde") (r "^1.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.15.1") (d #t) (k 0)) (d (n "urdf-rs") (r "^0.7.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("serde" "v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "zmq") (r "^0.10.0") (d #t) (k 0)))) (h "0iv39kqpl0ydfw9jdrj4xiqf8ycj4rwika5ycd970njk5czam3pg")))

