(define-module (crates-io me mo memory-cache-rust) #:use-module (crates-io))

(define-public crate-memory-cache-rust-0.1.0-alpha (c (n "memory-cache-rust") (v "0.1.0-alpha") (d (list (d (n "aes-prng") (r "^0.2.0") (d #t) (k 0)) (d (n "ahash") (r "^0.7.6") (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "concache") (r "^0.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.2") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "libmath") (r "^0.2.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.12.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 2)) (d (n "seahash") (r "^4.1.0") (d #t) (k 0)) (d (n "seize") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syncpool") (r "^0.1.6") (d #t) (k 0)) (d (n "timer") (r "^0.2.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (f (quote ("v4" "fast-rng" "macro-diagnostics"))) (d #t) (k 0)) (d (n "xxhash-rust") (r "^0.8.5") (f (quote ("xxh3" "const_xxh3"))) (d #t) (k 0)))) (h "058x87kvxgmh3wlaz2sy162vb4wi90wd0nvk8bpvrgdypas16dp7")))

