(define-module (crates-io wg pu wgpu-native) #:use-module (crates-io))

(define-public crate-wgpu-native-0.1.0 (c (n "wgpu-native") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.0") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "06im06k4d343c0kngky7sjfjqx0z3p0cjh23zfyk9cyfa89h9247") (f (quote (("remote") ("default"))))))

(define-public crate-wgpu-native-0.2.0 (c (n "wgpu-native") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "1l82q9r8mnfydyzd690sl4wfays7ymm08h0pcn5pqz2lhnd3i9is") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.1 (c (n "wgpu-native") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "1razwwjhabhgndmp7lzz8m0jfqbk437iwh6251jv86mbf4505rxm") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.2 (c (n "wgpu-native") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "11cxgimzhc8m8y5gyvrl1wx7vc99vmvrlp6h4xdpq2air3d6cyz1") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.3 (c (n "wgpu-native") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0kncmdrpb79d1blffrdhldv3vyd9rc147qcwy01b1br06lpd1lrc") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.4 (c (n "wgpu-native") (v "0.2.4") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "04p3jgmp8p5k2lchzwrlrfha7ws6gjz1jn7k5443dlax1qz83dzw") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.5 (c (n "wgpu-native") (v "0.2.5") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "05jvzjnjsf6bf3amzigjf2ikwrcmg926lhh4acdzy55dfsa6q3xy") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.6 (c (n "wgpu-native") (v "0.2.6") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0wpn0dwjip06pgrsl4vcwfixqmg956s726fg7ncfvbn20wk3vwmg") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.2.7 (c (n "wgpu-native") (v "0.2.7") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.1.1") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0k1980z8dvjq5br29qpkv7ykqpc03m1gfqsfa6ly1yay0h3cps05") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "winit" "gfx-backend-empty/winit") ("default"))))))

(define-public crate-wgpu-native-0.3.0 (c (n "wgpu-native") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.3.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.3.0") (f (quote ("x11"))) (o #t) (d #t) (k 0)) (d (n "hal") (r "^0.3.0") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.4") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "1a1r04wq6ppjylz59hbcfxmha26dv5g0l2lljrs2z01v4vz39snb") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local") ("glutin" "gfx-backend-gl/glutin") ("default"))))))

(define-public crate-wgpu-native-0.3.1 (c (n "wgpu-native") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.3.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.3.0") (f (quote ("x11"))) (o #t) (d #t) (k 0)) (d (n "hal") (r "^0.3.0") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.4") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "17z9p3kwg3jz16rhs660hr0f6kq513ww5pc27hr74cjdasbff5bh") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local") ("glutin" "gfx-backend-gl/glutin") ("default"))))))

(define-public crate-wgpu-native-0.3.2 (c (n "wgpu-native") (v "0.3.2") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.3.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.3.0") (f (quote ("x11"))) (o #t) (d #t) (k 0)) (d (n "hal") (r "^0.3.0") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.4") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "1yka8d2qgl5y3m1m892f7b5j2k904q7mw8jbs4v0d90zfav8qb8w") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local") ("glutin" "gfx-backend-gl/glutin") ("default")))) (y #t)))

(define-public crate-wgpu-native-0.3.3 (c (n "wgpu-native") (v "0.3.3") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-dx12") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-empty") (r "^0.3.0") (d #t) (k 0)) (d (n "gfx-backend-gl") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "gfx-backend-vulkan") (r "^0.3.0") (f (quote ("x11"))) (o #t) (d #t) (k 0)) (d (n "hal") (r "^0.3.0") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.4") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "0ww3vi51mb7bw9vqgvvhcnwc84jzikr5ijk8bbx1q8wx03ckmnrb") (f (quote (("remote" "serde") ("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local") ("glutin" "gfx-backend-gl/glutin") ("default"))))))

(define-public crate-wgpu-native-0.4.0 (c (n "wgpu-native") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-dx12") (r "^0.4.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-empty") (r "^0.4") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (f (quote ("x11"))) (d #t) (t "cfg(all(unix, not(target_os = \"ios\"), not(target_os = \"macos\")))") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.5") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "0k6843bjp42lq8yw0k3qml27a6l03pf9mgx2gprnjz2cccnsg50d") (f (quote (("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "lazy_static" "raw-window-handle") ("default"))))))

(define-public crate-wgpu-native-0.4.1 (c (n "wgpu-native") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-dx12") (r "^0.4.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-empty") (r "^0.4") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (f (quote ("x11"))) (d #t) (t "cfg(all(unix, not(target_os = \"ios\"), not(target_os = \"macos\")))") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.5") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "18iny4j7v27s3by9b46pkns8mck7l2y12wm5xvs6y6pnrvhvzzkg") (f (quote (("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "lazy_static" "raw-window-handle") ("default"))))))

(define-public crate-wgpu-native-0.4.2 (c (n "wgpu-native") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-dx12") (r "^0.4.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-empty") (r "^0.4") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (f (quote ("x11"))) (d #t) (t "cfg(all(unix, not(target_os = \"ios\"), not(target_os = \"macos\")))") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.5") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "1rax3hyyr6r9z5bpzhk11yczywmss4fi6ky3gmrjgayg2dnflb98") (f (quote (("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "lazy_static" "raw-window-handle") ("default"))))))

(define-public crate-wgpu-native-0.4.3 (c (n "wgpu-native") (v "0.4.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "gfx-backend-dx11") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-dx12") (r "^0.4.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-empty") (r "^0.4") (d #t) (k 0)) (d (n "gfx-backend-metal") (r "^0.4") (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (o #t) (d #t) (t "cfg(any(target_os = \"ios\", target_os = \"macos\"))") (k 0)) (d (n "gfx-backend-vulkan") (r "^0.4") (f (quote ("x11"))) (d #t) (t "cfg(all(unix, not(target_os = \"ios\"), not(target_os = \"macos\")))") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rendy-descriptor") (r "^0.5") (d #t) (k 0)) (d (n "rendy-memory") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "vec_map") (r "^0.8") (d #t) (k 0)))) (h "0f1lx3b1wnixm1x13mq11j59qs6r11a5xz674j5a5j8wmw426r16") (f (quote (("metal-auto-capture" "gfx-backend-metal/auto-capture") ("local" "lazy_static" "raw-window-handle") ("default"))))))

(define-public crate-wgpu-native-0.5.0 (c (n "wgpu-native") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "core") (r "^0.5") (d #t) (k 0) (p "wgpu-core")) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "wgt") (r "^0.5") (d #t) (k 0) (p "wgpu-types")))) (h "00vl01wp6hhi6nn7xr0qfhyahi6nlq71wrr4kkb1y1vx6ld0b98r") (f (quote (("vulkan-portability" "core/gfx-backend-vulkan") ("default"))))))

(define-public crate-wgpu-native-0.5.1 (c (n "wgpu-native") (v "0.5.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "core") (r "^0.5") (d #t) (k 0) (p "wgpu-core")) (d (n "lazy_static") (r "^1.1") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "wgt") (r "^0.5") (d #t) (k 0) (p "wgpu-types")))) (h "0cm42s1jc4g2bavg1gkz6kphbzadwdl15nsj2f8xf587if1wj6jz") (f (quote (("vulkan-portability" "core/gfx-backend-vulkan") ("default"))))))

