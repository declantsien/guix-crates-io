(define-module (crates-io ip fs ipfs-embed-net) #:use-module (crates-io))

(define-public crate-ipfs-embed-net-0.6.0 (c (n "ipfs-embed-net") (v "0.6.0") (d (list (d (n "async-std") (r "^1.6.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.6.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.28.1") (f (quote ("identify" "kad" "mdns-async-std" "mplex" "noise" "ping" "tcp-async-std" "yamux"))) (k 0)) (d (n "libp2p-bitswap") (r "^0.7.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "names") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0invx9wp4gcma4awrl2li8w2is8w1ha3c4ysjnirx26h1f6kj8in")))

(define-public crate-ipfs-embed-net-0.7.0 (c (n "ipfs-embed-net") (v "0.7.0") (d (list (d (n "async-std") (r "^1.6.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.7.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.28.1") (f (quote ("identify" "kad" "mdns-async-std" "mplex" "noise" "ping" "tcp-async-std" "yamux"))) (k 0)) (d (n "libp2p-bitswap") (r "^0.7.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "names") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0chhzmpyafv5bm0kc98q0j3fd71xnzhp9065f01073hykyi4wblc")))

(define-public crate-ipfs-embed-net-0.8.0 (c (n "ipfs-embed-net") (v "0.8.0") (d (list (d (n "async-std") (r "^1.6.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.8.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.28.1") (f (quote ("dns" "identify" "kad" "mdns-async-std" "ping" "mplex" "noise" "tcp-async-std" "yamux"))) (k 0)) (d (n "libp2p-bitswap") (r "^0.8.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "names") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0zif4bnhcsd5yaw6sygfaf4i0ir1dj470gw3q3iwb6rpc6ay5nqn")))

(define-public crate-ipfs-embed-net-0.9.0 (c (n "ipfs-embed-net") (v "0.9.0") (d (list (d (n "async-std") (r "^1.7.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.9.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.30.1") (f (quote ("dns" "identify" "kad" "mdns-async-std" "ping" "mplex" "noise" "tcp-async-std" "yamux"))) (k 0)) (d (n "libp2p-bitswap") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "names") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "08hsa9ip42k72bbp9x4g9hgv5gb4m50gs4qv029b64klhkdyag1i")))

(define-public crate-ipfs-embed-net-0.10.0 (c (n "ipfs-embed-net") (v "0.10.0") (d (list (d (n "async-std") (r "^1.8.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.10.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.32.2") (f (quote ("dns" "identify" "kad" "mdns" "ping" "mplex" "noise" "tcp-async-std" "yamux"))) (k 0)) (d (n "libp2p-bitswap") (r "^0.10.0") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "names") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "14r8133x1wx5hxpz24lj96ickds3gzva5s63lq7mznj35sdaqqvg")))

(define-public crate-ipfs-embed-net-0.11.0 (c (n "ipfs-embed-net") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-global-executor") (r "^2.0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.12") (d #t) (k 0)) (d (n "ip_network") (r "^0.3.4") (d #t) (k 0)) (d (n "libipld") (r "^0.10.0") (k 0)) (d (n "libp2p") (r "^0.34.0") (f (quote ("dns" "gossipsub" "identify" "kad" "mdns" "ping" "mplex" "noise" "tcp-async-io" "yamux"))) (k 0)) (d (n "libp2p-bitswap") (r "^0.12.0") (d #t) (k 0)) (d (n "names") (r "^0.11.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "tracing") (r "^0.1.23") (d #t) (k 0)))) (h "1mk1a0j0h2jm9z69hpxcrrdf6yl1xqziv7j2cab6zd9w6fdp6b8j")))

