(define-module (crates-io ip fs ipfs-embed-db) #:use-module (crates-io))

(define-public crate-ipfs-embed-db-0.6.0 (c (n "ipfs-embed-db") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.6.0") (d #t) (k 0)) (d (n "libipld") (r "^0.5.1") (k 0)) (d (n "libipld") (r "^0.5.1") (f (quote ("dag-cbor"))) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "parity-db") (r "^0.1.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^1.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sled") (r "^0.34.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)) (d (n "tiny-cid") (r "^0.2.5") (f (quote ("scale-codec"))) (d #t) (k 0)))) (h "1n16fydanmqark261gj474m1qv30c8ksnvngmpfjsxvm8xlz57sd")))

(define-public crate-ipfs-embed-db-0.7.0 (c (n "ipfs-embed-db") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-std") (r "^1.6.4") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.4") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.7.0") (d #t) (k 0)) (d (n "libipld") (r "^0.6.0") (k 0)) (d (n "libipld") (r "^0.6.0") (f (quote ("dag-cbor"))) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "sled") (r "^0.34.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "0lyy9nrd8cxnpvq8bhaawwdqvdqyijr4pyakj3nkribinha3k5qv")))

(define-public crate-ipfs-embed-db-0.8.0 (c (n "ipfs-embed-db") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.6.5") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.5") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.8.0") (d #t) (k 0)) (d (n "libipld") (r "^0.7.1") (k 0)) (d (n "libipld") (r "^0.7.1") (f (quote ("dag-cbor"))) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "sled") (r "^0.34.4") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.20") (d #t) (k 0)))) (h "1b0li96kq48xwqka8ll6lb5y9bph5ixraihyb0w7iw40lb5ghgn3")))

(define-public crate-ipfs-embed-db-0.9.0 (c (n "ipfs-embed-db") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.7.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cuckoofilter") (r "^0.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8.2") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "ipfs-embed-core") (r "^0.9.0") (d #t) (k 0)) (d (n "libipld") (r "^0.7.1") (k 0)) (d (n "libipld") (r "^0.7.1") (f (quote ("dag-cbor"))) (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "sled") (r "^0.34.6") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)))) (h "1px64wzrdjmd803jss1b6qnzfgfcndg1pcf8qq83j5lwxmpzxva2")))

(define-public crate-ipfs-embed-db-0.10.0 (c (n "ipfs-embed-db") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.35") (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "async-std") (r "^1.8.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.8") (d #t) (k 0)) (d (n "inferno") (r "^0.10.2") (d #t) (k 2)) (d (n "ipfs-embed-core") (r "^0.10.0") (d #t) (k 0)) (d (n "libipld") (r "^0.8.2") (k 0)) (d (n "libipld") (r "^0.8.2") (f (quote ("dag-cbor" "derive"))) (k 2)) (d (n "multihash") (r "^0.13.2") (f (quote ("blake3"))) (k 2)) (d (n "sled") (r "^0.34.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.22") (d #t) (k 0)) (d (n "tracing") (r "^0.1.22") (d #t) (k 0)) (d (n "tracing-flame") (r "^0.1.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("chrono" "env-filter" "fmt"))) (d #t) (k 2)))) (h "0ps34zky0xwwzkrg6xmchmijg18v59rd11wx25883ixwhhnj5gkb")))

