(define-module (crates-io ip st ipstack) #:use-module (crates-io))

(define-public crate-ipstack-0.0.0 (c (n "ipstack") (v "0.0.0") (h "1gaa03c52rjdplg345c7g7w1fxdqinay0wv1rxhvfqyyyk7w13jz")))

(define-public crate-ipstack-0.0.1 (c (n "ipstack") (v "0.0.1") (d (list (d (n "etherparse") (r "^0.13") (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tun") (r "^0.6") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "udp-stream") (r "^0.0.9") (k 2)) (d (n "wintun") (r "^0.3") (t "cfg(target_os = \"windows\")") (k 2)))) (h "004p3bbdsdaych23d587jd2r9x1gcyx26fnqycrrqp9xy8km2wd7")))

(define-public crate-ipstack-0.0.2 (c (n "ipstack") (v "0.0.2") (d (list (d (n "etherparse") (r "^0.13") (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "udp-stream") (r "^0.0.9") (k 2)) (d (n "wintun") (r "^0.3") (t "cfg(target_os = \"windows\")") (k 2)))) (h "09p0fvjcpcmfxnq7s97z8pn0p34jh6h28rf3blkc4a21gir8ygq3")))

(define-public crate-ipstack-0.0.3 (c (n "ipstack") (v "0.0.3") (d (list (d (n "clap") (r "^4.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "etherparse") (r "^0.13") (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (o #t) (k 0)) (d (n "tun2") (r "^0.6") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)))) (h "1nprvklncvgk3vyqmj5r574j0b7f7brgrklc2fx5d2nzi54z1h8m") (f (quote (("log" "tracing/log") ("default"))))))

(define-public crate-ipstack-0.0.4 (c (n "ipstack") (v "0.0.4") (d (list (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (o #t) (k 0)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.2") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "1vlghaqxpykjz6csw21lkpvc0syls2rzaii3p2swachcq87is53i") (f (quote (("log" "tracing/log") ("default"))))))

(define-public crate-ipstack-0.0.5 (c (n "ipstack") (v "0.0.5") (d (list (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "std_rng"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (o #t) (k 0)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.2") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "06kzinf9kl0dw9ch9ndkzfiijmx17g8cfxqc6f2gwdik797n85xq") (f (quote (("log" "tracing/log") ("default"))))))

(define-public crate-ipstack-0.0.6 (c (n "ipstack") (v "0.0.6") (d (list (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "std_rng"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.36") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.2") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "0rb7v1b2bcn82j9bi648hmxs5ik8h4ivp91qaw27qjd6c9dcm80c")))

(define-public crate-ipstack-0.0.7 (c (n "ipstack") (v "0.0.7") (d (list (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "std_rng"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.2") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "17klpas93fg1qidgq38sxb7bhqplnzq77qi71p2nh5jgxv4qza5s")))

(define-public crate-ipstack-0.0.8 (c (n "ipstack") (v "0.0.8") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "std_rng"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.2") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "1a5a48skv1lp4vbj79bhf8kvrzfnarjchrgg0c4pd6pr2w1lr24w")))

(define-public crate-ipstack-0.0.9 (c (n "ipstack") (v "0.0.9") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "std_rng"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.3") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "1iwqlr6mh658l82dvk9yz3l0vnj24l1ijyymg6rn1whdfl4nw2sd")))

(define-public crate-ipstack-0.0.10 (c (n "ipstack") (v "0.0.10") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "etherparse") (r "^0.14") (f (quote ("std"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8.5") (f (quote ("std" "std_rng"))) (k 0)) (d (n "thiserror") (r "^1.0") (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("sync" "rt" "time" "io-util" "macros"))) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("rt-multi-thread"))) (k 2)) (d (n "tun") (r "^0.6.1") (f (quote ("async"))) (t "cfg(any(target_os = \"linux\", target_os = \"macos\"))") (k 2)) (d (n "tun2") (r "^1.3") (f (quote ("async"))) (d #t) (k 2)) (d (n "udp-stream") (r "^0.0") (k 2)) (d (n "wintun") (r "^0.4") (t "cfg(target_os = \"windows\")") (k 2)))) (h "0gdwqzy23xzivngm9j5xkznk14w0bqwraix45vaqa68y17dw3kp2")))

