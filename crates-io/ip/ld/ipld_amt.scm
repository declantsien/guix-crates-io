(define-module (crates-io ip ld ipld_amt) #:use-module (crates-io))

(define-public crate-ipld_amt-0.1.0 (c (n "ipld_amt") (v "0.1.0") (d (list (d (n "ahash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (f (quote ("cbor"))) (d #t) (k 0) (p "forest_cid")) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "db") (r "^0.1") (d #t) (k 0) (p "forest_db")) (d (n "encoding") (r "^0.2") (d #t) (k 0) (p "forest_encoding")) (d (n "ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "lazycell") (r "^1.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "07scl3za1ch32f5nblkb4xdpwfm319jpf3mv7s5zma3gkrhx6czw") (f (quote (("go-interop" "ahash"))))))

(define-public crate-ipld_amt-0.2.0 (c (n "ipld_amt") (v "0.2.0") (d (list (d (n "ahash") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (f (quote ("cbor"))) (d #t) (k 0) (p "forest_cid")) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "db") (r "^0.1") (d #t) (k 0) (p "forest_db")) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "ipld_blockstore") (r "^0.1") (f (quote ("tracking"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "14c3bfmyzzh49xb32qvn9d207884a5qiq8ymv5q6zf0da1dz1ysa") (f (quote (("go-interop" "ahash")))) (y #t)))

(define-public crate-ipld_amt-0.2.1 (c (n "ipld_amt") (v "0.2.1") (d (list (d (n "ahash") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (f (quote ("cbor"))) (d #t) (k 0) (p "forest_cid")) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "db") (r "^0.1") (d #t) (k 0) (p "forest_db")) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "ipld_blockstore") (r "^0.1") (f (quote ("tracking"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0iix5kii2cvhlb66njv6nc3v3kvh0gv8ggip04d86bwkcygjzsfx") (f (quote (("go-interop" "ahash"))))))

(define-public crate-ipld_amt-1.0.0 (c (n "ipld_amt") (v "1.0.0") (d (list (d (n "ahash") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cid") (r "^0.3") (f (quote ("cbor"))) (d #t) (k 0) (p "forest_cid")) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "db") (r "^0.1") (d #t) (k 0) (p "forest_db")) (d (n "encoding") (r "^0.2.1") (d #t) (k 0) (p "forest_encoding")) (d (n "ipld_blockstore") (r "^0.1") (d #t) (k 0)) (d (n "ipld_blockstore") (r "^0.1") (f (quote ("tracking"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0dllzb8vhf01bwciadlpm54bv08afn28gxkn8a44bblz6vxa52r7") (f (quote (("go-interop" "ahash"))))))

