(define-module (crates-io bm ap bmap-parser) #:use-module (crates-io))

(define-public crate-bmap-parser-0.1.0 (c (n "bmap-parser") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "quick-xml") (r "^0.26.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("asm"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0083ga0rm3rja34s1ah56z7id2jqmfpk3xmy4kflrqvgclpqmpjp")))

(define-public crate-bmap-parser-0.2.0 (c (n "bmap-parser") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.40") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "digest") (r "^0.10.5") (d #t) (k 0)) (d (n "flate2") (r "^1.0.20") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (f (quote ("asm"))) (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)))) (h "0900lzxb0rycxwb3bqwrm21b393z80h8wbq7hbla7y1kj8v4i7sd")))

