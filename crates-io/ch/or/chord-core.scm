(define-module (crates-io ch or chord-core) #:use-module (crates-io))

(define-public crate-chord-core-0.1.0 (c (n "chord-core") (v "0.1.0") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("std" "attributes" "tokio1"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1xildkl4s7lpkrln60h5jds7361fpq19ygacig816q96a10mxzvx") (y #t)))

(define-public crate-chord-core-0.1.13 (c (n "chord-core") (v "0.1.13") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("std" "attributes" "tokio1"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "12kr583l1sz2pvyiy0y96prnqmr16716b9h3l7rf7h7p4xv5ckc1")))

(define-public crate-chord-core-0.1.14 (c (n "chord-core") (v "0.1.14") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("std" "attributes" "tokio1"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0gd0fwzmmzwm8a4nyyqybc3ddjvvyhkfx3kdcn4r4h7zilccs56c")))

(define-public crate-chord-core-0.1.15 (c (n "chord-core") (v "0.1.15") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("std" "attributes" "tokio1"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nph6zbxgiz5gl0yxzy041s5dqw027wvbg57zsrx7dc8n2j4hr7n")))

(define-public crate-chord-core-0.1.16 (c (n "chord-core") (v "0.1.16") (d (list (d (n "async-std") (r "^1.9.0") (f (quote ("std" "attributes" "tokio1"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13794hk77qbv5v9q0gxb12hv5rc5izxikqfwizchn769lgvrhvp3")))

(define-public crate-chord-core-0.1.18 (c (n "chord-core") (v "0.1.18") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (t "cfg(linux)") (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("fs" "time" "tracing" "process" "macros" "rt" "io-util"))) (d #t) (k 0)))) (h "1f0vhbda4w3l9jraibgrdxaw0gdczfpzjp0h0ca3jpwin3qh66g5")))

(define-public crate-chord-core-0.1.19 (c (n "chord-core") (v "0.1.19") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (t "cfg(linux)") (k 0)) (d (n "regex") (r "^1.4.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("fs" "time" "tracing" "process" "macros" "rt" "io-util"))) (d #t) (k 0)))) (h "0xzagh9b97cbzm27l539xj84r2yiap3g8d3wgcbmw392nil60bxb")))

(define-public crate-chord-core-0.1.20 (c (n "chord-core") (v "0.1.20") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (t "cfg(linux)") (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "time" "tracing" "process" "macros" "rt" "io-util" "sync"))) (d #t) (k 0)))) (h "1g6zayx1f2iwrid74jzl8kmd2ykgcncvx50x5d7hc0qngvp1iayb")))

(define-public crate-chord-core-0.1.21 (c (n "chord-core") (v "0.1.21") (d (list (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (t "cfg(linux)") (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.21") (f (quote ("fs" "time" "tracing" "process" "macros" "rt" "io-util" "sync"))) (d #t) (k 0)))) (h "0lwkwf4dsjfkm07iz9r1ix10aixsll4kbddxvmzkc6xkdzb3cd22")))

