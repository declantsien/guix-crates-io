(define-module (crates-io ch ew chewdata) #:use-module (crates-io))

(define-public crate-chewdata-0.0.1 (c (n "chewdata") (v "0.0.1") (h "1a9vhqvgmcs0wvh7wjrf71ml7qcw6p6941gjfxbixk1ani86p6q3")))

(define-public crate-chewdata-1.1.0 (c (n "chewdata") (v "1.1.0") (d (list (d (n "async-std") (r "^1.10") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^0.1") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "multiqueue2") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("max_level_trace" "release_max_level_info"))) (d #t) (k 0)) (d (n "slog-async") (r "^2.7") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "middleware-logger" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "15wgifh0wybx9r3plz9z362b8sw2vbmdc2v8bnh7l4ra139gc503") (f (quote (("use_yaml_document" "serde_yaml") ("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_yaml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector"))))))

(define-public crate-chewdata-1.2.0 (c (n "chewdata") (v "1.2.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "multiqueue2") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.7") (d #t) (k 0)) (d (n "slog-async") (r "^2.7") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "middleware-logger" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1zqvz6a5q1aln1cff7klvxqf87h3zcqp6r2a66cm6gbx8xmh5bcf") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "slog/max_level_trace" "slog/release_max_level_info"))))))

(define-public crate-chewdata-1.3.0 (c (n "chewdata") (v "1.3.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "multiqueue2") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.7") (d #t) (k 0)) (d (n "slog-async") (r "^2.7") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "middleware-logger" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0r6pak99nabhfpirlsyx5a5z26xicviawhlwrqq1895yhgyj2r6g") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "slog/max_level_trace" "slog/release_max_level_info"))))))

(define-public crate-chewdata-1.3.1 (c (n "chewdata") (v "1.3.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "multiqueue2") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "slog") (r "^2.7") (d #t) (k 0)) (d (n "slog-async") (r "^2.7") (d #t) (k 0)) (d (n "slog-envlogger") (r "^2.2") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "middleware-logger" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "11zh3gs8c6b0bgx8zf70a0ppp7g0fii64ji7kvxmx390svvv8pm2") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "slog/max_level_trace" "slog/release_max_level_info"))))))

(define-public crate-chewdata-1.4.0 (c (n "chewdata") (v "1.4.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "multiqueue2") (r "^0.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.10") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1k3fmgl6faid0vgjwi4nzwwf7jq4x860qdpxh516xw2j0pppk6qy") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.5.0 (c (n "chewdata") (v "1.5.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0yqhv54jq9aridw5cwiy0d5v1gq3xamhjy7iilw3628ql8x8j3n6") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.5.1 (c (n "chewdata") (v "1.5.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "11r7mf972rqkmwzzp7si9w79s79wmrnn4ia98rdvmkw79rvb3fnc") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.6.0 (c (n "chewdata") (v "1.6.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.1") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "15ld84xj8f6dqnajfs96cjwv3cb4aw9mmsr8qswp7y9g4lmmf8jm") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.7.0 (c (n "chewdata") (v "1.7.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0hkxmfs1adhpsr2y8y7ad5a0r9ypkn5gbfalcjmrs2z48cndwsxi") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.8.0 (c (n "chewdata") (v "1.8.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1qs5zsz90w11i3y49fkp7rik1y2n20xpr060bslnyl8wp5ix5igd") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.8.1 (c (n "chewdata") (v "1.8.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0hyi27d0dix4hra431lx8gs5inx2fhdlybs4cazwbnq4xy531sj7") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.8.2 (c (n "chewdata") (v "1.8.2") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0l4jig8s8xf86fvz7790hs2jyqx1r7f8bmlnpsxnhcgjmxhhc397") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.8.3 (c (n "chewdata") (v "1.8.3") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0a6c7xidaz739f0w94abilbhrbf156i0rfw6xpvv1pxngkl9yzlj") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.8.4 (c (n "chewdata") (v "1.8.4") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^0.1") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1n7gp8kisr0yssqdl42m68c2nn9cddncmf6sgw57ihvsq36gv12x") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.0-beta.1 (c (n "chewdata") (v "1.9.0-beta.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1sg04kyq3f6z8fjzvr8fkyvf2p1pbfbqvp64sxlbhv3882670i7m") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.0-beta.2 (c (n "chewdata") (v "1.9.0-beta.2") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0a4my0j1fij5rliwzd78g4jh4fxmbfmqcfckjr6qvynjdia3h1c8") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.0-alpha.1 (c (n "chewdata") (v "1.9.0-alpha.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0yp7ws14dszj4qfgc5hgfkayfkvyjwx2gy6j099r44kp5qyi17j0") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.0-beta.3 (c (n "chewdata") (v "1.9.0-beta.3") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0zl8sl6d2rsjs8lrg1asa87vgvk4lrz5acbhfm3fjq7bfriamixs") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.0 (c (n "chewdata") (v "1.9.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0fs5nf94xslfhx12db18llxc6bqc3f93wfylp3wqngxbx0am1bxa") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.1-beta.1 (c (n "chewdata") (v "1.9.1-beta.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0lg4c70jvq3wj041k8m0xcppkaqyhcd56qcp105sxhlp1inknfnw") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.9.1 (c (n "chewdata") (v "1.9.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "11pcsvxpg4vcjzpdpyvmdjfim0asyv3nbidpbhcq6wa1qvgnbrpc") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.10.0-beta.1 (c (n "chewdata") (v "1.10.0-beta.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1lwka31jxzzgwv2nlmj53znl1qyk1qjrf8s4wc9d3j5fbs8q4f70") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.10.0-beta.2 (c (n "chewdata") (v "1.10.0-beta.2") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^0.1") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "15qwngl8dayy4b1ddiyc6f0dbinpcqgn68vv83s9w4vr38gapspb") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.10.0-beta.3 (c (n "chewdata") (v "1.10.0-beta.3") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1xk81wm0wq51nqzsnnq5l18s66rh47q9gg2iprg0w1q8bdaicf7f") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.10.0 (c (n "chewdata") (v "1.10.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^2.33") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^1.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "17srcq7jva68lvscbmxryviwyimx98fy910qbwlxjkxqa02w0ijy") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.10.0-beta.4 (c (n "chewdata") (v "1.10.0-beta.4") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.1") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "030vbcgjbx8548x159nblgms0gvx4vkskk3wsxj33z5q5mfdvy85") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.10.0-beta.5 (c (n "chewdata") (v "1.10.0-beta.5") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.1") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "047g55j5jkdsabd42m8hffh2c23p4dp4ccazvlzcmbckm3bpksyp") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.11.0-beta.1 (c (n "chewdata") (v "1.11.0-beta.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.1") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0khvcrmf2fi6xry1srd1v2wfp33piv74bbm25wrqcy1p5iprwqaz") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.11.0 (c (n "chewdata") (v "1.11.0") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.1") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "11w1l2z84mq2mx2rxiqhlhxr83fdyixwy8lq2y6j5xyv8d5c0w2n") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.11.1-beta.1 (c (n "chewdata") (v "1.11.1-beta.1") (d (list (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^7.2") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.1") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1w3pqhwlvks3jj2c6r16f9n2gqjc24ihl98122x6srkdylf5q5rr") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.12.0-beta.1 (c (n "chewdata") (v "1.12.0-beta.1") (d (list (d (n "arrow") (r "^11.1.0") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.10") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.0") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.4") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.0") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.1") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^11.1.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "rusoto_s3") (r "^0.47") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "surf_bucket_select") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tera") (r "^1.12") (d #t) (k 0)) (d (n "tokio") (r "^1.12") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0g9j458b9w3ac76lmiwjibwd2h2k91cm9m7q6lkqczmx9b7ir7q7") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_parquet_document" "parquet" "byteorder" "arrow") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "rusoto_core" "rusoto_s3" "surf_bucket_select" "surf" "tokio") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_parquet_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.12.0 (c (n "chewdata") (v "1.12.0") (d (list (d (n "arrow") (r "^14.0") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.1") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.4") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^14.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.15") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (d #t) (k 0)))) (h "0n3dki96szqiga3gc7ibw46vc25n7vhx263grzla2m3dwj9g32vg") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_parquet_document" "parquet" "byteorder" "arrow") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "aws-sdk-s3" "aws-config" "tokio" "async-compat") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_parquet_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.12.1-beta.1 (c (n "chewdata") (v "1.12.1-beta.1") (d (list (d (n "arrow") (r "^14.0") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6.1") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.11") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "clap") (r "^3.1") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.4") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^14.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.15") (d #t) (k 0)) (d (n "tokio") (r "^1.18") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (d #t) (k 0)))) (h "1idifafvkbyd61g13gabkvjwbw0kw3ynlq4mrc9sy6y1p18f2i82") (f (quote (("use_xml_document" "jxon") ("use_toml_document" "toml") ("use_parquet_document" "parquet" "byteorder" "arrow") ("use_mongodb_connector" "mongodb") ("use_curl_connector" "surf" "jsonwebtoken" "http-types") ("use_csv_document" "csv") ("use_bucket_connector" "aws-sdk-s3" "aws-config" "tokio" "async-compat") ("default" "use_xml_document" "use_csv_document" "use_toml_document" "use_parquet_document" "use_bucket_connector" "use_curl_connector" "use_mongodb_connector" "tracing/max_level_trace" "tracing/release_max_level_info"))))))

(define-public crate-chewdata-1.13.0-beta.1 (c (n "chewdata") (v "1.13.0-beta.1") (d (list (d (n "arrow") (r "^17.0") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("all" "runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.16") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (d #t) (k 0)))) (h "11c6dpd8iax5ya16kizpqpq13hj4wb2a1yi5mvvkk4snk5s2pzaw") (f (quote (("xml" "jxon") ("psql" "sqlx/postgres" "sqlx/json") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "tokio" "async-compat") ("bearer") ("basic")))) (y #t) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.12.1 (c (n "chewdata") (v "1.12.1") (d (list (d (n "arrow") (r "^17.0") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("all" "runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.16") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (d #t) (k 0)))) (h "18mb7i1r0k6s3gag59wrvb336gg8b061bycprnrgwwmwdicym3i8") (f (quote (("xml" "jxon") ("psql" "sqlx/postgres" "sqlx/json") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "tokio" "async-compat") ("bearer") ("basic")))) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.12.2-beta.1 (c (n "chewdata") (v "1.12.2-beta.1") (d (list (d (n "arrow") (r "^17.0") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("all" "runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.16") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (d #t) (k 0)))) (h "086kv8gvvk7xqi5y3bqsb0091q8gsd6x9mnsygsg87a017xlznyv") (f (quote (("xml" "jxon") ("psql" "sqlx/postgres" "sqlx/json") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "tokio" "async-compat") ("bearer") ("basic")))) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.12.2 (c (n "chewdata") (v "1.12.2") (d (list (d (n "arrow") (r "^17.0") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.6") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("stable"))) (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "env_applier") (r "^0.1") (d #t) (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (d #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (d #t) (k 0)) (d (n "json_value_remove") (r "^1.0") (d #t) (k 0)) (d (n "json_value_resolve") (r "^1.0") (d #t) (k 0)) (d (n "json_value_search") (r "^1.0") (d #t) (k 0)) (d (n "jsonwebtoken") (r "^8.1") (o #t) (d #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "mongodb") (r "^2.2") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("all" "runtime-async-std-native-tls"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.16") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "env-filter"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (d #t) (k 0)))) (h "05q9051sbslbsz2m0labc853yfb4an0zx0w5x13vx3s8a6iwcx5c") (f (quote (("xml" "jxon") ("psql" "sqlx/postgres" "sqlx/json") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "tokio" "async-compat") ("bearer") ("basic")))) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.13.0-beta.2 (c (n "chewdata") (v "1.13.0-beta.2") (d (list (d (n "arrow") (r "^17.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.7") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.51.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.21") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "clap") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("rayon" "plotters" "cargo_bench_support" "async_std" "async_futures"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.3") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-rustls" "all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.17") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter"))) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0qy540ayc49x28222576jngwjv0m7gfh75nkv77b4j9rkvrx7wc8") (f (quote (("xml" "jxon") ("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "async-compat") ("bearer") ("basic")))) (y #t) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.13.0-beta.3 (c (n "chewdata") (v "1.13.0-beta.3") (d (list (d (n "arrow") (r "^17.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.7") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.22.0") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.20.0") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("rayon" "plotters" "cargo_bench_support" "async_std" "async_futures"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.3") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-rustls" "all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.17") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter"))) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1576hd89fmikyz6i592pfjqiqz37gnx98vbhxy7lw14sj2b31dgf") (f (quote (("xml" "jxon") ("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "async-compat") ("bearer") ("basic")))) (y #t) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.13.0 (c (n "chewdata") (v "1.13.0") (d (list (d (n "arrow") (r "^17.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.7") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.22.0") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.20.0") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("rayon" "plotters" "cargo_bench_support" "async_std" "async_futures"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.3") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-rustls" "all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.17") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1fwmqi0kjy0m7h7zynqqh66q75m9yflaqq63w28ji1lds0rvcl47") (f (quote (("xml" "jxon") ("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "async-compat") ("bearer") ("basic")))) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.14.0-beta.1 (c (n "chewdata") (v "1.14.0-beta.1") (d (list (d (n "arrow") (r "^17.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.7") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.22.0") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.20.0") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("rayon" "plotters" "cargo_bench_support" "async_std" "async_futures"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.3") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("trace" "rt-async-std"))) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-async-std"))) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-rustls" "all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.17") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1nbd13g3jri6y79yangx9hl67k03x68maqd660hghrqql0lxqwp1") (f (quote (("xml" "jxon") ("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "async-compat") ("bearer") ("basic") ("apm")))) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.14.0 (c (n "chewdata") (v "1.14.0") (d (list (d (n "arrow") (r "^17.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.7") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.22.0") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.20.0") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("rayon" "plotters" "cargo_bench_support" "async_std" "async_futures"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.3") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("trace" "rt-async-std"))) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-async-std"))) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-rustls" "all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.17") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "01f29cc8haa164gk60q2ydfw7jlj3ibxw144wl4bi4p5xi35yqjk") (f (quote (("xml" "jxon") ("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "async-compat") ("bearer") ("basic") ("apm")))) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.15.0-beta.1 (c (n "chewdata") (v "1.15.0-beta.1") (d (list (d (n "arrow") (r "^17.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.7") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.52.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.22.0") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.20.0") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.2") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("rayon" "plotters" "cargo_bench_support" "async_std" "async_futures"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.5") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.3") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.18") (f (quote ("trace" "rt-async-std"))) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.17") (f (quote ("rt-async-std"))) (k 0)) (d (n "parquet") (r "^17.0") (f (quote ("cli" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.6") (f (quote ("runtime-async-std-rustls" "all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.17") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.5") (f (quote ("preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-futures") (r "^0.2") (f (quote ("std" "std-future"))) (k 0)) (d (n "tracing-opentelemetry") (r "^0.18") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.2") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0k0y4h72nafql22qxdbsjzanrk6kik38c6dy528kcksqy474ybm4") (f (quote (("xml" "jxon") ("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("curl" "surf" "jsonwebtoken" "http-types") ("bucket" "aws-sdk-s3" "aws-config" "async-compat") ("bearer") ("basic") ("apm")))) (y #t) (s 2) (e (quote (("toml" "dep:toml") ("parquet" "dep:parquet" "byteorder" "arrow" "bytes") ("mongodb" "dep:mongodb") ("csv" "dep:csv"))))))

(define-public crate-chewdata-1.15.0-beta.2 (c (n "chewdata") (v "1.15.0-beta.2") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display" "preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1pjgw6k4darv4s9zy7ygg9604y3pk3gg8bfryksjmfm3pbgn2yii") (f (quote (("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("bearer") ("basic")))) (s 2) (e (quote (("xml" "dep:jxon") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.15.0-beta.3 (c (n "chewdata") (v "1.15.0-beta.3") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display" "preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1pnyxns0ksip2wngll7hqqysb6h9dhy2plrpl0xyhkh00iz603dz") (f (quote (("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("bearer") ("basic")))) (s 2) (e (quote (("xml" "dep:jxon") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.15.0-beta.4 (c (n "chewdata") (v "1.15.0-beta.4") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display" "preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1wlqbghqgrn1xqbpsl475z8qpp2lxx05aqcsw3dl5vbbd4ffsn0p") (f (quote (("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("bearer") ("basic")))) (s 2) (e (quote (("xml" "dep:jxon") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.15.0 (c (n "chewdata") (v "1.15.0") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("std" "attributes"))) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display" "preserve_order"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1gnpm6f0l082ryqafamfhpydbg152zxc9hmk1cacwc8ks8rx6jnf") (f (quote (("psql" "sqlx" "sqlx/postgres") ("jwt") ("default" "xml" "csv" "toml" "parquet" "bucket" "curl" "basic" "jwt" "bearer" "mongodb" "psql" "tracing/max_level_trace" "tracing/release_max_level_info") ("bearer") ("basic")))) (s 2) (e (quote (("xml" "dep:jxon") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.15.1-beta.1 (c (n "chewdata") (v "1.15.1-beta.1") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "jxon") (r "^0.9") (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1cxnjksjmdzag8sr5r4ji2ka5jgva6r6bf77xi8pc99n4zcx6n3s") (f (quote (("psql" "sqlx" "sqlx/postgres") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:jxon") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.16.0-beta.1 (c (n "chewdata") (v "1.16.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "09y18b4s34g1n8zm96025gm83gm38lllz7w6fyanphagx8pissrh") (f (quote (("psql" "sqlx" "sqlx/postgres") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.16.0 (c (n "chewdata") (v "1.16.0") (d (list (d (n "arrow-integration-test") (r "^45.0") (o #t) (k 0)) (d (n "arrow-json") (r "^45.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^45.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "17srcw25rc967s8n6h18abibfwgfjwfbpgn69mchg4lhvwzyygw4") (f (quote (("psql" "sqlx" "sqlx/postgres") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.17.0-beta.1 (c (n "chewdata") (v "1.17.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^46.0") (o #t) (k 0)) (d (n "arrow-json") (r "^46.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^46.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "09f3blgxi93hvn46ldvhkjybg9997db0j75n6ffnvnjr67mb4ajl") (f (quote (("psql" "sqlx" "sqlx/postgres") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.17.0 (c (n "chewdata") (v "1.17.0") (d (list (d (n "arrow-integration-test") (r "^46.0") (o #t) (k 0)) (d (n "arrow-json") (r "^46.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^46.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "100mbvbj9zw6hl936rdynqwn690hg4micjx31mjrzlrm6gxwmhgc") (f (quote (("psql" "sqlx" "sqlx/postgres") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.17.1-beta.1 (c (n "chewdata") (v "1.17.1-beta.1") (d (list (d (n "arrow-integration-test") (r "^46.0") (o #t) (k 0)) (d (n "arrow-json") (r "^46.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.1") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^46.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std" "preserve_order"))) (k 0)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "09py4rczzxn04vsvqk2vsgml820xl71h2fam6cszj3z0dsx20nzl") (f (quote (("psql" "sqlx" "sqlx/postgres") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.18.0-beta.1 (c (n "chewdata") (v "1.18.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^46.0") (o #t) (k 0)) (d (n "arrow-json") (r "^46.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^1.2") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^46.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0k8l7x0akmrsrgm8a64fbcxcs8489r6vhzynxndrfcd01c659pza") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-1.18.0-beta.2 (c (n "chewdata") (v "1.18.0-beta.2") (d (list (d (n "arrow-integration-test") (r "^46.0") (o #t) (k 0)) (d (n "arrow-json") (r "^46.0") (o #t) (k 0)) (d (n "async-channel") (r "^1.9") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^0.55") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.28") (f (quote ("rustls" "rt-tokio"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^8.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace" "rt-async-std"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.18") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^46.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding" "middleware-logger"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.7") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1m908slpw4ik85lhdgqbcpdkny3k3yzzpc1np58fjjqys8x53y58") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.0.0-beta.1 (c (n "chewdata") (v "2.0.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0hbvbv39rvs4288hn884hzcw650na7ijpn4a5a9rbaai89nvbl62") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.0.0 (c (n "chewdata") (v "2.0.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "19kpnbkyfqb6wq11sim6s8b52qcs3ncs6yzbiqkbsg6ihi3sx636") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.1.0-beta.1 (c (n "chewdata") (v "2.1.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0x3k81rmhm6yrifclfz0ika32g9hzf4hk13zwf6kb6vm3cjl63iw") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.1.0 (c (n "chewdata") (v "2.1.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1az496r8ayr137x7vhdfnv0shjgld0rkzghj52i0wk10lw4mnr7l") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.2.0-beta.1 (c (n "chewdata") (v "2.2.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1x5ax0fbd0izl8nl3zs0by4rgvdbciznhpds5slv9mkd8wyshvfk") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.2.0 (c (n "chewdata") (v "2.2.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1knwvlr7x5dbwhzqcn9dhfb8z7hpvxvw03fk1xxdnzrraj730xbb") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.2.1 (c (n "chewdata") (v "2.2.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1kv5rqbnhn75iqdnqfb3kkrbpipw63s2gwlpy3w3bhnqwn3xsn24") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.3.0-beta.1 (c (n "chewdata") (v "2.3.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0drx386qhnd99h05s9zmcn05186z7lk2yfks930p8qfkvbwrmib1") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.3.0 (c (n "chewdata") (v "2.3.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "11c688vl03swmbnnbcsf91pnxlxyfwdw8af8pnqyxh58a3jc2ghk") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.4.0-beta.1 (c (n "chewdata") (v "2.4.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "121gbm88c64l85rx46kl31klhl3skn1bnzarf597ipd30mqc84q7") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.4.0 (c (n "chewdata") (v "2.4.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1mzp61fmhqqpcwdr2qj5vpdvpgdawr62sq256fwdfan0c74qvy9i") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.5.0-beta.1 (c (n "chewdata") (v "2.5.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1rw93byfpvxc019hmgdl0ylkapzwpzsqd3jdmyx00nx94sfp7jzk") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.5.0 (c (n "chewdata") (v "2.5.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0w2n8nwqsdr7i0na6kd689fd8mhc0gpl65632fwsacsz6sw66q8m") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.5.1-beta.1 (c (n "chewdata") (v "2.5.1-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1wgi9vx8315ws1rfcj4bf1k3n11s9cqqf8mblgfvwr8gmqn3iyl5") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.5.1 (c (n "chewdata") (v "2.5.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0xpq0m0g7p3q7ps05kamkga301jfzc3ijzz2rc02lfxvdm2jgm46") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.6.0-beta.1 (c (n "chewdata") (v "2.6.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1jkwwgjgb26j8c2vmsxnrng49w9ipmsspx0x1nm6kgb1q5kyp4zc") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.6.0-beta.2 (c (n "chewdata") (v "2.6.0-beta.2") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1bzrjclf4cd3akzf3xada99p31fm50dc7gvhmmyg9abia7z577ay") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.6.0 (c (n "chewdata") (v "2.6.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0lfbp0gwc81khmb8rmv9mmf3y9m4gr24g8zq5q2chhixk5n0fk9p") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.7.0-beta.1 (c (n "chewdata") (v "2.7.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "10bww9cns5xw4m6sbyx55qna0gz619mnzb0z6wxbbrfva2knh6h0") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.7.0 (c (n "chewdata") (v "2.7.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0kpmawbiyy6sy705bwhdbaby8y1ymlbim09qpbirp2nppadn0i8p") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.8.0-beta.1 (c (n "chewdata") (v "2.8.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0006vhg4g9pqygyqqm4pxpr4xlgdizizj8q20imw1bzyp7si7ybk") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.8.0 (c (n "chewdata") (v "2.8.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "045wkxli8zqsv4gsrd34vbrigz9sqvss5z36spg5zq6qgx9jiffi") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.9.0-beta.1 (c (n "chewdata") (v "2.9.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1vg3cd79dkx7sr6pbbv85ww22x17pbca2cgc0sqm56056d4iljqc") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.8.1 (c (n "chewdata") (v "2.8.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0qwq5jyv2hiqvyz83valz708l4rf98sax899k09idf36f3ckr62j") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.9.0 (c (n "chewdata") (v "2.9.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sha3") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1i9haqw27zflj6qchpi474mv9lnwng3dq0gvx1qza5r7lmh1skkc") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.10.0-beta.1 (c (n "chewdata") (v "2.10.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sha3") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0d64833x14rskjaf5qycn2sgdrm3i791kcdxn2yphbn189wm08hg") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.10.0 (c (n "chewdata") (v "2.10.0") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sha3") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "1j8s4aah9qvg6cly2aw0l845ibdn96vpsl0qzd21j0jyrnwxhr00") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.10.1-beta.1 (c (n "chewdata") (v "2.10.1-beta.1") (d (list (d (n "arrow-integration-test") (r "^49.0") (o #t) (k 0)) (d (n "arrow-json") (r "^49.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.1") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.4") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.1") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.1") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.6") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.1") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.6") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^49.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sha3") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.4") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "03qqdchap1nnqvg0002l0jcb6f7kz0bapcazd8wpfywmkldd3cg3") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.11.0-beta.1 (c (n "chewdata") (v "2.11.0-beta.1") (d (list (d (n "arrow-integration-test") (r "^51.0") (o #t) (k 0)) (d (n "arrow-json") (r "^51.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.3") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.6") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.3") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.2") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.9") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.8") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^51.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sha3") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "0gnfdqw8vv7lx8q1161mg7fqbxn9m82ph9r8y4jj42hr356872ra") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

(define-public crate-chewdata-2.11.0 (c (n "chewdata") (v "2.11.0") (d (list (d (n "arrow-integration-test") (r "^51.0") (o #t) (k 0)) (d (n "arrow-json") (r "^51.0") (o #t) (k 0)) (d (n "async-channel") (r "^2.3") (k 0)) (d (n "async-compat") (r "^0.2") (o #t) (k 0)) (d (n "async-std") (r "^1.12") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (k 0)) (d (n "async-trait") (r "^0.1") (k 0)) (d (n "aws-config") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.5") (f (quote ("sigv4a" "rustls" "rt-tokio" "behavior-version-latest"))) (o #t) (k 0)) (d (n "base16ct") (r "^0.2") (f (quote ("alloc"))) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("std"))) (k 0)) (d (n "byteorder") (r "^1.5") (f (quote ("std"))) (o #t) (k 0)) (d (n "bytes") (r "^1.6") (f (quote ("std"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std" "clock"))) (k 0)) (d (n "clap") (r "^4.5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("default" "stable"))) (k 2)) (d (n "csv") (r "^1.3") (o #t) (k 0)) (d (n "deser-hjson") (r "^2.2") (k 0)) (d (n "env_applier") (r "^0.1") (k 0)) (d (n "fake") (r "^2.9") (f (quote ("random_color"))) (k 0)) (d (n "fs2") (r "^0.4") (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std" "async-await" "executor"))) (k 0)) (d (n "glob") (r "^0.3") (k 0)) (d (n "http-cache-surf") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "http-types") (r "^2.12") (o #t) (k 0)) (d (n "json_value_merge") (r "^2.0") (k 0)) (d (n "json_value_remove") (r "^1.0") (k 0)) (d (n "json_value_resolve") (r "^1.0") (k 0)) (d (n "json_value_search") (r "^1.0") (k 0)) (d (n "jsonwebtoken") (r "^9.3") (f (quote ("use_pem"))) (o #t) (k 0)) (d (n "mime") (r "^0.3") (k 0)) (d (n "mongodb") (r "^2.8") (f (quote ("async-std-runtime"))) (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.20") (f (quote ("rt-async-std"))) (o #t) (k 0)) (d (n "parquet") (r "^51.0") (f (quote ("cli" "arrow" "flate2" "brotli" "lz4" "zstd" "snap"))) (o #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde-with-expand-env") (r "^1.1") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "serde_yaml") (r "^0.9") (k 0)) (d (n "sha2") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sha3") (r "^0.10") (f (quote ("oid" "std"))) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-async-std-rustls" "_unstable-all-types"))) (o #t) (k 0)) (d (n "surf") (r "^2.3") (f (quote ("h1-client-rustls" "encoding"))) (o #t) (k 0)) (d (n "tera") (r "^1.19") (f (quote ("builtins"))) (k 0)) (d (n "toml") (r "^0.8") (f (quote ("parse" "display"))) (o #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("std" "attributes"))) (k 0)) (d (n "tracing-appender") (r "^0.2") (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (f (quote ("tracing-log"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "fmt" "env-filter" "tracing-log" "json" "ansi"))) (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("std" "v4"))) (d #t) (k 0)) (d (n "version") (r "^3.0") (k 0)))) (h "11mx3bqvdhka7f5hfrgb27bs3vr8mbkqhr8dqw1g3kf07sb3w56a") (f (quote (("psql" "sqlx" "sqlx/postgres") ("ordered" "serde_json/preserve_order") ("default" "tracing/max_level_trace" "tracing/release_max_level_info")))) (s 2) (e (quote (("xml" "dep:quick-xml") ("toml" "dep:toml") ("parquet" "dep:parquet" "dep:byteorder" "dep:arrow-json" "dep:bytes" "dep:arrow-integration-test") ("mongodb" "dep:mongodb") ("curl" "dep:surf" "dep:jsonwebtoken" "dep:http-types" "dep:http-cache-surf") ("csv" "dep:csv") ("bucket" "dep:aws-sdk-s3" "dep:aws-config" "dep:async-compat") ("apm" "dep:opentelemetry" "dep:opentelemetry-jaeger"))))))

