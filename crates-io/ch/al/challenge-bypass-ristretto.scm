(define-module (crates-io ch al challenge-bypass-ristretto) #:use-module (crates-io))

(define-public crate-challenge-bypass-ristretto-0.1.0-pre.1 (c (n "challenge-bypass-ristretto") (v "0.1.0-pre.1") (d (list (d (n "base64") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (d #t) (k 0)) (d (n "merlin") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "0rprs3pxp4ky0xyd2w3bg91agsmr68n9ikwxvs0pcnkix4yx5spm") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "alloc" "curve25519-dalek/std") ("nightly" "clear_on_drop/nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-challenge-bypass-ristretto-0.1.0-pre.2 (c (n "challenge-bypass-ristretto") (v "0.1.0-pre.2") (d (list (d (n "base64") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (d #t) (k 0)) (d (n "merlin") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "0g6hh5472yd7zdwcl3sl5d51zfm9ypba21rdyiyc7wn3r0g6fih6") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "alloc" "curve25519-dalek/std") ("nightly" "clear_on_drop/nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-challenge-bypass-ristretto-1.0.0-pre.0 (c (n "challenge-bypass-ristretto") (v "1.0.0-pre.0") (d (list (d (n "base64") (r "^0.9.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.9.3") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2.3") (d #t) (k 0)) (d (n "crypto-mac") (r "^0.7") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^1") (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "hmac") (r "^0.7") (d #t) (k 0)) (d (n "merlin") (r "^1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6.0") (k 0)) (d (n "rand_chacha") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "sha2") (r "^0.8") (d #t) (k 2)))) (h "0drzwr06x4czlx6r8ahkrqn8iss8cz8vsx2jada0ar78nxy0z29q") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "alloc" "curve25519-dalek/std") ("nightly" "clear_on_drop/nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-challenge-bypass-ristretto-1.0.0 (c (n "challenge-bypass-ristretto") (v "1.0.0") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-mac") (r "^0.10") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hmac") (r "^0.10") (d #t) (k 0)) (d (n "merlin") (r "^2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2.1") (k 0)))) (h "1iwjdz1g9qja8aqvzmzyk8daqiz4i1iva5414hdgn0f33hnd8fd4") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "alloc" "curve25519-dalek/std" "subtle/std") ("serde_base64" "serde" "base64") ("nightly" "clear_on_drop/nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-challenge-bypass-ristretto-1.0.1 (c (n "challenge-bypass-ristretto") (v "1.0.1") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-mac") (r "^0.10") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hmac") (r "^0.10") (d #t) (k 0)) (d (n "merlin") (r "^2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "146g14mnli3qibyqgw41cc4yhi0gwlspxm5m090knsg2kx9qnr8j") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "alloc" "curve25519-dalek/std" "subtle/std") ("serde_base64" "serde" "base64") ("nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("alloc" "curve25519-dalek/alloc"))))))

(define-public crate-challenge-bypass-ristretto-1.0.2 (c (n "challenge-bypass-ristretto") (v "1.0.2") (d (list (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "criterion") (r "^0.3.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-mac") (r "^0.10") (d #t) (k 0)) (d (n "curve25519-dalek") (r "^3") (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "hmac") (r "^0.10") (d #t) (k 0)) (d (n "merlin") (r "^2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rand_core") (r "^0.5.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.0") (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (d #t) (k 2)) (d (n "subtle") (r "^2.2") (k 0)) (d (n "zeroize") (r "^1.3") (d #t) (k 0)))) (h "1np0zhwx4542sgij1q4amv1fhmvn514sbqibznvxga6zcf0i21wz") (f (quote (("u64_backend" "curve25519-dalek/u64_backend") ("u32_backend" "curve25519-dalek/u32_backend") ("std" "alloc" "curve25519-dalek/std" "subtle/std") ("serde_base64" "serde" "base64") ("nightly" "curve25519-dalek/nightly") ("default" "std" "u64_backend") ("avx2_backend" "curve25519-dalek/avx2_backend") ("alloc" "curve25519-dalek/alloc"))))))

