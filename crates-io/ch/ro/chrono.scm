(define-module (crates-io ch ro chrono) #:use-module (crates-io))

(define-public crate-chrono-0.1.0 (c (n "chrono") (v "0.1.0") (d (list (d (n "num") (r "^0.0.3") (d #t) (k 0)) (d (n "time") (r "^0.0.2") (d #t) (k 0)))) (h "123fp57422kaxlc7249vdggzg6fphwcghm2qfpsdrlk5w291ai9d") (y #t)))

(define-public crate-chrono-0.1.1 (c (n "chrono") (v "0.1.1") (d (list (d (n "num") (r "^0.0.4") (d #t) (k 0)) (d (n "time") (r "^0.0.3") (d #t) (k 0)))) (h "0k0x5bxfx0q6imjisfdq8ky49162kgryghzia9wivvm0byyria6p") (y #t)))

(define-public crate-chrono-0.1.2 (c (n "chrono") (v "0.1.2") (d (list (d (n "time") (r "^0.0.3") (d #t) (k 0)))) (h "1planvvhm3m2fbly493zka5mml29s9vcvwf9nyvsrqs5smhdzqsb") (y #t)))

(define-public crate-chrono-0.1.3 (c (n "chrono") (v "0.1.3") (d (list (d (n "time") (r "^0.1.0") (d #t) (k 0)))) (h "03ky0544cg5bg5q8bqx5f81mf8labc0i60v82c356c95chi8ncm7") (y #t)))

(define-public crate-chrono-0.1.4 (c (n "chrono") (v "0.1.4") (d (list (d (n "time") (r "^0.1.1") (d #t) (k 0)))) (h "11cs18gy4m2pxkbfclwfslvk8isfh5ws2lphs0riikgl6071qbml") (y #t)))

(define-public crate-chrono-0.1.5 (c (n "chrono") (v "0.1.5") (d (list (d (n "time") (r "^0.1.3") (d #t) (k 0)))) (h "09q15lsx1412k6rfp15nqgp8nms20k2f1hwbsx1p7mc76jxwk7vq") (y #t)))

(define-public crate-chrono-0.1.6 (c (n "chrono") (v "0.1.6") (d (list (d (n "time") (r "^0.1.4") (d #t) (k 0)))) (h "07q29pf5l3gsd1vd482wp9nfa182i9pvnqyipc1c1dklydaa4pk9") (y #t)))

(define-public crate-chrono-0.1.7 (c (n "chrono") (v "0.1.7") (d (list (d (n "time") (r "^0.1.5") (d #t) (k 0)))) (h "01k1qw55i9w47s9b26s9dn5yv058648y35sa9zid2l2q15hxlzdr") (y #t)))

(define-public crate-chrono-0.1.8 (c (n "chrono") (v "0.1.8") (d (list (d (n "time") (r "^0.1.7") (d #t) (k 0)))) (h "0sjsvxj4y304ankq2ssc22hc5h8x8ba593hk0g6y9xz6r5znwi97") (y #t)))

(define-public crate-chrono-0.1.9 (c (n "chrono") (v "0.1.9") (d (list (d (n "time") (r "^0.1.9") (d #t) (k 0)))) (h "0s9knqcm32ga5gh9n9rbb99gk383is0vjy6sl1ka41mbs74nfzf6") (y #t)))

(define-public crate-chrono-0.1.10 (c (n "chrono") (v "0.1.10") (d (list (d (n "time") (r "^0.1.9") (d #t) (k 0)))) (h "1l7k4wvnacv32y26ky2bar40dkvyn8va9719x8wzr1mwqajjl01m") (y #t)))

(define-public crate-chrono-0.1.11 (c (n "chrono") (v "0.1.11") (d (list (d (n "time") (r "^0.1.10") (d #t) (k 0)))) (h "0lyvzy1z06rdb931prylayra5cr3aqg9qchs459xaqfcv2i4mry0") (y #t)))

(define-public crate-chrono-0.1.12 (c (n "chrono") (v "0.1.12") (d (list (d (n "time") (r "^0.1.11") (d #t) (k 0)))) (h "0q27hxwpjydgxcf38qgfmddgm8s6pagp5xaj04lsnlgmrbc790ka") (y #t)))

(define-public crate-chrono-0.1.13 (c (n "chrono") (v "0.1.13") (d (list (d (n "time") (r "^0.1.12") (d #t) (k 0)))) (h "0mbj3g0jmw0f23c4flmwx0y6qmzcpzqyzqln6v97inhp4w1bs2np") (y #t)))

(define-public crate-chrono-0.1.14 (c (n "chrono") (v "0.1.14") (d (list (d (n "time") (r "^0.1.12") (d #t) (k 0)))) (h "0jcw2g7zm5gp37p5lhb4d193k58mq2429zs3vd7b3hwq0gspbgw9") (y #t)))

(define-public crate-chrono-0.1.15 (c (n "chrono") (v "0.1.15") (d (list (d (n "time") (r "^0.1.14") (d #t) (k 0)))) (h "0wmi7fkdg7l82pai43kzyz50b45ks48lflrm3aifcb1khqiiga0a") (y #t)))

(define-public crate-chrono-0.1.16 (c (n "chrono") (v "0.1.16") (d (list (d (n "time") (r "^0.1.15") (d #t) (k 0)))) (h "0x3gb2znxybzhj7waiscx2929j7mh2lf3z5pvpc7czh8zx15nynv") (y #t)))

(define-public crate-chrono-0.1.17 (c (n "chrono") (v "0.1.17") (d (list (d (n "time") (r "^0.1.15") (d #t) (k 0)))) (h "0hx6f4n9bkgacsdrs8scmdq8j9d2z1dcw04lphcmq4bbpcf1hyd3") (y #t)))

(define-public crate-chrono-0.1.18 (c (n "chrono") (v "0.1.18") (d (list (d (n "time") (r "^0.1.16") (d #t) (k 0)))) (h "01m66l8wb1x0c5l8zrwa63mh68ci14clyznc0qg56qbaxz3y50pq") (y #t)))

(define-public crate-chrono-0.2.0 (c (n "chrono") (v "0.2.0") (d (list (d (n "time") (r "^0.1.17") (d #t) (k 0)))) (h "0iskfp5dcqf7nrx5jw5zbn82vswcxq5wx85ivcvjj8njj8iyd098")))

(define-public crate-chrono-0.2.1 (c (n "chrono") (v "0.2.1") (d (list (d (n "time") (r "^0.1.17") (d #t) (k 0)))) (h "13l1sn7bwx8m017pdgb5jgfz3r41rz1blzsldxwy42pciaxbavjs")))

(define-public crate-chrono-0.2.2 (c (n "chrono") (v "0.2.2") (d (list (d (n "time") (r "^0.1.19") (d #t) (k 0)))) (h "0qhb6bkws9p6zwvacgr0gnxryzyqkrd530h2v9bd0q93k0m4x9h3")))

(define-public crate-chrono-0.2.3 (c (n "chrono") (v "0.2.3") (d (list (d (n "time") (r "^0.1.19") (d #t) (k 0)))) (h "18z70n3mwh852acd66p9znq7jl1navqdb0z7bry9k29j0zwvqmqj")))

(define-public crate-chrono-0.2.4 (c (n "chrono") (v "0.2.4") (d (list (d (n "time") (r "^0.1.19") (d #t) (k 0)))) (h "0yz0kznjma1s6iy8g0gk90w8hcc80xg923r11s2mx6pnmlqwwq8g")))

(define-public crate-chrono-0.2.5 (c (n "chrono") (v "0.2.5") (d (list (d (n "time") (r "^0.1.19") (d #t) (k 0)))) (h "11dbkbjbskcwn796gjywshicda8fhwq3g749znjgas7m052qzxsy")))

(define-public crate-chrono-0.2.6 (c (n "chrono") (v "0.2.6") (d (list (d (n "time") (r "^0.1.20") (d #t) (k 0)))) (h "1bnv7yxk1vnfhp5df2rqm1cjkj95ndi6nhn83w3iypfjniff2py1")))

(define-public crate-chrono-0.2.7 (c (n "chrono") (v "0.2.7") (d (list (d (n "time") (r "^0.1.21") (d #t) (k 0)))) (h "0dp14xlavh6pq3p2sskijihlnzhhmh6nvqglqpssvx1s9j859dd6")))

(define-public crate-chrono-0.2.8 (c (n "chrono") (v "0.2.8") (d (list (d (n "time") (r "^0.1.22") (d #t) (k 0)))) (h "0y655rbzq6y8ig56razfaxh55xyzy29wjc4hccasjyv772vy0c6n")))

(define-public crate-chrono-0.2.9 (c (n "chrono") (v "0.2.9") (d (list (d (n "time") (r "*") (d #t) (k 0)))) (h "0qjv3hhh6w775hiiw5b916vw7l5hkggkj4g8qiq4igv03dj1666c")))

(define-public crate-chrono-0.2.10 (c (n "chrono") (v "0.2.10") (d (list (d (n "time") (r "*") (d #t) (k 0)))) (h "0fhafhnnipnygywdwzlw3hdin5v0n416a0yk35whap0wjvbpyd17")))

(define-public crate-chrono-0.2.11 (c (n "chrono") (v "0.2.11") (d (list (d (n "time") (r "*") (d #t) (k 0)))) (h "0497r0gxjnjak5v8ik2h384xh4sfdy3rrkvifpzgizr5nm4w8g0l")))

(define-public crate-chrono-0.2.12 (c (n "chrono") (v "0.2.12") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "03ck0rvmgs7skwqvbxrp5r8f065vqbm5lqw3d2i5xm34wk1phjm2")))

(define-public crate-chrono-0.2.13 (c (n "chrono") (v "0.2.13") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "105n2w56q4jvzd17mcqkm38yyipw1s35grqkryb5yz2j4lid0shj")))

(define-public crate-chrono-0.2.14 (c (n "chrono") (v "0.2.14") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0gzj79dlbp97x9cx8pv9cygxrkr3q1pjvfrn7v50kakhj0fivig6")))

(define-public crate-chrono-0.2.15 (c (n "chrono") (v "0.2.15") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "0pw4nfknp6aqc4zwnfh7fvchmw1p2hnx6sayqd1gakj9gba22dwm")))

(define-public crate-chrono-0.2.16 (c (n "chrono") (v "0.2.16") (d (list (d (n "num") (r "*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "time") (r "*") (d #t) (k 0)))) (h "07q1dpmzc2z23md8g73b9n1xk9kzj91jb68hh5ssz3ddjwdj7lhy")))

(define-public crate-chrono-0.2.17 (c (n "chrono") (v "0.2.17") (d (list (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.6.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "03hshk11qsdfqb8wxp8aj4w5hr1y6z7idsr1pxdwhrinqdmlrkfr")))

(define-public crate-chrono-0.2.18 (c (n "chrono") (v "0.2.18") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.6.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0f2hqwyfirv68n43yd8gz7vkh9z0rmpmk31mxn75yj8b31dsmv1w")))

(define-public crate-chrono-0.2.19 (c (n "chrono") (v "0.2.19") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.6.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1ivl9dd9lljhlqayf950lczd8ml6cm57x8xlvr62dh6wrik36882")))

(define-public crate-chrono-0.2.20 (c (n "chrono") (v "0.2.20") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.7.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1v2dx716jzvryig8qb6005h6j5z94hb9d40cd7pr4x5w82sdfyck")))

(define-public crate-chrono-0.2.21 (c (n "chrono") (v "0.2.21") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.7.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "05r8hzhr9bzbndjh8gy7jhmah01w8r8hx7zii8jl8v5wh5f5sdbi")))

(define-public crate-chrono-0.2.22 (c (n "chrono") (v "0.2.22") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.7.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "15nkpij0gpa9an160aijjvid9219v58s1lim7ij0gfxl5iwvc557")))

(define-public crate-chrono-0.2.23 (c (n "chrono") (v "0.2.23") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^0.7.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0xbl11k6cs8pnjyb9px5gnbw0sf52fx5rxrzkj3ykjvxf8jcsg5k")))

(define-public crate-chrono-0.2.24 (c (n "chrono") (v "0.2.24") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "< 0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">= 0.7.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "01b9957m4g5j1z29yh3bxpyzdniwwg369r0f2xd7lshl4vhdqj9y")))

(define-public crate-chrono-0.2.25 (c (n "chrono") (v "0.2.25") (d (list (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "< 0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">= 0.7.0") (d #t) (k 2)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "004wcl3ipliz2dqa316s71qv4rgan5lhx7y4awmmrs97gk6zf4wj")))

(define-public crate-chrono-0.3.0 (c (n "chrono") (v "0.3.0") (d (list (d (n "bincode") (r "^1.0.0-alpha1") (f (quote ("serde"))) (k 2)) (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "serde_json") (r ">= 0.9.0") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (d #t) (k 0)))) (h "0vnyd789radszanqx1bbhyaxlxwz5s5a8rsrqbwnpfswszbhp2qm")))

(define-public crate-chrono-0.3.1 (c (n "chrono") (v "0.3.1") (d (list (d (n "bincode") (r "^0.7.0") (f (quote ("serde"))) (k 2)) (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (d #t) (k 0)))) (h "0mph54jczyv83am0bb7pxikx1z9iyg6mw8vchckzda6jdzl3n4nr") (y #t)))

(define-public crate-chrono-0.4.0 (c (n "chrono") (v "0.4.0") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num") (r "^0.1") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (d #t) (k 0)))) (h "1a9gd1hbr051hsqjr2296kis4ywmwygn1754vgnhm2xhnbhfn83w")))

(define-public crate-chrono-0.4.1 (c (n "chrono") (v "0.4.1") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (d #t) (k 0)))) (h "0wyqr6cr1l96h2lx8jgrznz7d2lki1vjxf3pimzlw9jc59l60pxs")))

(define-public crate-chrono-0.4.2 (c (n "chrono") (v "0.4.2") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "1rn08hwcyqwv7cwhgsiriqva1q5bbdpqckw2kd7421dn5k4kdkhw") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.3 (c (n "chrono") (v "0.4.3") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "1cb40xzq35gm3z4rmd9vy7qi67580mrr22zg0py4cgx5spq94658") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.4 (c (n "chrono") (v "0.4.4") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "0dqahdqa83x63yndy2aq3k4ysgq9hdg9asmcag68lcihslswcqk9") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.5 (c (n "chrono") (v "0.4.5") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.36") (o #t) (d #t) (k 0)))) (h "1c1g3yc8ml2b426k9cir96kwy68sd35gdia3m9jcj7gnim98b3g4") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.6 (c (n "chrono") (v "0.4.6") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.39") (o #t) (d #t) (k 0)))) (h "0y1qcgnr7g9zgnmlzcrn31vn91x1vakpph9qgjnnzchw2a0ji4a5") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.7 (c (n "chrono") (v "0.4.7") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "libc") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.39") (o #t) (d #t) (k 0)))) (h "1glam3iqhshbamzgf0npn7hgghski92r31lm7gg8841hnxc1zn3p") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.8 (c (n "chrono") (v "0.4.8") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.39") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 2)))) (h "01zpxfa9baksvjbcxyckmj3l39s6vjdc09n7ppv0n42lr81rlhi7") (f (quote (("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.9 (c (n "chrono") (v "0.4.9") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "libc") (r "^0.2") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.39") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 2)))) (h "0s5xbn4im53169bnqbcr4qvnyn44frplvc0v7hcv10w5jrb30jg8") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("default" "clock") ("clock" "time"))))))

(define-public crate-chrono-0.4.10 (c (n "chrono") (v "0.4.10") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (k 2)) (d (n "time") (r "^0.1.39") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"emscripten\")))") (k 2)))) (h "00dw7k11hmkm7yhc1v9pi0lrk0n28k4r3rh9g9pk3bkb9m50p19i") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("std") ("default" "clock" "std") ("clock" "time" "std") ("bench" "std") ("alloc"))))))

(define-public crate-chrono-0.4.11 (c (n "chrono") (v "0.4.11") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.39") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)))) (h "1cmmxamkzzs36zncqjjr7qm7xkb6zyrkjslnlj3axdgqki84y2c0") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("std") ("default" "clock" "std") ("clock" "time" "std") ("alloc") ("__internal_bench"))))))

(define-public crate-chrono-0.4.12 (c (n "chrono") (v "0.4.12") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)))) (h "1i7h0f12jbcj80qg7pqcnyi2r2k8ncpcr5n2w1gqzxv4w69fgzph") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("std") ("default" "clock" "std") ("clock" "time" "std") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.13 (c (n "chrono") (v "0.4.13") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)))) (h "1dm0q1kmk2vq5djwhp1j9cm4aa38wr9vy1i1w19p2y0nj4188kf7") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("std") ("default" "clock" "std") ("clock" "time" "std") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.14 (c (n "chrono") (v "0.4.14") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)))) (h "11rapsv7zcsw67blmi72r5gkycvgc06hdg4cbhfdhczkdkhln6a1") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("default" "clock" "std") ("clock" "time" "std") ("alloc") ("__internal_bench") ("__doctest")))) (y #t)))

(define-public crate-chrono-0.4.15 (c (n "chrono") (v "0.4.15") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)))) (h "02rd31ch5n8n9zdx0hza05alffrd3zh9i9a65p16g1vxd7dp4bwl") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("default" "clock" "std") ("clock" "time" "std") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.16 (c (n "chrono") (v "0.4.16") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.69") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0hc0mhrcbcdd7x65yknwyqy16la1najsi4ydxlk2kbl8dpsgahlr") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("default" "clock" "std" "oldtime") ("clock" "libc" "std" "winapi") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.17 (c (n "chrono") (v "0.4.17") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.69") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "10dd0xr835bwrm3ns25ykc2d83pigwwpjxs0bz0hbzwhiamsq1bv") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("default" "clock" "std" "oldtime") ("clock" "libc" "std" "winapi") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.18 (c (n "chrono") (v "0.4.18") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.69") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0wjpipv40xfp40a9y0qcazc72m896hzsi96g18vk9rykggdzs8fh") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("default" "clock" "std" "oldtime") ("clock" "libc" "std" "winapi") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.19 (c (n "chrono") (v "0.4.19") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.69") (o #t) (d #t) (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0wyfl6c00vhfl562spnfcna3zkw8jqvcp652m9iskhl8j26dc2k7") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("default" "clock" "std" "oldtime") ("clock" "libc" "std" "winapi") ("alloc") ("__internal_bench") ("__doctest"))))))

(define-public crate-chrono-0.4.20-beta.1 (c (n "chrono") (v "0.4.20-beta.1") (d (list (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "06fdd8ywfi0s86dxhmd3kvz6mfmgmnzm4jmqn2knpkyddkz1pkwf") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime") ("clock" "std" "winapi") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.20-rc.1 (c (n "chrono") (v "0.4.20-rc.1") (d (list (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1kxqw7ycc1xcvwszgmi6h2gs7xrpp87v4dmiww5b6gh11bq2hrl5") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime") ("clock" "std" "winapi") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.20 (c (n "chrono") (v "0.4.20") (d (list (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1w3sy61i0vn0k2rsgy0m48djr3x7yq796v1g6sda1axr0j1289v1") (f (quote (("wasmbind") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime") ("clock" "std" "winapi") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.21 (c (n "chrono") (v "0.4.21") (d (list (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.41") (o #t) (d #t) (t "cfg(not(any(target_os = \"emscripten\", target_os = \"wasi\", target_os = \"solaris\")))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1sy879843w9hxkzv78yf78q878fcy0hxqdmp7b5y6m1q1hs5ywiz") (f (quote (("wasmbind") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime") ("clock" "std" "winapi" "iana-time-zone") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.22 (c (n "chrono") (v "0.4.22") (d (list (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.44") (f (quote ("fallback"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1w8ykn9gay819zdwrsz353px580x279xxnrlg6fsi8xa3yrx3m5z") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.23 (c (n "chrono") (v "0.4.23") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.44") (f (quote ("fallback"))) (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "07s1hnrw8zpmgf76fj5sx0dzxny5p1xs703p0li4n8h1xpcs7c0n") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.24 (c (n "chrono") (v "0.4.24") (d (list (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0fv7idr8c7vdb0xi32w45a7pafnyzk7m0bknfggj5pva0qcmjg2f") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone") ("alloc") ("__internal_bench" "criterion") ("__doctest"))))))

(define-public crate-chrono-0.4.25 (c (n "chrono") (v "0.4.25") (d (list (d (n "android-tzdata") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi" "sysinfoapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "00zvdvkvvnpbs2ncxfpbvrscdwwv3nvl2fiz2zlbrrd9gp9kgg7x") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone") ("alloc") ("__internal_bench" "criterion") ("__doctest")))) (r "1.56.0")))

(define-public crate-chrono-0.4.26 (c (n "chrono") (v "0.4.26") (d (list (d (n "android-tzdata") (r "^0.1.1") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "timezoneapi" "sysinfoapi"))) (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1icvzp2v88a5cwsygcnl1cf0jqzkncvrnmmxdmazca2v6mqpm0zc") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone") ("alloc") ("__internal_bench" "criterion") ("__doctest")))) (r "1.56.0")))

(define-public crate-chrono-0.4.27 (c (n "chrono") (v "0.4.27") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.51") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.48") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1y41i3i4ni6wbply70b1q38dvv6z0bhk12nbpq2clxb9j1r4qszm") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone" "android-tzdata") ("alloc") ("__internal_bench" "criterion") ("__doctest")))) (r "1.57.0")))

(define-public crate-chrono-0.4.28 (c (n "chrono") (v "0.4.28") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.51") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.48") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "03zybgrhna9jyraxvqyyhiq6yngjprsjc26qyvshixrj0vgj9vcm") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone" "android-tzdata") ("alloc") ("__internal_bench" "criterion") ("__doctest")))) (r "1.57.0")))

(define-public crate-chrono-0.4.29 (c (n "chrono") (v "0.4.29") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "time") (r "^0.1.43") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.51") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.48") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "00nbpiiikcdgaa6bw9pv1vwafn841clz2dvij31vg9a7pq9rszfq") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime" "time") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone" "android-tzdata") ("alloc") ("__internal_bench") ("__doctest")))) (r "1.57.0")))

(define-public crate-chrono-0.4.30 (c (n "chrono") (v "0.4.30") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.51") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.48") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0xz8bldv1kqb82ak3b54lv2animrzk3rkqciginbmpfvfdw4xzfy") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone" "android-tzdata") ("alloc") ("__internal_bench") ("__doctest")))) (r "1.57.0")))

(define-public crate-chrono-0.4.31 (c (n "chrono") (v "0.4.31") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.51") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.48") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0f6vg67pipm8cziad2yms6a639pssnvysk1m05dd9crymmdnhb3z") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales" "alloc") ("std") ("oldtime") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "std" "winapi" "iana-time-zone" "android-tzdata") ("alloc") ("__internal_bench")))) (r "1.57.0")))

(define-public crate-chrono-0.4.32 (c (n "chrono") (v "0.4.32") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.52") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0yns9hccrdcpga0brnjc7d0ggmnf97g3cvr48z4caix7swqyznj1") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (s 2) (e (quote (("rkyv-validation" "rkyv" "rkyv?/validation") ("rkyv-64" "rkyv" "rkyv?/size_64") ("rkyv-32" "rkyv" "rkyv?/size_32") ("rkyv-16" "rkyv" "rkyv?/size_16")))) (r "1.61.0")))

(define-public crate-chrono-0.4.33 (c (n "chrono") (v "0.4.33") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.52") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1szr180x4srkwvmzq5ahqnf3m7yjjllfmgp7k3hsrr556l76j4wz") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (s 2) (e (quote (("rkyv-validation" "rkyv?/validation") ("rkyv-64" "dep:rkyv" "rkyv?/size_64") ("rkyv-32" "dep:rkyv" "rkyv?/size_32") ("rkyv-16" "dep:rkyv" "rkyv?/size_16") ("rkyv" "dep:rkyv" "rkyv/size_32")))) (r "1.61.0")))

(define-public crate-chrono-0.4.34 (c (n "chrono") (v "0.4.34") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.52") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "12zk0ja924f55va2fs0qj34xaygq46fy92blmc7qkmcj9dj1bh2v") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (s 2) (e (quote (("rkyv-validation" "rkyv?/validation") ("rkyv-64" "dep:rkyv" "rkyv?/size_64") ("rkyv-32" "dep:rkyv" "rkyv?/size_32") ("rkyv-16" "dep:rkyv" "rkyv?/size_16") ("rkyv" "dep:rkyv" "rkyv/size_32")))) (r "1.61.0")))

(define-public crate-chrono-0.4.35 (c (n "chrono") (v "0.4.35") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.54") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "16k3caxzip1ql827pz5rj7aqfqy7yhpxyxzb5wqkj2mwvh1mkbwf") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (s 2) (e (quote (("rkyv-validation" "rkyv?/validation") ("rkyv-64" "dep:rkyv" "rkyv?/size_64") ("rkyv-32" "dep:rkyv" "rkyv?/size_32") ("rkyv-16" "dep:rkyv" "rkyv?/size_16") ("rkyv" "dep:rkyv" "rkyv/size_32")))) (r "1.61.0")))

(define-public crate-chrono-0.4.36 (c (n "chrono") (v "0.4.36") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.55") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "1g6sfxydrs1m5xwfjwkw42i8sqg9pl04i08yn2xq7rx9dw6z84rk") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (y #t) (s 2) (e (quote (("rkyv-validation" "rkyv?/validation") ("rkyv-64" "dep:rkyv" "rkyv?/size_64") ("rkyv-32" "dep:rkyv" "rkyv?/size_32") ("rkyv-16" "dep:rkyv" "rkyv?/size_16") ("rkyv" "dep:rkyv" "rkyv/size_32")))) (r "1.61.0")))

(define-public crate-chrono-0.4.37 (c (n "chrono") (v "0.4.37") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.55") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "0pks0pbhz84xg0xhcqh12f8qsh8dvmqih7skqyk1mih46pa083ca") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (s 2) (e (quote (("rkyv-validation" "rkyv?/validation") ("rkyv-64" "dep:rkyv" "rkyv?/size_64") ("rkyv-32" "dep:rkyv" "rkyv?/size_32") ("rkyv-16" "dep:rkyv" "rkyv?/size_16") ("rkyv" "dep:rkyv" "rkyv/size_32")))) (r "1.61.0")))

(define-public crate-chrono-0.4.38 (c (n "chrono") (v "0.4.38") (d (list (d (n "android-tzdata") (r "^0.1.1") (o #t) (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "arbitrary") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.0") (d #t) (k 2)) (d (n "iana-time-zone") (r "^0.1.45") (f (quote ("fallback"))) (o #t) (d #t) (t "cfg(unix)") (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pure-rust-locales") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.43") (o #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "windows-bindgen") (r "^0.56") (d #t) (t "cfg(windows)") (k 2)) (d (n "windows-targets") (r "^0.52") (o #t) (d #t) (t "cfg(windows)") (k 0)))) (h "009l8vc5p8750vn02z30mblg4pv2qhkbfizhfwmzc6vpy5nr67x2") (f (quote (("winapi" "windows-targets") ("wasmbind" "wasm-bindgen" "js-sys") ("unstable-locales" "pure-rust-locales") ("std" "alloc") ("oldtime") ("now" "std") ("libc") ("default" "clock" "std" "oldtime" "wasmbind") ("clock" "winapi" "iana-time-zone" "android-tzdata" "now") ("alloc") ("__internal_bench")))) (s 2) (e (quote (("rkyv-validation" "rkyv?/validation") ("rkyv-64" "dep:rkyv" "rkyv?/size_64") ("rkyv-32" "dep:rkyv" "rkyv?/size_32") ("rkyv-16" "dep:rkyv" "rkyv?/size_16") ("rkyv" "dep:rkyv" "rkyv/size_32")))) (r "1.61.0")))

