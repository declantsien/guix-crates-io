(define-module (crates-io ch ro chrono-wasi07) #:use-module (crates-io))

(define-public crate-chrono-wasi07-0.4.10 (c (n "chrono-wasi07") (v "0.4.10") (d (list (d (n "bincode") (r "^0.8.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (t "cfg(unix)") (k 0)) (d (n "libc") (r "^0.2.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "num-integer") (r "^0.1.36") (k 0)) (d (n "num-iter") (r "^0.1.35") (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "redox_syscall") (r "^0.1") (d #t) (t "cfg(target_os = \"redox\")") (k 0)) (d (n "rustc-serialize") (r "^0.3.20") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.99") (o #t) (k 0)) (d (n "serde_derive") (r "^1") (k 2)) (d (n "serde_json") (r "^1") (k 2)) (d (n "wasi") (r "^0.7") (d #t) (t "cfg(target_os = \"wasi\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 0)) (d (n "wasm-bindgen-test") (r "^0.2") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(any(target_os = \"emscripten\", target_os = \"wasi\"))))") (k 2)) (d (n "winapi") (r "^0.3.0") (f (quote ("std" "minwinbase" "minwindef" "ntdef" "profileapi" "sysinfoapi" "timezoneapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1yk1jp6fn5zkqnfvjszahbdk8kafbc3rvmv8lry7dmrlp57cgnz3") (f (quote (("wasmbind" "wasm-bindgen" "js-sys") ("std") ("default" "clock" "std") ("clock" "std") ("alloc") ("__internal_bench"))))))

