(define-module (crates-io ch an channel-bridge) #:use-module (crates-io))

(define-public crate-channel-bridge-0.1.0 (c (n "channel-bridge") (v "0.1.0") (d (list (d (n "edge-net") (r "^0.1") (f (quote ("nightly" "embassy-util" "embedded-svc"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.23") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)))) (h "0hfqq5qka3x2vgs4lm7fyid067kz7yz1gzqf9wz78l9lyblaifv5") (f (quote (("notification" "futures-util" "embassy-sync") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io?/std" "embedded-svc?/std" "serde?/std") ("prost" "dep:prost") ("nightly" "embedded-io?/async" "embedded-svc?/nightly" "embedded-svc?/experimental" "embassy-sync") ("embedded-svc" "nightly" "dep:embedded-svc" "embassy-futures" "log" "serde" "heapless" "postcard") ("edge-net" "nightly" "dep:edge-net" "embassy-futures" "embedded-io" "log" "serde" "heapless" "postcard") ("alloc" "embedded-io?/alloc" "embedded-svc?/alloc"))))))

(define-public crate-channel-bridge-0.2.0 (c (n "channel-bridge") (v "0.2.0") (d (list (d (n "edge-net") (r "^0.2") (f (quote ("nightly" "embassy-util" "embedded-svc"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.3") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.24") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1w88ld93lcy11sc3r7dxrwijlqrl673mm0yr1fvm0jw9mdnkd0dd") (f (quote (("notification" "futures-util" "embassy-sync") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io?/std" "embedded-svc?/std" "serde?/std") ("prost" "dep:prost") ("nightly" "embedded-io?/async" "embedded-svc?/nightly" "embedded-svc?/experimental" "embassy-sync") ("embedded-svc" "nightly" "dep:embedded-svc" "embassy-futures" "log" "serde" "heapless" "postcard") ("edge-net" "nightly" "dep:edge-net" "embassy-futures" "embedded-io" "log" "serde" "heapless" "postcard") ("alloc" "embedded-io?/alloc" "embedded-svc?/alloc"))))))

(define-public crate-channel-bridge-0.3.0 (c (n "channel-bridge") (v "0.3.0") (d (list (d (n "edge-net") (r "^0.3") (f (quote ("nightly" "embassy-util" "embedded-svc"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.4") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.25") (o #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)))) (h "1w781623sgfkmb0qygjqwcry71pvnazbmx0pfcgibvaggr2bxxbz") (f (quote (("notification" "futures-util" "embassy-sync") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io?/std" "embedded-svc?/std" "serde?/std") ("prost" "dep:prost") ("nightly" "embedded-io?/async" "embedded-svc?/nightly" "embedded-svc?/experimental" "embassy-sync") ("embedded-svc" "nightly" "dep:embedded-svc" "embassy-futures" "log" "serde" "heapless" "postcard") ("edge-net" "nightly" "dep:edge-net" "embassy-futures" "embedded-io" "log" "serde" "heapless" "postcard") ("alloc" "embedded-io?/alloc" "embedded-svc?/alloc")))) (r "1.67")))

(define-public crate-channel-bridge-0.4.0 (c (n "channel-bridge") (v "0.4.0") (d (list (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "edge-net") (r "^0.4") (f (quote ("nightly" "embassy-util" "embedded-svc"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (o #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.26.1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)))) (h "16qnj74a8v4xxfkn9nik3mk8wdrx30l6421z2k3kws95mhzfzx0n") (f (quote (("portable-atomic" "atomic-waker/portable-atomic") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io?/std" "embedded-svc?/std" "serde?/std") ("prost" "dep:prost") ("nightly" "embedded-io-async" "embedded-svc?/nightly" "embedded-svc?/experimental" "embassy-sync") ("embedded-svc" "nightly" "dep:embedded-svc" "embassy-futures" "log" "serde" "heapless" "postcard") ("edge-net" "nightly" "dep:edge-net" "embassy-futures" "embedded-io" "log" "serde" "heapless" "postcard") ("alloc" "embedded-io?/alloc" "embedded-svc?/alloc")))) (r "1.71")))

(define-public crate-channel-bridge-0.5.0 (c (n "channel-bridge") (v "0.5.0") (d (list (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "edge-net") (r "^0.5") (f (quote ("nightly" "embassy-util" "embedded-svc"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (o #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.26.1") (o #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (k 0)))) (h "0ffar5qdvdyqpnihasn4armqb35w07zrcgn38i71gdmmrx8p9dad") (f (quote (("portable-atomic" "atomic-waker/portable-atomic") ("default" "std")))) (s 2) (e (quote (("std" "alloc" "embedded-io?/std" "embedded-svc?/std" "serde?/std") ("prost" "dep:prost") ("nightly" "embedded-io-async" "embedded-svc?/nightly" "embedded-svc?/experimental" "embassy-sync") ("embedded-svc" "nightly" "dep:embedded-svc" "embassy-futures" "log" "serde" "heapless" "postcard") ("edge-net" "nightly" "dep:edge-net" "embassy-futures" "embedded-io" "log" "serde" "heapless" "postcard") ("alloc" "embedded-io?/alloc" "embedded-svc?/alloc")))) (r "1.71")))

(define-public crate-channel-bridge-0.6.0 (c (n "channel-bridge") (v "0.6.0") (d (list (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "edge-net") (r "^0.5") (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (o #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.26.1") (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "gloo-net") (r "^0.4") (f (quote ("websocket"))) (o #t) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "1jaknq71wklrn100lf4h5pxp7vrwizps5kqgc308drsqr3rzwa11") (f (quote (("wasm" "gloo-net" "futures" "postcard/alloc") ("portable-atomic" "atomic-waker/portable-atomic") ("default" "std")))) (s 2) (e (quote (("std" "embedded-io?/std" "embedded-svc?/std" "serde/std") ("nightly" "embedded-io-async" "embedded-svc?/nightly" "embedded-svc?/experimental" "edge-net?/nightly" "embassy-sync") ("embedded-svc" "dep:embedded-svc" "embassy-futures" "log" "heapless" "postcard") ("edge-net" "dep:edge-net" "embassy-futures" "embedded-io" "log" "heapless" "postcard")))) (r "1.71")))

(define-public crate-channel-bridge-0.7.0 (c (n "channel-bridge") (v "0.7.0") (d (list (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "edge-net") (r "^0.6") (f (quote ("io"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (o #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.27") (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "gloo-net") (r "^0.4") (f (quote ("websocket"))) (o #t) (k 0)) (d (n "heapless") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "17vfi9kgj2kfdbip0br9n0a18219r3azrm0sm9ks4labhmap0j6h") (f (quote (("wasm" "gloo-net" "futures" "postcard/alloc") ("portable-atomic" "atomic-waker/portable-atomic") ("default" "std")))) (s 2) (e (quote (("std" "embedded-io?/std" "embedded-svc?/std" "serde/std") ("embedded-svc" "dep:embedded-svc" "embassy-futures" "log" "heapless" "postcard") ("edge-net" "dep:edge-net" "embassy-futures" "embedded-io" "embedded-io-async" "log" "heapless" "postcard")))) (r "1.75")))

(define-public crate-channel-bridge-0.8.0 (c (n "channel-bridge") (v "0.8.0") (d (list (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "edge-ws") (r "^0.2") (f (quote ("io"))) (o #t) (k 0)) (d (n "embassy-futures") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (o #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (k 0)) (d (n "embedded-svc") (r "^0.27") (o #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "gloo-net") (r "^0.4") (f (quote ("websocket"))) (o #t) (k 0)) (d (n "heapless") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (k 0)) (d (n "postcard") (r "^1.0.2") (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)))) (h "15jlizd7qp3wmp6wqqzg8ra2yxg1qxha06gzpdhqnfp4w4896vnj") (f (quote (("wasm" "gloo-net" "futures" "postcard/alloc") ("portable-atomic" "atomic-waker/portable-atomic") ("default" "std")))) (s 2) (e (quote (("std" "embedded-io?/std" "embedded-svc?/std" "serde/std") ("embedded-svc" "dep:embedded-svc" "embassy-futures" "log" "heapless" "postcard") ("edge-ws" "dep:edge-ws" "embassy-futures" "embedded-io" "embedded-io-async" "log" "heapless" "postcard")))) (r "1.75")))

