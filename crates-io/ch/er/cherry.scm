(define-module (crates-io ch er cherry) #:use-module (crates-io))

(define-public crate-cherry-0.0.0 (c (n "cherry") (v "0.0.0") (h "03h5rsmbh3bpxw4mx8mgwsjf4la1hcj816gvhpzvbv3n2ykk361k") (y #t)))

(define-public crate-cherry-0.1.0 (c (n "cherry") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "futures-await-test") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.123") (d #t) (k 0)) (d (n "sql-builder") (r "^3.1.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-rustls" "macros" "chrono" "json" "any" "mysql" "mssql" "postgres" "sqlite"))) (d #t) (k 0)))) (h "1a3zgiqg6br557mny74xwi7vpwhmn4qzlwc2hwwgxicgzz15bchm") (y #t)))

(define-public crate-cherry-0.1.1 (c (n "cherry") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.48") (d #t) (k 0)) (d (n "futures-await-test") (r "^0.3.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.123") (d #t) (k 0)) (d (n "sql-builder") (r "^3.1.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (f (quote ("runtime-async-std-rustls" "macros" "chrono" "json" "any" "mysql" "mssql" "postgres" "sqlite"))) (d #t) (k 0)))) (h "1dmda3prpn0mzd7jaj29kv4lraadxv1g7h5nxd6v2z2jwhkkpg3j") (y #t)))

(define-public crate-cherry-0.2.0 (c (n "cherry") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.123") (o #t) (d #t) (k 0)) (d (n "sql-builder") (r "^3.1.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (d #t) (k 0)))) (h "01pf793x6zg526p037iimhar6waphcy6c2xx77zgrbs3as756mj4") (f (quote (("uuid" "sqlx/uuid") ("tls" "sqlx/tls") ("time" "sqlx/time") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("runtime-actix" "sqlx/runtime-actix") ("postgres" "sqlx/postgres") ("offline" "sqlx/offline") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql") ("migrate" "sqlx/migrate") ("macros" "sqlx/sqlx-macros") ("mac_address" "sqlx/mac_address") ("json" "sqlx/json" "serde" "serde_derive") ("ipnetwork" "sqlx/ipnetwork") ("git2" "sqlx/git2") ("default" "sqlx/default") ("decimal" "sqlx/decimal") ("chrono" "sqlx/chrono") ("bstr" "sqlx/bstr") ("bit-vec" "sqlx/bit-vec") ("bigdecimal" "sqlx/bigdecimal")))) (y #t)))

(define-public crate-cherry-0.2.1 (c (n "cherry") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.123") (o #t) (d #t) (k 0)) (d (n "sql-builder") (r "^3.1.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (d #t) (k 0)))) (h "0fwwyq90pq9xymgbgx40jfk5l70pjny9b635yqayd3daimjacc3j") (f (quote (("uuid" "sqlx/uuid") ("tls" "sqlx/tls") ("time" "sqlx/time") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("runtime-actix" "sqlx/runtime-actix") ("postgres" "sqlx/postgres") ("offline" "sqlx/offline") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql") ("migrate" "sqlx/migrate") ("macros" "sqlx/sqlx-macros") ("mac_address" "sqlx/mac_address") ("json" "sqlx/json" "serde" "serde_derive") ("ipnetwork" "sqlx/ipnetwork") ("git2" "sqlx/git2") ("default" "sqlx/default") ("decimal" "sqlx/decimal") ("chrono" "sqlx/chrono") ("bstr" "sqlx/bstr") ("bit-vec" "sqlx/bit-vec") ("bigdecimal" "sqlx/bigdecimal")))) (y #t)))

(define-public crate-cherry-0.2.2 (c (n "cherry") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.38") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.123") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.123") (o #t) (d #t) (k 0)) (d (n "sql-builder") (r "^3.1.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.5.9") (d #t) (k 0)))) (h "1mw07p076kmv1hl0yrw2r8q9pyp3549717sgqpjs9n3spn25kag8") (f (quote (("uuid" "sqlx/uuid") ("tls" "sqlx/tls") ("time" "sqlx/time") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("runtime-actix" "sqlx/runtime-actix") ("postgres" "sqlx/postgres") ("offline" "sqlx/offline") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql") ("migrate" "sqlx/migrate") ("macros" "sqlx/sqlx-macros") ("mac_address" "sqlx/mac_address") ("json" "sqlx/json" "serde" "serde_derive") ("ipnetwork" "sqlx/ipnetwork") ("git2" "sqlx/git2") ("default" "sqlx/default") ("decimal" "sqlx/decimal") ("chrono" "sqlx/chrono") ("bstr" "sqlx/bstr") ("bit-vec" "sqlx/bit-vec") ("bigdecimal" "sqlx/bigdecimal")))) (y #t)))

(define-public crate-cherry-0.3.0 (c (n "cherry") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "futures-await-test") (r "^0.3.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.137") (o #t) (d #t) (k 0)) (d (n "sql-builder") (r "^3.1.1") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.0") (d #t) (k 0)))) (h "0qlhcws4myrnq21kjyz56bi8qv2hr959i7l2xcx4pvscspjqf4lw") (f (quote (("uuid" "sqlx/uuid") ("tls" "sqlx/tls") ("time" "sqlx/time") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("runtime-actix" "sqlx/runtime-actix") ("postgres" "sqlx/postgres") ("offline" "sqlx/offline") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql") ("migrate" "sqlx/migrate") ("macros" "sqlx/sqlx-macros") ("mac_address" "sqlx/mac_address") ("json" "sqlx/json" "serde" "serde_derive") ("ipnetwork" "sqlx/ipnetwork") ("git2" "sqlx/git2") ("default" "sqlx/default" "mysql" "runtime-async-std-rustls") ("decimal" "sqlx/decimal") ("chrono" "sqlx/chrono") ("bstr" "sqlx/bstr") ("bit-vec" "sqlx/bit-vec") ("bigdecimal" "sqlx/bigdecimal")))) (y #t)))

(define-public crate-cherry-0.4.0 (c (n "cherry") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes"))) (d #t) (k 2)) (d (n "cherry-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 2)) (d (n "futures-core") (r "^0.3.25") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (d #t) (k 0)) (d (n "sqlx") (r "^0.6.2") (f (quote ("all-databases" "runtime-async-std-rustls"))) (d #t) (k 2)))) (h "01qjva8pqf0mf8g2x5880lijibnsil20avdfqh6kd2r1r5kx6q96") (f (quote (("uuid" "sqlx/uuid") ("tls" "sqlx/tls") ("time" "sqlx/time") ("sqlite" "sqlx/sqlite" "cherry-derive/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-actix-rustls" "sqlx/runtime-actix-rustls") ("runtime-actix-native-tls" "sqlx/runtime-actix-native-tls") ("postgres" "sqlx/postgres" "cherry-derive/postgres") ("offline" "sqlx/offline") ("mysql" "sqlx/mysql" "cherry-derive/mysql") ("migrate" "sqlx/migrate") ("macros" "sqlx/sqlx-macros") ("mac_address" "sqlx/mac_address") ("json" "sqlx/json") ("ipnetwork" "sqlx/ipnetwork") ("git2" "sqlx/git2") ("default" "sqlx/default") ("decimal" "sqlx/decimal") ("chrono" "sqlx/chrono") ("bstr" "sqlx/bstr") ("bit-vec" "sqlx/bit-vec") ("bigdecimal" "sqlx/bigdecimal") ("all-types" "bigdecimal" "decimal" "json" "time" "chrono" "ipnetwork" "mac_address" "uuid" "bit-vec" "bstr" "git2") ("all-databases" "mysql" "sqlite" "postgres") ("all" "tls" "all-databases" "all-types"))))))

