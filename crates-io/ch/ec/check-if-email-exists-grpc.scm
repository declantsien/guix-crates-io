(define-module (crates-io ch ec check-if-email-exists-grpc) #:use-module (crates-io))

(define-public crate-check-if-email-exists-grpc-0.8.0 (c (n "check-if-email-exists-grpc") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "check-if-email-exists") (r "^0.8.24") (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 0)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (k 0)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tonic") (r "^0.5") (d #t) (k 0)) (d (n "tonic-build") (r "^0.5") (d #t) (k 1)) (d (n "tonic-health") (r "^0.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1lrqxdracdb295ypnavwsk4rm25ra61qwbmdswr1f7dmmmsi87kc")))

(define-public crate-check-if-email-exists-grpc-0.8.1 (c (n "check-if-email-exists-grpc") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "check-if-email-exists") (r "^0.8.24") (d #t) (k 0)) (d (n "prost") (r "^0.8") (d #t) (k 0)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (k 0)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tonic") (r "^0.5") (d #t) (k 0)) (d (n "tonic-build") (r "^0.5") (d #t) (k 1)) (d (n "tonic-health") (r "^0.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "12gcjvxxpcf1z9z1fdggvz6pfzac0jp6ii2d9gg8zhbfdqwk63vx")))

(define-public crate-check-if-email-exists-grpc-0.9.0 (c (n "check-if-email-exists-grpc") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "check-if-email-exists") (r "^0.8.24") (d #t) (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (k 0)) (d (n "tokio-stream") (r "^0.1") (k 0)) (d (n "tonic") (r "^0.6") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6") (d #t) (k 1)) (d (n "tonic-health") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "101984zkliqs24c0r48hb70pbq8xdrz8sf63nmv108apsyqx9b13")))

(define-public crate-check-if-email-exists-grpc-0.9.1 (c (n "check-if-email-exists-grpc") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "check-if-email-exists") (r "^0.8.25") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "redis") (r "^0.21.5") (f (quote ("tokio-comp" "connection-manager"))) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("sync"))) (k 0)) (d (n "tokio-stream") (r "^0.1.8") (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tonic-health") (r "^0.5.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.5") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0mwdl39v5ngcvz7ais6xfnlxwgqssjh99ffqcx1379m4qx8smivq")))

(define-public crate-check-if-email-exists-grpc-1.0.0 (c (n "check-if-email-exists-grpc") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.65") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.0") (d #t) (k 0)) (d (n "check-if-email-exists") (r "^0.9.0") (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (d #t) (k 0)) (d (n "redis") (r "^0.21.6") (f (quote ("tokio-comp" "connection-manager"))) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "tokio") (r "^1.21.1") (f (quote ("sync"))) (k 0)) (d (n "tonic") (r "^0.8.2") (d #t) (k 0)) (d (n "tonic-health") (r "^0.7.1") (d #t) (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1x6lbvf0hqm9g6clf9kbpb0zc2j2a0qr567qaz8yngv8jy83caih")))

