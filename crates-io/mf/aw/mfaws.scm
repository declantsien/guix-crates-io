(define-module (crates-io mf aw mfaws) #:use-module (crates-io))

(define-public crate-mfaws-0.1.0 (c (n "mfaws") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "aws-sdk-sts") (r "^0.25.0") (d #t) (k 0)) (d (n "aws-smithy-types") (r "^0.55.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-ini") (r "^0.18.0") (f (quote ("case-insensitive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0gfhdn7d0avla1pp2l498r4n3n9f3lnh8p62rrn3z5paja9vpiq4")))

(define-public crate-mfaws-0.2.0 (c (n "mfaws") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "aws-sdk-sts") (r "^0.25.0") (d #t) (k 0)) (d (n "aws-smithy-types") (r "^0.55.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-ini") (r "^0.18.0") (f (quote ("case-insensitive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "01qk1fja70ncl49xw9y5qx694nrf7jkvgammrgqwpql9arw7hlcm")))

(define-public crate-mfaws-0.2.1 (c (n "mfaws") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "aws-sdk-sts") (r "^0.25.0") (d #t) (k 0)) (d (n "aws-smithy-types") (r "^0.55.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-ini") (r "^0.18.0") (f (quote ("case-insensitive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "01ksghnb039jfsbdli5v79alkp4g1rnf2dj7lahp96w93n1zwnjk")))

(define-public crate-mfaws-0.3.0 (c (n "mfaws") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "aws-config") (r "^0.55.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^0.55.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "aws-sdk-sts") (r "^0.25.0") (d #t) (k 0)) (d (n "aws-smithy-types") (r "^0.55.0") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^5.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "rust-ini") (r "^0.18.0") (f (quote ("case-insensitive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1ynybyrvf95wxb0gfa17kj10i6pdqn16z1janvr7lqd7pmjnvv2c") (f (quote (("e2e_test"))))))

(define-public crate-mfaws-0.4.0 (c (n "mfaws") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "aws-credential-types") (r "^1.1.8") (d #t) (k 0)) (d (n "aws-sdk-sts") (r "^1.18.0") (d #t) (k 0)) (d (n "aws-smithy-types") (r "^1.1.8") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "rust-ini") (r "^0.21.0") (f (quote ("case-insensitive"))) (d #t) (k 0)) (d (n "simplelog") (r "^0.12.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0v6l0ic0v6p5w9wsk4ynmvsf4ac41b9rgnaz5yrgfs3g0rg6lbib") (f (quote (("e2e_test"))))))

