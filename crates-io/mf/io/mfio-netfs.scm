(define-module (crates-io mf io mfio-netfs) #:use-module (crates-io))

(define-public crate-mfio-netfs-0.1.0 (c (n "mfio-netfs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-mutex") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cglue") (r "^0.2") (f (quote ("task_unstable"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async_tokio" "async_smol" "async_futures"))) (d #t) (k 2)) (d (n "debug-ignore") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flume") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("async-await"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mfio") (r "^0.1") (k 0)) (d (n "mfio-rt") (r "^0.1") (k 0)) (d (n "mfio-rt") (r "^0.1") (f (quote ("test_suite"))) (k 2)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "postcard") (r "^1") (f (quote ("alloc"))) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "alloc"))) (k 0)) (d (n "slab") (r "^0.4") (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("rt" "net" "macros"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros"))) (d #t) (t "cfg(not(miri))") (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0l9s3dwhb8rq5izhqg6whd3lfx7hyzssipz8dg0zpinm4g3mvnyv") (f (quote (("std" "mfio/std" "mfio-rt/std" "mfio-rt/native" "flume" "async-mutex" "parking_lot" "tracing" "futures/std") ("default" "std") ("bin-deps" "clap" "tokio" "anyhow" "env_logger" "mfio/tokio")))) (r "1.74")))

