(define-module (crates-io cn f- cnf-lib) #:use-module (crates-io))

(define-public crate-cnf-lib-0.4.0 (c (n "cnf-lib") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "1c78q8z7ihypw0phgylcvjw7idyb62fhb9063fm852k0fmsmc65x")))

(define-public crate-cnf-lib-0.4.1 (c (n "cnf-lib") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "0sn2d4v5341bz5p3ilm6wpw96q7awyp0522s7y489dccy9faxxfd")))

(define-public crate-cnf-lib-0.4.2 (c (n "cnf-lib") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-process") (r "^1.6") (d #t) (k 0)) (d (n "async-std") (r "^1.12") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "1jvq8y59ws5r7v429p3xhn68vnlidh0aipc0sva3lvjip78wrhi9")))

(define-public crate-cnf-lib-0.5.0 (c (n "cnf-lib") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("io-util" "fs" "process"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "1km0mqvn6mvbpsrwrm61i55nrklcg0hngn5041xv5yg88g8qgrxm")))

(define-public crate-cnf-lib-0.5.1 (c (n "cnf-lib") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "confy") (r "^0.5") (f (quote ("yaml_conf"))) (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "is_executable") (r "^1.0") (d #t) (k 0)) (d (n "logerr") (r "^0.2") (f (quote ("log" "anyhow"))) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("io-util" "fs" "process"))) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("io" "codec"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "users") (r "^0.11") (d #t) (k 0)) (d (n "which") (r "^4.4") (d #t) (k 0)))) (h "0c6z4lswwwiv34n3aqg6lk3dniyzkdrvx2a4gbkgvprnmf3il731")))

