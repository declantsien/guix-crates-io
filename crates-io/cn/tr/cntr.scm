(define-module (crates-io cn tr cntr) #:use-module (crates-io))

(define-public crate-cntr-1.1.0 (c (n "cntr") (v "1.1.0") (d (list (d (n "argparse") (r "0.2.*") (d #t) (k 0)) (d (n "cntr-fuse") (r "^0.3.5") (d #t) (k 0)) (d (n "cntr-nix") (r "^0.10.0-pre1") (d #t) (k 0)) (d (n "concurrent-hashmap") (r "0.2.*") (k 0)) (d (n "cpuprofiler") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "log") (r "0.3.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.*") (d #t) (k 0)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "tempdir") (r "0.*") (d #t) (k 0)) (d (n "thread-scoped") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0jb4916r7r769q6kaqp4pg52b8vmhsjlgn5knlz0vw8pjmxlmw5k") (f (quote (("verbose_fuse_test_log") ("splice_write") ("splice_read") ("profiling") ("default" "splice_read"))))))

(define-public crate-cntr-1.1.1 (c (n "cntr") (v "1.1.1") (d (list (d (n "argparse") (r "0.2.*") (d #t) (k 0)) (d (n "cntr-fuse") (r "^0.3.5") (d #t) (k 0)) (d (n "cntr-nix") (r "^0.10.0-pre1") (d #t) (k 0)) (d (n "concurrent-hashmap") (r "0.2.*") (k 0)) (d (n "cpuprofiler") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "log") (r "0.3.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.*") (d #t) (k 0)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "tempdir") (r "0.*") (d #t) (k 0)) (d (n "thread-scoped") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "150xzvn4slsvn8px5kz3y8wfrqswdpkqk01lrxmf8scmd1yciy1n") (f (quote (("verbose_fuse_test_log") ("splice_write") ("splice_read") ("profiling") ("default" "splice_read"))))))

(define-public crate-cntr-1.1.2 (c (n "cntr") (v "1.1.2") (d (list (d (n "argparse") (r "0.2.*") (d #t) (k 0)) (d (n "cntr-fuse") (r "^0.3.6") (d #t) (k 0)) (d (n "cntr-nix") (r "^0.10.0-pre1") (d #t) (k 0)) (d (n "concurrent-hashmap") (r "0.2.*") (k 0)) (d (n "cpuprofiler") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "log") (r "0.3.*") (d #t) (k 0)) (d (n "num_cpus") (r "1.*") (d #t) (k 0)) (d (n "parking_lot") (r "^0.5") (d #t) (k 0)) (d (n "tempdir") (r "0.*") (d #t) (k 0)) (d (n "thread-scoped") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)) (d (n "void") (r "^1") (d #t) (k 0)))) (h "0rkhvcvv54525dyalmxfmfm0zj1fqmicsvd4hv8mlm9bbvhvj5gd") (f (quote (("verbose_fuse_test_log") ("splice_write") ("splice_read") ("profiling") ("default" "splice_read"))))))

(define-public crate-cntr-1.2.1 (c (n "cntr") (v "1.2.1") (d (list (d (n "argparse") (r "0.2.*") (d #t) (k 0)) (d (n "cntr-fuse") (r "0.4.*") (k 0)) (d (n "concurrent-hashmap") (r "0.2.*") (k 0)) (d (n "cpuprofiler") (r "0.0.*") (o #t) (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "nix") (r "0.19.*") (d #t) (k 0)) (d (n "parking_lot") (r "0.11.*") (d #t) (k 0)))) (h "06hn09capi6qs13gmh212cghyn4qiig5pdzr97lz9zlxxwa8agvs") (f (quote (("verbose_fuse_test_log") ("profiling"))))))

(define-public crate-cntr-1.3.0 (c (n "cntr") (v "1.3.0") (d (list (d (n "argparse") (r "0.2.*") (d #t) (k 0)) (d (n "cntr-fuse") (r "0.4.*") (k 0)) (d (n "concurrent-hashmap") (r "0.2.*") (k 0)) (d (n "cpuprofiler") (r "0.0.*") (o #t) (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "nix") (r "0.19.*") (d #t) (k 0)) (d (n "parking_lot") (r "0.11.*") (d #t) (k 0)))) (h "0s1a7aq4fp8vzwr2782xir3g51smhqkx19qjyxyp8smg6lld4w37") (f (quote (("verbose_fuse_test_log") ("profiling"))))))

(define-public crate-cntr-1.4.1 (c (n "cntr") (v "1.4.1") (d (list (d (n "argparse") (r "0.2.*") (d #t) (k 0)) (d (n "cntr-fuse") (r "0.4.*") (k 0)) (d (n "concurrent-hashmap") (r "0.2.*") (k 0)) (d (n "cpuprofiler") (r "0.0.*") (o #t) (d #t) (k 0)) (d (n "libc") (r "0.2.*") (d #t) (k 0)) (d (n "log") (r "0.4.*") (d #t) (k 0)) (d (n "nix") (r "0.19.*") (d #t) (k 0)) (d (n "parking_lot") (r "0.11.*") (d #t) (k 0)))) (h "1svlaq7fsrr05xb3wkykm4305kybwhk4ayqbasa5kignz9q8wdn8") (f (quote (("verbose_fuse_test_log") ("profiling"))))))

(define-public crate-cntr-1.5.0 (c (n "cntr") (v "1.5.0") (d (list (d (n "argparse") (r "^0.2.2") (d #t) (k 0)) (d (n "cntr-fuse") (r "^0.4.1") (k 0)) (d (n "concurrent-hashmap") (r "^0.2.2") (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)))) (h "0fj14s2mdfp8zsgzk88z404sjpc5ddrzk2clvgkgac3g4f475mp9") (f (quote (("verbose_fuse_test_log") ("profiling"))))))

(define-public crate-cntr-1.5.1 (c (n "cntr") (v "1.5.1") (d (list (d (n "argparse") (r "^0.2.2") (d #t) (k 0)) (d (n "cntr-fuse") (r "^0.4.1") (k 0)) (d (n "concurrent-hashmap") (r "^0.2.2") (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.86") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 0)))) (h "1z86gllblh01i8ax34k48n7h7gsafb82hxjd18gmn5nhs7k2z03g") (f (quote (("verbose_fuse_test_log") ("profiling"))))))

(define-public crate-cntr-1.5.3 (c (n "cntr") (v "1.5.3") (d (list (d (n "chashmap") (r "^2.2.2") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "cargo" "derive" "help"))) (k 0)) (d (n "cntr-fuse") (r "^0.4.2") (k 0)) (d (n "container-pid") (r "^0.2.0") (d #t) (k 0)) (d (n "cpuprofiler") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "libc") (r "^0.2.151") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "simple-error") (r "^0.3.0") (d #t) (k 0)))) (h "108c9x7ymhlyf9sb58z3bw0aw1sgywmyk4kiwjjii6f5ma72jqp4") (f (quote (("verbose_fuse_test_log") ("profiling"))))))

