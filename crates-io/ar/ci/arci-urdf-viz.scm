(define-module (crates-io ar ci arci-urdf-viz) #:use-module (crates-io))

(define-public crate-arci-urdf-viz-0.0.1 (c (n "arci-urdf-viz") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arci") (r "^0.0.1") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "openrr-planner") (r "^0.0.1") (k 0)) (d (n "openrr-sleep") (r "^0.0.1") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)))) (h "0x7f83cq02mf6h40sdq2zjymiyrlrywqjx6z7kfyl3fm9y1zrh8n")))

(define-public crate-arci-urdf-viz-0.0.3 (c (n "arci-urdf-viz") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arci") (r "^0.0.3") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "openrr-planner") (r "^0.0.3") (k 0)) (d (n "openrr-sleep") (r "^0.0.3") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)))) (h "10mxl9s1k6k9164l3wifhlmglbjk3ssp40vnxrjv71gavjirj7qs")))

(define-public crate-arci-urdf-viz-0.0.4 (c (n "arci-urdf-viz") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arci") (r "^0.0.4") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "openrr-planner") (r "^0.0.4") (k 0)) (d (n "openrr-sleep") (r "^0.0.4") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)))) (h "0clcqngjj7cxjvpzyqilk5fpr3dn72s0jj49x15648b6x9zwvkdr")))

(define-public crate-arci-urdf-viz-0.0.5 (c (n "arci-urdf-viz") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arci") (r "^0.0.5") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "openrr-planner") (r "^0.0.5") (k 0)) (d (n "openrr-sleep") (r "^0.0.5") (d #t) (k 0)) (d (n "rouille") (r "^3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)))) (h "1mg34l51jvijlmbxys0lgxn01sdl1amcazclp5rhqnix8vzr574r")))

(define-public crate-arci-urdf-viz-0.0.6 (c (n "arci-urdf-viz") (v "0.0.6") (d (list (d (n "actix-web") (r "^3") (d #t) (k 2)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arci") (r "^0.0.6") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "openrr-planner") (r "^0.0.6") (k 0)) (d (n "openrr-sleep") (r "^0.0.6") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "urdf-rs") (r "^0.6") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)))) (h "07rvm4dy43yng04l5p7jlnbrhb77b2db9xycpirb9qw3i3xphpl8")))

(define-public crate-arci-urdf-viz-0.0.7 (c (n "arci-urdf-viz") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arci") (r "^0.0.7") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "flaky_test") (r "^0.1") (d #t) (k 2)) (d (n "openrr-planner") (r "^0.0.7") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "portpicker") (r "^0.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "scoped-sleep") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "parking_lot"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "urdf-rs") (r "^0.6") (d #t) (k 0)) (d (n "urdf-viz") (r "^0.41") (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 0)))) (h "0r8pi2fcmqwdf319vdnmk1b19ardqqqz17vx9zigm0ig5whi5r3b")))

(define-public crate-arci-urdf-viz-0.1.0 (c (n "arci-urdf-viz") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arci") (r "^0.1.0") (d #t) (k 0)) (d (n "openrr-planner") (r "^0.1.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "scoped-sleep") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "urdf-rs") (r "^0.6") (d #t) (k 0)) (d (n "ureq") (r "^2") (f (quote ("json"))) (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "flaky_test") (r "^0.1") (d #t) (k 2)) (d (n "portpicker") (r "^0.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "urdf-viz") (r "^0.41") (d #t) (k 2)))) (h "01jx7i7bzfg0ddx3r1q9ws9nkvq2pbidn18ss41v750kz62a3alh")))

