(define-module (crates-io ar ro arrow) #:use-module (crates-io))

(define-public crate-arrow-0.1.0 (c (n "arrow") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4.6") (d #t) (k 0)))) (h "1ign6ds56v7ic17n0shjymw2qipq4b2c2rm0b0rqg3ai50zkhbr1")))

(define-public crate-arrow-0.10.0 (c (n "arrow") (v "0.10.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "1ml4hlrb3a7wl1xn108kj3s5n7ml7jq1qzg6kdz7nzh9c1fwb2rr")))

(define-public crate-arrow-0.11.0 (c (n "arrow") (v "0.11.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "1vp6r8cbh2flpn7qkgmw17208bd239w4hdgkf1v4q7pv5ng5nrlw")))

(define-public crate-arrow-0.12.0 (c (n "arrow") (v "0.12.0") (d (list (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("alloc" "rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (d #t) (k 0)))) (h "1xgzllpj9m20cmis7rfhd0cpjs7yzwi3fgvrwpbn2cd2c8qyzazb")))

(define-public crate-arrow-0.13.0 (c (n "arrow") (v "0.13.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0fm2kfxwf5r28fc47hv8b35kwfx7523n0ahdz068k3ald3hg33jl")))

(define-public crate-arrow-0.14.0 (c (n "arrow") (v "0.14.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "04xj89gql3w3fz3df7cczxzrbsm2nankcr88qfcq74x1cmgwjh0r")))

(define-public crate-arrow-0.14.1 (c (n "arrow") (v "0.14.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "135hpdi91hcjbd9kx5bvy0svwg7lvwb48gzm4iyijsx2xid7jph2")))

(define-public crate-arrow-0.15.0 (c (n "arrow") (v "0.15.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1wjcwhpg895gv59ssqxcqh2l7z86xymra4hwf161cl2cifsb4knb") (f (quote (("simd" "packed_simd") ("default" "simd"))))))

(define-public crate-arrow-0.15.1 (c (n "arrow") (v "0.15.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0lz3w27c9kjbmkh26710l6n8fdp5wrnxcwygls0x95l0vgy0jlmh") (f (quote (("simd" "packed_simd") ("default" "simd"))))))

(define-public crate-arrow-0.16.0 (c (n "arrow") (v "0.16.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "csv") (r "^1.0") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6.0") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "regex") (r "^1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.80") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.80") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "1kvhrps1b64irf10alw1flpvjfza8p0d1sm13w6fpb8yzfmk6v9a") (f (quote (("simd" "packed_simd") ("default" "simd"))))))

(define-public crate-arrow-0.17.0 (c (n "arrow") (v "0.17.0") (d (list (d (n "arrow-flight") (r "^0.17.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)))) (h "0akjjbc74zwf50mqvrjyyqbffhbszp3hqzvziw5vm93n2k11ikkp") (f (quote (("simd" "packed_simd") ("flight" "arrow-flight") ("default" "simd" "flight"))))))

(define-public crate-arrow-1.0.0 (c (n "arrow") (v "1.0.0") (d (list (d (n "arrow-flight") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0zmwna8v4lgrivnkm2zziqlf6f0r0wa1y84mrjyfmyfbdgyzncdj") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("flight" "arrow-flight") ("default" "flight" "prettyprint"))))))

(define-public crate-arrow-1.0.1 (c (n "arrow") (v "1.0.1") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1iwl2zivfq3pf0223cbk5psvm0vbmw44aqpwsjyxv68fyin0a956") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("default"))))))

(define-public crate-arrow-2.0.0 (c (n "arrow") (v "2.0.0") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.6") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "04byarxnc2jnhfq6npdq922wgz0zm7c6mx81bry21721bygb6xvj") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("default"))))))

(define-public crate-arrow-3.0.0 (c (n "arrow") (v "3.0.0") (d (list (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "04smf7z6ig9dpnm3ryk1shzynjv5dxf5gky04pd8dxjip7qzlx2x") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("default") ("avx512"))))))

(define-public crate-arrow-4.0.0 (c (n "arrow") (v "4.0.0") (d (list (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "^0.8") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1fxnq95830g8dygdcxx47ywiz2qzfga350lgw96dvn9rz2878k01") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("default") ("avx512"))))))

(define-public crate-arrow-4.1.0 (c (n "arrow") (v "4.1.0") (d (list (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "=0.8.4") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1bm0pngchvk7dyp2v4wijk94i21q3d5inqmx79sdsp2d623z1k90") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("default") ("avx512"))))))

(define-public crate-arrow-4.2.0 (c (n "arrow") (v "4.2.0") (d (list (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "=0.8.4") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0qw6940mfqz2z6fq83sqkrx3kp4zwpadld0bv0lln3znq3hip0ck") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("default") ("avx512"))))))

(define-public crate-arrow-4.3.0 (c (n "arrow") (v "4.3.0") (d (list (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "=0.8.4") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0v9v8w3fyvafgp3rlxrfdcvf046jggkn2lcv1pjrqvjvhp96g9g6") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("default") ("avx512"))))))

(define-public crate-arrow-4.4.0 (c (n "arrow") (v "4.4.0") (d (list (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "flatbuffers") (r "=0.8.4") (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "141qb0yqk179n324qrhbv14ysz13mcfsw00d6m09882gx9637wzn") (f (quote (("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("default") ("avx512"))))))

(define-public crate-arrow-5.0.0 (c (n "arrow") (v "5.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0qpn1d1casvgyi718cxxmarjxh7f5213havl6bcfrp6vzm8bvlh6") (f (quote (("test_utils" "rand/std" "rand/std_rng") ("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("js" "getrandom/js") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-5.1.0 (c (n "arrow") (v "5.1.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1fqhywqf0vfpynnprfv1zj17p0xnbfzas9gwi02z9q67y3gqkwfx") (f (quote (("test_utils" "rand/std" "rand/std_rng") ("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("js" "getrandom/js") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-5.2.0 (c (n "arrow") (v "5.2.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1zj2sjlnkwz2sdfc83zcz75vg1d3900h8ix15nkjsbz5hd1pzvri") (f (quote (("test_utils" "rand/std" "rand/std_rng") ("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("js" "getrandom/js") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-5.3.0 (c (n "arrow") (v "5.3.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0i1dg2c2i2nvhk8hb7pp4scjc82qb173278niqixbnygra21y2d4") (f (quote (("test_utils" "rand/std" "rand/std_rng") ("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("js" "getrandom/js") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-5.4.0 (c (n "arrow") (v "5.4.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0rwz0rbrk5p5ki3kayqsg6xzqnah1qxgy5ivh10m0fabwadzzjqw") (f (quote (("test_utils" "rand/std" "rand/std_rng") ("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("js" "getrandom/js") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-5.5.0 (c (n "arrow") (v "5.5.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "prettytable-rs") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0c8j4766cfjc04dmcyayigbn6mim9cfys78a64ilw26qrxpyhy16") (f (quote (("test_utils" "rand/std" "rand/std_rng") ("simd" "packed_simd") ("prettyprint" "prettytable-rs") ("memory-check") ("js" "getrandom/js") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-6.0.0 (c (n "arrow") (v "6.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0dynanng0rzy4s8mhab3dcl7pbm6875za1ynkwa384kmjy26czik") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-6.1.0 (c (n "arrow") (v "6.1.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0k7896ziaxhcwrrzbyzcdm2ijdka24ksgzkdg9nz5ax098bac059") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-6.2.0 (c (n "arrow") (v "6.2.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1kbfq9gw9145albrcj3i8s4mb4bf8b44ws7mwjqnmgim65ln04p5") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-6.3.0 (c (n "arrow") (v "6.3.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "04dn7kpjqn975v20yc8avjsrrqm35rkgrsc29vm16sqs92fl9js6") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-6.4.0 (c (n "arrow") (v "6.4.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0vl0q8np5sy6k34bmhwz5m6awdxy35c5cq1svy9z386jhd450m2p") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-6.5.0 (c (n "arrow") (v "6.5.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "12yx6n2m3arknc6xbs5m587gaby3b2mvmhck5cydkgcjl936hv11") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512"))))))

(define-public crate-arrow-7.0.0 (c (n "arrow") (v "7.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order" "arbitrary_precision"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0bcfli90yyr73dxs2appxnw5f9ki1r9vjvgww9wg7szycichmv36") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-8.0.0 (c (n "arrow") (v "8.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0psfsar8a3ppgfdqkvjxi63rn0fi9x1bndfkq5c3dih7l1r0f96f") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("memory-check") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-9.0.2 (c (n "arrow") (v "9.0.2") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0i7j0yf2qfwh6v8bzv3anrvwh8vli653jqzw9issn5chygjwhkip") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-9.1.0 (c (n "arrow") (v "9.1.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "12z7sdv80kbr2fbwqa4r3ncwaxwqhwblans9b4r8im6kvhpwlr4q") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-10.0.0 (c (n "arrow") (v "10.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "10i39iigm3p92fw8xl79v5v158x6c47n7b7k7nqhhsnpsp3dna0k") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-11.0.0 (c (n "arrow") (v "11.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "129lsbjqkwjrcd0zg4s8mc82qp4jvysv0wqx35p3p7xaq352p4nv") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-11.1.0 (c (n "arrow") (v "11.1.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1rsjnb9xi5i6yciadl26nxqg6rv1fw7d2k2ba0rik7ps8jl0ljiy") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-12.0.0 (c (n "arrow") (v "12.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.1.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0zdw1myy75bcq2miy1l1hdw92998aca18i43yd1ks7y1bcqjskp9") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-13.0.0 (c (n "arrow") (v "13.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "=2.1.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0nhh4ik9imjaykph7w66hzwiadv83yk3a6fkx8bbbgi204iywssw") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-14.0.0-dev (c (n "arrow") (v "14.0.0-dev") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "09rw6njn4mqcw4faalwv3xjrkprllfpgaaxa916gfx53h6k0gb2v") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (y #t) (r "1.57")))

(define-public crate-arrow-0.18.0 (c (n "arrow") (v "0.18.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0430cy4gpkrj2lmfgf8zznpzsvlsq6bjgmswd5ax8da1c425s67l") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (y #t) (r "1.57")))

(define-public crate-arrow-14.0.0 (c (n "arrow") (v "14.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1alkw1vvvbmhd5paqqh4vs98yndwywr6kapxcdg3yv6y6jkbc4h6") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-15.0.0 (c (n "arrow") (v "15.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "118kywac7dqbpij2csf3k5kcimr7jg8101a3ah7qh9scz8cxj435") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-16.0.0 (c (n "arrow") (v "16.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (d #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "half") (r "^1.8") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (f (quote ("std"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "14q2z8sahipwh57z48lk54hqsfyjajkm057l2jwhi09b4mb49p0w") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate") ("avx512")))) (r "1.57")))

(define-public crate-arrow-17.0.0 (c (n "arrow") (v "17.0.0") (d (list (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde_derive") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "0asx8g137b8n57haby02njir5dpba5mk26dakwypvs1asadqvy10") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate")))) (r "1.57")))

(define-public crate-arrow-18.0.0 (c (n "arrow") (v "18.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde_derive") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "0lwqzgy39r7sy0bfifh0bk74r3jhzb5w882x77p4d9sgq0mrvy55") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate")))) (r "1.57")))

(define-public crate-arrow-19.0.0 (c (n "arrow") (v "19.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde_derive") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "1828y2hf9q7vgavmwm304q7sihf9c1kcxbbmmrn63hrr8y7fidw9") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("default" "csv" "ipc" "test_utils") ("csv" "csv_crate")))) (r "1.57")))

(define-public crate-arrow-20.0.0 (c (n "arrow") (v "20.0.0") (d (list (d (n "ahash") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde_derive") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "12crxnpk52jm9qnjj7qd70jafvx2jbhppa3nbfvapj06bx4njan7") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("ipc" "flatbuffers") ("force_validate") ("ffi") ("default" "csv" "ipc") ("csv" "csv_crate")))) (r "1.62")))

(define-public crate-arrow-21.0.0 (c (n "arrow") (v "21.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.16") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde") (r "^1.0") (k 0)) (d (n "serde_derive") (r "^1.0") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "01nrc9bfad7624srx287qknsgx424wpfnrwn9chnzz0rkxhj7g8z") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("ipc_compression" "ipc" "zstd" "lz4") ("ipc" "flatbuffers") ("force_validate") ("ffi") ("default" "csv" "ipc") ("csv" "csv_crate")))) (r "1.62")))

(define-public crate-arrow-22.0.0 (c (n "arrow") (v "22.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "tempfile") (r "^3") (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "0dckq40x2314jqvh58y6bk74b4454amjlx6qj2bwnmxahm0np4y5") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "serde" "serde_json") ("ipc_compression" "ipc" "zstd" "lz4") ("ipc" "flatbuffers") ("force_validate") ("ffi") ("dyn_cmp_dict") ("default" "csv" "ipc" "json") ("csv" "csv_crate")))) (r "1.62")))

(define-public crate-arrow-23.0.0 (c (n "arrow") (v "23.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-buffer") (r "^23.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "tempfile") (r "^3") (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "04w4kyzbqmy69024nxf4dw224z80397za5b2107savm3p9zpdp7y") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "serde" "serde_json") ("ipc_compression" "ipc" "zstd" "lz4") ("ipc" "flatbuffers") ("force_validate") ("ffi") ("dyn_cmp_dict") ("default" "csv" "ipc" "json") ("csv" "csv_crate")))) (r "1.62")))

(define-public crate-arrow-24.0.0 (c (n "arrow") (v "24.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-array") (r "^24.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^24.0.0") (d #t) (k 0)) (d (n "arrow-data") (r "^24.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^24.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "tempfile") (r "^3") (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "14zg7f0gna6kxk7gc63dib7mzm35rgkrm1hgbxrgcdsj1lq930yn") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "serde_json") ("ipc_compression" "ipc" "zstd" "lz4") ("ipc" "flatbuffers") ("force_validate" "arrow-data/force_validate") ("ffi") ("dyn_cmp_dict") ("dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "csv_crate")))) (r "1.62")))

(define-public crate-arrow-25.0.0 (c (n "arrow") (v "25.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-array") (r "^25.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^25.0.0") (d #t) (k 0)) (d (n "arrow-data") (r "^25.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^25.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^2.1.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.0") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "tempfile") (r "^3") (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "02w3qnk5gcxkd8ca53z8an7qdyfjzk262j13yi0p7ih8g2v2wcbn") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "serde_json") ("ipc_compression" "ipc" "zstd" "lz4") ("ipc" "flatbuffers") ("force_validate" "arrow-data/force_validate") ("ffi") ("dyn_cmp_dict") ("dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "csv_crate")))) (r "1.62")))

(define-public crate-arrow-26.0.0 (c (n "arrow") (v "26.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-array") (r "^26.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^26.0.0") (d #t) (k 0)) (d (n "arrow-data") (r "^26.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^26.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^26.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "csv_crate") (r "^1.1") (o #t) (k 0) (p "csv")) (d (n "flatbuffers") (r "^22.9.2") (f (quote ("thiserror"))) (o #t) (k 0)) (d (n "flate2") (r "^1") (f (quote ("rust_backend"))) (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "indexmap") (r "^1.9") (f (quote ("std"))) (k 0)) (d (n "lazy_static") (r "^1.4") (k 0)) (d (n "lexical-core") (r "^0.8") (f (quote ("write-integers" "write-floats" "parse-integers" "parse-floats"))) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "tempfile") (r "^3") (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "1b552zz4c9rc6798k72564pv9kvq3k12vp9z03zs0jhs8g6jnkp2") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "serde_json") ("ipc_compression" "ipc" "zstd" "lz4") ("ipc" "flatbuffers") ("force_validate" "arrow-data/force_validate") ("ffi") ("dyn_cmp_dict") ("dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "csv_crate") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-27.0.0 (c (n "arrow") (v "27.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-array") (r "^27.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^27.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^27.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^27.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^27.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^27.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^27.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^27.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^27.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.5.6") (f (quote ("std" "unicode"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "0j5ywas9r22ssz3p16m07865zrh3pbqvvd4v2w8pn78grcykjadk") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict") ("dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-28.0.0 (c (n "arrow") (v "28.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-array") (r "^28.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^28.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^28.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^28.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^28.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^28.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^28.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^28.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^28.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (k 0) (p "packed_simd_2")) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.7.0") (f (quote ("std" "unicode" "perf"))) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (f (quote ("unicode"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "0v2bkp70rhl2ww2apswggz4inpxih8kp7r3cnrfaskqnhsgq9ndf") (f (quote (("test_utils" "rand") ("simd" "packed_simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict") ("dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-29.0.0 (c (n "arrow") (v "29.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-array") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^29.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^29.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^29.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^29.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^29.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "multiversion") (r "^0.6.1") (k 0)) (d (n "num") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "regex") (r "^1.7.0") (f (quote ("std" "unicode" "perf"))) (k 0)) (d (n "tempfile") (r "^3") (k 2)))) (h "0k6sv2svdwy3lmwmn8kdj5jfma3s6i6k1ggdxbmf59rx2707vq9g") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-30.0.0 (c (n "arrow") (v "30.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^30.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^30.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^30.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^30.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 2)) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1wdpb9dm2c11pxr6yh4isy7v0ys74i39xxlv73hbml9jfifbqs80") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-30.0.1 (c (n "arrow") (v "30.0.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^30.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^30.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^30.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^30.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^30.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 2)) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1xa5d1i7l20qklg35ravj928r6bmfif3qxrkx9qnzp1nsw2gaj0r") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-31.0.0 (c (n "arrow") (v "31.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^31.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^31.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^31.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^31.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^31.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 2)) (d (n "pyo3") (r "^0.17") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0if9ipm2nncv2xw9ln3p1762w3ndj7anbzm06cw3d7niz4wnsm8v") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-32.0.0 (c (n "arrow") (v "32.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^32.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^32.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^32.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^32.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^32.0.0") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (o #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1zbaw0v96c90rlh7k6zcdz93444f4l05f9l9xdb6cmfgagslinc7") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "bitflags") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-33.0.0 (c (n "arrow") (v "33.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^33.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^33.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^33.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^33.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^33.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1zmgybq6rqdik89p73n4jgwfswahmccavhyiij4wy5qm9y3lqwpk") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-34.0.0 (c (n "arrow") (v "34.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^34.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^34.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^34.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^34.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^34.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "08d93m05fwi8nxkzn2llm8bdgqxjfh95b95wwywlfdkbgf8d647l") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "comfy-table") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-35.0.0 (c (n "arrow") (v "35.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^35.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^35.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^35.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^35.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^35.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "01jaikghlm8x5b0yfcslc27jvllw6w5m4ja8w7341sxybfpyxgbk") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-36.0.0 (c (n "arrow") (v "36.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^36.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^36.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^36.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^36.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^36.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0szsw0l47xl5ny0lih4lmmlpnlv6a34s23c26nhlll18jcdgl3cr") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-37.0.0 (c (n "arrow") (v "37.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^37.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^37.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0bkzvm11i1i4dwdgcvbznkd1644wlafbk59gj9zhzdxv4p5rzshs") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-38.0.0 (c (n "arrow") (v "38.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^38.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^38.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "11vj26kn633p7g0k6xxqnmc24pv9wj0f4h2skpd55n0kb5xsa1y1") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-39.0.0 (c (n "arrow") (v "39.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^39.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^39.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1gwxqfr08fq4l7wkqyzgsa9vmlgsfcpcg1v6zp005cc8s0fsi311") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-40.0.0 (c (n "arrow") (v "40.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^40.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^40.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.18") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1klayg59ifghmrk6b6l0xzjp86cvmazhk7hxkydqrp8c3arcl6b6") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-41.0.0 (c (n "arrow") (v "41.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^41.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^41.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "19clsjbdsiln0cjdsmhl4hcpqr0hk6njr8rayqamj34cwwd48ija") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-42.0.0 (c (n "arrow") (v "42.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^42.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^42.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "16d8zi09ji0m017nhk31zp1vc164i96736hlwbwz746j5kbihgbp") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("dyn_arith_dict" "arrow-arith/dyn_arith_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-43.0.0 (c (n "arrow") (v "43.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^43.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^43.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "16n5rmb6c6anw2j8jiycjwwp793xq80nvq14ya4brc1lggbypvig") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.62")))

(define-public crate-arrow-44.0.0 (c (n "arrow") (v "44.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^44.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^44.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "19isrb5mca8sg3z99yz5kv282k5pp7mazb172jbjmh4s70zklbq2") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-45.0.0 (c (n "arrow") (v "45.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^45.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^45.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0haphwlx9gdf01221zm0j73xpwdvsr0wfw775zlklqb1jyg4n45p") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-ord/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict" "arrow-ord/dyn_cmp_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-46.0.0 (c (n "arrow") (v "46.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^46.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^46.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1q0hxmq6fj80g0za19kvapacrjbkkymx6y6rn90d4yhlpcg81a04") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("dyn_cmp_dict" "arrow-string/dyn_cmp_dict") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-47.0.0 (c (n "arrow") (v "47.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^47.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^47.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.19") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0agq8c2q8nifsysnri8svh9m9dqkk55ww3d3slvqms4cpa9rxavz") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-48.0.0 (c (n "arrow") (v "48.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^48.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^48.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.20") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1yrdn9m17jrzsnj2jkpn4f3bprk5s5341m7n11c71v2h6zc3idzd") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-48.0.1 (c (n "arrow") (v "48.0.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-array") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-buffer") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-cast") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-csv") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-ipc") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-row") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-schema") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-select") (r "^48.0.1") (d #t) (k 0)) (d (n "arrow-string") (r "^48.0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.20") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0y5kvhx2wzfwwnhwzzqj6kxnn14kdv0sfvx9dn5jskrsa1l9d4d8") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-49.0.0 (c (n "arrow") (v "49.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-arith") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^49.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^49.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.20") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "056nn9baa46pfvy6a9xx4w1ibq925j7jk848m13220cas4k53hjv") (f (quote (("test_utils" "rand") ("simd" "arrow-array/simd" "arrow-arith/simd") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-50.0.0 (c (n "arrow") (v "50.0.0") (d (list (d (n "arrow-arith") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^50.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^50.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.20") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "1377lks8shrrq3klps6h1q0gd73qwd0wbgc5k7a2kn54zd1m6a5a") (f (quote (("test_utils" "rand") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

(define-public crate-arrow-51.0.0 (c (n "arrow") (v "51.0.0") (d (list (d (n "arrow-arith") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-array") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-buffer") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-cast") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-csv") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-ipc") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-json") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ord") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-row") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-schema") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-select") (r "^51.0.0") (d #t) (k 0)) (d (n "arrow-string") (r "^51.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("clock"))) (k 2)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "half") (r "^2.1") (k 2)) (d (n "pyo3") (r "^0.20") (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "tempfile") (r "^3") (k 2)))) (h "0n16gfsa6l7sm08rzaaj639c9wxzwn6dwfrfng9kyrl11f9hb791") (f (quote (("test_utils" "rand") ("pyarrow" "pyo3" "ffi") ("prettyprint" "arrow-cast/prettyprint") ("json" "arrow-json") ("ipc_compression" "ipc" "arrow-ipc/lz4" "arrow-ipc/zstd") ("ipc" "arrow-ipc") ("force_validate" "arrow-data/force_validate") ("ffi" "arrow-schema/ffi" "arrow-data/ffi") ("default" "csv" "ipc" "json") ("csv" "arrow-csv") ("chrono-tz" "arrow-array/chrono-tz")))) (r "1.70.0")))

