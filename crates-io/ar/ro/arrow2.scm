(define-module (crates-io ar ro arrow2) #:use-module (crates-io))

(define-public crate-arrow2-0.1.0 (c (n "arrow2") (v "0.1.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.6") (o #t) (d #t) (k 0)))) (h "04jrwi7fj4sm9rx95ql2m9iipv0d5379ax4zjc2m0dgr5h62bcnh") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "prettytable-rs") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "hex") ("io_json" "serde" "serde_derive" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex") ("default" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "regex" "merge_sort" "ahash" "benchmarks" "compute") ("compute") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.2.0 (c (n "arrow2") (v "0.2.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "prettytable-rs") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.6") (o #t) (d #t) (k 0)))) (h "1cla2p1i80izljm85rlq6qyzmki6f0fl2zla6j14qimvjzs6ln3h") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "prettytable-rs") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "hex") ("io_json" "serde" "serde_derive" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex") ("default" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "regex" "merge_sort" "ahash" "benchmarks" "compute") ("compute") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.3.0 (c (n "arrow2") (v "0.3.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.3") (f (quote ("stream"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0z8n2wggrpxqq0p8vigycv87dcmvy9dr84654pp4b9a4aqx6d4nj") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "hex") ("io_json" "serde" "serde_derive" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex") ("default" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "regex" "merge_sort" "ahash" "benchmarks" "compute") ("compute") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.4.0 (c (n "arrow2") (v "0.4.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3.4") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.3") (f (quote ("stream"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0kbcx2r9zs670dbhw1b5mc1xqyv8hbh3bxgkdr9kdq75w48wncav") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex" "lexical-core") ("default" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "regex" "merge_sort" "ahash" "benchmarks" "compute") ("compute" "strength_reduce" "multiversion" "lexical-core") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.5.0 (c (n "arrow2") (v "0.5.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.4") (f (quote ("stream"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "027f3f5q38sr612xwnfy5l91jc0x4w7ps1iyf6zg7byh9gy2i06q") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex" "lexical-core" "streaming-iterator") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "regex" "merge_sort" "ahash" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.5.1 (c (n "arrow2") (v "0.5.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.4") (f (quote ("stream"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1z4cxllnb86wpi40hjwcilsraczz612c9m7vgjmihj8m42izaadz") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex" "lexical-core" "streaming-iterator") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "regex" "merge_sort" "ahash" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.5.2 (c (n "arrow2") (v "0.5.2") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.4") (f (quote ("stream"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1w2gkph5c8k3hyxn8wkvqpa7awhl9a4n9f723zas1c67gzgpcjbc") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex" "lexical-core" "streaming-iterator") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "regex" "merge_sort" "ahash" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.5.3 (c (n "arrow2") (v "0.5.3") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.4") (f (quote ("stream"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "042m859jfffnhi84qc919pkyanlr98wqqf67pcrylk4hhh0v84xx") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv" "csv" "lazy_static" "regex" "lexical-core" "streaming-iterator") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "regex" "merge_sort" "ahash" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.6.0 (c (n "arrow2") (v "0.6.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.5") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1w38pb6k3r539h5x97fm3wfy8f3irsdfjgwhz0k3kl560243d774") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read" "csv" "lexical-core") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro" "avro-rs" "streaming-iterator" "serde_json") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "regex" "merge_sort" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core" "ahash") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.6.1 (c (n "arrow2") (v "0.6.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.5.2") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1vb3rxs0rqf89rf90vwphdhz5lzn9dxg8sz3hg6rvglrjnxkjar1") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read" "csv" "lexical-core") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro" "avro-rs" "streaming-iterator" "serde_json") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "regex" "merge_sort" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core" "ahash") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.6.2 (c (n "arrow2") (v "0.6.2") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flatbuffers") (r "=2.0.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.5.2") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1g97scimjr1l21hijl7rbgzwk0xp0ppn9d6p60x0rcljk4wbw48l") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "flatbuffers") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read" "csv" "lexical-core") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro" "avro-rs" "streaming-iterator" "serde_json") ("full" "io_csv" "io_json" "io_ipc" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "regex" "merge_sort" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core" "ahash") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.7.0 (c (n "arrow2") (v "0.7.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.3.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.6") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "15dkirkx07bagjgcar2ikmvs0d1zsk5l99bsszla91rxbivy4wyq") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read" "csv" "lexical-core") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro" "avro-rs" "streaming-iterator" "serde_json" "libflate") ("full" "io_csv" "io_json" "io_ipc" "io_flight" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "regex" "merge_sort" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core" "ahash") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.8.0 (c (n "arrow2") (v "0.8.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.3.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.8") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1wgg2ra72j9frgma860dhd3adb8g91d9d8il01i0l0wqc8vrzcq2") (f (quote (("simd" "packed_simd") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap") ("io_avro_async" "io_avro" "futures") ("io_avro" "avro-rs" "fallible-streaming-iterator" "serde_json") ("full" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison") ("compute_cast" "lexical-core") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_window") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.8.1 (c (n "arrow2") (v "0.8.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.3.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.8") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0i1sig3r3ilzr6d0sq9ig2wa638cxkzhfv3j3ain8x3jx4m2nifk") (f (quote (("simd" "packed_simd") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap") ("io_avro_async" "io_avro" "futures") ("io_avro" "avro-rs" "fallible-streaming-iterator" "serde_json") ("full" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_window") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.9.0 (c (n "arrow2") (v "0.9.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.9") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1v2p6kxcj2ij4rsigb5bkpqa443g5vcw9aqrr5fp6pijnvkcfy5m") (f (quote (("simd" "packed_simd") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_upper") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_lower") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_window" "compute_lower" "compute_upper") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.9.1 (c (n "arrow2") (v "0.9.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.9") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1spgvyhy3jd39by34pv3m87yfmr831q09ancfa6dxfcdr54qra5f") (f (quote (("simd" "packed_simd") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_upper") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_lower") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_window" "compute_lower" "compute_upper") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.7.1 (c (n "arrow2") (v "0.7.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.3.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^4.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.6") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0f2alis66r22bh63mx79y9pddgd84m5qgc5varsssfj5hh14kkrn") (f (quote (("simd" "packed_simd") ("merge_sort" "itertools") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read" "csv" "lexical-core") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro" "avro-rs" "streaming-iterator" "serde_json" "libflate") ("full" "io_csv" "io_json" "io_ipc" "io_flight" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "regex" "merge_sort" "compute" "chrono-tz") ("default") ("compute" "strength_reduce" "multiversion" "lexical-core" "ahash") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.8.2 (c (n "arrow2") (v "0.8.2") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.3.0") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (o #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.8") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0n1hjj12pnifpz7m0pr0qgpadwwkwz1wvnvphb10swr90qksymg5") (f (quote (("simd" "packed_simd") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "indexmap") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap") ("io_avro_async" "io_avro" "futures") ("io_avro" "avro-rs" "fallible-streaming-iterator" "serde_json") ("full" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_window") ("cache_aligned") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.9.2 (c (n "arrow2") (v "0.9.2") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "packed_simd") (r "^0.3") (o #t) (d #t) (k 0) (p "packed_simd_2")) (d (n "parquet2") (r "^0.9") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0jn2qnq54hd71mdzjp50zaz9jijg30ysnlg4i5llwz986nx1hnqq") (f (quote (("simd" "packed_simd") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_upper") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_lower") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_window" "compute_lower" "compute_upper") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.10.0 (c (n "arrow2") (v "0.10.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.35") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.10") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1m3kdnfv4mpfhf9cv4fpjprzrvlwzbkmxmnrlaj0fwcv3cljxj3j") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_odbc" "odbc-api") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.10.1 (c (n "arrow2") (v "0.10.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.35") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.10") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0vnq2g4a7jp2fkyilllnsr2gk61q90kr0g8pdgrrcfjpvlh7nf1f") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_odbc" "odbc-api") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.11.0 (c (n "arrow2") (v "0.11.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.12") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0clmds0a4wgqg3ch0a87a432jq4zjkkjxf6xn8r9ll4qyk51jrbh") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_odbc" "odbc-api") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.11.1 (c (n "arrow2") (v "0.11.1") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.12") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1wp07gnznxmnkrc11393pypdxpihbw5c5yhbxfgic4r32cil769m") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_odbc" "odbc-api") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.11.2 (c (n "arrow2") (v "0.11.2") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.4") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.12") (f (quote ("stream"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1ycn1k0lybdgmx6imim1cgy1mfhyczhgvwdqv07lncfid09hch5h") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_odbc" "odbc-api") ("io_json_integration" "io_json" "serde_derive" "hex") ("io_json" "serde" "serde_json" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.12.0 (c (n "arrow2") (v "0.12.0") (d (list (d (n "ahash") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.6") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.13") (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1w38x6kp3gmb57fcisv6iy7gxjdkrnvvk8kakr97gxg3yinzvsjz") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion" "ahash") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.13.0 (c (n "arrow2") (v "0.13.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "arrow-format") (r "^0.7") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.14.0") (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "156hnqv7hrbf5k3c6xawrmhgaca5k3lb13ygp1vd67pm9f1kk8w7") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.13.1 (c (n "arrow2") (v "0.13.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "arrow-format") (r "^0.7") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "crc") (r "^2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "libflate") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.14.0") (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "snap") (r "^1") (o #t) (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "09lkbmn0yjlspa1pdl193r5s4cbqrpn1mkvipkvblfh82h5lzidg") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_compression" "parquet2/zstd" "parquet2/snappy" "parquet2/gzip" "parquet2/lz4" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "libflate" "snap" "crc") ("io_avro_async" "io_avro" "futures" "async-stream") ("io_avro" "avro-schema" "streaming-iterator" "fallible-streaming-iterator" "serde_json") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.14.0 (c (n "arrow2") (v "0.14.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "arrow-format") (r "^0.7") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.16") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0imby06lvi698798jj14rsq97brf42m8yv0zpf99k3sigp38hzj6") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.14.1 (c (n "arrow2") (v "0.14.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "arrow-format") (r "^0.7") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.16") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "09gyd4y8jliy2cwxl4w7j0yaw8kdckzvry6yb9cyyj0aml0a3pkv") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.14.2 (c (n "arrow2") (v "0.14.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "arrow-format") (r "^0.7") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.1") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.16") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "1ws510yxgi0iac22qh3n49isk8h173yvvz33q2j6gjbq23j64vzf") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.15.0 (c (n "arrow2") (v "0.15.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0zz9ls9mz3a9s1f11qkzca50x5rddf9dqsman12ar3cx18g56hxq") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.16.0 (c (n "arrow2") (v "0.16.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^5.0") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.6") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.11") (o #t) (d #t) (k 0)))) (h "0sikp2615dwidiyvrc1w9yq6zzdvsf7pyagmv47wphav6c1mnk3s") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand"))))))

(define-public crate-arrow2-0.17.0 (c (n "arrow2") (v "0.17.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-buffer") (r "^35.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^35.0.0") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "1wwpaqfpa1ja6pn57ic9pm3ry4hhir4fi4cgmcpys5hl3zrkrin3") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema"))))))

(define-public crate-arrow2-0.17.1 (c (n "arrow2") (v "0.17.1") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-array") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "1y8n1sgd4n6avflwy5lhavryw70pxypmcxx11gbv75lq0hlk1xx0") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "json-deserializer" "streaming-iterator" "fallible-streaming-iterator" "indexmap" "lexical-core") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-arrow2-0.17.2 (c (n "arrow2") (v "0.17.2") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-array") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "14vhifq5qkxd1hnjdlh1x7rgw4bg5msjmlns59xivcwssql09bhm") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_write" "streaming-iterator" "fallible-streaming-iterator" "lexical-core") ("io_json_read" "json-deserializer" "indexmap" "lexical-core") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "io_json_read" "io_json_write") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics" "strength_reduce") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-arrow2-0.17.3 (c (n "arrow2") (v "0.17.3") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-array") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "0337c3a8a5h5vz91da4pprlmx8ps3s42qpkwl0w8gp9ykvl2fkz4") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_write" "streaming-iterator" "fallible-streaming-iterator" "lexical-core") ("io_json_read" "json-deserializer" "indexmap" "lexical-core") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "io_json_read" "io_json_write") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-arrow2-0.17.4 (c (n "arrow2") (v "0.17.4") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-array") (r ">=40, <44") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r ">=40, <44") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r ">=40, <44") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40, <44") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.6") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (o #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23.1") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sample-arrow2") (r "^0.1") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.3") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "1yh40rdx0hwyag621byl6rk8w2jzvgvsj78sg1yp82qlxbd6ii2r") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_sample_test" "io_parquet") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_write" "streaming-iterator" "fallible-streaming-iterator" "lexical-core") ("io_json_read" "json-deserializer" "indexmap" "lexical-core") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "io_json_read" "io_json_write") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take" "hashbrown") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

(define-public crate-arrow2-0.18.0 (c (n "arrow2") (v "0.18.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow-array") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r ">=40") (o #t) (d #t) (k 0)) (d (n "arrow-format") (r "^0.8") (f (quote ("ipc"))) (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r ">=40") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.2") (o #t) (d #t) (k 0)) (d (n "avro-rs") (r "^0.13") (f (quote ("snappy"))) (d #t) (k 2)) (d (n "avro-schema") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("std"))) (k 0)) (d (n "chrono-tz") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "comfy-table") (r "^6.0") (o #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.1") (d #t) (k 2)) (d (n "csv") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-async") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "csv-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "doc-comment") (r "^0.3") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1.9") (d #t) (k 0)) (d (n "ethnum") (r "^1") (d #t) (k 0)) (d (n "fallible-streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1") (d #t) (k 2)) (d (n "foreign_vec") (r "^0.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "wasm32-unknown-unknown") (k 0)) (d (n "hash_hasher") (r "^2.0.3") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("ahash"))) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.6") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "json-deserializer") (r "^0.4.4") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.24") (o #t) (d #t) (k 0)) (d (n "multiversion") (r "^0.7.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "odbc-api") (r "^0.36") (o #t) (d #t) (k 0)) (d (n "orc-format") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "parquet2") (r "^0.17") (f (quote ("async"))) (o #t) (k 0)) (d (n "proptest") (r "^1") (f (quote ("std"))) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "regex") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "sample-arrow2") (r "^0.1") (d #t) (k 2)) (d (n "sample-std") (r "^0.1") (d #t) (k 2)) (d (n "sample-test") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "simdutf8") (r "^0.1.4") (d #t) (k 0)) (d (n "streaming-iterator") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "strength_reduce") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt" "fs" "io-util"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("compat"))) (d #t) (k 2)) (d (n "zstd") (r "^0.12") (o #t) (d #t) (k 0)))) (h "12fk0j37pchpfkwk3xgnyjclsqa5nfy27yjzkszwnyvmkd8fygwn") (f (quote (("simd") ("serde_types" "serde" "serde_derive") ("io_print" "comfy-table") ("io_parquet_zstd" "parquet2/zstd") ("io_parquet_snappy" "parquet2/snappy") ("io_parquet_sample_test" "io_parquet") ("io_parquet_lz4_flex" "parquet2/lz4_flex") ("io_parquet_lz4" "parquet2/lz4") ("io_parquet_gzip" "parquet2/gzip") ("io_parquet_compression" "io_parquet_zstd" "io_parquet_gzip" "io_parquet_snappy" "io_parquet_lz4" "io_parquet_brotli") ("io_parquet_brotli" "parquet2/brotli") ("io_parquet_bloom_filter" "parquet2/bloom_filter") ("io_parquet" "parquet2" "io_ipc" "base64" "futures" "streaming-iterator" "fallible-streaming-iterator") ("io_orc" "orc-format") ("io_odbc" "odbc-api") ("io_json_write" "streaming-iterator" "fallible-streaming-iterator" "lexical-core") ("io_json_read" "json-deserializer" "indexmap" "lexical-core") ("io_json_integration" "hex" "serde" "serde_derive" "serde_json" "io_ipc") ("io_json" "io_json_read" "io_json_write") ("io_ipc_write_async" "io_ipc" "futures") ("io_ipc_read_async" "io_ipc" "futures" "async-stream") ("io_ipc_compression" "lz4" "zstd") ("io_ipc" "arrow-format") ("io_flight" "io_ipc" "arrow-format/flight-data") ("io_csv_write" "csv-core" "streaming-iterator" "lexical-core") ("io_csv_read_async" "csv-async" "lexical-core" "futures") ("io_csv_read" "csv" "lexical-core") ("io_csv_async" "io_csv_read_async") ("io_csv" "io_csv_read" "io_csv_write") ("io_avro_compression" "avro-schema/compression") ("io_avro_async" "avro-schema/async") ("io_avro" "avro-schema" "streaming-iterator") ("full" "arrow" "io_odbc" "io_csv" "io_csv_async" "io_json" "io_ipc" "io_flight" "io_ipc_write_async" "io_ipc_read_async" "io_ipc_compression" "io_json_integration" "io_print" "io_parquet" "io_parquet_compression" "io_avro" "io_orc" "io_avro_compression" "io_avro_async" "regex" "regex-syntax" "compute" "chrono-tz") ("default") ("compute_window" "compute_concatenate") ("compute_utf8") ("compute_temporal") ("compute_take") ("compute_substring") ("compute_sort" "compute_take") ("compute_regex_match" "regex") ("compute_partition" "compute_sort") ("compute_nullif" "compute_comparison") ("compute_merge_sort" "itertools" "compute_sort") ("compute_limit") ("compute_like" "regex" "regex-syntax") ("compute_length") ("compute_if_then_else") ("compute_hash" "multiversion") ("compute_filter") ("compute_contains") ("compute_concatenate") ("compute_comparison" "compute_take" "compute_boolean") ("compute_cast" "lexical-core" "compute_take") ("compute_boolean_kleene") ("compute_boolean") ("compute_bitwise") ("compute_arithmetics_decimal" "strength_reduce") ("compute_arithmetics" "strength_reduce" "compute_arithmetics_decimal") ("compute_aggregate" "multiversion") ("compute" "compute_aggregate" "compute_arithmetics" "compute_bitwise" "compute_boolean" "compute_boolean_kleene" "compute_cast" "compute_comparison" "compute_concatenate" "compute_contains" "compute_filter" "compute_hash" "compute_if_then_else" "compute_length" "compute_like" "compute_limit" "compute_merge_sort" "compute_nullif" "compute_partition" "compute_regex_match" "compute_sort" "compute_substring" "compute_take" "compute_temporal" "compute_utf8" "compute_window") ("benchmarks" "rand") ("arrow" "arrow-buffer" "arrow-schema" "arrow-data" "arrow-array"))))))

