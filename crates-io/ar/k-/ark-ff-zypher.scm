(define-module (crates-io ar k- ark-ff-zypher) #:use-module (crates-io))

(define-public crate-ark-ff-zypher-0.4.2 (c (n "ark-ff-zypher") (v "0.4.2") (d (list (d (n "ark-ff-asm") (r "^0.4.2") (d #t) (k 0) (p "ark-ff-asm-zypher")) (d (n "ark-ff-macros") (r "^0.4.2") (d #t) (k 0) (p "ark-ff-macros-zypher")) (d (n "ark-serialize") (r "^0.4.2") (k 0) (p "ark-serialize-zypher")) (d (n "ark-std") (r "^0.4.0") (k 0) (p "ark-std-zypher")) (d (n "ark-test-curves") (r "^0.4.2") (f (quote ("bls12_381_curve" "mnt6_753" "secp256k1"))) (k 2)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "blake2") (r "^0.10") (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (f (quote ("alloc"))) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.12") (k 0)) (d (n "libtest-mimic") (r "^0.7.0") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "sha3") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "1llzysg2c9jr417zjd7nf95bpwr2008dh08yrb14s3n93wswflad") (f (quote (("std" "ark-std/std" "ark-serialize/std" "itertools/use_std") ("parallel" "std" "rayon" "ark-std/parallel") ("default") ("asm")))) (r "1.70")))

