(define-module (crates-io ar k- ark-circom) #:use-module (crates-io))

(define-public crate-ark-circom-0.1.0 (c (n "ark-circom") (v "0.1.0") (d (list (d (n "ark-bn254") (r "=0.4.0") (d #t) (k 0)) (d (n "ark-crypto-primitives") (r "=0.4.0") (d #t) (k 0)) (d (n "ark-ec") (r "=0.4.1") (f (quote ("parallel"))) (k 0)) (d (n "ark-ff") (r "=0.4.1") (f (quote ("parallel" "asm"))) (k 0)) (d (n "ark-groth16") (r "=0.4.0") (f (quote ("parallel"))) (k 0)) (d (n "ark-poly") (r "=0.4.1") (f (quote ("parallel"))) (k 0)) (d (n "ark-relations") (r "=0.4.0") (k 0)) (d (n "ark-serialize") (r "=0.4.1") (k 0)) (d (n "ark-std") (r "=0.4.0") (f (quote ("parallel"))) (k 0)) (d (n "byteorder") (r "=1.4.3") (d #t) (k 0)) (d (n "cfg-if") (r "=1.0.0") (d #t) (k 0)) (d (n "color-eyre") (r "=0.6.2") (d #t) (k 0)) (d (n "criterion") (r "=0.3.6") (d #t) (k 0)) (d (n "ethers") (r "=2.0.7") (d #t) (k 2)) (d (n "ethers-core") (r "=2.0.7") (o #t) (k 0)) (d (n "fnv") (r "=1.0.7") (k 0)) (d (n "hex") (r "=0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "=0.2.2") (d #t) (k 2)) (d (n "num") (r "=0.4.0") (d #t) (k 0)) (d (n "num-bigint") (r "=0.4.3") (f (quote ("rand"))) (k 0)) (d (n "num-traits") (r "=0.2.15") (k 0)) (d (n "serde_json") (r "=1.0.94") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.39") (d #t) (k 0)) (d (n "tokio") (r "=1.29.1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "wasmer") (r "=2.3.0") (k 0)))) (h "0l3ki8ask6152228dznpngn2ic6yi2x6j942dari3qpkfpibhnr9") (f (quote (("wasm" "wasmer/js-default") ("ethereum" "ethers-core") ("default" "wasmer/default" "circom-2" "ethereum") ("circom-2") ("bench-complex-all"))))))

