(define-module (crates-io ar k- ark-ec) #:use-module (crates-io))

(define-public crate-ark-ec-0.2.0 (c (n "ark-ec") (v "0.2.0") (d (list (d (n "ark-ff") (r "^0.2.0") (k 0)) (d (n "ark-serialize") (r "^0.2.0") (k 0)) (d (n "ark-std") (r "^0.2.0") (k 0)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "082hq07c5jp7p85x1v2l6x7in6gp10qzwvvgrvxpd7ah9ychcq65") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default"))))))

(define-public crate-ark-ec-0.3.0 (c (n "ark-ec") (v "0.3.0") (d (list (d (n "ark-ff") (r "^0.3.0") (k 0)) (d (n "ark-serialize") (r "^0.3.0") (k 0)) (d (n "ark-std") (r "^0.3.0") (k 0)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0hnx0ddslng8kqdizcmqflsrqhjmrh2kndxj5lya272bdi07iafy") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default"))))))

(define-public crate-ark-ec-0.4.0-alpha.0 (c (n "ark-ec") (v "0.4.0-alpha.0") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.5.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "14km3ax58dc1x88p8bnmq6lwf03ga7kqs61gm72k369456cjcgdg") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0-alpha.1 (c (n "ark-ec") (v "0.4.0-alpha.1") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "ark-test-curves") (r "^0.4.0-alpha") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.5.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0lhlczszxfi3h83yv8am265x1c43hck8vw699asamp2jsk3ld12m") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0-alpha.3 (c (n "ark-ec") (v "0.4.0-alpha.3") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "ark-test-curves") (r "^0.4.0-alpha") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.5.2") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0f9nffxavkwczwpfdpkkaphsqln2aykcrkp4ys39s254ikvf6pjx") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0-alpha.4 (c (n "ark-ec") (v "0.4.0-alpha.4") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "ark-test-curves") (r "^0.4.0-alpha") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "08xlmr69ssv6znd07771123xqbld4ij4lj6x8wfcrilzmijfsn7k") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0-alpha.5 (c (n "ark-ec") (v "0.4.0-alpha.5") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "ark-test-curves") (r "^0.4.0-alpha") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "08vr7z73cvf38zxjcqjsvk1k3q6ld9vrwxhjhsj6wf1pf85clakh") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0-alpha.6 (c (n "ark-ec") (v "0.4.0-alpha.6") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "ark-test-curves") (r "^0.4.0-alpha") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "1pckc6wya7mhd7fb00wfh05z7lz30fpawcaicqvm3f8wkpf58sq1") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0-alpha.7 (c (n "ark-ec") (v "0.4.0-alpha.7") (d (list (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-poly") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "ark-test-curves") (r "^0.4.0-alpha") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0jfdg0zcwds56wnbmpa223aklmhvhvb70rh4wq5m6rg6yhsi1n9m") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.0 (c (n "ark-ec") (v "0.4.0") (d (list (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-poly") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "11i84g9qli6z4vi9k5gwa4pfw3wrm43fx7ha40bg457z5b2z1msj") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.57")))

(define-public crate-ark-ec-0.4.1 (c (n "ark-ec") (v "0.4.1") (d (list (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-poly") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "ark-test-curves") (r "^0.4.0") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "1hja1zw3j30wl5pngk9k4djbr68v5s33mmyaagqabqgqj853fq1w") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.63")))

(define-public crate-ark-ec-0.4.2-alpha.1 (c (n "ark-ec") (v "0.4.2-alpha.1") (d (list (d (n "ark-ff") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-poly") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-serialize") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "0zll7yfag9aq9pm518i76qjxkdqfs4cy5id3i6kx468agxdba45s") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.63")))

(define-public crate-ark-ec-0.4.2 (c (n "ark-ec") (v "0.4.2") (d (list (d (n "ark-ff") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-poly") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-serialize") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "ark-test-curves") (r "^0.4.2-alpha.1") (f (quote ("bls12_381_curve"))) (k 2)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (k 0)) (d (n "libtest-mimic") (r "^0.6.0") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0.110") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 2)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (k 0)))) (h "1fkh0rswp4d5rn4hmmbibz2wh6x6k3sp21faijb29b2nkm1rmzfy") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std") ("parallel" "std" "rayon" "ark-std/parallel") ("default")))) (r "1.63")))

