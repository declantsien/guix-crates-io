(define-module (crates-io ar k- ark-scale) #:use-module (crates-io))

(define-public crate-ark-scale-0.0.1 (c (n "ark-scale") (v "0.0.1") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-serialize") (r "^0.4") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.4") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "1cx18ij2n0drxqradg8drz08jzzpq0wvkxx6wbs5n3b4r30wfd7q") (f (quote (("std" "ark-std/std") ("default" "std")))) (y #t)))

(define-public crate-ark-scale-0.0.2 (c (n "ark-scale") (v "0.0.2") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-serialize") (r "^0.4") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.4") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "0345pvr85d02571wh3hx7w8kfn2b522d2d8kwr4zqg64k5zfpnn4") (f (quote (("std" "ark-std/std") ("default" "std")))) (s 2) (e (quote (("hazmat" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.3 (c (n "ark-scale") (v "0.0.3") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.4") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "08xvgf9kp15sqq4bcyb5h107p2h2556n9k8hijl2y02x0b8qq0jd") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("default" "std")))) (s 2) (e (quote (("hazmat" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.4 (c (n "ark-scale") (v "0.0.4") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.4") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "1xmc8j80afyxz8ygna62hsxcgnmv2acl3vi4nwhfb9hgwbap2ggp") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("default" "std")))) (s 2) (e (quote (("hazmat" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.5 (c (n "ark-scale") (v "0.0.5") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "1ky5xzhjwwklb9535zqwl7bhzgm41n3x9bygdrkxff9kx6klykiv") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (y #t) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.6 (c (n "ark-scale") (v "0.0.6") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "1cb8fzddx0wm8djfsa7vnix6ad5b4vb62gnixfz1mgjhdn400pm7") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (y #t) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.7 (c (n "ark-scale") (v "0.0.7") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "1gbj9hb3lj1xw44g9j8qpsdww65787rydaz5ji6i3w5i0d81s1pj") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (y #t) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.8 (c (n "ark-scale") (v "0.0.8") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "0hpdb3rjsly5fs2ninbsw90wc4l15gh51aw6l0l5f28as0gaq8r3") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (y #t) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.9 (c (n "ark-scale") (v "0.0.9") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "0aw7y79f8dv52g1x91izvaf52r0mrm504b3xsi3wh8ajfvfbkbdg") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.10 (c (n "ark-scale") (v "0.0.10") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "parity-scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)))) (h "14v3wdpjz4xr1zbhrw4gjr6j9j93hqbfwlzgjbkjp3p3ld387c29") (f (quote (("std" "parity-scale-codec/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.11 (c (n "ark-scale") (v "0.0.11") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5") (k 0)))) (h "1bw35x5ffrs5i5y1pa0f1mn8k5lix5isjzykhw4n6wnvdnxp7gai") (f (quote (("std" "scale-codec/std" "scale-info/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

(define-public crate-ark-scale-0.0.12 (c (n "ark-scale") (v "0.0.12") (d (list (d (n "ark-bls12-381") (r "^0.4") (d #t) (k 2)) (d (n "ark-ec") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-ed25519") (r "^0.4") (d #t) (k 2)) (d (n "ark-ff") (r "^0.4.2") (o #t) (k 0)) (d (n "ark-serialize") (r "^0.4.2") (f (quote ("derive"))) (k 0)) (d (n "ark-std") (r "^0.4") (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "scale-codec") (r "^3.6") (f (quote ("max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "scale-info") (r "^2.5") (k 0)))) (h "0yd18n2m69p32z5cvfc1xn5hyydilxgzvwm652ay56sj7c5w0saz") (f (quote (("std" "scale-codec/std" "scale-info/std" "ark-std/std" "ark-serialize/std" "ark-bls12-381/std" "ark-ed25519/std" "rand_core/std") ("hazmat" "ec") ("default" "std")))) (s 2) (e (quote (("ff" "dep:ark-ff") ("ec" "ff" "dep:ark-ec"))))))

