(define-module (crates-io ar k- ark-algebra-test-templates) #:use-module (crates-io))

(define-public crate-ark-algebra-test-templates-0.2.0 (c (n "ark-algebra-test-templates") (v "0.2.0") (d (list (d (n "ark-ec") (r "^0.2.0") (k 0)) (d (n "ark-ff") (r "^0.2.0") (k 0)) (d (n "ark-serialize") (r "^0.2.0") (k 0)) (d (n "ark-std") (r "^0.2.0") (k 0)))) (h "16rbcii3l277zxdqa1dwlrl2lqcs2arhp416ghk351bg85b842y2") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default"))))))

(define-public crate-ark-algebra-test-templates-0.3.0 (c (n "ark-algebra-test-templates") (v "0.3.0") (d (list (d (n "ark-ec") (r "^0.3.0") (k 0)) (d (n "ark-ff") (r "^0.3.0") (k 0)) (d (n "ark-serialize") (r "^0.3.0") (k 0)) (d (n "ark-std") (r "^0.3.0") (k 0)))) (h "1kfhpfc6bm3jw0isq3sf0bhy9kzjp9kdcz7vsfdks4dwkqrhpvry") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default"))))))

(define-public crate-ark-algebra-test-templates-0.4.0-alpha (c (n "ark-algebra-test-templates") (v "0.4.0-alpha") (d (list (d (n "ark-ec") (r "^0.4.0-alpha") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)))) (h "0qrkf8mry4039l2mm1w60hm89qkkxrnw1l4nssky1737ww9mhbg9") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.0-alpha.3 (c (n "ark-algebra-test-templates") (v "0.4.0-alpha.3") (d (list (d (n "ark-ec") (r "^0.4.0-alpha") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)))) (h "1rx2a4k9f2hchhzl9hdszyd7sqg2a9js1yxgaik9wl33qf0pw9xw") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.0-alpha.4 (c (n "ark-algebra-test-templates") (v "0.4.0-alpha.4") (d (list (d (n "ark-ec") (r "^0.4.0-alpha") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)))) (h "0zzxb3jdhllzawr5cmm2czw3sfiha4gpayykgd5c2y351zyz3j47") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.0-alpha.5 (c (n "ark-algebra-test-templates") (v "0.4.0-alpha.5") (d (list (d (n "ark-ec") (r "^0.4.0-alpha") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)))) (h "107jva5mrpbryldh8hvpkiinbnx77sgwqcixa9m91f53imykq3bm") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.0-alpha.6 (c (n "ark-algebra-test-templates") (v "0.4.0-alpha.6") (d (list (d (n "ark-ec") (r "^0.4.0-alpha") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)))) (h "1wawn027iscghx5c1v79jx1vpq7icj86hxw2xmm1qkx8nyw92rb7") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.0-alpha.7 (c (n "ark-algebra-test-templates") (v "0.4.0-alpha.7") (d (list (d (n "ark-ec") (r "^0.4.0-alpha") (k 0)) (d (n "ark-ff") (r "^0.4.0-alpha") (k 0)) (d (n "ark-serialize") (r "^0.4.0-alpha") (k 0)) (d (n "ark-std") (r "^0.4.0-alpha") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)))) (h "0wj8aqjvh5pxap7vgscdsw86m12xillvps7d5dhgavwyj8pi66kq") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.0 (c (n "ark-algebra-test-templates") (v "0.4.0") (d (list (d (n "ark-ec") (r "^0.4.0") (k 0)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)))) (h "0hqbqm8g94b0sw8fm81iqg0n519566cr777bq7c41vg3ln6fa2ir") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.56")))

(define-public crate-ark-algebra-test-templates-0.4.1 (c (n "ark-algebra-test-templates") (v "0.4.1") (d (list (d (n "ark-ec") (r "^0.4.0") (k 0)) (d (n "ark-ff") (r "^0.4.0") (k 0)) (d (n "ark-serialize") (r "^0.4.0") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)))) (h "1b2zinq0bccnzxjc1pds0qw0j60mmvfnc00q19y345hp0ssmijny") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.63")))

(define-public crate-ark-algebra-test-templates-0.4.2-alpha.1 (c (n "ark-algebra-test-templates") (v "0.4.2-alpha.1") (d (list (d (n "ark-ec") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-ff") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-serialize") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)))) (h "0wxr5yiny3wm499zab6rw7i1q4jy2kp34fzfa5ca2vmlh2nxxw32") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.63")))

(define-public crate-ark-algebra-test-templates-0.4.2 (c (n "ark-algebra-test-templates") (v "0.4.2") (d (list (d (n "ark-ec") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-ff") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-serialize") (r "^0.4.2-alpha.1") (k 0)) (d (n "ark-std") (r "^0.4.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "num-integer") (r "^0.1") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)))) (h "0wliicfg38j82bp4r2sal4nghzh7mrrl6va1y4r1h6vlkjkx62s0") (f (quote (("std" "ark-std/std" "ark-ff/std" "ark-serialize/std" "ark-ec/std") ("default")))) (r "1.63")))

