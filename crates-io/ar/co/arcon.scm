(define-module (crates-io ar co arcon) #:use-module (crates-io))

(define-public crate-arcon-0.1.0 (c (n "arcon") (v "0.1.0") (d (list (d (n "arcon_macros") (r "^0.1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "capnp") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "capnpc") (r "^0.9") (o #t) (d #t) (k 1)) (d (n "derivative") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "keyby") (r "^0.1.0") (d #t) (k 0)) (d (n "kompact") (r "^0.7.0") (d #t) (k 0)) (d (n "protobuf") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (o #t) (d #t) (k 1)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "rdkafka") (r "~0.19") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rocksdb") (r "^0.12.1") (f (quote ("lz4"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.63") (f (quote ("derive"))) (d #t) (k 0)) (d (n "slog") (r "^2.2") (d #t) (k 0)) (d (n "slog") (r "^2.2") (f (quote ("max_level_off"))) (d #t) (k 2)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "weld") (r "^0.3.0") (d #t) (k 0)))) (h "03qi8v2vpxsh79scmjh2fss72l24bzb4l3if0wr89gspkgwdpx65") (f (quote (("proto" "protobuf" "protoc-rust") ("kafka" "rdkafka") ("default" "proto") ("capnproto" "capnp" "derivative" "capnpc"))))))

(define-public crate-arcon-0.1.1 (c (n "arcon") (v "0.1.1") (d (list (d (n "arcon_backend") (r "^0.1") (d #t) (k 0)) (d (n "arcon_error") (r "^0.1") (d #t) (k 0)) (d (n "arcon_extra") (r "^0.1") (d #t) (k 0)) (d (n "arcon_macros") (r "^0.1") (d #t) (k 0)) (d (n "arcon_messages") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "keyby") (r "^0.2.0") (d #t) (k 0)) (d (n "kompact") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.63") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "slog") (r "^2.2") (d #t) (k 0)) (d (n "slog") (r "^2.2") (f (quote ("max_level_off"))) (d #t) (k 2)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "weld") (r "^0.3.0") (d #t) (k 0)))) (h "0ja3z5534iw2smwsgvkzfh3g3f4a0ys18xvrzvgia2gn8s63hnzw") (f (quote (("kafka" "arcon_extra/kafka") ("default"))))))

(define-public crate-arcon-0.1.2 (c (n "arcon") (v "0.1.2") (d (list (d (n "arcon_backend") (r "^0.1") (d #t) (k 0)) (d (n "arcon_error") (r "^0.1") (d #t) (k 0)) (d (n "arcon_extra") (r "^0.1") (d #t) (k 0)) (d (n "arcon_macros") (r "^0.1") (d #t) (k 0)) (d (n "arcon_messages") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "keyby") (r "^0.2.0") (d #t) (k 0)) (d (n "kompact") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.63") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "slog") (r "^2.2") (d #t) (k 0)) (d (n "slog") (r "^2.2") (f (quote ("max_level_off"))) (d #t) (k 2)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "weld") (r "^0.3.0") (d #t) (k 0)))) (h "1ai4v8s5l8n01wdlkc2g5hd8sj7nr58ciradds6z7jprscaj2bkc") (f (quote (("kafka" "arcon_extra/kafka") ("default"))))))

(define-public crate-arcon-0.1.3 (c (n "arcon") (v "0.1.3") (d (list (d (n "arcon_backend") (r "^0.1") (d #t) (k 0)) (d (n "arcon_error") (r "^0.1") (d #t) (k 0)) (d (n "arcon_extra") (r "^0.1") (d #t) (k 0)) (d (n "arcon_macros") (r "^0.1") (d #t) (k 0)) (d (n "arcon_messages") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4") (d #t) (k 0)) (d (n "fnv") (r "^1.0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "keyby") (r "^0.2.0") (d #t) (k 0)) (d (n "kompact") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.63") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "slog") (r "^2.2") (d #t) (k 0)) (d (n "slog") (r "^2.2") (f (quote ("max_level_off"))) (d #t) (k 2)) (d (n "slog-async") (r "^2.3") (d #t) (k 0)) (d (n "slog-term") (r "^2.4") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^0.1") (d #t) (k 0)) (d (n "tokio-codec") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.7") (d #t) (k 0)) (d (n "weld") (r "^0.3.0") (d #t) (k 0)))) (h "1ms2ljsvcj8dm0qnjai23g9zwxyq0i6a8cw3vw6ks1hdizizhzqj") (f (quote (("kafka" "arcon_extra/kafka") ("default"))))))

(define-public crate-arcon-0.2.0 (c (n "arcon") (v "0.2.0") (d (list (d (n "arcon_allocator") (r "^0.2") (d #t) (k 0)) (d (n "arcon_macros") (r "^0.2") (d #t) (k 0)) (d (n "arcon_state") (r "^0.2") (d #t) (k 0)) (d (n "arcon_util") (r "^0.2") (f (quote ("hasher"))) (d #t) (k 0)) (d (n "arrow") (r "^5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 0)) (d (n "datafusion") (r "^5.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hierarchical_hash_wheel_timer") (r "^1.1") (d #t) (k 0)) (d (n "hocon") (r "^0.3") (f (quote ("serde-support"))) (k 0)) (d (n "kompact") (r "^0.11") (d #t) (k 0)) (d (n "metrics") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 2)) (d (n "parquet") (r "^5.0") (f (quote ("zstd"))) (d #t) (k 0)) (d (n "perf-event") (r "^0.4.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "prost") (r "^0.7") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "slog") (r "^2.2") (f (quote ("max_level_error"))) (d #t) (k 2)) (d (n "slog-async") (r "^2") (d #t) (k 0)) (d (n "slog-term") (r "^2") (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "twox-hash") (r "^1.5.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "1rimlambj661ddnxb4jj1zdab6gk40zs05l8x53h0b631zc0yv4h") (f (quote (("unsafe_flight" "arcon_macros/unsafe_flight") ("thread_pinning" "kompact/thread_pinning") ("state_metrics" "arcon_state/metrics") ("socket" "tokio" "tokio-util" "futures" "serde_json") ("rocksdb" "arcon_state/rocks") ("prometheus_exporter" "metrics-exporter-prometheus" "metrics") ("kafka" "rdkafka" "futures" "serde_json") ("hardware_counters" "perf-event" "metrics") ("default") ("allocator_metrics" "arcon_allocator/metrics")))) (r "1.56")))

(define-public crate-arcon-0.2.1 (c (n "arcon") (v "0.2.1") (d (list (d (n "arcon_allocator") (r "^0.2") (d #t) (k 0)) (d (n "arcon_macros") (r "^0.2") (d #t) (k 0)) (d (n "arcon_state") (r "^0.2") (d #t) (k 0)) (d (n "arcon_util") (r "^0.2") (f (quote ("hasher"))) (d #t) (k 0)) (d (n "arrow") (r "^5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-utils") (r "^0.7") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hierarchical_hash_wheel_timer") (r "^1.1") (d #t) (k 0)) (d (n "hocon") (r "^0.3") (f (quote ("serde-support"))) (o #t) (k 0)) (d (n "kompact") (r "^0.11") (d #t) (k 0)) (d (n "metrics") (r "^0.16.0") (o #t) (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 2)) (d (n "parquet") (r "^5.0") (f (quote ("zstd"))) (d #t) (k 0)) (d (n "perf-event") (r "^0.4.7") (o #t) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "rand") (r "^0.6.5") (d #t) (k 2)) (d (n "rdkafka") (r "^0.26") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.44") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "slog") (r "^2.2") (f (quote ("max_level_error"))) (d #t) (k 2)) (d (n "slog-async") (r "^2") (d #t) (k 0)) (d (n "slog-term") (r "^2") (d #t) (k 0)) (d (n "snafu") (r "^0.6") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.6") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (d #t) (k 0)))) (h "165yxbfwnmh44wnri2rfr81519g1lyr8zxrwnxaw3xdk9vd14j3h") (f (quote (("state_metrics" "arcon_state/metrics") ("socket" "tokio" "tokio-util" "futures" "serde" "serde_json") ("rocksdb" "arcon_state/rocks") ("prometheus_exporter" "metrics-exporter-prometheus" "metrics") ("kafka" "rdkafka" "futures" "serde_json") ("hardware_counters" "perf-event" "metrics") ("default") ("allocator_metrics" "arcon_allocator/metrics")))) (r "1.56")))

