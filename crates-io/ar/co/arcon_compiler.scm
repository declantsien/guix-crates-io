(define-module (crates-io ar co arcon_compiler) #:use-module (crates-io))

(define-public crate-arcon_compiler-0.1.0 (c (n "arcon_compiler") (v "0.1.0") (d (list (d (n "arcon_codegen") (r "^0.1") (d #t) (k 0)) (d (n "arcon_proto") (r "^0.1") (f (quote ("arconc"))) (d #t) (k 0)) (d (n "arcon_spec") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "daemonize") (r "^0.4.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ferris-says") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.16") (d #t) (k 0)) (d (n "grpcio") (r "^0.4") (f (quote ("protobuf-codec"))) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "07qmd6ry1imm6gyyhc0yl9vpd78mrmvg9n9441w990hxfigjs1qp")))

(define-public crate-arcon_compiler-0.1.1 (c (n "arcon_compiler") (v "0.1.1") (d (list (d (n "arcon_codegen") (r "^0.1") (d #t) (k 0)) (d (n "arcon_proto") (r "^0.1") (f (quote ("arconc"))) (d #t) (k 0)) (d (n "arcon_spec") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "daemonize") (r "^0.4.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.5") (d #t) (k 0)) (d (n "ferris-says") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.1.16") (d #t) (k 0)) (d (n "grpcio") (r "^0.4") (f (quote ("protobuf-codec"))) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (d #t) (k 0)) (d (n "path-clean") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 0)))) (h "0l95lx32ic346395acsc94850sysr7vwl66qkg0vhfs2ra9cahsy")))

