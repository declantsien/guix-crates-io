(define-module (crates-io ar bo arboard) #:use-module (crates-io))

(define-public crate-arboard-0.1.0 (c (n "arboard") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser" "winbase" "stringapiset" "basetsd"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xcb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1nczy2c3rx4hg9qgj0m0clzln1k6idb83fj9ip9a8mhqzsmi4hzi")))

(define-public crate-arboard-0.1.1 (c (n "arboard") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser" "winbase" "stringapiset" "basetsd"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xcb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0b5b2yf8w1zazdnz0i7hkx12lkxawm2v513ikh5zn30b8lw7yc8r")))

(define-public crate-arboard-1.0.0 (c (n "arboard") (v "1.0.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser" "winbase" "stringapiset" "basetsd"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xcb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "127qq7ypppp1gsryh3fnkmnndcv8iszqbsgizl5s2ar7zb1msmnq") (y #t)))

(define-public crate-arboard-1.0.1 (c (n "arboard") (v "1.0.1") (d (list (d (n "byteorder") (r "^1.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser" "winbase" "stringapiset" "basetsd"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xcb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1wzk31axpkpya1xaisxp03zg39yg04clwqz9ml46mxfhbb0z7m36")))

(define-public crate-arboard-1.0.2 (c (n "arboard") (v "1.0.2") (d (list (d (n "byteorder") (r "^1.3") (d #t) (t "cfg(windows)") (k 0)) (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("winuser" "winbase" "stringapiset" "basetsd"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xcb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0w792xxdpb9akqlgd7mz4q7x4ybsrsm643dxc0sfqlkp9f8s76vm")))

(define-public crate-arboard-1.1.0 (c (n "arboard") (v "1.1.0") (d (list (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.12") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "libc") (r "^0.2") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "minwindef" "stringapiset" "winuser" "winbase" "wingdi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "xcb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0wpyv732fxkplmiwik1sbgdlnbk748w1aqpkc71gn5lm2ns9w545")))

(define-public crate-arboard-1.2.0 (c (n "arboard") (v "1.2.0") (d (list (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.12") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "minwindef" "stringapiset" "winuser" "winbase" "wingdi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.4.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1srk595ny0f59aax04phnl154zirzhy5yxd635v9d12n3nh3kb63") (f (quote (("wayland-data-control" "wl-clipboard-rs"))))))

(define-public crate-arboard-1.2.1 (c (n "arboard") (v "1.2.1") (d (list (d (n "clipboard-win") (r "^4.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.21") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.12") (f (quote ("bmp"))) (t "cfg(windows)") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "minwindef" "stringapiset" "winuser" "winbase" "wingdi" "winnt"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.4.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1a5qfmpzcf5rwlwsligf9z1gzndpvj0jncc4s3k3z5g214c4l127") (f (quote (("wayland-data-control" "wl-clipboard-rs"))))))

(define-public crate-arboard-2.0.0 (c (n "arboard") (v "2.0.0") (d (list (d (n "clipboard-win") (r "^4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.12") (f (quote ("bmp"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "stringapiset" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.4.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "09jalaik5bkcvck85b0m78lahzpbllnqq2d43cc94sm577j8m0vg") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-2.0.1 (c (n "arboard") (v "2.0.1") (d (list (d (n "clipboard-win") (r "^4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.8.3") (d #t) (k 2)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.12") (f (quote ("bmp"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "scopeguard") (r "^1.1.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "simple_logger") (r "^1.11") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "stringapiset" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.4.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.8") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0yfhkaq6yxwzncxb2gc2h0gffi1an4fng9gwga2x1dki07zf2xhx") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-2.1.0 (c (n "arboard") (v "2.1.0") (d (list (d (n "clipboard-win") (r "^4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1.7") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.4.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1aal64xv6vi2ly2fx8w5bmxh230xllc4db44p3icvfjakr8clib0") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-2.1.1 (c (n "arboard") (v "2.1.1") (d (list (d (n "clipboard-win") (r "^4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.4.1") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.9") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1fq8gqbvajjmxdbd65aygf9ramgpvq1bcxj8mxx6vv5ms5a064nw") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.0.0 (c (n "arboard") (v "3.0.0") (d (list (d (n "clipboard-win") (r "^4.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.23") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.23.9") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.6") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.10") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "05ixn8pq928dmx31740kx1k4l11p6cgwcp9p2bfgpm7nvkkm5zrf") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.1.0 (c (n "arboard") (v "3.1.0") (d (list (d (n "clipboard-win") (r "^4.2.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.6") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.10") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0g4j1m6nxfxmij3dds5r8v4qh6nhsdd65m5cf7ip52vhzx7azs3r") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.1.1 (c (n "arboard") (v "3.1.1") (d (list (d (n "clipboard-win") (r "^4.4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.10") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0kbxhc47l147knxkaxm2z921q9595qad88hf7nm55lv2nnhg80k7") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.2.0 (c (n "arboard") (v "3.2.0") (d (list (d (n "clipboard-win") (r "^4.4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "once_cell") (r "^1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.10") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "0m0q04plv5gf7xbcrrgg205zv1qmmgfhjiwq99ydchgamhb1c16n") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.2.1 (c (n "arboard") (v "3.2.1") (d (list (d (n "clipboard-win") (r "^4.4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "simple_logger") (r "^2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.7") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.10") (d #t) (t "cfg(all(unix, not(any(target_os = \"macos\", target_os = \"android\", target_os = \"emscripten\"))))") (k 0)))) (h "1z70vn3lfv0697pv7f1p9mrvyi8r9zvy8mn0azin6qx7b2qg4mxc") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.3.0 (c (n "arboard") (v "3.3.0") (d (list (d (n "clipboard-win") (r "^4.4.2") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.22") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.9") (f (quote ("basetsd" "winuser" "winbase"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)))) (h "021w647fp6d1hy1cilysbh86wyn29aavh7accrva4nj30yqjkyxa") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "winapi/minwindef" "winapi/wingdi" "winapi/winnt") ("default" "image-data"))))))

(define-public crate-arboard-3.3.1 (c (n "arboard") (v "3.3.1") (d (list (d (n "clipboard-win") (r "^5.0.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.23") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_DataExchange" "Win32_System_Memory" "Win32_System_Ole"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.13") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)))) (h "02iqwp8zv41a1vmxr41s0ghb40rf58b5vnl5mzxxcgcs7mrkrahz") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "windows-sys") ("default" "image-data")))) (r "1.61")))

(define-public crate-arboard-3.3.2 (c (n "arboard") (v "3.3.2") (d (list (d (n "clipboard-win") (r "^5.0.0") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.23") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.24") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "image") (r "^0.24") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc") (r "^0.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc_id") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_DataExchange" "Win32_System_Memory" "Win32_System_Ole"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.13") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)))) (h "0n7s54yjbv3qksq2fivcdnvriplmzp8fd14dfrw7k7048cciy152") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "windows-sys") ("default" "image-data")))) (r "1.61")))

(define-public crate-arboard-3.4.0 (c (n "arboard") (v "3.4.0") (d (list (d (n "clipboard-win") (r "^5.3.1") (d #t) (t "cfg(windows)") (k 0)) (d (n "core-graphics") (r "^0.23") (o #t) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "image") (r "^0.25") (f (quote ("png"))) (o #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "image") (r "^0.25") (f (quote ("tiff"))) (o #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.25") (f (quote ("png"))) (o #t) (t "cfg(windows)") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "log") (r "^0.4") (d #t) (t "cfg(windows)") (k 0)) (d (n "objc2") (r "^0.5.1") (f (quote ("relax-void-encoding"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-app-kit") (r "^0.2.0") (f (quote ("NSPasteboard" "NSPasteboardItem" "NSImage"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc2-foundation") (r "^0.2.0") (f (quote ("NSArray" "NSString" "NSEnumerator" "NSGeometry"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "windows-sys") (r "^0.48.0") (f (quote ("Win32_Foundation" "Win32_Graphics_Gdi" "Win32_System_DataExchange" "Win32_System_Memory" "Win32_System_Ole"))) (o #t) (d #t) (t "cfg(windows)") (k 0)) (d (n "wl-clipboard-rs") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)) (d (n "x11rb") (r "^0.13") (d #t) (t "cfg(all(unix, not(any(target_os=\"macos\", target_os=\"android\", target_os=\"emscripten\"))))") (k 0)))) (h "12bzkkfgb8dy2hizf8928hs1sai4yhqbrg55a0a8zzz86fah1d4z") (f (quote (("wayland-data-control" "wl-clipboard-rs") ("image-data" "core-graphics" "image" "windows-sys") ("default" "image-data")))) (r "1.67.1")))

