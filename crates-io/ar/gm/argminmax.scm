(define-module (crates-io ar gm argminmax) #:use-module (crates-io))

(define-public crate-argminmax-0.1.0 (c (n "argminmax") (v "0.1.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "numpy") (r "^0.17.2") (d #t) (k 0)))) (h "0fs8qin1vmqp184axsjjal7hpjms2s8vm0wdsba54v88khdayc44")))

(define-public crate-argminmax-0.1.1 (c (n "argminmax") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "ndarray") (r "^0.15.6") (d #t) (k 0)))) (h "01d8b0g4klmkb2ps9aqw9fwqhmzkqria6gr89wa5agkxrs1wvkf3")))

(define-public crate-argminmax-0.2.0 (c (n "argminmax") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)))) (h "1r0af9adv9gkqvq0prhnigr411li39363cjr99lpysvmj4rb711n")))

(define-public crate-argminmax-0.2.1 (c (n "argminmax") (v "0.2.1") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)))) (h "0b9bwkx78b20d4zd16yhqrq70xg22pjq1bs2k6p07cdwywrkzg8l")))

(define-public crate-argminmax-0.3.0 (c (n "argminmax") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)))) (h "1kamkjc504hppxf75vg28zsn04fys7j9qwh1980jk4v9505fxq78")))

(define-public crate-argminmax-0.3.1 (c (n "argminmax") (v "0.3.1") (d (list (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)))) (h "1asip9q7bgr0lq1p1lsmdysbl3hry3xg24wza6yy76q9fnrsagqz")))

(define-public crate-argminmax-0.4.0 (c (n "argminmax") (v "0.4.0") (d (list (d (n "arrow") (r ">0") (o #t) (k 0)) (d (n "codspeed-criterion-compat") (r "^1.0.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)))) (h "1fqz3fz0fz6wwb5wcd5lyhriwjrn4vf583brnl5sq1wd3hxqvg79") (f (quote (("default" "half"))))))

(define-public crate-argminmax-0.5.0 (c (n "argminmax") (v "0.5.0") (d (list (d (n "arrow") (r ">0") (o #t) (k 0)) (d (n "codspeed-criterion-compat") (r "^1.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "rand") (r "^0.7.2") (k 2)) (d (n "rstest") (r "^0.16") (k 2)) (d (n "rstest_reuse") (r "^0.5") (k 2)))) (h "1nak81zll5313jgxfxd0vgyn5g15m4n5prkkhq0yb1gpn7y4w6ni") (f (quote (("float") ("default" "float")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("half" "dep:half") ("arrow" "dep:arrow"))))))

(define-public crate-argminmax-0.6.0 (c (n "argminmax") (v "0.6.0") (d (list (d (n "arrow") (r ">0") (o #t) (k 0)) (d (n "arrow2") (r ">0.0") (o #t) (k 0)) (d (n "codspeed-criterion-compat") (r "^1.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "rand") (r "^0.7.2") (k 2)) (d (n "rstest") (r "^0.16") (k 2)) (d (n "rstest_reuse") (r "^0.5") (k 2)))) (h "17vkqr3alsdv73ly5xxg270qxvjkis2z011l8d1z00h6valf9f5n") (f (quote (("float") ("default" "float")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("half" "dep:half") ("arrow2" "dep:arrow2") ("arrow" "dep:arrow"))))))

(define-public crate-argminmax-0.6.1 (c (n "argminmax") (v "0.6.1") (d (list (d (n "arrow") (r ">0") (o #t) (k 0)) (d (n "arrow2") (r ">0.0") (o #t) (k 0)) (d (n "codspeed-criterion-compat") (r "^1.1") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "half") (r "^2.1.0") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (k 0)) (d (n "rand") (r "^0.7.2") (k 2)) (d (n "rstest") (r "^0.16") (k 2)) (d (n "rstest_reuse") (r "^0.5") (k 2)))) (h "1lnvpkvdsvdbsinhik6srx5c2j3gqkaj92iz93pnbdr9cjs0h890") (f (quote (("nightly_simd") ("float") ("default" "nightly_simd" "float")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("half" "dep:half") ("arrow2" "dep:arrow2") ("arrow" "dep:arrow"))))))

(define-public crate-argminmax-0.6.2 (c (n "argminmax") (v "0.6.2") (d (list (d (n "arrow") (r ">0") (o #t) (k 0)) (d (n "arrow2") (r ">0.0") (o #t) (k 0)) (d (n "codspeed-criterion-compat") (r "^2.3.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "half") (r "^2.3.1") (f (quote ("num-traits"))) (o #t) (k 0)) (d (n "ndarray") (r "^0.15.6") (o #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.8.5") (k 2)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "rstest_reuse") (r "^0.6") (k 2)))) (h "1alfp2wfh3pms6f5fj8qw9birndgac2jd2shdl2xascxsrclnhjj") (f (quote (("nightly_simd") ("float") ("default" "nightly_simd" "float")))) (s 2) (e (quote (("ndarray" "dep:ndarray") ("half" "dep:half") ("arrow2" "dep:arrow2") ("arrow" "dep:arrow"))))))

