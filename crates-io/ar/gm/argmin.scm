(define-module (crates-io ar gm argmin) #:use-module (crates-io))

(define-public crate-argmin-0.0.1 (c (n "argmin") (v "0.0.1") (d (list (d (n "clippy") (r "^0.0.184") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1ya5rw147w4xkdxcs9kgwi60khxwh97478adlj56p2w85095rbdc") (f (quote (("default"))))))

(define-public crate-argmin-0.0.2 (c (n "argmin") (v "0.0.2") (d (list (d (n "clippy") (r "^0.0.184") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1v0vjjzw66q6vlafajfvzsy159k861pj3ld2vh1636s9h1x806ij") (f (quote (("default"))))))

(define-public crate-argmin-0.0.3 (c (n "argmin") (v "0.0.3") (d (list (d (n "clippy") (r "^0.0.185") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "0kgv7my14kwbjk38cz1pv1r72hhvzfl2xx2mywm9r8anl2xr04c6") (f (quote (("default"))))))

(define-public crate-argmin-0.0.4 (c (n "argmin") (v "0.0.4") (d (list (d (n "clippy") (r "^0.0.185") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1xlbj7cn3vpfqlxfdnhx7qc23hkcy5aagmdkn8xzn992wpmjg53n") (f (quote (("default"))))))

(define-public crate-argmin-0.0.5 (c (n "argmin") (v "0.0.5") (d (list (d (n "clippy") (r "^0.0.185") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "15sqap5g0mr7wm3ayjd4i26i9bcpk09ypaw5q8s6r1jmcn97l6fb") (f (quote (("default"))))))

(define-public crate-argmin-0.0.6 (c (n "argmin") (v "0.0.6") (d (list (d (n "clippy") (r "^0.0.186") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1abjfr1k1z8f2b7ckv8drqchgmbf8pvqna20dqwpaak09frcvw1q") (f (quote (("default"))))))

(define-public crate-argmin-0.0.7 (c (n "argmin") (v "0.0.7") (d (list (d (n "clippy") (r "^0.0.186") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "08lff7k1j9mafbaws23v7x4kx74rl6lbmllsgc35w0j7578q2j9l") (f (quote (("default"))))))

(define-public crate-argmin-0.0.8 (c (n "argmin") (v "0.0.8") (d (list (d (n "clippy") (r "^0.0.186") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1q6d3sk2d1nkrvw6n6pwr3l3r3hcbv03ni1hrq8pc2qrfqx09sq7") (f (quote (("default"))))))

(define-public crate-argmin-0.0.9 (c (n "argmin") (v "0.0.9") (d (list (d (n "clippy") (r "^0.0.186") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1fj73ad5qvsrhawav3bxn1gvhnh8yz0k9mf73iy0049dfcmknp5d") (f (quote (("default"))))))

(define-public crate-argmin-0.0.10 (c (n "argmin") (v "0.0.10") (d (list (d (n "clippy") (r "^0.0.186") (o #t) (d #t) (k 0)) (d (n "error-chain") (r "^0.11.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.11.1") (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.9.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "num") (r "^0.1.41") (d #t) (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)))) (h "1qmq03957jy1wnq1aal8smqmc2jd4kdxfq9jnhhjfspmg23wxczy") (f (quote (("default"))))))

(define-public crate-argmin-0.1.0 (c (n "argmin") (v "0.1.0") (d (list (d (n "argmin_codegen") (r "^0.1.0") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "0an8igmdx49pm0iq1p7f9fqf8f5y8hywcl419waxs064bnphcd8p") (f (quote (("default"))))))

(define-public crate-argmin-0.1.1 (c (n "argmin") (v "0.1.1") (d (list (d (n "argmin_codegen") (r "^0.1.1") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.1") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "1ivgzm7pr7grb9cjlysh5c3lgv57yphmk1dfh2dv4vbzscxc166f") (f (quote (("default"))))))

(define-public crate-argmin-0.1.2 (c (n "argmin") (v "0.1.2") (d (list (d (n "argmin_codegen") (r "^0.1.2") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.2") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "1hgbzb9mm77sz40m1x5c5xckyc6650m3jz0qb0pqzprxkhfgydf2") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.1.3 (c (n "argmin") (v "0.1.3") (d (list (d (n "argmin_codegen") (r "^0.1.3") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.3") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "0iyb19zg02vpbqjaagslhv78k5wywb29h70amhvlikhbgb6wjk07") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.1.4 (c (n "argmin") (v "0.1.4") (d (list (d (n "argmin_codegen") (r "^0.1.4") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.4") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "0bpjcgypzc3gpi1jll0ylpjrcrwvxjm9fxk3pw7g5dm2wmg1vi12") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.1.5 (c (n "argmin") (v "0.1.5") (d (list (d (n "argmin_codegen") (r "^0.1.5") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.5") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.0") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "1ab5ypjyx1hf7mvppblyb8pxxggqwnfkibmrh5f8crymb8ybmh00") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.1.6 (c (n "argmin") (v "0.1.6") (d (list (d (n "argmin_codegen") (r "^0.1.6") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.6") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.0") (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "rand") (r "^0.5.5") (d #t) (k 0)))) (h "1gad6gjr6m0dbsapyk7x9ik8sv37bfx5y3yxm3nnzx4rln9hkbgm") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.1.7 (c (n "argmin") (v "0.1.7") (d (list (d (n "argmin_codegen") (r "^0.1.7") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.7") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.4") (d #t) (k 2)) (d (n "rand") (r "^0.6.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "1zkqddfwnlvy14g0yc1swjvn2gbfzk2v846kfghxkbxlyi5jv6bf") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.1.8 (c (n "argmin") (v "0.1.8") (d (list (d (n "argmin_codegen") (r "^0.1.8") (d #t) (k 0)) (d (n "argmin_core") (r "^0.1.8") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.4") (d #t) (k 2)) (d (n "rand") (r "^0.6.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "03zbdhwy36plkldp5snyawslj8w95i51l59wwmxpna98xf9dvym9") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.0 (c (n "argmin") (v "0.2.0") (d (list (d (n "argmin_core") (r "^0.2.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.4") (d #t) (k 2)) (d (n "rand") (r "^0.6.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "1n11hzj1pgxm0m46yhz9m6ngksyf3v8a7n8razv1fkks5w3df8dg") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.1 (c (n "argmin") (v "0.2.1") (d (list (d (n "argmin_core") (r "^0.2.1") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.4") (d #t) (k 2)) (d (n "rand") (r "^0.6.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "0yrb6jgwij1kkfl3v4k6nrlb3fp3ivcvd56dv0ba7dybh1djdvp3") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.2 (c (n "argmin") (v "0.2.2") (d (list (d (n "argmin_core") (r "^0.2.2") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.27") (d #t) (k 2)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "0vb2zgmflj515l6hg8x29vk0as2pqxxz47sw302s9mz1fkwq31iw") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.3 (c (n "argmin") (v "0.2.3") (d (list (d (n "argmin_core") (r "^0.2.3") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.27") (d #t) (k 2)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "06ihgj1nixyzm2fzlvfgdcdsrgpl5dfm9n5lmw919sl94mmwrlzy") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.4 (c (n "argmin") (v "0.2.4") (d (list (d (n "argmin_core") (r "^0.2.4") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.27") (d #t) (k 2)) (d (n "ndarray") (r "^0.12.1") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.10.0") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.1.1") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)))) (h "0lk6aizap8wfq0zz5fxq67202xqm38sg8p8p2lchym595r875lh2") (f (quote (("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.5 (c (n "argmin") (v "0.2.5") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "argmin_core") (r "^0.2.5") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.32") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)))) (h "0s2imksxj27jkf510pqivgf6g0yyq541c2nk0psk3n8pf0f76xa2") (f (quote (("visualizer" "argmin_core/visualizer") ("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.2.6 (c (n "argmin") (v "0.2.6") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "argmin_core") (r "^0.2.5") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.32") (d #t) (k 2)) (d (n "ndarray") (r "^0.13") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "paste") (r "^0.1.5") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("rc"))) (d #t) (k 0)))) (h "1nn7fc1mnw7cmprdbzj4dbxig8ijkbsb97hx6iqap8ggaw5c4gvm") (f (quote (("visualizer" "argmin_core/visualizer") ("ndarrayl" "argmin_core/ndarrayl") ("default") ("ctrlc" "argmin_core/ctrlc"))))))

(define-public crate-argmin-0.3.0 (c (n "argmin") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.2") (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.34") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xz2g7yz73pprlsfjc747xiigdhfj8n46mf5sqvxfwaxdd1774nn") (f (quote (("visualizer" "gnuplot") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand" "finitediff/ndarray") ("default"))))))

(define-public crate-argmin-0.3.1 (c (n "argmin") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.3.2") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.2") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.36") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.13") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.12") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-complex") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ppylmf096xayxrb4vspilap69rikbnakrx9rpg8x3pfpw3ykmzy") (f (quote (("visualizer" "gnuplot") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("default"))))))

(define-public crate-argmin-0.4.0 (c (n "argmin") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.3") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24.1") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "00y5qxyi2rz46dx0nl9n0jf9za3c5d6qdi3afn3m3w21wzdinvbs") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.1 (c (n "argmin") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.3") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24.1") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11bhs5zkkg4mhj1p01qp8hxdcvxib41m7i2aqxkkx17i1wsqss5a") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.2 (c (n "argmin") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.3") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26.1") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0y6bzksaa9ng1a1j7kwxy45hkqd43wdaz1fk1mnj146xh5z8kgx8") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.3 (c (n "argmin") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.3") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26.1") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1s49cbgmhjpxzaiyw155zy68kplddmvxa6zi801wn755cdzmkmjv") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.4 (c (n "argmin") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.3") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26.1") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1zhwd0kya6p1b9ccb0wasx8nll64rqkz45xjrm92i7gr0kvkxsjs") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.5 (c (n "argmin") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.3") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26.2") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.14") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.13") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0a3bh7gm81nbyj4388z70ywzs38nfz39s208k114kr33xh6aiwg6") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.6 (c (n "argmin") (v "0.4.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.28.0") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1haz13wxnr4cg0xgq8snazgrxjinld7gm6gqh7pxwlsjj83fxvlk") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.4.7 (c (n "argmin") (v "0.4.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29.0") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("openblas"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17nkf28hl3ikr1da1m1n65p8aayllgc4m3k59vgya18b4jh7gh3z") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default"))))))

(define-public crate-argmin-0.5.0 (c (n "argmin") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.30.0") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (f (quote ("serde1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "18xsj27ipicrzbvivypcwq26jwa77whijk5byxfi7af4878a6712") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("slog-logger" "slog" "slog-term" "slog-async" "slog-json") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default" "slog-logger"))))))

(define-public crate-argmin-0.5.1 (c (n "argmin") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("now"))) (d #t) (k 0)) (d (n "nalgebra") (r "^0.30.0") (f (quote ("serde-serialize"))) (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "ndarray-rand") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-complex") (r "^0.4") (d #t) (k 0)) (d (n "paste") (r "^1.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (f (quote ("serde1"))) (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (f (quote ("serde1"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.3.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.3.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "04b59p4dan6gmbqpkvwvhn513fk4lxfvj4r44jhgc9djgikb21il") (f (quote (("wasm-bindgen" "instant/wasm-bindgen") ("visualizer" "gnuplot") ("stdweb" "instant/stdweb") ("slog-logger" "slog" "slog-term" "slog-async" "slog-json") ("ndarrayl" "ndarray" "ndarray-linalg" "ndarray-rand") ("nalgebral" "nalgebra") ("default" "slog-logger"))))))

(define-public crate-argmin-0.6.0-rc.1 (c (n "argmin") (v "0.6.0-rc.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.1.0-rc.1") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.8.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0cb9wcxlk0l5654szv18m39wg8pqm15iv1if9bx1pgq21s273hwc") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde") ("_nalgebral" "argmin-math/nalgebra_latest-serde")))) (y #t)))

(define-public crate-argmin-0.6.0-rc.2 (c (n "argmin") (v "0.6.0-rc.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.1.0-rc.1") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.8.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nas67fv039r2qw7l60bx8day8k1jpfsmmhh59mf23pgb8r4xl84") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde") ("_nalgebral" "argmin-math/nalgebra_latest-serde"))))))

(define-public crate-argmin-0.6.0 (c (n "argmin") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.1.0") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.8.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gx5k4f8464db882ywav9zy2ib00hqvcxifl1jzbzijs8h55abdr") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde") ("_nalgebral" "argmin-math/nalgebra_latest-serde"))))))

(define-public crate-argmin-0.7.0 (c (n "argmin") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.2") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.8.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "13bz9bckdp8jvgnf932p34dcwzdsc609lx4ndd77l48h6p6wi62n") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde" "argmin-math/_dev_linalg_latest") ("_nalgebral" "argmin-math/nalgebra_latest-serde"))))))

(define-public crate-argmin-0.8.0 (c (n "argmin") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.3") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.1.2") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.14") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.4.1") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.8.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0k5i0011m18fvfvjkvn8rmhnmgfsw2n59wfihrr03hpd18x3sp7m") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("full" "default" "slog-logger" "serde1" "ctrlc") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde" "argmin-math/_dev_linalg_latest") ("_nalgebral" "argmin-math/nalgebra_latest-serde") ("_full_dev" "full" "_ndarrayl" "_nalgebral"))))))

(define-public crate-argmin-0.8.1 (c (n "argmin") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.3") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.4") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.37") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.6") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.9") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1cm1592m4xffi2zd4apnrf4cdizdmzjmax52jkfhn8lmx77ihz49") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("full" "default" "slog-logger" "serde1" "ctrlc") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde" "argmin-math/_dev_linalg_latest") ("_nalgebral" "argmin-math/nalgebra_latest-serde") ("_full_dev" "full" "_ndarrayl" "_nalgebral"))))))

(define-public crate-argmin-0.9.0 (c (n "argmin") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.3") (f (quote ("primitives"))) (k 0)) (d (n "argmin_testfunctions") (r "^0.1.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.4") (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "gnuplot") (r "^0.0.39") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("serde-serialize"))) (d #t) (k 2)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("netlib"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2.7") (f (quote ("dynamic-keys"))) (o #t) (d #t) (k 0)) (d (n "slog-async") (r "^2.7") (o #t) (d #t) (k 0)) (d (n "slog-json") (r "^2.6") (o #t) (d #t) (k 0)) (d (n "slog-term") (r "^2.9") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "10pqavpn09fy0m6xmijy4g7ja5nvn1pk1ds84w3vj7zsb190ng2j") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("slog-logger" "slog" "slog-term" "slog-async") ("serde1" "serde" "serde_json" "rand/serde1" "bincode" "slog-json" "rand_xoshiro/serde1") ("full" "default" "slog-logger" "serde1" "ctrlc") ("default" "slog-logger" "serde1") ("_ndarrayl" "argmin-math/ndarray_latest-serde" "argmin-math/_dev_linalg_latest") ("_nalgebral" "argmin-math/nalgebra_latest-serde") ("_full_dev" "full" "_ndarrayl" "_nalgebral"))))))

(define-public crate-argmin-0.10.0 (c (n "argmin") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "approx") (r "^0.5.0") (d #t) (k 2)) (d (n "argmin-math") (r "^0.4") (f (quote ("primitives"))) (k 0)) (d (n "argmin-math") (r "^0.4") (f (quote ("vec"))) (d #t) (k 2)) (d (n "argmin_testfunctions") (r "^0.2.0") (d #t) (k 2)) (d (n "ctrlc") (r "^3.2.4") (f (quote ("termination"))) (o #t) (d #t) (k 0)) (d (n "finitediff") (r "^0.1.4") (f (quote ("ndarray"))) (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("serde-1"))) (d #t) (k 2)) (d (n "ndarray-linalg") (r "^0.16") (f (quote ("intel-mkl-static"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15nm32h4vamz8g6zagk5lza69yh88vdfdsg65wfqi2xijvalj2kn") (f (quote (("wasm-bindgen" "instant/wasm-bindgen" "getrandom/js") ("serde1" "serde" "rand_xoshiro/serde1") ("full" "default" "serde1" "ctrlc") ("default") ("_ndarrayl" "argmin-math/ndarray_latest") ("_full_dev" "full" "_ndarrayl"))))))

