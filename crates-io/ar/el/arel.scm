(define-module (crates-io ar el arel) #:use-module (crates-io))

(define-public crate-arel-0.0.0 (c (n "arel") (v "0.0.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0jvnp4g9c22i785sykr3vxaqlmhcmxnc3yii2n2q74hj098j49jp") (y #t)))

(define-public crate-arel-0.0.1 (c (n "arel") (v "0.0.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "16bv6qa1fzfyxqhsla72i6mib63xrjb3xg2hw9wrbn6y4v6lcfls") (y #t)))

(define-public crate-arel-0.0.2 (c (n "arel") (v "0.0.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1a8qfzcnrm4q9vpvhypjlq13mbf09dzg96rpgd31sn5hv45bsprx") (y #t)))

(define-public crate-arel-0.0.3 (c (n "arel") (v "0.0.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0z9lqvq17fnfh8q50fc3w9sqvpbmf4bv23ikajk6giyw5pwpys01") (y #t)))

(define-public crate-arel-0.0.4 (c (n "arel") (v "0.0.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0vdl6yc0fkwn8rrmzdfvijc633racz802wixgh2zb85s1a5kzx2j") (y #t)))

(define-public crate-arel-0.0.5 (c (n "arel") (v "0.0.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "152ccr8v8amx229wa9b2y4lrmr2m1ip1mfp0wbp5yrw6v950k8wb") (y #t)))

(define-public crate-arel-0.0.6 (c (n "arel") (v "0.0.6") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0dgn3dv2crljfc1n2gpijkmiqd287c7a0n3jpz81w38bndkf9fbj") (y #t)))

(define-public crate-arel-0.0.7 (c (n "arel") (v "0.0.7") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any"))) (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "05710xpq66iqhhl5yi9npzf0hbzygz5hqla0b1l136d5c0mv9p2q") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.8 (c (n "arel") (v "0.0.8") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any"))) (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1cmay38r23rl1r6yzf1svkq5rbi96k6xdxvfjgln9dnxr44c1ris") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.9 (c (n "arel") (v "0.0.9") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any"))) (d #t) (k 0)) (d (n "tokio") (r "^1.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1cbdn4nh7j2gcy6dcggm4mcfk7j420k8zd5sb5ima8hwdxvab75r") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.10 (c (n "arel") (v "0.0.10") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1q4jbh0i25hcl44c1w7kfm7cnqzn7clc0033a1ggracmwadhbwfd") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.11 (c (n "arel") (v "0.0.11") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0rzphal75lg75abqrigw1rc0wv9sg94nr3b2bqa2hphbx9ds2kr5") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.12 (c (n "arel") (v "0.0.12") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "03wpmh71krkdcx9ydxwmjm3vpdsvw1q7nnf2x7n9bmzkhqv0ca0d") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.13 (c (n "arel") (v "0.0.13") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0xnxsqbq89pprqmnsv0wbmyxll4wfjm89fr5l4is9sdd40frnigd") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.14 (c (n "arel") (v "0.0.14") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0nmspg1bqra5dg90ci7ffh6rpz271j4kgwg264bpijr32cqppq0w") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.15 (c (n "arel") (v "0.0.15") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0pbxawyqkcq52p85p4y9wqn6mzbkibm7flw4ha05z1jvql1j9xja") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.0.16 (c (n "arel") (v "0.0.16") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "15nkx761f8h9s7zsm5iq7snc5622vzssqpr1gxh29x69kaj7jj5i") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.1.0 (c (n "arel") (v "0.1.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("runtime-tokio-native-tls" "any" "chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "1czm044vf9v3jrndp3rvshsz77h23nb8dpyyrw9sw19ljvzhmz31") (f (quote (("sqlite" "sqlx/sqlite") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("mssql" "sqlx/mssql")))) (y #t)))

(define-public crate-arel-0.1.1 (c (n "arel") (v "0.1.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel_macro") (r "^0.0.9") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sqlx") (r "^0.5") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)))) (h "0frb8ky5gdzvp7s0zk1g2m7dhlwfpi5jpmawwiyrbzls41gr5c9m") (f (quote (("sqlite" "sqlx/sqlite" "sqlx/any") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("postgres" "sqlx/postgres" "sqlx/any") ("mysql" "sqlx/mysql" "sqlx/any") ("mssql" "sqlx/mssql" "sqlx/any") ("default" "runtime-tokio-native-tls"))))))

(define-public crate-arel-0.2.0 (c (n "arel") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0ikcns9744c19gzhri5999gfrkcysp0pwpvr4k5y4ifv2v9lg0gc") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.1 (c (n "arel") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "05jv5ygxly848mpj5xd8w96pbvcd33aljbrsxfx8n7pykdf6hphr") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.2 (c (n "arel") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0yqyx10dqcixpyg41ky7hchiz7id7a6b20y834glg4v4ypzacyb6") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.3 (c (n "arel") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1iiycjaqk52pyj3s1gb64camzc9nwzc8c1mpmw6vpfk7gxibqbc9") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.4 (c (n "arel") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0398xrm2r7apjvwmbkp3p5akijncdpcbl150m1bj66rs7x0xxxj4") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.5 (c (n "arel") (v "0.2.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "14pxgi91a1n3kys6fjha342mjr2q0wj5afxqa0s6jzggwdlf72w6") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.6 (c (n "arel") (v "0.2.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0h4p0bcghazi42ab50pi38gkzmwy7kbm760yz2zn3hwgwxins2c4") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.7 (c (n "arel") (v "0.2.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1r3inqsjzxb6w156w5gv530v9p6bjbd7m6vywxcrqbmskd6r11pz") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.8 (c (n "arel") (v "0.2.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "05iv8fi1v761jcf4zzyqbasklnmrr16vl0xmn8lw37agcn4i7zqx") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.2.9 (c (n "arel") (v "0.2.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arel-macros") (r "^0.0.9") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "02k1jnpi7wrzs2g2zsf8xmi6q440j1jadbnig0sqmd6yngc25xrx") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.0 (c (n "arel") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0bsfldxpl52mcsxkh6jyrygrbprnd3lp4wqrv05kclfz7avn6h7r") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.1 (c (n "arel") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0k664kn7fgc5vzrh55hnzhrs4z3ysacs1287cv5smm63819ayb7d") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.2 (c (n "arel") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1df2dp31wdjppplqi9a91h5g8jmzjjkc6qxrp6ywdhb3h4a1yv43") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.3 (c (n "arel") (v "0.3.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1spzs4w3vdzy4g1nii7p9vhwx77im665h2zr2ckal5mfnyjbzb97") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.4 (c (n "arel") (v "0.3.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1pjryynrpx8f4fp2mfsp987v83qzfpw6imvxk0h0si61nxig6fpd") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.5 (c (n "arel") (v "0.3.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1h32iip4rbfkwzgdxs7x1zbfnhflqf7n491jv08nvbzg9sgh746r") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.6 (c (n "arel") (v "0.3.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "0i95pr11bviwf1glnjy41494h1shbn5p17f8k49ja2p0bndh1d17") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.7 (c (n "arel") (v "0.3.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.7") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "16vzi52xr3d5l974bxgq9hbc2hjsszg6hx9ss46m9am5xz2zsm4j") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (y #t) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

(define-public crate-arel-0.3.8 (c (n "arel") (v "0.3.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "arel-macros") (r "^0.3.8") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bytes") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (o #t) (d #t) (k 0)))) (h "1b4r0ka6002q93sr0hzdm5676hi8x0hzs8nyr9nvhmjxqw158bn5") (f (quote (("with-chrono" "chrono" "sqlx/chrono") ("tls-rustls" "sqlx/tls-rustls") ("tls-native-tls" "sqlx/tls-native-tls") ("sqlite" "sqlx/sqlite") ("runtime-tokio-rustls" "sqlx/runtime-tokio-rustls") ("runtime-tokio-native-tls" "sqlx/runtime-tokio-native-tls") ("runtime-tokio" "sqlx/runtime-tokio") ("runtime-async-std-rustls" "sqlx/runtime-async-std-rustls") ("runtime-async-std-native-tls" "sqlx/runtime-async-std-native-tls") ("runtime-async-std" "sqlx/runtime-async-std") ("postgres" "sqlx/postgres") ("mysql" "sqlx/mysql") ("default" "with-json" "with-chrono")))) (s 2) (e (quote (("with-json" "serde_json" "bytes/serde" "chrono?/serde" "uuid?/serde" "sqlx/json"))))))

