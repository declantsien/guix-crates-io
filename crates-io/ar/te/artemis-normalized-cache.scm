(define-module (crates-io ar te artemis-normalized-cache) #:use-module (crates-io))

(define-public crate-artemis-normalized-cache-0.1.0-alpha.0 (c (n "artemis-normalized-cache") (v "0.1.0-alpha.0") (d (list (d (n "artemis") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0pimhdisw1n5adx0xx65rx2i4d5gvhahyqbhcaa6n7ps9kzqzhi0")))

(define-public crate-artemis-normalized-cache-0.1.0-alpha.1 (c (n "artemis-normalized-cache") (v "0.1.0-alpha.1") (d (list (d (n "artemis") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0n44yssgrbs1wmq8qnj3l5qyw7pa8fmq0xgschz2d1mgcl0c88bf")))

(define-public crate-artemis-normalized-cache-0.1.0-alpha.2 (c (n "artemis-normalized-cache") (v "0.1.0-alpha.2") (d (list (d (n "artemis") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "crossbeam-epoch") (r "^0.8") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1z70nq92l20gli9f4mv24p0g3gdjl1krvpbvkjvvbq8b94kvqccy")))

(define-public crate-artemis-normalized-cache-0.1.0-alpha.3 (c (n "artemis-normalized-cache") (v "0.1.0-alpha.3") (d (list (d (n "artemis") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-epoch") (r "^0.8") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0p735mwk2ady0888xprfhdyx42kpkcf74kjij7p663am9lmlzanx")))

(define-public crate-artemis-normalized-cache-0.1.0-alpha.4 (c (n "artemis-normalized-cache") (v "0.1.0-alpha.4") (d (list (d (n "artemis") (r "^0.1.0-alpha.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-epoch") (r "^0.8") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0brar0hbsgm18l99x7p0j8r7srpfgqk9l67j5sz8prfx5yppdjdi")))

(define-public crate-artemis-normalized-cache-0.1.0 (c (n "artemis-normalized-cache") (v "0.1.0") (d (list (d (n "artemis") (r "^0.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-epoch") (r "^0.8") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0sb6b0v0i3cja3mglh1kg5y246x7mmipy3mk4y2bd42fprmr4z2x")))

(define-public crate-artemis-normalized-cache-0.1.1 (c (n "artemis-normalized-cache") (v "0.1.1") (d (list (d (n "artemis") (r "^0.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam-epoch") (r "^0.8") (d #t) (k 0)) (d (n "flurry") (r "^0.1") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "racetrack") (r "^0.0.2") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "type-map") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "05cak0bd7mgprfjqfa3a63dpsbipx0ksb14npfzi38rdv5y57311")))

