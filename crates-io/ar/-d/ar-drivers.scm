(define-module (crates-io ar -d ar-drivers) #:use-module (crates-io))

(define-public crate-ar-drivers-0.1.0 (c (n "ar-drivers") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (k 0)))) (h "1c0wvqj74dvc0avrhrvixysfjm9lmps7xcml960mxvxngxv33zws")))

(define-public crate-ar-drivers-0.2.0 (c (n "ar-drivers") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (k 0)) (d (n "serialport") (r "^4.2") (d #t) (k 0)))) (h "0lbwgx99j5yw9s67fvpa6ib6ac87m228wd6ngd73x2k7fnmd7s7p")))

(define-public crate-ar-drivers-0.2.1 (c (n "ar-drivers") (v "0.2.1") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "rusb") (r "^0.9.1") (d #t) (k 0)) (d (n "serialport") (r "^4.2") (d #t) (k 0)))) (h "0jfilwip58w9hsfyjbni4wc87w1lyg4p4vgvszxz6ic8fxabrmr5")))

(define-public crate-ar-drivers-0.3.0 (c (n "ar-drivers") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "hidapi") (r "^2.2.2") (o #t) (d #t) (k 0)) (d (n "rusb") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "tinyjson") (r "^2.5.1") (o #t) (d #t) (k 0)))) (h "0l3h7ag5nh5wi6pjfyddhwzk7l21fcj3b29b8n6yrn8naf3a53v7") (f (quote (("rokid" "rusb") ("nreal" "hidapi" "tinyjson") ("mad_gaze" "serialport") ("default" "mad_gaze" "rokid" "nreal"))))))

(define-public crate-ar-drivers-0.4.0 (c (n "ar-drivers") (v "0.4.0") (d (list (d (n "bytemuck") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "hidapi") (r "^2.4.1") (f (quote ("linux-static-libusb"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "hidapi") (r "^2.4.1") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "nalgebra") (r "^0.32.3") (f (quote ("std"))) (k 0)) (d (n "opencv") (r "^0.84.2") (f (quote ("highgui" "imgproc" "calib3d"))) (k 2)) (d (n "rusb") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "tinyjson") (r "^2.5.1") (o #t) (d #t) (k 0)))) (h "11v63ylgy57hpn04ggdv4mhaz29708ach5vhx0idl21pi349qvf6") (f (quote (("rokid" "rusb") ("nreal" "hidapi" "tinyjson" "bytemuck") ("mad_gaze" "serialport") ("default" "mad_gaze" "rokid" "nreal"))))))

(define-public crate-ar-drivers-0.4.1 (c (n "ar-drivers") (v "0.4.1") (d (list (d (n "bytemuck") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "hidapi") (r "^2.4.1") (f (quote ("linux-static-libusb"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "hidapi") (r "^2.4.1") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "nalgebra") (r "^0.32.3") (f (quote ("std"))) (k 0)) (d (n "opencv") (r "^0.84.2") (f (quote ("highgui" "imgproc" "calib3d"))) (k 2)) (d (n "rusb") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "tinyjson") (r "^2.5.1") (o #t) (d #t) (k 0)))) (h "144xch5vf8afh6d25582577vdvl96l0c8rf2xzj71xr4zv5gklk9") (f (quote (("rokid" "rusb") ("nreal" "hidapi" "tinyjson" "bytemuck") ("mad_gaze" "serialport") ("default" "mad_gaze" "rokid" "nreal"))))))

(define-public crate-ar-drivers-0.4.2 (c (n "ar-drivers") (v "0.4.2") (d (list (d (n "bytemuck") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "hidapi") (r "^2.4.1") (f (quote ("linux-static-libusb"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "hidapi") (r "^2.4.1") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "nalgebra") (r "^0.32.3") (f (quote ("std"))) (k 0)) (d (n "opencv") (r "^0.84.2") (f (quote ("highgui" "imgproc" "calib3d"))) (k 2)) (d (n "rusb") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "tinyjson") (r "^2.5.1") (o #t) (d #t) (k 0)))) (h "0di6ina31f3ljy6nbh9k9iiwcdfm0lac4cgksrcv81cr1m36fq6h") (f (quote (("rokid" "rusb") ("nreal" "hidapi" "tinyjson" "bytemuck") ("mad_gaze" "serialport") ("default" "mad_gaze" "rokid" "nreal"))))))

(define-public crate-ar-drivers-0.4.3 (c (n "ar-drivers") (v "0.4.3") (d (list (d (n "bytemuck") (r "^1.13.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive"))) (d #t) (k 2)) (d (n "hidapi") (r "^2.4.1") (f (quote ("linux-static-libusb"))) (o #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "hidapi") (r "^2.4.1") (o #t) (d #t) (t "cfg(not(target_os = \"android\"))") (k 0)) (d (n "nalgebra") (r "^0.32.3") (f (quote ("std"))) (k 0)) (d (n "opencv") (r "^0.84.2") (f (quote ("highgui" "imgproc" "calib3d"))) (k 2)) (d (n "rusb") (r "^0.9.2") (o #t) (d #t) (k 0)) (d (n "serialport") (r "^4.2") (o #t) (d #t) (k 0)) (d (n "tinyjson") (r "^2.5.1") (o #t) (d #t) (k 0)))) (h "0xw8r6k17l4w8qksxhxyly8133mp133kwivk30hysa6n68v91ljk") (f (quote (("rokid" "rusb") ("nreal" "hidapi" "tinyjson" "bytemuck") ("mad_gaze" "serialport") ("grawoow" "rusb" "tinyjson" "bytemuck") ("default" "mad_gaze" "rokid" "nreal" "grawoow"))))))

