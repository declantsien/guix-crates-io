(define-module (crates-io ar bi arbiter-core) #:use-module (crates-io))

(define-public crate-arbiter-core-0.5.0 (c (n "arbiter-core") (v "0.5.0") (d (list (d (n "RustQuant") (r "^0.0.26") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_enum") (r "^0.2.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers") (r "^2.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "revm") (r "^3.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "full"))) (d #t) (k 0)))) (h "1zsv4dh0sm5d65sx1ial1y6iivfpqf72cxskvxmhb2844gvfbkz6")))

(define-public crate-arbiter-core-0.5.1 (c (n "arbiter-core") (v "0.5.1") (d (list (d (n "RustQuant") (r "^0.0.26") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.71") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_enum") (r "^0.2.0") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "ethers") (r "^2.0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 2)) (d (n "futures-timer") (r "^3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 2)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "revm") (r "^3.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "statrs") (r "^0.16.0") (d #t) (k 0)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("macros" "full"))) (d #t) (k 0)))) (h "174asg8glz2yish7zl4xzdhkmjw1h7fm8f9rpfzyqc441xd6ifjh")))

(define-public crate-arbiter-core-0.6.0 (c (n "arbiter-core") (v "0.6.0") (d (list (d (n "RustQuant") (r "=0.0.33") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "=0.1.73") (d #t) (k 0)) (d (n "atomic_enum") (r "=0.2.0") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.28") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.28") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.107") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.49") (d #t) (k 0)) (d (n "tokio") (r "=1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1fw5dj27mzabm7hbkycq8dvrpybqabw8ashaizvjgplsp4f52rmf")))

(define-public crate-arbiter-core-0.6.1 (c (n "arbiter-core") (v "0.6.1") (d (list (d (n "RustQuant") (r "=0.0.33") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "=0.1.73") (d #t) (k 0)) (d (n "atomic_enum") (r "=0.2.0") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.28") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.28") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.107") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.49") (d #t) (k 0)) (d (n "tokio") (r "=1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1xlcqfsxr67rzh92qqc8179981yr6vp0vc50ijg0sxicsdjiksqk") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.6.2 (c (n "arbiter-core") (v "0.6.2") (d (list (d (n "RustQuant") (r "=0.0.35") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "atomic_enum") (r "=0.2.0") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.28") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.28") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.107") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "183s23ww5cgziwwdcpw0cmni5azv4rvv5vdp4qcw8b0cz5mcnaya") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.6.3 (c (n "arbiter-core") (v "0.6.3") (d (list (d (n "RustQuant") (r "=0.0.35") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "atomic_enum") (r "=0.2.0") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.28") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.28") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.107") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "05sxjym7r510c3bjabb9ipxpyyg8i32n9jmm1h6lcwiikl80xm15") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.0 (c (n "arbiter-core") (v "0.7.0") (d (list (d (n "RustQuant") (r "=0.0.36") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "atomic_enum") (r "=0.2.0") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.107") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0blahh7n4qpz1mr7zckk54mzhw7jsin7qblcsgnfk8wxcvwm8sga") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.1 (c (n "arbiter-core") (v "0.7.1") (d (list (d (n "RustQuant") (r "=0.0.36") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0d9p5dwmn4zzkvpnygg7al3yhnnsrgsca8byphiwdib7gq8jvr5b") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.2 (c (n "arbiter-core") (v "0.7.2") (d (list (d (n "RustQuant") (r "=0.0.36") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0c2iraap4nh73ihwmm58rwnqx26kj1d9b7dixhim9n2x34mc5ll1") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.3 (c (n "arbiter-core") (v "0.7.3") (d (list (d (n "RustQuant") (r "=0.0.36") (f (quote ("seedable"))) (d #t) (k 0)) (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("serde" "std"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.32.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1yybx63lsn6q8dw3zanrl59yx25ic136wxbjjigq5kwsj260zraq") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.4 (c (n "arbiter-core") (v "0.7.4") (d (list (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (f (quote ("parquet" "csv"))) (d #t) (k 0)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "19r98a7pv0xfsilb1p5fyhqb79lqadyvsdww916rhz6c2skl1zzm") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.5 (c (n "arbiter-core") (v "0.7.5") (d (list (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (f (quote ("parquet" "csv"))) (d #t) (k 0)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0g6vj2mbqsphck5was9sj39akwjc6dhp6hvgc2v8jap1d7c1r58g") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.7.6 (c (n "arbiter-core") (v "0.7.6") (d (list (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (f (quote ("parquet" "csv"))) (d #t) (k 0)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "02sifwb2q30d4rdjfikadabwh2g1b8baiqp7fqvrbadhzivy1qx9") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.8.0 (c (n "arbiter-core") (v "0.8.0") (d (list (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.34.2") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "polars") (r "^0.34.2") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "1wdkglzp6lm572q2z04v01342z5xkvrdb61qysydag9xz7r0cv5m") (f (quote (("contracts"))))))

(define-public crate-arbiter-core-0.9.0 (c (n "arbiter-core") (v "0.9.0") (d (list (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "arbiter-bindings") (r "^0.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.35.4") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0pz5qj9bpn48yq0sdnixmcv7jdkxywchr7y22bclnxf32nxxc6l6")))

(define-public crate-arbiter-core-0.9.1 (c (n "arbiter-core") (v "0.9.1") (d (list (d (n "anyhow") (r "=1.0.75") (d #t) (k 2)) (d (n "arbiter-bindings") (r "^0.1.0") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.31") (d #t) (k 2)) (d (n "crossbeam-channel") (r "=0.5.8") (d #t) (k 0)) (d (n "csv") (r "^1.3.0") (d #t) (k 0)) (d (n "ethers") (r "=2.0.10") (d #t) (k 0)) (d (n "futures") (r "=0.3.29") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "=0.3.29") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 2)) (d (n "polars") (r "^0.35.4") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "polars") (r "^0.35.4") (d #t) (k 2)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "=0.4.3") (d #t) (k 0)) (d (n "revm") (r "=3.5.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^1.3.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "=1.0.108") (d #t) (k 0)) (d (n "statrs") (r "=0.16.0") (d #t) (k 0)) (d (n "test-log") (r "=0.2.13") (d #t) (k 2)) (d (n "thiserror") (r "=1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-test") (r "^0.2.4") (d #t) (k 2)))) (h "0xnzdn9smrx65513dwsivxm9jrnkax3q25nykbc5lfvamdxk14rj")))

(define-public crate-arbiter-core-0.10.0 (c (n "arbiter-core") (v "0.10.0") (d (list (d (n "arbiter-bindings") (r "^0.1.2") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.33") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "ethers") (r "^2.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 0)) (d (n "polars") (r "^0.37.0") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "revm") (r "=4.0.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "1nv8n78frrqkn5wj5xw9s4wzw2mnwvmzm24drf3f26mx6nb212yn")))

(define-public crate-arbiter-core-0.10.1 (c (n "arbiter-core") (v "0.10.1") (d (list (d (n "arbiter-bindings") (r "^0.1.2") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.34") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "ethers") (r "^2.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 0)) (d (n "polars") (r "^0.37.0") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "revm") (r "^5.0.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "0zkcvgc54gzxsfv8h2h4c8ahj367xc91pmwn893pvbnc56bh4r18")))

(define-public crate-arbiter-core-0.10.2 (c (n "arbiter-core") (v "0.10.2") (d (list (d (n "arbiter-bindings") (r "^0.1.4") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.34") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "ethers") (r "^2.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 0)) (d (n "polars") (r "^0.37.0") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "revm") (r "^5.0.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "06w0kdpjkv4nvq61nmcpvj75i916ypny20jb5p1fgf8fxyx6hqbs")))

(define-public crate-arbiter-core-0.10.3 (c (n "arbiter-core") (v "0.10.3") (d (list (d (n "arbiter-bindings") (r "^0.1.4") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.77") (d #t) (k 0)) (d (n "bytes") (r "=1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.34") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "ethers") (r "^2.0.13") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r "=3.0.2") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "hex") (r "=0.4.3") (k 0)) (d (n "polars") (r "^0.37.0") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "revm") (r "^5.0.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "=2.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "15m5yr77qrx080y52d43swbmhm9i41hs0qx8ci1bfjvf5pqvaq8p")))

(define-public crate-arbiter-core-0.11.0 (c (n "arbiter-core") (v "0.11.0") (d (list (d (n "arbiter-bindings") (r "^0.1.7") (d #t) (k 0)) (d (n "assert_matches") (r "=1.5") (d #t) (k 2)) (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.18.1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.38") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "ethers") (r "^2.0.14") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "futures-locks") (r "=0.7.1") (d #t) (k 0)) (d (n "futures-timer") (r ">=3.0.2, <4.0.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.3") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (k 0)) (d (n "polars") (r "^0.38.3") (f (quote ("parquet" "csv" "json"))) (d #t) (k 0)) (d (n "rand") (r "=0.8.5") (d #t) (k 0)) (d (n "revm") (r "^8.0.0") (f (quote ("ethersdb" "std" "serde"))) (d #t) (k 0)) (d (n "revm-primitives") (r "^3.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.198") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.59") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "uint") (r "^0.9.5") (d #t) (k 0)))) (h "19k2hljdgy9h87rcxd5iyi2rsd37ypbbh3nw1rvj2z49r4qm6rys")))

