(define-module (crates-io ar ch architect-schemars) #:use-module (crates-io))

(define-public crate-architect-schemars-0.8.12 (c (n "architect-schemars") (v "0.8.12") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumflags2") (r "^0.7.7") (o #t) (d #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "netidx-core") (r "^0.18.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "172ag82f08d79x6dgzjvhjxnxl9ipy771sbwdfm70f9yy2a6xakg") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

(define-public crate-architect-schemars-0.8.13 (c (n "architect-schemars") (v "0.8.13") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumflags2") (r "^0.7.7") (o #t) (d #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "netidx-core") (r "^0.18.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=0.8.13") (o #t) (d #t) (k 0) (p "architect-schemars_derive")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "17bvqrfi9j9v5iwdxv1b5zja9mlnij24625zl68d1l9bgammbdzb") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

(define-public crate-architect-schemars-1.0.0 (c (n "architect-schemars") (v "1.0.0") (d (list (d (n "arrayvec05") (r "^0.5") (o #t) (k 0) (p "arrayvec")) (d (n "arrayvec07") (r "^0.7") (o #t) (k 0) (p "arrayvec")) (d (n "bigdecimal") (r "^0.3") (o #t) (k 0)) (d (n "bytes") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (k 0)) (d (n "dyn-clone") (r "^1.0") (d #t) (k 0)) (d (n "either") (r "^1.3") (o #t) (k 0)) (d (n "enumflags2") (r "^0.7.7") (o #t) (d #t) (k 0)) (d (n "enumset") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.2") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "netidx-core") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1") (o #t) (k 0)) (d (n "schemars_derive") (r "=1.0.0") (o #t) (d #t) (k 0) (p "architect-schemars_derive")) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.25") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smol_str") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "url") (r "^2.0") (o #t) (k 0)) (d (n "uuid08") (r "^0.8") (o #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1.0") (o #t) (k 0) (p "uuid")))) (h "1fcs95jj27aipljp0m5k5qbvd9lh6sddclxy1z8vngr0k43xbr2m") (f (quote (("uuid" "uuid08") ("ui_test") ("preserve_order" "indexmap") ("indexmap1" "indexmap") ("impl_json_schema" "derive") ("derive_json_schema" "impl_json_schema") ("derive" "schemars_derive") ("default" "derive") ("arrayvec" "arrayvec05"))))))

