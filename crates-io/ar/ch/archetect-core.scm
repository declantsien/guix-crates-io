(define-module (crates-io ar ch archetect-core) #:use-module (crates-io))

(define-public crate-archetect-core-0.5.0 (c (n "archetect-core") (v "0.5.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.7") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "1jxc1myjgkhpvvjb0ph7hnyabnl3hv83whyayzjwczam9qfdzlhf") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

(define-public crate-archetect-core-0.6.0 (c (n "archetect-core") (v "0.6.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "1s02zv11c39yj1f6n1iydaczblppaw1anfbdg8vjacmqd83irbs2") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

(define-public crate-archetect-core-0.6.1 (c (n "archetect-core") (v "0.6.1") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "0xni4z93fx72fd8jshkzpdq1lk2rdilzxba2s3wdj10calwlz81x") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

(define-public crate-archetect-core-0.7.0 (c (n "archetect-core") (v "0.7.0") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "198awjsi2a5zc3xagyy6dscvbw0l03szjhil1radqkwfh960av0h") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

(define-public crate-archetect-core-0.7.1 (c (n "archetect-core") (v "0.7.1") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "1bs39bvlhx2dkv2w85dldi50a8y51jalgxv8af78qx13lpbgrywl") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

(define-public crate-archetect-core-0.7.2 (c (n "archetect-core") (v "0.7.2") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "1paqpcj4hl66dswp62k06ffkvjhq7mlp85gp4g4li0dfs0f9b6kv") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

(define-public crate-archetect-core-0.7.3 (c (n "archetect-core") (v "0.7.3") (d (list (d (n "Inflector") (r "^0.11") (d #t) (k 0)) (d (n "atty") (r "^0.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 0)) (d (n "directories") (r "^2.0.2") (d #t) (k 0)) (d (n "farmhash") (r "^1.1") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "globwalk") (r "^0.8.1") (d #t) (k 0)) (d (n "humansize") (r "^1") (d #t) (k 0)) (d (n "indoc") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.2") (f (quote ("serde_impl"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "matches") (r "^0.1") (d #t) (k 2)) (d (n "memchr") (r "^2") (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "regex") (r "^1.0") (d #t) (k 0)) (d (n "semver") (r "^0.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.116") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.40") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "shellexpand") (r "^1") (d #t) (k 0)) (d (n "slug") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.26") (d #t) (k 0)) (d (n "unic-segment") (r "^0.9") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.2.0") (d #t) (k 0)) (d (n "url") (r "^2") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "v_htmlescape") (r "^0.4") (d #t) (k 0)))) (h "02av7sjm3ddk2ipvf67nhja6807kgdymv7wcxj369s5wjz7whx77") (f (quote (("preserve_order" "serde_json/preserve_order") ("default"))))))

