(define-module (crates-io ar ch architect-api) #:use-module (crates-io))

(define-public crate-architect-api-0.1.0 (c (n "architect-api") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^1.0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "netidx") (r "^0.19.18") (d #t) (k 0)) (d (n "netidx-archive") (r "^0.19.17") (d #t) (k 0)) (d (n "netidx-core") (r "^0.18.5") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.18") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.20.1") (d #t) (k 0)) (d (n "netidx-tools-core") (r "^0.19") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "portable-atomic") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^0.8.13") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "sys-info") (r "^0.8.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (f (quote ("zstdmt"))) (d #t) (k 0)))) (h "0slqc5cl7bnv0152gdxisl79dbj094lysw14fgcjqg7r3a46974j")))

(define-public crate-architect-api-0.1.5 (c (n "architect-api") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ethers") (r "^2.0.6") (f (quote ("rustls" "ws"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "git2") (r "^0.17.2") (d #t) (k 1)) (d (n "hash32") (r "^0.3.1") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "netidx") (r "^0.22.10") (d #t) (k 0)) (d (n "netidx-archive") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.22.2") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.22.4") (d #t) (k 0)) (d (n "netidx-tools-core") (r "^0.22.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "portable-atomic") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^1.0.0") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.12") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (f (quote ("zstdmt"))) (d #t) (k 0)))) (h "1kri8ylv43glg7xf9v0hhigp7b8v7s65ifizgw5zg7jvagpdm7rd")))

(define-public crate-architect-api-0.1.6 (c (n "architect-api") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ethers") (r "^2.0.6") (f (quote ("rustls" "ws"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "hash32") (r "^0.3.1") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "netidx") (r "^0.22.10") (d #t) (k 0)) (d (n "netidx-archive") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.22.2") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.22.4") (d #t) (k 0)) (d (n "netidx-tools-core") (r "^0.22.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "portable-atomic") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^1.0.0") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.12") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (f (quote ("zstdmt"))) (d #t) (k 0)))) (h "158dwikb99r79zad3gy7fzbzpxicpfijkc68a174njhy9aklzmg2")))

(define-public crate-architect-api-0.1.7 (c (n "architect-api") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "arrayvec") (r "^0.7.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "async-once-cell") (r "^0.4") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "atoi") (r "^2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "ctor") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "ethers") (r "^2.0.6") (f (quote ("rustls" "ws"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fuzzy-matcher") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "hash32") (r "^0.3.1") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexed_json") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "netidx") (r "^0.22.18") (d #t) (k 0)) (d (n "netidx-archive") (r "^0.23.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.22.22") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.23.2") (d #t) (k 0)) (d (n "netidx-tools-core") (r "^0.22.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "portable-atomic") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "rustls") (r "^0.21") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^1.0.0") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.12") (d #t) (k 0)) (d (n "sled") (r "^0.34") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (f (quote ("zstdmt"))) (d #t) (k 0)))) (h "18l12dspyh4q8lpgf3d0b96d77d20b41zf5ks81i4aj722vqh343")))

(define-public crate-architect-api-0.2.0 (c (n "architect-api") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive") (r "^0.2.0") (d #t) (k 0) (p "architect-derive")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^1.0.0") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros" "io-std" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)))) (h "065yxqd31vvn8npzlw5fsn709d4nbczl5qqiv53zvkqirki3nnp6")))

(define-public crate-architect-api-0.2.1 (c (n "architect-api") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive") (r "^0.2.0") (d #t) (k 0) (p "architect-derive")) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^1.0.0") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros" "io-std" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)))) (h "1yw5mx28yc3sz0knm35pkhqzfl8g525y5x20bcjnb33s2xagglr1")))

(define-public crate-architect-api-0.3.0 (c (n "architect-api") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("cargo" "derive"))) (o #t) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive") (r "^0.3.0") (d #t) (k 0) (p "architect-derive")) (d (n "derive_builder") (r "^0.20") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "either") (r "^1.9.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "juniper") (r "^0.16.0") (f (quote ("anyhow" "chrono" "rust_decimal" "schema-language" "uuid"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "pest") (r "^2") (d #t) (k 0)) (d (n "pest_derive") (r "^2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rusqlite") (r "^0.31.0") (o #t) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "schemars") (r "^1.0.0") (f (quote ("chrono" "bytes" "smallvec" "uuid1" "enumflags2" "rust_decimal" "netidx-core"))) (d #t) (k 0) (p "architect-schemars")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^3.4.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 2)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros" "io-std" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 0)) (d (n "zeroize") (r "^1") (f (quote ("zeroize_derive"))) (d #t) (k 2)))) (h "0x3jd5dz0zwzyy31myqlpdva7csrwyrd196q3ffbg3hmscis8bcj") (f (quote (("graphql" "juniper"))))))

