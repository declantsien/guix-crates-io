(define-module (crates-io ar ch archaea) #:use-module (crates-io))

(define-public crate-archaea-0.0.2 (c (n "archaea") (v "0.0.2") (d (list (d (n "annembed") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.15") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1cc047f2iy1jqr66kx5f5pzl04118ig2glfbhf10xj7bkrq4p34x") (f (quote (("annembed_f" "annembed")))) (y #t)))

(define-public crate-archaea-0.0.3 (c (n "archaea") (v "0.0.3") (d (list (d (n "annembed") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.15") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "04k3k677v9x01ricxnvm0dh0b069jpin61mfap0m5jlclh2gic23") (f (quote (("annembed_f" "annembed")))) (y #t)))

(define-public crate-archaea-0.0.4 (c (n "archaea") (v "0.0.4") (d (list (d (n "annembed") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.15") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "00qs21f0kgwj3gmzh0n6cgsgb9k0fgmlqpkyy6n03zdfq3l3lii2") (f (quote (("annembed_f" "annembed")))) (y #t)))

(define-public crate-archaea-0.0.5 (c (n "archaea") (v "0.0.5") (d (list (d (n "annembed") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "clap") (r "^3.1") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.15") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0fmzgqijavp935qs7mmg6r2cj4p0f84cj7rjyhpqlmnwmb9xzhhf") (f (quote (("annembed_f" "annembed/openblas-static"))))))

(define-public crate-archaea-0.0.6 (c (n "archaea") (v "0.0.6") (d (list (d (n "annembed") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "clap") (r "^3.1") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.15") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "16alca7h2ck9cphza6y4skhilzc7175q73frxn8bc4hw3lqc4949") (f (quote (("annembed_f" "annembed/openblas-static"))))))

(define-public crate-archaea-0.0.7 (c (n "archaea") (v "0.0.7") (d (list (d (n "annembed") (r "^0.0.4") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "clap") (r "^3.1") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.15") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0ansyfrjh96dzh6ip63g64rjfya4gc7rjzcaas4wbyi1xnmplccw") (f (quote (("annembed_f" "annembed/openblas-static"))))))

(define-public crate-archaea-0.0.8 (c (n "archaea") (v "0.0.8") (d (list (d (n "annembed") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.58") (d #t) (k 0)) (d (n "clap") (r "^3.1") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.16") (f (quote ("simdeez_f"))) (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "163sa57mz4ba0261yrzbrvqwizdcirz80qyyx6c5p7i88q7394ka") (f (quote (("annembed_f" "annembed/intel-mkl-static"))))))

(define-public crate-archaea-0.0.9 (c (n "archaea") (v "0.0.9") (d (list (d (n "annembed") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "clap") (r "^3.2") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.16") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.6") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "11wqyz6v97i4742aivv53gdgc0hxpwpjbn9bdmrk021j8f5hpa92") (f (quote (("withzmq" "kmerutils/withzmq") ("default") ("annembed_openblas-system" "annembed/openblas-system") ("annembed_openblas-static" "annembed/openblas-static") ("annembed_intel-mkl" "annembed/intel-mkl-static"))))))

(define-public crate-archaea-0.0.10 (c (n "archaea") (v "0.0.10") (d (list (d (n "annembed") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "clap") (r "^3.2") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.16") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1l83q9dhxncbxaw4ka2s1mpnwnvvhdsaiig49yj46za1qhr0lj0c") (f (quote (("withzmq" "kmerutils/withzmq") ("default") ("annembed_openblas-system" "annembed/openblas-system") ("annembed_openblas-static" "annembed/openblas-static") ("annembed_intel-mkl" "annembed/intel-mkl-static"))))))

(define-public crate-archaea-0.0.11 (c (n "archaea") (v "0.0.11") (d (list (d (n "annembed") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "clap") (r "^3.2") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.16") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "04qmm17vi94f5nkmsqf9wx52ggpd59wvbpi6zjkn9cx5szmxk8g7") (f (quote (("withzmq" "kmerutils/withzmq") ("default") ("annembed_openblas-system" "annembed/openblas-system") ("annembed_openblas-static" "annembed/openblas-static") ("annembed_intel-mkl" "annembed/intel-mkl-static"))))))

(define-public crate-archaea-0.0.12 (c (n "archaea") (v "0.0.12") (d (list (d (n "annembed") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "clap") (r "^3.2") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "crossbeam-utils") (r "^0.8") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.16") (d #t) (k 0)) (d (n "kmerutils") (r "^0.0.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "needletail") (r "^0.4") (d #t) (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1wzm8vj5zhbxy0h8ksbc2l6f2f8y4ci269cn2jh1cp9fq84q24rf") (f (quote (("withzmq" "kmerutils/withzmq") ("default") ("annembed_openblas-system" "annembed/openblas-system") ("annembed_openblas-static" "annembed/openblas-static") ("annembed_intel-mkl" "annembed/intel-mkl-static"))))))

