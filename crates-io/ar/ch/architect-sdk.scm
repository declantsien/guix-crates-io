(define-module (crates-io ar ch architect-sdk) #:use-module (crates-io))

(define-public crate-architect-sdk-0.2.0 (c (n "architect-sdk") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "api") (r "^0.2.1") (d #t) (k 0) (p "architect-api")) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.26.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "portable-atomic") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros" "io-std" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (f (quote ("zstdmt"))) (d #t) (k 0)))) (h "03qaaima61jlmzb7bbvk80627qpwlyivjzayd4my5qn4w12ks2r1")))

(define-public crate-architect-sdk-0.3.0 (c (n "architect-sdk") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "api") (r "^0.3") (d #t) (k 0) (p "architect-api")) (d (n "arc-swap") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "=0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2") (d #t) (k 0)) (d (n "immutable-chunkmap") (r "^2.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maybe-owned") (r "^0.3") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "netidx") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-archive") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-core") (r "^0.26.0") (d #t) (k 0)) (d (n "netidx-derive") (r "^0.22.0") (d #t) (k 0)) (d (n "netidx-protocols") (r "^0.26.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("arc_lock"))) (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pkcs8") (r "^0.10.2") (f (quote ("pem" "encryption"))) (d #t) (k 0)) (d (n "portable-atomic") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "rust_decimal") (r "^1") (f (quote ("maths" "serde"))) (d #t) (k 0)) (d (n "rust_decimal_macros") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("serde" "const_generics" "union"))) (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "macros" "io-std" "io-util"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("v4" "v5" "serde"))) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (f (quote ("zstdmt"))) (d #t) (k 0)))) (h "1bmplqimwkf2wmmnjjcnmk5vdic4dzx2z75bvbjjqln5ymjra8ij")))

