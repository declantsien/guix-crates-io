(define-module (crates-io ar ma arma-rs) #:use-module (crates-io))

(define-public crate-arma-rs-1.3.0 (c (n "arma-rs") (v "1.3.0") (d (list (d (n "arma-rs-proc") (r "^1.3.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "0wids6c4ni63s1vffp3ra0f5ppxrl1i6ml17s53msbqpqmmf2rh8")))

(define-public crate-arma-rs-1.3.1 (c (n "arma-rs") (v "1.3.1") (d (list (d (n "arma-rs-proc") (r "^1.3.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "1j5i0pcil26kz1cfpi8kppnl45rvr5dpkkdwz7wafrbh581mj9n6")))

(define-public crate-arma-rs-1.3.2 (c (n "arma-rs") (v "1.3.2") (d (list (d (n "arma-rs-proc") (r "^1.3.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)))) (h "1f02xpnlgl7yql0azaa6d8r9mhqask39cvz4xd89g9imqckhy60b")))

(define-public crate-arma-rs-1.4.0 (c (n "arma-rs") (v "1.4.0") (d (list (d (n "arma-rs-proc") (r "^1.3.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "0p9w0sc8lbj8mwvgiwyl3pi10fvmajk48gvsszf8a8dnmzs15n3g")))

(define-public crate-arma-rs-1.5.0 (c (n "arma-rs") (v "1.5.0") (d (list (d (n "arma-rs-proc") (r "^1.5.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "024ag60qj04dm0z15j0b5hv3qir7nx7cv9qhz753gkhh4f3502af")))

(define-public crate-arma-rs-1.5.1 (c (n "arma-rs") (v "1.5.1") (d (list (d (n "arma-rs-proc") (r "^1.5.0") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)))) (h "0ij6nzidiz98mp1gr2j5rra1r31fxj10qawhz9zjx5nvs5xjdyrc")))

(define-public crate-arma-rs-1.6.0 (c (n "arma-rs") (v "1.6.0") (d (list (d (n "arma-rs-proc") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0qpkijjpchbhv9v71kkxzapfn1y9ignj3rl865zzx34vq1mn2lmg")))

(define-public crate-arma-rs-1.6.1 (c (n "arma-rs") (v "1.6.1") (d (list (d (n "arma-rs-proc") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1wf0bwghzi1498nqxllb62kzsgv6zpa1clxrgk4rqj21nwgnibfs")))

(define-public crate-arma-rs-1.7.0 (c (n "arma-rs") (v "1.7.0") (d (list (d (n "arma-rs-proc") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0s3drl04z4k0w05i341zkqxdf6wr1ym0g5vffqhx9wsf2dsspib6")))

(define-public crate-arma-rs-1.7.1 (c (n "arma-rs") (v "1.7.1") (d (list (d (n "arma-rs-proc") (r "^1.5.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "05qlk0fcvpmpgkg41kcaz1xqqxir301cm5isqfx8cpyk8fgs75f0")))

(define-public crate-arma-rs-1.7.2 (c (n "arma-rs") (v "1.7.2") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (o #t) (d #t) (k 0)))) (h "06vh50249cimffk0vmyb98ix2y2x1624mnpw6gkbr44jdqbgyjbh")))

(define-public crate-arma-rs-1.7.3 (c (n "arma-rs") (v "1.7.3") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "13kdb5idr3wbr8nnand198asmj082j3yp6jq1jcxsdp4ygdyzzvw")))

(define-public crate-arma-rs-1.7.4 (c (n "arma-rs") (v "1.7.4") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0pxywywwnvq9hqvbd4hl1mjzk596b0gjz4032w846g6a8b4968qz")))

(define-public crate-arma-rs-1.7.5 (c (n "arma-rs") (v "1.7.5") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0g0b0wqdqsld8fxghirbm0nn9bfyd2y7xk2jjdrrlknrhrk0q7w7")))

(define-public crate-arma-rs-1.7.6 (c (n "arma-rs") (v "1.7.6") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "10rpqif93qk23l99zzysl102zmjzsk5vza2x4f907l5ci3wlw1wm")))

(define-public crate-arma-rs-1.7.7 (c (n "arma-rs") (v "1.7.7") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "1ckarwg1ka5hk14ha229v42xsl5kpvmawamaijwyd178vjjmb22x") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.8.0 (c (n "arma-rs") (v "1.8.0") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0y3nbcmsydya1mrvr89aa9s7cb4b0xdmvy17vy5i0f0cxdlbs4dw") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.8.1 (c (n "arma-rs") (v "1.8.1") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (o #t) (d #t) (k 0)))) (h "1vmf44rpc2zz3vyc61bzh8c3qlgfnl1cagzpjyanf8w78ag6fmss") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.8.2 (c (n "arma-rs") (v "1.8.2") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.137") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (o #t) (d #t) (k 0)))) (h "1aa25n2la47nhl8d7iwlmls4f4914isdvdf8i7aysdns5rhxxrzy") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.9.0 (c (n "arma-rs") (v "1.9.0") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (o #t) (d #t) (k 0)))) (h "1gx6cg8xp0ahz30aw53mwp7qwrrqm79qnvqc0z864smz3vaw78p5") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.9.1 (c (n "arma-rs") (v "1.9.1") (d (list (d (n "arma-rs-proc") (r "^1.7.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.2.2") (o #t) (d #t) (k 0)))) (h "1hnc2ycbw99r1jmxkg7brlsr64my5v8hrwccdv3fjwvf6giqilc7") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.9.3 (c (n "arma-rs") (v "1.9.3") (d (list (d (n "arma-rs-proc") (r "^1.9.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.139") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.2") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "skeptic") (r "^0.13.7") (d #t) (k 1)) (d (n "skeptic") (r "^0.13.7") (d #t) (k 2)) (d (n "uuid") (r "^1.2.2") (o #t) (d #t) (k 0)))) (h "18v5xlfrk9cp294nm7f0icww9nvgv8wchr8vy8sx1knnmf44c24w") (f (quote (("extension" "libc" "crossbeam-queue") ("default" "extension"))))))

(define-public crate-arma-rs-1.10.0 (c (n "arma-rs") (v "1.10.0") (d (list (d (n "arma-rs-proc") (r "^1.10.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "skeptic") (r "^0.13.7") (d #t) (k 1)) (d (n "skeptic") (r "^0.13.7") (d #t) (k 2)) (d (n "state") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (o #t) (d #t) (k 0)))) (h "10cnmmncvx4zz5j4gzc7qhyc8fk4zd4p7dqqajr271g77j8zim7m") (f (quote (("extension" "libc" "crossbeam-channel") ("default" "extension" "call-context") ("call-context" "extension"))))))

(define-public crate-arma-rs-1.10.1 (c (n "arma-rs") (v "1.10.1") (d (list (d (n "arma-rs-proc") (r "^1.10.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "skeptic") (r "^0.13.7") (d #t) (k 1)) (d (n "skeptic") (r "^0.13.7") (d #t) (k 2)) (d (n "state") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (o #t) (d #t) (k 0)))) (h "0bbwsaq9rg0hryc6dssdwna5bxsadn6j8xjl6gv4cbrl3yb5qiqb") (f (quote (("extension" "libc" "crossbeam-channel") ("default" "extension" "call-context") ("call-context" "extension"))))))

(define-public crate-arma-rs-1.10.2 (c (n "arma-rs") (v "1.10.2") (d (list (d (n "arma-rs-proc") (r "^1.10.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (o #t) (d #t) (k 0)))) (h "1qbs8df0nsj569hb9525a51nc18a5cg4fgggngsj6l4552h4k6s5") (f (quote (("extension" "libc" "crossbeam-channel") ("default" "extension" "call-context") ("call-context" "extension"))))))

(define-public crate-arma-rs-1.10.3 (c (n "arma-rs") (v "1.10.3") (d (list (d (n "arma-rs-proc") (r "^1.10.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (o #t) (d #t) (k 0)))) (h "065vlij2f4sv9jgsynsmpnypsqjs0jf162zl16chvh6cr3yy27kk") (f (quote (("extension" "libc" "crossbeam-channel") ("default" "extension" "call-context") ("call-context" "extension"))))))

(define-public crate-arma-rs-1.10.4 (c (n "arma-rs") (v "1.10.4") (d (list (d (n "arma-rs-proc") (r "^1.10.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_System_Console"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0dhm9hh1b8q80wljga12sj5agh3z6jq4b398m0qhlrzi4krlhlnh") (f (quote (("extension" "libc" "crossbeam-channel") ("default" "extension" "call-context") ("call-context" "extension"))))))

(define-public crate-arma-rs-1.10.5 (c (n "arma-rs") (v "1.10.5") (d (list (d (n "arma-rs-proc") (r "^1.10.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.30") (o #t) (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.147") (o #t) (d #t) (k 0)) (d (n "link_args") (r "^0.6.0") (d #t) (t "cfg(all(target_os = \"windows\", target_arch = \"x86\"))") (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "seq-macro") (r "^0.3.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)) (d (n "state") (r "^0.6.0") (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (o #t) (d #t) (k 0)) (d (n "windows") (r "^0.51.1") (f (quote ("Win32_Foundation" "Win32_System_Console"))) (d #t) (t "cfg(windows)") (k 0)))) (h "035kc5xa7n01m41vjwal8hax8na1gg3paa7qazfhax13y4n6rnpx") (f (quote (("extension" "libc" "crossbeam-channel") ("default" "extension" "call-context") ("call-context" "extension"))))))

