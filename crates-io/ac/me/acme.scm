(define-module (crates-io ac me acme) #:use-module (crates-io))

(define-public crate-acme-0.1.0 (c (n "acme") (v "0.1.0") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (d #t) (k 0)))) (h "1qwjzc5hiyxvncd1sdmc13zmnryr21gix6smrlc4fpbrgjg6667n") (y #t)))

(define-public crate-acme-0.1.1 (c (n "acme") (v "0.1.1") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.12") (d #t) (k 0)))) (h "1k560my32rnzdj2k5dx5234gamnm2mqd0wzar4mw2xpz5k8ngijj") (y #t)))

(define-public crate-acme-0.1.2 (c (n "acme") (v "0.1.2") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)))) (h "0j573vyvdhnfc1k36xd07z4z18jbi18ggvyjq9xi2s0wkhzrj4m7") (y #t)))

(define-public crate-acme-0.1.3 (c (n "acme") (v "0.1.3") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)))) (h "1rcdv856yl92j97b40471ps5pkr14c7y4wwh0zxdx9rw37fcyl66") (y #t)))

(define-public crate-acme-0.1.4 (c (n "acme") (v "0.1.4") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)))) (h "08xkc32j0p2z16h9gdjzbmy3mxnic1hpa1v5apqnaz9ipczws121") (y #t)))

(define-public crate-acme-0.1.5 (c (n "acme") (v "0.1.5") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)))) (h "0x15i5rdxr4idzvrk2clhdmcfwvdsbc7xbwqbksl8cpdc2lhp0jc") (y #t)))

(define-public crate-acme-0.1.6 (c (n "acme") (v "0.1.6") (d (list (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.44.0") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)))) (h "14q2zhc90h8zvy6dii7zv16pfrmr3vfj0wa7qbbly1z72hapn53g") (y #t)))

(define-public crate-acme-0.1.8 (c (n "acme") (v "0.1.8") (d (list (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.44.0") (f (quote ("dns-tokio" "gossipsub" "mdns" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1sglh1n0v748720glnhvbfbmjv1qdzwn4fs8dn8qddk32fscpdfa") (y #t)))

(define-public crate-acme-0.1.9 (c (n "acme") (v "0.1.9") (d (list (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.44.0") (f (quote ("dns-tokio" "gossipsub" "mdns" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1i5c3cahiqshgd56zgqixsygksrnvpssjnkiaxz3jaxx4vl18p9i") (y #t)))

(define-public crate-acme-0.1.10 (c (n "acme") (v "0.1.10") (d (list (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "gossipsub" "mdns" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0630xy4k4j3jvabczb4srzdc6w0nisncpm5fnypnbzk0vb7cb42j") (y #t)))

(define-public crate-acme-0.1.11 (c (n "acme") (v "0.1.11") (d (list (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "gossipsub" "mdns" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0rxc3yj64nsdihl0lymlmhdyqjw5jblsgirq4bgjxm6i73030k8f") (y #t)))

(define-public crate-acme-0.1.13 (c (n "acme") (v "0.1.13") (d (list (d (n "acme-macros") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "09lfkld2wb98vqfyk0cby12bq1s0kfapx6nl2l62w2d76d9lk92v") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "data" "macros" "network") ("default") ("data")))) (y #t)))

(define-public crate-acme-0.1.14 (c (n "acme") (v "0.1.14") (d (list (d (n "acme-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0jjs67g83ns4n5xpza403q4cs0p44a2fgklz6imj9p5x8qc6gwlq") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.15 (c (n "acme") (v "0.1.15") (d (list (d (n "acme-core") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio" "tcp-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.34") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0rg39rp2icrficgwrv8lhhcyiy2miya5x1rls759z3r6a8hhw149") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.16 (c (n "acme") (v "0.1.16") (d (list (d (n "acme-core") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (d #t) (k 0)))) (h "1n4bjydxic8jccmb65z6d23rx0ky759ypv621avgrng9b1vj7dpy") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core" "libp2p/default") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.17 (c (n "acme") (v "0.1.17") (d (list (d (n "acme-core") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (d #t) (k 0)))) (h "036m7ll3ffydl9kmv5nk4f5jzyqq7if7wpprm1bilz3gdrhra49d") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core" "libp2p/default") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.18 (c (n "acme") (v "0.1.18") (d (list (d (n "acme-core") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "bson") (r "^2.2.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (d #t) (k 0)))) (h "0f2cizzd1l4c14fs8kl3hl2p58rg9qsxz9754k84z10i3nxhr1w1") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.19 (c (n "acme") (v "0.1.19") (d (list (d (n "acme-core") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.6") (o #t) (d #t) (k 0)))) (h "1jy4ppq6r5d9y2hi8xhapdwzhm3ic7674vqirq0izyh2dfl9fwr4") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.20 (c (n "acme") (v "0.1.20") (d (list (d (n "acme-core") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.6") (o #t) (d #t) (k 0)))) (h "13xf05fjwq0z2abgzvxin0h6bqbvlffrq6m7rn44i789pw0h76ky") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.21 (c (n "acme") (v "0.1.21") (d (list (d (n "acme-core") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "acme-data") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)))) (h "10x39f06548dfhs38x1iwlpc1af7jd07xpmjx9gbrf1jdc112bx1") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "data" "macros" "network") ("default" "core") ("data" "acme-data") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.22 (c (n "acme") (v "0.1.22") (d (list (d (n "acme-core") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "050fv2845bb475kpgqfy68zd2392f4j6wafwd2nj1zq3w3fylwvr") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "macros" "network") ("default" "core") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.23 (c (n "acme") (v "0.1.23") (d (list (d (n "acme-core") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0i2p0w6fr3h1dqnywbvqxwfrfgwkwwn89lm31j6hnl7v9p04509n") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "macros" "network") ("default" "core") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.24 (c (n "acme") (v "0.1.24") (d (list (d (n "acme-core") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1wck7qf0kzaj18ly1m3f8whb6f9340yk3bmwjra727qf5g4306k7") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "core" "macros" "network") ("default" "core") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.25 (c (n "acme") (v "0.1.25") (d (list (d (n "acme-core") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.1.10") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "154vf0ypldpxf8iydm93l5mngnqv13db8y80c8b1a99hq71m152r") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "default" "derive" "macros" "network") ("derive" "acme-derive") ("default" "core") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.26 (c (n "acme") (v "0.1.26") (d (list (d (n "acme-core") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-network") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10.4") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.45.1") (f (quote ("dns-tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1aam4j52nyi43x7ilrp2ni4rigmpk4lq5z9h264j4xmsk2v2apjy") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "default" "derive" "macros" "network") ("derive" "acme-derive") ("default" "core") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.1.27 (c (n "acme") (v "0.1.27") (d (list (d (n "acme-chains") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-core") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-data") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-network") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "0vnynrijm569rmygnxsj5mx56mm3maaivxcmgyqws9nxp1ky0lav") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "default" "derive" "macros" "network") ("derive" "acme-derive") ("default" "chains" "core" "data") ("data" "acme-data") ("core" "acme-core") ("chains" "acme-chains")))) (y #t)))

(define-public crate-acme-0.1.28 (c (n "acme") (v "0.1.28") (d (list (d (n "acme-chains") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-core") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-data") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-network") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "086935c7qpv6hf8z70i0wms667v524i07i7f3lb2pn9x6r06k7c9") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "default" "derive" "macros" "network") ("derive" "acme-derive") ("default" "chains" "core" "data") ("data" "acme-data") ("core" "acme-core") ("chains" "acme-chains")))) (y #t)))

(define-public crate-acme-0.1.29 (c (n "acme") (v "0.1.29") (d (list (d (n "acme-chains") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-core") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-data") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r ">=0.1.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "acme-network") (r ">=0.1.10") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)))) (h "1l5v0i2i4x8iv7jzdpg6alrxd29207nbmdmymhhzx0l46i6bydgz") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "default" "derive" "macros" "network") ("derive" "acme-derive") ("default" "chains" "core" "data") ("data" "acme-data") ("core" "acme-core") ("chains" "acme-chains")))) (y #t)))

(define-public crate-acme-0.1.30 (c (n "acme") (v "0.1.30") (d (list (d (n "acme-chains") (r ">=0.1.5") (o #t) (d #t) (k 0)) (d (n "acme-core") (r ">=0.1.14") (o #t) (d #t) (k 0)) (d (n "acme-data") (r ">=0.1.14") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r ">=0.1.14") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.14") (o #t) (d #t) (k 0)) (d (n "acme-network") (r ">=0.1.14") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.7") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)))) (h "04m1h8npsmggdxb3j21ylbf632k3w48l5cvbq5wmffiqdgbmqvj7") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "chains" "core" "data" "derive" "macros" "network") ("derive" "acme-derive") ("default" "chains" "core" "data" "bson/chrono-0_4" "serde/derive") ("data" "acme-data") ("core" "acme-core") ("chains" "acme-chains")))) (y #t)))

(define-public crate-acme-0.1.32 (c (n "acme") (v "0.1.32") (d (list (d (n "acme-sdk") (r "^0.1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.10") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "0v2arrdmdwan3x94jkxdd355grn5wpbs1fpfq68fs378xg1lvan5") (y #t)))

(define-public crate-acme-0.1.33 (c (n "acme") (v "0.1.33") (d (list (d (n "acme-sdk") (r "^0.1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.10") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "17jmdqbfhg2ivyrzjqhj6wyfvk9n9kb7g2d3zgk9h4x3gpqfdml0") (y #t)))

(define-public crate-acme-0.1.34 (c (n "acme") (v "0.1.34") (d (list (d (n "acme-sdk") (r ">=0.1.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.10") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "1938r6a3lf4bp11vfdg58wgvdgradibg25pd17cfv4yzf8jl3z4n") (f (quote (("default" "acme-sdk/full")))) (y #t)))

(define-public crate-acme-0.1.35 (c (n "acme") (v "0.1.35") (d (list (d (n "acme-sdk") (r ">=0.1.1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.10") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.11") (d #t) (k 0)))) (h "13m8ak38idw3r6ciz96p6pwv2jk4pkli2k1896gwvwn3czjn5v7z") (f (quote (("default" "acme-sdk/full")))) (y #t)))

(define-public crate-acme-0.1.36 (c (n "acme") (v "0.1.36") (d (list (d (n "acme-derive") (r ">=0.1.36") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.36") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)))) (h "10mjqbfi9d9qm58kqlmibmjflc9psmwnm2fr6kppss81v6l3lyg1") (f (quote (("macros" "acme-macros") ("full" "default" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.1.40 (c (n "acme") (v "0.1.40") (d (list (d (n "acme-derive") (r ">=0.1.40") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r ">=0.1.40") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "coinbase-pro-rs") (r "^0.7.1") (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)))) (h "1y9a9myhagl7apa3hv7qcl7przniqsdxmcifwmfl8wdpxwlnyyfj") (f (quote (("macros" "acme-macros") ("full" "default" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.1.43 (c (n "acme") (v "0.1.43") (d (list (d (n "acme-sdk") (r ">=0.1.42") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "0q4idpncn9r0rfb6rr6sw03cb30vfkgp51y2ahy9xnzdibmnjb5v") (f (quote (("full" "acme-sdk/full") ("default" "acme-sdk/default")))) (y #t)))

(define-public crate-acme-0.1.44 (c (n "acme") (v "0.1.44") (d (list (d (n "acme-sdk") (r ">=0.1.44") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "1rxciyh42ynxa3zy0mxn3p16yfyr6qv12h63ni507s4jczdzg5mn") (f (quote (("full" "acme-sdk/full") ("default" "acme-sdk/default")))) (y #t)))

(define-public crate-acme-0.1.48 (c (n "acme") (v "0.1.48") (d (list (d (n "acme-derive") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "083ams1nn74pxqyvwijvnsxiljhqpa21pa9zirn2dyg3nrw1izd1") (f (quote (("macros" "acme-macros") ("full" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.1.49 (c (n "acme") (v "0.1.49") (d (list (d (n "acme-derive") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.45") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "1p4ih26z2k5nwa9yp8z2i7cqha4y7scx50jx559gyr9yq2vk7dp5") (f (quote (("macros" "acme-macros") ("full" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.1.50 (c (n "acme") (v "0.1.50") (d (list (d (n "acme-derive") (r "^0.1.48") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.48") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "1fsanvjjf27bb5klm9b79d5fi4jr152jlnv580mknhrakcv7s4jg") (f (quote (("macros" "acme-macros") ("full" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.1.51 (c (n "acme") (v "0.1.51") (d (list (d (n "acme-derive") (r "^0.1.49") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.49") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "scsys") (r "^0.1.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "0vfg7fpg3rmxy787l74p2qg789yh4djjg9vx78l1n6ll0p37z5hr") (f (quote (("macros" "acme-macros") ("full" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.1.52 (c (n "acme") (v "0.1.52") (d (list (d (n "acme-derive") (r "^0.1.50") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.1.50") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "scsys") (r "^0.1.7") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "1xblsb236mj0jkvm5wl2bnzc40mgf4dzc8hckbih9j4amgzbpx8r") (f (quote (("macros" "acme-macros") ("full" "derive" "macros") ("derive" "acme-derive") ("default")))) (y #t)))

(define-public crate-acme-0.2.0 (c (n "acme") (v "0.2.0") (d (list (d (n "acme-derive") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "acme-network") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 0)) (d (n "axum") (r "^0.5.11") (f (quote ("headers"))) (d #t) (k 0)) (d (n "bson") (r "^2.3.0") (f (quote ("chrono-0_4" "serde_with"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive"))) (d #t) (k 0)) (d (n "config") (r "^0.13.1") (d #t) (k 0)) (d (n "glob") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.19") (f (quote ("full"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (d #t) (k 0)) (d (n "scsys") (r "^0.1.9") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.138") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "tokio") (r "^1.19.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("compression-br" "propagate-header" "sensitive-headers" "trace"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "1j1hba2glv1c6bkp9ag0h1y0rrfjaj5y8ws2vafagvifg74yiryz") (f (quote (("network" "acme-network") ("macros" "acme-macros") ("full" "derive" "macros" "network") ("derive" "acme-derive") ("default" "network")))) (y #t)))

(define-public crate-acme-0.2.1 (c (n "acme") (v "0.2.1") (d (list (d (n "acme-derive") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "axum") (r "^0.5.15") (f (quote ("headers"))) (d #t) (k 0)) (d (n "axum-macros") (r "^0.3.0-rc.1") (d #t) (k 0)) (d (n "axum-openapi") (r "^0.0.0") (d #t) (k 0)) (d (n "axum-server-dual-protocol") (r "^0.2.0") (d #t) (k 0)) (d (n "axum-sessions") (r "^0.3.1") (d #t) (k 0)) (d (n "axum-streams") (r "^0.7.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.23") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("full"))) (d #t) (k 0)) (d (n "jsonwebkey") (r "^0.3.5") (d #t) (k 0)) (d (n "openidconnect") (r "^2.3.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("cookies" "json" "socks" "stream"))) (d #t) (k 0)) (d (n "scsys") (r "^0.1.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.21.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.9") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tower-cookies") (r "^0.7.0") (d #t) (k 0)) (d (n "tower-http") (r "^0.3.4") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.35") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (d #t) (k 0)))) (h "19g5p92rni8nr8dd5irxvxa28b4pvwgw5vcsfhv6yfdsjcw7sr3i") (f (quote (("macros" "acme-macros") ("full" "core" "derive" "macros") ("derive" "acme-derive") ("default" "core") ("core")))) (y #t)))

(define-public crate-acme-0.2.2 (c (n "acme") (v "0.2.2") (d (list (d (n "acme-clusters") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "acme-compilers") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "acme-conduits") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "acme-core") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "acme-gateways") (r "^0.2.2") (o #t) (d #t) (k 0)) (d (n "acme-pipelines") (r "^0.2.2") (o #t) (d #t) (k 0)))) (h "0s5kwcvcxnb749xdlqk4m8qzwx33c7lg9n9nsb2lnxlz0kks5jhm") (f (quote (("wasm-ext") ("wasm" "wasm-ext") ("full" "core" "extras" "wasm") ("extras") ("default" "clusters" "conduits" "core") ("core" "acme-core") ("conduits" "acme-conduits") ("clusters" "acme-clusters")))) (y #t)))

(define-public crate-acme-0.2.3 (c (n "acme") (v "0.2.3") (d (list (d (n "acme-clusters") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "acme-compilers") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "acme-conduits") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "acme-core") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "acme-gateways") (r "^0.2.3") (o #t) (d #t) (k 0)) (d (n "acme-pipelines") (r "^0.2.3") (o #t) (d #t) (k 0)))) (h "04b3sihymczdbz9xnmspa1z2ps5g9mllijfsyw6gw5935fd0vwfi") (f (quote (("pipelines" "acme-pipelines") ("gateways" "acme-gateways") ("full" "clusters" "conduits" "core" "compilers" "extras" "gateways" "pipelines") ("extras") ("default" "clusters" "conduits" "core") ("core" "acme-core") ("conduits" "acme-conduits") ("compilers" "acme-compilers") ("clusters" "acme-clusters")))) (y #t)))

(define-public crate-acme-0.2.4 (c (n "acme") (v "0.2.4") (d (list (d (n "acme-compilers") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "acme-conduits") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "acme-core") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "acme-gateways") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "acme-net") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "acme-pipelines") (r "^0.2.4") (o #t) (d #t) (k 0)))) (h "14lh0pxhjrc8ym36gydnibfp0vfwvb9dzrn1d65dy2pvz11m2lg0") (f (quote (("pipelines" "acme-pipelines") ("net" "acme-net") ("gateways" "acme-gateways") ("full" "conduits" "core" "compilers" "extras" "gateways" "net" "pipelines") ("extras") ("default" "core") ("core" "acme-core") ("conduits" "acme-conduits") ("compilers" "acme-compilers")))) (y #t)))

(define-public crate-acme-0.2.5 (c (n "acme") (v "0.2.5") (d (list (d (n "acme-core") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "acme-derive") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "acme-net") (r "^0.2.5") (o #t) (d #t) (k 0)))) (h "0a4swz28zlgb330f62p0k6f0xb0xdbzzfmjg78fais2hrh89bk15") (f (quote (("net" "acme-net") ("macros" "acme-macros/default") ("full" "core" "derive" "extras" "macros" "net") ("extras") ("derive" "acme-derive/default") ("default" "core") ("core" "acme-core")))) (y #t)))

(define-public crate-acme-0.3.0-nightly (c (n "acme") (v "0.3.0-nightly") (d (list (d (n "acme-core") (r "^0.3.0-nightly") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.0-nightly") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.0-nightly") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.0-nightly") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.0-nightly") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)))) (h "1sj93ibdsa2rjk8z2a04zx5fn24sdp389528z64aj81s1qyshghh") (f (quote (("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.0-nightly.1 (c (n "acme") (v "0.3.0-nightly.1") (d (list (d (n "acme-core") (r "^0.3.0-nightly.1") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.0-nightly.1") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.0-nightly.1") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.0-nightly.1") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.0-nightly.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)))) (h "1xfqsvam7irx5xsd8pxsqs9l65m85g27s8ikhxzh70v2rbbw8kzg") (f (quote (("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.0-nightly.2 (c (n "acme") (v "0.3.0-nightly.2") (d (list (d (n "acme-core") (r "^0.3.0-nightly.2") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.0-nightly.2") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.0-nightly.2") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.0-nightly.2") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.0-nightly.2") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0f0d7dvld97cwgnps6hpnciw19bgpyk5qrsswx7pfx9bxd55diq5") (f (quote (("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.0-nightly.3 (c (n "acme") (v "0.3.0-nightly.3") (d (list (d (n "acme-core") (r "^0.3.0-nightly.3") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.0-nightly.3") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.0-nightly.3") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.0-nightly.3") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.0-nightly.3") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "17n0av0mw7pzm0wkaf9wqiykzqffsnlhny255k0fvqap5vym49yp") (f (quote (("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.0-nightly.4 (c (n "acme") (v "0.3.0-nightly.4") (d (list (d (n "acme-core") (r "^0.3.0-nightly.4") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.0-nightly.4") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.0-nightly.4") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.0-nightly.4") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.0-nightly.4") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "16ffwgikib1b9487nxis4d9id5jcxdyb0gvv4wkfg8i7z0rlwz30") (f (quote (("std" "acme-core/std" "acme-tensor/std") ("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("io" "acme-tensor/io") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.0 (c (n "acme") (v "0.3.0") (d (list (d (n "acme-core") (r "^0.3.0") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "02kv0piai20bvbif1nw9rywmk8xxzgk2w7yymgs0qahyri6ag8b6") (f (quote (("std" "acme-core/std" "acme-tensor/std") ("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("io" "acme-tensor/io") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.1-nightly (c (n "acme") (v "0.3.1-nightly") (d (list (d (n "acme-core") (r "^0.3.1-nightly") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.1-nightly") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.1-nightly") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.1-nightly") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.1-nightly") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "0b26631k53xa80lzsjzf9yj9i8vqxqb122l6pks7p0j4ji4ppgcd") (f (quote (("std" "acme-core/std" "acme-tensor/std") ("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("io" "acme-tensor/io") ("full" "core" "derive" "graph" "serde" "tensor") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

(define-public crate-acme-0.3.1 (c (n "acme") (v "0.3.1") (d (list (d (n "acme-core") (r "^0.3.1") (d #t) (k 0)) (d (n "acme-derive") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "acme-graphs") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "acme-macros") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "acme-tensor") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "approx") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)))) (h "1dfj4fh0zlzf2h57dwl944mrwz4h3xg8517fa06qh0sfmangm702") (f (quote (("trace" "acme-core/trace" "acme-graphs/trace") ("std" "acme-core/std" "acme-tensor/std") ("serde" "acme-core/serde" "acme-graphs/serde" "acme-tensor/serde") ("io" "acme-tensor/io") ("full" "core" "derive" "graph" "serde" "tensor" "trace") ("default" "core" "tensor") ("core")))) (s 2) (e (quote (("tensor" "dep:acme-tensor") ("macros" "dep:acme-macros") ("graph" "dep:acme-graphs") ("derive" "dep:acme-derive" "macros"))))))

