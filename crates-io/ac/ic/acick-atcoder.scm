(define-module (crates-io ac ic acick-atcoder) #:use-module (crates-io))

(define-public crate-acick-atcoder-0.0.7-alpha.3 (c (n "acick-atcoder") (v "0.0.7-alpha.3") (d (list (d (n "acick-config") (r "^0.0.7-alpha.3") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.0.7-alpha.3") (d #t) (k 0)) (d (n "acick-util") (r "^0.0.7-alpha.3") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.11.0") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0k51y2shn4wim0sn5x80rw3vcgqyjqasc2l9d1zpk2v5x0dgjl2r")))

(define-public crate-acick-atcoder-0.0.8 (c (n "acick-atcoder") (v "0.0.8") (d (list (d (n "acick-config") (r "^0.0.8") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.0.8") (d #t) (k 0)) (d (n "acick-util") (r "^0.0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.11.0") (d #t) (k 0)) (d (n "strum") (r "^0.17.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "19rrggwcwn3fbjq1n8vcs5b0zg22nvwl1acwcsvwmh7blrmay9ds")))

(define-public crate-acick-atcoder-0.0.9-alpha.1 (c (n "acick-atcoder") (v "0.0.9-alpha.1") (d (list (d (n "acick-config") (r "^0.0.9-alpha.1") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.0.9-alpha.1") (d #t) (k 0)) (d (n "acick-util") (r "^0.0.9-alpha.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.11.0") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0sxqv2d164z5frv778m67ll8ia69dnjjr5fc9gps7ai10hbzhgyn")))

(define-public crate-acick-atcoder-0.0.9 (c (n "acick-atcoder") (v "0.0.9") (d (list (d (n "acick-config") (r "^0.0.9") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.0.9") (d #t) (k 0)) (d (n "acick-util") (r "^0.0.9") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.11.0") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0gxf49k4zpliipfsz7zy6h9kcw9hlaiiw9a1hxmlik97ksv5xl4v")))

(define-public crate-acick-atcoder-0.1.0-alpha.0 (c (n "acick-atcoder") (v "0.1.0-alpha.0") (d (list (d (n "acick-config") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "acick-util") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.11.0") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "04mbpmzrhr6fy321vw910py381nq1jfg3lfrq8wbawx3bah0nqjw")))

(define-public crate-acick-atcoder-0.1.0 (c (n "acick-atcoder") (v "0.1.0") (d (list (d (n "acick-config") (r "^0.1.0") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.1.0") (d #t) (k 0)) (d (n "acick-util") (r "^0.1.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.11.0") (d #t) (k 0)) (d (n "strum") (r "^0.18.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "04mb2d54qkkdc1h9zbsa8gs7vy69svlilgylrz1l06s56zsy0zj1")))

(define-public crate-acick-atcoder-0.1.1-alpha.0 (c (n "acick-atcoder") (v "0.1.1-alpha.0") (d (list (d (n "acick-config") (r "^0.1.1-alpha.0") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.1.1-alpha.0") (d #t) (k 0)) (d (n "acick-util") (r "^0.1.1-alpha.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "strum") (r "^0.19.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "1x9yi76fdblr38d7chlx7a084yk76lfgfm2zqb0kw9x7sc1gjlk2")))

(define-public crate-acick-atcoder-0.1.1 (c (n "acick-atcoder") (v "0.1.1") (d (list (d (n "acick-config") (r "^0.1.1") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.1.1") (d #t) (k 0)) (d (n "acick-util") (r "^0.1.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "strum") (r "^0.19.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0fq53hcmwmp7fjsjyjaza5da6c3f5kc43kqyv7205dzva9hybc2b")))

(define-public crate-acick-atcoder-0.2.0-alpha.0 (c (n "acick-atcoder") (v "0.2.0-alpha.0") (d (list (d (n "acick-config") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "acick-util") (r "^0.2.0-alpha.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "strum") (r "^0.19.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "12wapji24qx998k2zv52jlmk1zl29zrmlxqbmd57h0qhwaqln32n")))

(define-public crate-acick-atcoder-0.2.0 (c (n "acick-atcoder") (v "0.2.0") (d (list (d (n "acick-config") (r "^0.2.0") (d #t) (k 0)) (d (n "acick-dropbox") (r "^0.2.0") (d #t) (k 0)) (d (n "acick-util") (r "^0.2.0") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "humantime") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.3.1") (d #t) (k 0)) (d (n "rayon") (r "^1.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("rustls-tls" "blocking"))) (k 0)) (d (n "scraper") (r "^0.12.0") (d #t) (k 0)) (d (n "strum") (r "^0.19.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.1.0") (d #t) (k 0)))) (h "0llxk8vv8nfqzcg2akzkd414f4fz94z80qb36ksmfhjxx2qdz41x")))

