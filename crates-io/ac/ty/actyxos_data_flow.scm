(define-module (crates-io ac ty actyxos_data_flow) #:use-module (crates-io))

(define-public crate-actyxos_data_flow-0.1.0 (c (n "actyxos_data_flow") (v "0.1.0") (d (list (d (n "abomonation") (r "^0.7") (d #t) (k 0)) (d (n "abomonation_derive") (r "^0.5") (d #t) (k 0)) (d (n "actyxos_sdk") (r "^0.3.1") (f (quote ("client" "dataflow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "chrono-tz") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "differential-dataflow") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("compat"))) (d #t) (k 0)) (d (n "futures-state-stream") (r "^0.1") (d #t) (k 0)) (d (n "futures01") (r "^0.1") (d #t) (k 0) (p "futures")) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "native-tls") (r "^0.2") (d #t) (k 0)) (d (n "postgres") (r "^0.17") (f (quote ("with-chrono-0_4" "with-serde_json-1"))) (d #t) (k 0)) (d (n "postgres-native-tls") (r "^0.3") (d #t) (k 0)) (d (n "rusqlite") (r "^0.22") (f (quote ("bundled" "backup"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("raw_value"))) (d #t) (k 0)) (d (n "test-env-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tiberius") (r "^0.3") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "timely") (r "^0.11") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-threaded" "macros" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.15") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.6") (f (quote ("chrono" "env-filter" "fmt"))) (d #t) (k 2)))) (h "1d3wfi81kqf5z5yvnqkhd4j057lm6shwp344430kdbzj2mwz52dn")))

