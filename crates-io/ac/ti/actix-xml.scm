(define-module (crates-io ac ti actix-xml) #:use-module (crates-io))

(define-public crate-actix-xml-0.1.0 (c (n "actix-xml") (v "0.1.0") (d (list (d (n "actix-rt") (r "^2.2") (d #t) (k 2)) (d (n "actix-web") (r "^3.3.2") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1rkapbanini50adwphyiclpr82bsdsb8ygf91373rb8k5p1fv54g") (f (quote (("encoding" "quick-xml/encoding") ("default" "compress") ("compress" "actix-web/compress")))) (y #t)))

(define-public crate-actix-xml-0.1.1 (c (n "actix-xml") (v "0.1.1") (d (list (d (n "actix-rt") (r "^2.2") (d #t) (k 2)) (d (n "actix-web") (r "^3.3.2") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rzxsg16x47ix37q9a95hxq82vrb71x8ylf0pvmwspl6himrpmrg") (f (quote (("encoding" "quick-xml/encoding") ("default" "compress") ("compress" "actix-web/compress"))))))

(define-public crate-actix-xml-0.2.0-beta.0 (c (n "actix-xml") (v "0.2.0-beta.0") (d (list (d (n "actix-rt") (r "^2.2") (d #t) (k 2)) (d (n "actix-web") (r "^4.0.0-beta.8") (k 0)) (d (n "actix-web") (r "^4.0.0-beta.8") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1mgccillypakfhpmjrr9n3ilabi5ms0hl2iflkli812rajg3a26c") (f (quote (("encoding" "quick-xml/encoding") ("default" "compress") ("compress"))))))

(define-public crate-actix-xml-0.2.0 (c (n "actix-xml") (v "0.2.0") (d (list (d (n "actix-rt") (r "^2.6") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mime") (r "^0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1d09hz70ppbh8kazig9k15gp54c8q06ybxj3g4k6vvwjmxsidwxp") (f (quote (("encoding" "quick-xml/encoding") ("default" "compress-brotli" "compress-gzip" "compress-zstd") ("compress-zstd" "actix-web/compress-zstd" "__compress") ("compress-gzip" "actix-web/compress-gzip" "__compress") ("compress-brotli" "actix-web/compress-brotli" "__compress") ("__compress"))))))

