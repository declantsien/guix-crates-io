(define-module (crates-io ac ti actix-web-query-method-middleware) #:use-module (crates-io))

(define-public crate-actix-web-query-method-middleware-1.0.0 (c (n "actix-web-query-method-middleware") (v "1.0.0") (d (list (d (n "actix-service") (r "^2.0") (d #t) (k 0)) (d (n "actix-web") (r "^4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "qstring") (r "^0.7") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "0vha8q1akfy6s4j2s9dx9rykczgcbqi2x0fnxar35d0mbycs0qdk") (f (quote (("logging_tracing" "tracing") ("logging_log" "log") ("default" "logging_tracing"))))))

(define-public crate-actix-web-query-method-middleware-1.0.1 (c (n "actix-web-query-method-middleware") (v "1.0.1") (d (list (d (n "actix-service") (r "^2.0") (d #t) (k 0)) (d (n "actix-web") (r "^4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "qstring") (r "^0.7") (d #t) (k 0)) (d (n "test-log") (r "^0.2") (f (quote ("trace"))) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "fmt"))) (k 2)))) (h "0xbwih7g159fbiaiy8hqggsys1a3rql8vbjpaj27fxsam6cznjbn") (f (quote (("logging_tracing" "tracing") ("logging_log" "log") ("default" "logging_tracing"))))))

