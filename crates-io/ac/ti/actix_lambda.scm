(define-module (crates-io ac ti actix_lambda) #:use-module (crates-io))

(define-public crate-actix_lambda-0.1.0 (c (n "actix_lambda") (v "0.1.0") (d (list (d (n "actix-web") (r "^0.7") (d #t) (k 0)) (d (n "aws_lambda_events") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "lambda_http") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "1dpr4z36z92926jyvc35jajs2j1z2ig4m6alxavv7mbyyyrfvwlm")))

(define-public crate-actix_lambda-0.1.1 (c (n "actix_lambda") (v "0.1.1") (d (list (d (n "actix-web") (r "^0.7") (d #t) (k 0)) (d (n "aws_lambda_events") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "lambda_http") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "url") (r "^1.7") (d #t) (k 0)))) (h "05svigy6bckfq9bvsxhbpzzvbrp8i129x86ball1613li8s2smk1")))

(define-public crate-actix_lambda-0.2.0 (c (n "actix_lambda") (v "0.2.0") (d (list (d (n "actix") (r "^0.9") (k 0)) (d (n "actix-web") (r "^2") (k 0)) (d (n "aws_lambda_events") (r "^0.2") (d #t) (k 0)) (d (n "crossbeam") (r "^0.7") (d #t) (k 0)) (d (n "env_logger") (r "^0.7") (d #t) (k 2)) (d (n "lambda_http") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1") (d #t) (k 0)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "reqwest") (r "^0.9") (f (quote ("rustls-tls"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "12nlvdfbg3wflbiafgkq9h45fzb2gnrysr3pv7w82phbqpb3wl5r")))

