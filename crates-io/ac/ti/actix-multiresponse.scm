(define-module (crates-io ac ti actix-multiresponse) #:use-module (crates-io))

(define-public crate-actix-multiresponse-0.1.0 (c (n "actix-multiresponse") (v "0.1.0") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-protobuf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.9") (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ldlfzvpirj33lznxmh2bv03gxl5zzv2gy1qc5h24iycymkq4zqh") (f (quote (("protobuf" "prost" "actix-protobuf") ("json" "serde") ("default" "json" "protobuf"))))))

(define-public crate-actix-multiresponse-0.1.1 (c (n "actix-multiresponse") (v "0.1.1") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-protobuf") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paperclip") (r "^0.7.0") (f (quote ("actix4"))) (o #t) (k 0)) (d (n "prost") (r "^0.9") (o #t) (k 0)) (d (n "prost") (r "^0.9") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bsf11rp8x9hzf9yiz398nkl30ad7pzkidjmw6jq9lqw6shywijx") (f (quote (("protobuf" "prost" "actix-protobuf") ("json" "serde") ("default" "json" "protobuf"))))))

(define-public crate-actix-multiresponse-0.2.0 (c (n "actix-multiresponse") (v "0.2.0") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-protobuf") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paperclip") (r "^0.7.0") (f (quote ("actix4"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.10") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vp0rx0rij7wn0mkrn95dqsjk0j3zcb8c29i8lwbcs9jpv7hf0vh") (f (quote (("protobuf" "prost" "actix-protobuf") ("json" "serde") ("default" "json" "protobuf"))))))

(define-public crate-actix-multiresponse-0.3.0 (c (n "actix-multiresponse") (v "0.3.0") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-protobuf") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "paperclip") (r "^0.7.0") (f (quote ("actix4"))) (o #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.11") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "15x6jmv4fanphyn2kj4jlkrg8m14cw08k8jf7qf20w2gbd3h6af0") (f (quote (("protobuf" "prost" "actix-protobuf") ("json" "serde") ("default" "json" "protobuf"))))))

(define-public crate-actix-multiresponse-0.4.0 (c (n "actix-multiresponse") (v "0.4.0") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.11") (d #t) (k 2)) (d (n "quick-xml") (r "^0.27.1") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0k9plw3d5z5hk2p2pjsdnglqhdqwzy0gj31pwf2cw9vz11zzjmrs") (f (quote (("xml" "quick-xml" "serde") ("protobuf" "prost") ("json" "serde" "serde_json") ("default" "json" "protobuf"))))))

(define-public crate-actix-multiresponse-0.4.1 (c (n "actix-multiresponse") (v "0.4.1") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.11") (d #t) (k 2)) (d (n "quick-xml") (r "^0.27.1") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0pjc5is359gi4jzg79027v2ckkadb5pjvaf7ijxgfi57y0wv2lbi") (f (quote (("xml" "quick-xml" "serde") ("protobuf" "prost") ("json" "serde" "serde_json") ("default" "json" "protobuf"))))))

(define-public crate-actix-multiresponse-0.4.2 (c (n "actix-multiresponse") (v "0.4.2") (d (list (d (n "actix-macros") (r "^0.2") (d #t) (k 2)) (d (n "actix-rt") (r "^2.7") (d #t) (k 2)) (d (n "actix-web") (r "^4.0") (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (k 0)) (d (n "prost") (r "^0.11") (f (quote ("std"))) (k 2)) (d (n "prost-derive") (r "^0.11") (d #t) (k 2)) (d (n "quick-xml") (r "^0.27.1") (f (quote ("serialize"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1r02gaqrd4jld6lxffib5q9yk5qzw1lbkakda4pwmw0hwdnnlx0l") (f (quote (("xml" "quick-xml" "serde") ("protobuf" "prost") ("json" "serde" "serde_json") ("default" "json" "protobuf"))))))

