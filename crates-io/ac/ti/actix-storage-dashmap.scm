(define-module (crates-io ac ti actix-storage-dashmap) #:use-module (crates-io))

(define-public crate-actix-storage-dashmap-0.1.0 (c (n "actix-storage-dashmap") (v "0.1.0") (d (list (d (n "actix") (r "^0.10") (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 2)) (d (n "actix-storage") (r "^0.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "actix-storage") (r "^0.1") (f (quote ("all" "tests"))) (d #t) (k 2)) (d (n "actix-web") (r "^3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^3") (d #t) (k 0)) (d (n "delay-queue") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0igvs95lqhdjjb9ad2cwczh8ifdmsqz7h632mls2jj5770ia9261") (f (quote (("actor" "delay-queue"))))))

(define-public crate-actix-storage-dashmap-0.1.1 (c (n "actix-storage-dashmap") (v "0.1.1") (d (list (d (n "actix") (r "^0.10") (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 2)) (d (n "actix-storage") (r "^0.1.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "actix-storage") (r "^0.1") (f (quote ("all" "tests"))) (d #t) (k 2)) (d (n "actix-web") (r "^3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^3") (d #t) (k 0)) (d (n "delay-queue") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1q7yq5gz1xc6q3pp1c0kf90r4qhkzr48d6283inp10gzq4xnpg98") (f (quote (("actor" "delay-queue"))))))

(define-public crate-actix-storage-dashmap-0.2.0-alpha.1 (c (n "actix-storage-dashmap") (v "0.2.0-alpha.1") (d (list (d (n "actix") (r "^0.10") (k 0)) (d (n "actix-rt") (r "^1.1") (d #t) (k 2)) (d (n "actix-storage") (r "^0.2.0-alpha.1") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "actix-storage") (r "^0.2.0-alpha.1") (f (quote ("all" "tests"))) (d #t) (k 2)) (d (n "actix-web") (r "^3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.0") (d #t) (k 0)) (d (n "delay-queue") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0k560nh47anlzc7xip959xmn6zwyx43x5c37zlm6nsnj1syz4m9c") (f (quote (("actor" "delay-queue"))))))

(define-public crate-actix-storage-dashmap-0.2.0-alpha.2 (c (n "actix-storage-dashmap") (v "0.2.0-alpha.2") (d (list (d (n "actix") (r "^0.10") (k 0)) (d (n "actix-storage") (r "^0.2.0-alpha.2") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "actix-storage") (r "^0.2.0-alpha.2") (f (quote ("all" "tests"))) (d #t) (k 2)) (d (n "actix-web") (r "^3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.0") (d #t) (k 0)) (d (n "delay-queue") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0jbifbw2ny9sikj9cf2gnn6qfaxlplpzmn5pjv83378lccmd1pk0") (f (quote (("actor" "delay-queue"))))))

(define-public crate-actix-storage-dashmap-0.2.0 (c (n "actix-storage-dashmap") (v "0.2.0") (d (list (d (n "actix") (r "^0.10") (k 0)) (d (n "actix-storage") (r "^0.2.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "actix-storage") (r "^0.2.0") (f (quote ("all" "tests"))) (d #t) (k 2)) (d (n "actix-web") (r "^3") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.0") (d #t) (k 0)) (d (n "delay-queue") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "14pb6avbf23v5bdms4zhhbgfqg9yvqzfjq5ks8rzd4c1akr33z8q") (f (quote (("actor" "delay-queue"))))))

(define-public crate-actix-storage-dashmap-0.3.0 (c (n "actix-storage-dashmap") (v "0.3.0") (d (list (d (n "actix") (r "^0.13") (k 0)) (d (n "actix-storage") (r "^0.3.0") (f (quote ("with-serde"))) (d #t) (k 0)) (d (n "actix-storage") (r "^0.3.0") (f (quote ("all" "tests"))) (d #t) (k 2)) (d (n "actix-web") (r "^4.0.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.4") (d #t) (k 0)) (d (n "delay-queue") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "175bima74kvnawi1vlikhvr1x0kshymg8afdshlngzz8hldvaxq4") (f (quote (("actor" "delay-queue"))))))

