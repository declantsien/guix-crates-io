(define-module (crates-io cy ni cynic-codegen) #:use-module (crates-io))

(define-public crate-cynic-codegen-0.1.0 (c (n "cynic-codegen") (v "0.1.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.7") (d #t) (k 0)) (d (n "quote") (r "^1.0.2") (d #t) (k 0)) (d (n "syn") (r "^1.0.13") (d #t) (k 0)))) (h "1cdgcb9g6nf471djg38li47qxfxq4a8kr489pjspn2mp6m157l1v")))

(define-public crate-cynic-codegen-0.1.1 (c (n "cynic-codegen") (v "0.1.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.7") (d #t) (k 0)) (d (n "quote") (r "^1.0.2") (d #t) (k 0)) (d (n "syn") (r "^1.0.13") (d #t) (k 0)))) (h "14cahlrkxbpp7ydhck524773i71npyk5a11v690kq2wcqdih465x")))

(define-public crate-cynic-codegen-0.1.2 (c (n "cynic-codegen") (v "0.1.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.7") (d #t) (k 0)) (d (n "quote") (r "^1.0.2") (d #t) (k 0)) (d (n "syn") (r "^1.0.13") (d #t) (k 0)))) (h "144aixxc0qljhmn92494m92zh8nrd0hhgv0ja78a0m0dvcqx6nva")))

(define-public crate-cynic-codegen-0.2.0 (c (n "cynic-codegen") (v "0.2.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.7") (d #t) (k 0)) (d (n "quote") (r "^1.0.2") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0.13") (d #t) (k 0)))) (h "0vs29jly02ljm0l64pi6bghdayp62lcwmva87wcmf6sb3k2k1dlz") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.3.0 (c (n "cynic-codegen") (v "0.3.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.7") (d #t) (k 0)) (d (n "quote") (r "^1.0.2") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0.13") (d #t) (k 0)))) (h "10zdn5r8pmvfhhawlk772n99s3lx2g6jbsdxrsnr4jvwvk646cmq") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.4.0 (c (n "cynic-codegen") (v "0.4.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.2.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0.7") (d #t) (k 0)) (d (n "quote") (r "^1.0.2") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0.13") (d #t) (k 0)))) (h "1ls1wic3j9mg167yhvwiqaywcczlwkyhs55vs89s7d16anfqf9nk") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.5.0 (c (n "cynic-codegen") (v "0.5.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1z4wglsgk55qm8vngbcjg95y5wh3shp487x44dp1zfgy39zagr33") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.6.0 (c (n "cynic-codegen") (v "0.6.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1g0y37pnziwwsqkagcc1dfd09da0271s5y7q7y5116bv2al546m5") (f (quote (("rustfmt") ("optimised-query-modules") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.7.0 (c (n "cynic-codegen") (v "0.7.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0nwk0qrm82v8nvmh6zj6inxh27is4y80cq6xyvc73687p8h3p44r") (f (quote (("rustfmt") ("optimised-query-modules") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.8.0 (c (n "cynic-codegen") (v "0.8.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0jq0ilymgs96m7qbdggbdihqyxxni3zrrvc7lxfrbpjhfvzixq8q") (f (quote (("rustfmt") ("optimised-query-modules") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.9.0 (c (n "cynic-codegen") (v "0.9.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "08wxyb8fcyl1g0121fry6ld5iks81vh29z0yprqxz9abigmnx2ir") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.10.0 (c (n "cynic-codegen") (v "0.10.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "01lxgvang074hmqdqqvg0gdxz9l2a46ibzcc0qd4nnyy77cvlpyy") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.10.1 (c (n "cynic-codegen") (v "0.10.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0i14h38mbn5i5fzr0ri5zny4iwwvdkwlak158zbrp2zg4a1wv2dh") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.11.0 (c (n "cynic-codegen") (v "0.11.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0kvr2p0fn0dipz4xjl2jx16x3qggljgajrz2f5k9hk8ddnl6rlk0") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.11.1 (c (n "cynic-codegen") (v "0.11.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0xw4sc4f55p2xihlyv0g5smz2n10c1mf9dz93wrjq5q5xm84pxij") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.12.0 (c (n "cynic-codegen") (v "0.12.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1n51xacqr46y7vg580vhij8aag26mdwbiccpi8qmqfj7gxn9hgh3") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.12.1 (c (n "cynic-codegen") (v "0.12.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0bd0a83f5m8sn6j4gbdqz85xq7y401zk6wpnlbf5kfr55xncy6rh") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.12.2 (c (n "cynic-codegen") (v "0.12.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0szvca9x6jcz4k004a9q8w1grd9x3154kcspiidvdkwa67dv6dic") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.12.3 (c (n "cynic-codegen") (v "0.12.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3.0") (d #t) (k 2)) (d (n "darling") (r "^0.10.2") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1ncm4hfzx4q53lc8gnkv1bddhq0p7hfc6sf3hf13ss826lhp3rdq") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.13.0 (c (n "cynic-codegen") (v "0.13.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.12") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "05d455bc0i048vp5s2plcv0p7683w67949b0293d3p420p2dgj6i") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.13.1 (c (n "cynic-codegen") (v "0.13.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.12") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1k8q0jfrxlqcf8hmws3w6h0hqlmwwdpwwfi1z789s2qgn2knm3v1") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.14.0 (c (n "cynic-codegen") (v "0.14.0") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.12") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0f459mkx1xi37inc8pkvlslvkyh31kgf4wp4dl3iga2z47bpxpsd") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.14.1 (c (n "cynic-codegen") (v "0.14.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.12") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1b28pm0bwdrc0v8qb4n9lr05iq9bcf5wmd6jn46fsp1dzmq85dd7") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.15.0 (c (n "cynic-codegen") (v "0.15.0") (d (list (d (n "Inflector") (r "^0.11.4") (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.12") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.6.3") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1rnb5p0hy2fpywrj0nvkxchqjcvgbcjrxhfs83zcpjbav7yrzzqf") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-0.15.1 (c (n "cynic-codegen") (v "0.15.1") (d (list (d (n "Inflector") (r "^0.11.4") (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1dyrg3lbhkijjdlm8swkhirv6b5bjv6vix4jykpxrswvqanx18vs") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-1.0.0 (c (n "cynic-codegen") (v "1.0.0") (d (list (d (n "Inflector") (r "^0.11.4") (k 0)) (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "insta") (r "^1.8") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0gjwn7birxsz70laa1w9qd7j30gqm3jnjjybvka3fdixzr90i7yx") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.0.0 (c (n "cynic-codegen") (v "2.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "10ck53xz008iyr0xj0q58kifqqcn8wrjfh377jzpyg8ix1m840nw") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.0.1 (c (n "cynic-codegen") (v "2.0.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1nmxk39fmw8dp1kj3f11ls6yqdqhrnwsp7dyxvnk565av7pmyj63") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.1.0 (c (n "cynic-codegen") (v "2.1.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1n6nxpf527miansk95zsx8d76nrjp27qnca0q31q08xw05n00ghw") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.0 (c (n "cynic-codegen") (v "2.2.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "180hh0wrj4gal2hfsmnb6ii27w29cj32hr9qps6lxj7mr29yr1mn") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.1 (c (n "cynic-codegen") (v "2.2.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0zs5cm8w06h174ipav0nzlsgkwqlh2x4l8zi7bc9bsv0bm3mr2vk") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.2 (c (n "cynic-codegen") (v "2.2.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0b30vrj50a2h0z27ngfrja6bkg4a2ldqgjqf58md0jq44s57bz5f") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.3 (c (n "cynic-codegen") (v "2.2.3") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0nww98b487nmdbks62bl7vpk7kfdky99lk6azbqiz74l8k0yi8bn") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.4 (c (n "cynic-codegen") (v "2.2.4") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0shczhg04ssf48xz4scnrchk92cr76nfnv3zjxjshiy3rc7fx8g0") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.5 (c (n "cynic-codegen") (v "2.2.5") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1d3jdx67b2f6wv8wkjjnwpdll63p8y0bxdv78hkcb77dqaznafsi") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.6 (c (n "cynic-codegen") (v "2.2.6") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "1c6vkvmz0n6j224qjn7as9y3ynk8k88f641i6rxprb9y5ngd62vj") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.7 (c (n "cynic-codegen") (v "2.2.7") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "15zbag6328z7vr1q95vdmkzlsa9y0yq4gx0l82hcnl13n8a4iy79") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-2.2.8 (c (n "cynic-codegen") (v "2.2.8") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.13") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (d #t) (k 0)))) (h "0s7pgqzixcvmv90hlhbxfg834bask6z2m9qgkl3lcksmrh2vp8bh") (f (quote (("rustfmt") ("default" "rustfmt"))))))

(define-public crate-cynic-codegen-3.0.0-beta.1 (c (n "cynic-codegen") (v "3.0.0-beta.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "122f3jvlhx37cd710kl7ps0l6pbxd7n3b0x2255da3qnrp8lgxkk") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.0.0-beta.2 (c (n "cynic-codegen") (v "3.0.0-beta.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1mjq1j7c13ihwxldijcr07sjw9dahrqnndq32ns9a2q60r1fgn4d") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.0.0-beta.3 (c (n "cynic-codegen") (v "3.0.0-beta.3") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "130klnajk232dayvm5mh7gz6v7gz7x2ihnplpm65ppp407lsym14") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.0.0-beta.4 (c (n "cynic-codegen") (v "3.0.0-beta.4") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "18c0kxlg4zsd9dbm7xzyryr21zrcc4yqxmw56xpn8832ikcg61q6") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.0.0 (c (n "cynic-codegen") (v "3.0.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1844yjmk6jdgqf1gjdgy29r1zaj6m5wq7ar2jby9wyq4spwzy550") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.0.1 (c (n "cynic-codegen") (v "3.0.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1xp3bdc89nka2dc4s65mn1y39d7131z6581fi95i14bxb17jlj8f") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.0.2 (c (n "cynic-codegen") (v "3.0.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0l432z6bjxi9fpcb8l80b9ppp6bsfji9zg40pagckbwlcp7v6bvj") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv"))))))

(define-public crate-cynic-codegen-3.1.0 (c (n "cynic-codegen") (v "3.1.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1dkgrwn4ylfvm8p5sj84rzn904idyazwm0m7f8apbzpc4jx9zbiv") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.1.1 (c (n "cynic-codegen") (v "3.1.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1iml36chn9qc2b9qf4rnxllqvsk19qd789k9vqrs8x03bz0vwsm9") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.2.0 (c (n "cynic-codegen") (v "3.2.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1jmrch8ccrgqvgrqpi92akrxnpqv66wygrdkgfvrdc3kkm0ipymc") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.2.1 (c (n "cynic-codegen") (v "3.2.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0dvmgv0xlyq2a7h9lar0gpvsl5qnb0h8df4z3gnhj9cp2g0gpbqs") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.2.2 (c (n "cynic-codegen") (v "3.2.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.14") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.15") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.11.0") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "02bdaz0mi3k5mr6zvy5mnq2q9yd5fdmk4f5b28bpbllb3avnb3jf") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.3.0 (c (n "cynic-codegen") (v "3.3.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1vl6qis5bh0z9h1xq76lm7iqbl5311h3ssa36hmdfip3pjhaqdfa") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.3.1 (c (n "cynic-codegen") (v "3.3.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "19xnag471pl1fr0xil4rpfwirppn6kap2qscpjfh8j6vipl31gf7") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.3.2 (c (n "cynic-codegen") (v "3.3.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "16m9a0dhj58bnz1aaszxf705l1drp563f3y5i046hjf8z5ldrb5z") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.3.3 (c (n "cynic-codegen") (v "3.3.3") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0vqp4vj03yrb55kbhhihmjmm1bcgxaswwskbzay46gp07ay0sr4s") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.4.0 (c (n "cynic-codegen") (v "3.4.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0kjf93ykcbpk9l67fk4nax3kr21nc60i22jp35jmn83bzm98mi2f") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.4.1 (c (n "cynic-codegen") (v "3.4.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1555fbrh8vb3x4gay68jif59kpb635bz3l7f0mnsmb65kw791vx4") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.4.2 (c (n "cynic-codegen") (v "3.4.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1x1zkfli3d7v2iw33i9pixxq236gfcjgnihh4zjz4ws0fnpwddzd") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.4.3 (c (n "cynic-codegen") (v "3.4.3") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1di0akv23r8y8ir4iakg5mymmwqqnfkqjlgzgjfmrxghz4cn27d1") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.5.0 (c (n "cynic-codegen") (v "3.5.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1l6mprjlmr3qb52ix1vmdw5hrhf8zv4mgkz78wa55kfc3r468ldz") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.5.1 (c (n "cynic-codegen") (v "3.5.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "graphql-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "037m36s34wbpfj9jgxydsmz37qlkw1fcim4mz8i440lp7vx0xi4s") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.6.0 (c (n "cynic-codegen") (v "3.6.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "cynic-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1wzrpad0aq8b7nd2xk3633fj92ffzg9mhzx7kn9fkn3a7lhmamav") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.6.1 (c (n "cynic-codegen") (v "3.6.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "cynic-parser") (r "^0.2.5") (d #t) (k 0)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "0h0gmr26cfhx4gbgc3f2hxxm041yxgpcqlf73bp5la496kcs9hch") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.69")))

(define-public crate-cynic-codegen-3.7.0 (c (n "cynic-codegen") (v "3.7.0") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "cynic-parser") (r "^0.2.6") (d #t) (k 0)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1ylyplwdf578vjrrd7w39xvap65067k6p8wmhdipgxggb56nyxmc") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.72")))

(define-public crate-cynic-codegen-3.7.1 (c (n "cynic-codegen") (v "3.7.1") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "cynic-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1b3mqsxc666zaiv52hfwf0h04vzbmlv9aj2zk3bry7bp5dwi2nax") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.72")))

(define-public crate-cynic-codegen-3.7.2 (c (n "cynic-codegen") (v "3.7.2") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "cynic-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "1jjdfb4vldaxhf944g9rxqcpymk5hrb9mi3m9l1q20sryi9ijgqg") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.72")))

(define-public crate-cynic-codegen-3.7.3 (c (n "cynic-codegen") (v "3.7.3") (d (list (d (n "assert_matches") (r "^1.4.0") (d #t) (k 2)) (d (n "counter") (r "^0.5") (d #t) (k 0)) (d (n "cynic-parser") (r "^0.4.2") (d #t) (k 0)) (d (n "darling") (r "^0.20") (d #t) (k 0)) (d (n "divan") (r "^0.1") (d #t) (k 2)) (d (n "insta") (r "^1.17") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "ouroboros") (r "^0.18") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.21") (d #t) (k 2)) (d (n "strsim") (r "^0.10.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("visit-mut"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "074q8d0zn0vcl35fi76nfrl8pwkg7w3nzzwngq4cw00ajrpwh3kw") (f (quote (("rustfmt") ("default" "rustfmt")))) (s 2) (e (quote (("rkyv" "dep:rkyv")))) (r "1.72")))

