(define-module (crates-io cy cl cyclonedx-bom) #:use-module (crates-io))

(define-public crate-cyclonedx-bom-0.1.0 (c (n "cyclonedx-bom") (v "0.1.0") (d (list (d (n "cargo") (r "^0.38") (d #t) (k 0)) (d (n "failure") (r "^0.1") (k 0)) (d (n "packageurl") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "1gzffdpdyyr5dhyrjafxky9vb3cismz7klqddfar236psmqxi9iq")))

(define-public crate-cyclonedx-bom-0.1.1 (c (n "cyclonedx-bom") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.37") (d #t) (k 0)) (d (n "cargo") (r "^0.54.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "packageurl") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "0fkmj7pvvn40qrhmsdj95wg9zxwmy9pba95s936a1ikcp3wxxr59")))

(define-public crate-cyclonedx-bom-0.2.0 (c (n "cyclonedx-bom") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo") (r "^0.56.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "1hmy1h7j2w1r79rjdrw7nah9yn6rwanixgpdja26kic95xk4y08c")))

(define-public crate-cyclonedx-bom-0.2.1 (c (n "cyclonedx-bom") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "cargo") (r "^0.56.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "019flv3gkxihgd04cdjdqpqjvnp2xj5h6wc8mdp5l2bs0db895wl")))

(define-public crate-cyclonedx-bom-0.3.0 (c (n "cyclonedx-bom") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.50") (d #t) (k 0)) (d (n "cargo") (r "^0.57.0") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.14.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4.19") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "regex") (r "^1.3.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.72") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "xml_writer") (r "^0.4.0") (d #t) (k 0)))) (h "0a2kf8cp7sml7ng9p643xrssfx3r3vz431cim88hjvm57v79akxl")))

(define-public crate-cyclonedx-bom-0.3.2 (c (n "cyclonedx-bom") (v "0.3.2") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "insta") (r "^1.17.1") (f (quote ("glob"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.0") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.141") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "spdx") (r "^0.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.12") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.4") (d #t) (k 0)))) (h "0aqy2vscf7rfdpr8m4p01c7ddlg8q2d8m6xbq1lwswm57rhwg9s5") (r "1.60.0")))

(define-public crate-cyclonedx-bom-0.3.3 (c (n "cyclonedx-bom") (v "0.3.3") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "spdx") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.4") (d #t) (k 0)))) (h "0xi2vnwcyf2vrnw2dnpjbj162v3hbcl25igr9xdqb1garhl2rm7n") (r "1.60.0")))

(define-public crate-cyclonedx-bom-0.3.4 (c (n "cyclonedx-bom") (v "0.3.4") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.13.1") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "spdx") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.4") (d #t) (k 0)))) (h "0iyky66sm4s9bfh75qk0003xbq50018cf8yasf1hx2jqraknip72") (r "1.60.0")))

(define-public crate-cyclonedx-bom-0.3.5 (c (n "cyclonedx-bom") (v "0.3.5") (d (list (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "insta") (r "^1.19.1") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "spdx") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "time") (r "^0.3.14") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.4") (d #t) (k 0)))) (h "068zga9ll34mabv76fwbj9nhdw7z70iaj4jrnm0im96z29k5q995") (r "1.60.0")))

(define-public crate-cyclonedx-bom-0.4.0 (c (n "cyclonedx-bom") (v "0.4.0") (d (list (d (n "base64") (r "^0.13.1") (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "insta") (r "^1.21.0") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.15.0") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "spdx") (r "^0.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.4") (d #t) (k 0)))) (h "0md9818fsws1birp45kp3cm2x6rga5gxzyd96k2sqvp6kwjija85") (r "1.60.0")))

(define-public crate-cyclonedx-bom-0.4.1 (c (n "cyclonedx-bom") (v "0.4.1") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "spdx") (r "^0.10.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.21") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.10") (d #t) (k 0)))) (h "1la02z7wkx2llnc396m3b8kmzrqqsld19a3v812g1czg2n8r77w9") (r "1.65.0")))

(define-public crate-cyclonedx-bom-0.4.3 (c (n "cyclonedx-bom") (v "0.4.3") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.192") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spdx") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.16") (d #t) (k 0)))) (h "0wibmj9789vlahm5nww9bgzvky1pw6fa9zpmhxngpfh37cmw322y") (r "1.70.0")))

(define-public crate-cyclonedx-bom-0.5.0 (c (n "cyclonedx-bom") (v "0.5.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "fluent-uri") (r "^0.1.4") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2.0") (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spdx") (r "^0.10.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.16") (d #t) (k 0)))) (h "0nw3sd468993p60yc38xfh6w1ln4j97y6g50r3zgs9gamai4xncf") (r "1.70.0")))

(define-public crate-cyclonedx-bom-0.6.0 (c (n "cyclonedx-bom") (v "0.6.0") (d (list (d (n "base64") (r "^0.21.2") (d #t) (k 0)) (d (n "cyclonedx-bom-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "fluent-uri") (r "^0.1.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.2") (d #t) (k 0)) (d (n "insta") (r "^1.33.0") (f (quote ("glob" "json"))) (d #t) (k 2)) (d (n "jsonschema") (r "^0.17.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "ordered-float") (r "^4.2.0") (k 0)) (d (n "packageurl") (r "^0.3.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "regex") (r "^1.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "spdx") (r "^0.10.2") (d #t) (k 0)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.48") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (f (quote ("formatting" "parsing"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.16") (d #t) (k 0)))) (h "1gdfa6dl684z49kvcc5qq5ajrznnjdh874l681yjl10c11d8yqlv") (r "1.70.0")))

