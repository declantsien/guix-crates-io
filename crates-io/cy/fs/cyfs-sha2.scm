(define-module (crates-io cy fs cyfs-sha2) #:use-module (crates-io))

(define-public crate-cyfs-sha2-0.8.2 (c (n "cyfs-sha2") (v "0.8.2") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0zmj6ibngmkcnrngbjmy0njiq7zcc4pz51j0xg4xgb2dc0i9w86g") (f (quote (("std" "digest/std") ("default" "std") ("compress") ("asm-aarch64" "asm" "libc") ("asm" "sha2-asm"))))))

(define-public crate-cyfs-sha2-0.8.3 (c (n "cyfs-sha2") (v "0.8.3") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1qn3z00qm0zxh4m6saahrph9hlap3d0m6gznkvs8r1yxs4sszcsx") (f (quote (("std" "digest/std") ("default" "std") ("compress") ("asm-aarch64" "asm" "libc") ("asm" "sha2-asm"))))))

(define-public crate-cyfs-sha2-0.8.4 (c (n "cyfs-sha2") (v "0.8.4") (d (list (d (n "block-buffer") (r "^0.7") (d #t) (k 0)) (d (n "digest") (r "^0.8") (d #t) (k 0)) (d (n "fake-simd") (r "^0.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.68") (o #t) (d #t) (k 0)) (d (n "opaque-debug") (r "^0.2") (d #t) (k 0)) (d (n "sha2-asm") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "digest") (r "^0.8") (f (quote ("dev"))) (d #t) (k 2)) (d (n "hex-literal") (r "^0.1") (d #t) (k 2)))) (h "0wxw88zr42xn56vgd8cyjqmgl7d9rrx5xkfy0g6i8xxbnanl53k7") (f (quote (("std" "digest/std") ("default" "std") ("compress") ("asm-aarch64" "asm" "libc") ("asm" "sha2-asm"))))))

