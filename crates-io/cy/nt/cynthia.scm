(define-module (crates-io cy nt cynthia) #:use-module (crates-io))

(define-public crate-cynthia-0.0.1 (c (n "cynthia") (v "0.0.1") (h "0c4vp2l2zqr068rjfmljm4qna8hj71blwjlddw3q6fq8ipddq84g")))

(define-public crate-cynthia-0.0.2 (c (n "cynthia") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "byte-pool") (r "^0.2.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cynthia-macros") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (k 0)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "infer") (r "^0.2.3") (d #t) (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (k 0)) (d (n "native-tls") (r "^0.2.3") (d #t) (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "serde_qs") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1.16") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.9") (d #t) (k 0)) (d (n "timerfd") (r "^1.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "tracing") (r "^0.1.13") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "03l6vik4npsqwdhmk9jpn0q756x1j05gd8rrkqy217fsiiv1l3gp") (f (quote (("std" "alloc" "futures-io" "memchr/std") ("macros" "cynthia-macros") ("full" "macros") ("default" "std" "pin-project-lite" "macros") ("alloc" "futures-core/alloc" "pin-project-lite"))))))

(define-public crate-cynthia-0.0.3 (c (n "cynthia") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0.26") (d #t) (k 0)) (d (n "byte-pool") (r "^0.2.2") (d #t) (k 0)) (d (n "bytes") (r "^1.0.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "cynthia-macros") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (k 0)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "futures-sink") (r "^0.3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "httparse") (r "^1.3.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.0") (d #t) (k 0)) (d (n "infer") (r "^0.2.3") (d #t) (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 2)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "memchr") (r "^2.3.3") (k 0)) (d (n "native-tls") (r "^0.2.3") (d #t) (k 0)) (d (n "nix") (r "^0.21") (d #t) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.51") (d #t) (k 0)) (d (n "serde_qs") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.0") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1.16") (d #t) (k 0)) (d (n "slab") (r "^0.4.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.9") (d #t) (k 0)) (d (n "timerfd") (r "^1.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 2)) (d (n "tracing") (r "^0.1.13") (f (quote ("std"))) (k 0)) (d (n "tracing-futures") (r "^0.2.5") (d #t) (k 0)) (d (n "url") (r "^2.1.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1kj57va1sz2xfw0fqqq3n9bm7rpbmz5r1cjm31a6idbsarpshiw2") (f (quote (("std" "alloc" "futures-io" "memchr/std") ("macros" "cynthia-macros") ("full" "macros") ("default" "std" "pin-project-lite" "macros") ("alloc" "futures-core/alloc" "pin-project-lite"))))))

(define-public crate-cynthia-0.0.4 (c (n "cynthia") (v "0.0.4") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.1") (d #t) (k 0)) (d (n "cynthia-macros") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (k 0)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 2)) (d (n "libc") (r "^0.2.78") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 2)) (d (n "memchr") (r "^2.3.3") (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1.16") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1.1") (d #t) (k 0)) (d (n "timerfd") (r "^1.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 2)))) (h "1bm2whpib355qvpfhrw4qga9sqjygn2m9vj9379fxcddbx4wxs4n") (f (quote (("std" "alloc" "futures-io" "memchr/std") ("macros" "cynthia-macros") ("full" "macros") ("default" "std" "pin-project-lite" "macros") ("alloc" "futures-core/alloc" "pin-project-lite"))))))

(define-public crate-cynthia-0.0.5 (c (n "cynthia") (v "0.0.5") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.1") (d #t) (k 0)) (d (n "cynthia-macros") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (k 0)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 2)) (d (n "libc") (r "^0.2.78") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 2)) (d (n "memchr") (r "^2.3.3") (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1.16") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1.1") (d #t) (k 0)) (d (n "timerfd") (r "^1.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 2)))) (h "1sn0dnwjliyqmyc09shdikhss2cac1dv8yqvwmcwbdwn0xhynpq8") (f (quote (("std" "alloc" "futures-io" "memchr/std") ("macros" "cynthia-macros") ("full" "macros") ("default" "std" "pin-project-lite" "macros") ("alloc" "futures-core/alloc" "pin-project-lite"))))))

(define-public crate-cynthia-0.0.6 (c (n "cynthia") (v "0.0.6") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.1") (d #t) (k 0)) (d (n "cynthia-macros") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "futures-core") (r "^0.3.5") (k 0)) (d (n "futures-io") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "inotify") (r "^0.9") (t "cfg(target_os = \"linux\")") (k 2)) (d (n "libc") (r "^0.2.78") (d #t) (k 0)) (d (n "libc") (r "^0.2.78") (d #t) (t "cfg(unix)") (k 2)) (d (n "memchr") (r "^2.3.3") (k 0)) (d (n "once_cell") (r "^1.4.1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "signal-hook") (r "^0.1.16") (d #t) (k 0)) (d (n "stable_deref_trait") (r "^1.1.1") (d #t) (k 0)) (d (n "timerfd") (r "^1.1.1") (d #t) (t "cfg(target_os = \"linux\")") (k 2)))) (h "1rlh90dp5kps89dkqigxxk8yf5qgwwi2az3rz9p2zzx9szy20ijy") (f (quote (("std" "alloc" "futures-io" "memchr/std") ("macros" "cynthia-macros") ("full" "macros") ("default" "std" "pin-project-lite" "macros") ("alloc" "futures-core/alloc" "pin-project-lite"))))))

