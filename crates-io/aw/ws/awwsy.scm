(define-module (crates-io aw ws awwsy) #:use-module (crates-io))

(define-public crate-awwsy-0.1.0 (c (n "awwsy") (v "0.1.0") (d (list (d (n "aws-config") (r "^1.0.1") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-sqs") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws_lambda_events") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (o #t) (d #t) (k 0)))) (h "0hw026wd94n899i2zl7y9hakf5n5y99cidgzlzxzkgj0g4l8jwmv") (f (quote (("default")))) (s 2) (e (quote (("sqs" "dep:thiserror" "dep:aws-sdk-sqs" "dep:serde_json" "dep:serde" "dep:aws_lambda_events") ("s3" "dep:thiserror" "dep:aws-sdk-s3") ("lambda_events" "dep:thiserror" "dep:aws_lambda_events"))))))

(define-public crate-awwsy-0.2.0 (c (n "awwsy") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "aws-config") (r "^1.0.1") (d #t) (k 0)) (d (n "aws-sdk-rekognition") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-sqs") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws_lambda_events") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 2)))) (h "0s4gicmwzsd0jna82diy0c9fwbhha6x6g53w86dvvzgvs12qmx7a") (f (quote (("default")))) (s 2) (e (quote (("sqs" "dep:thiserror" "dep:tracing" "dep:aws-sdk-sqs" "dep:serde_json" "dep:serde" "dep:nanoid" "dep:aws_lambda_events") ("s3" "dep:thiserror" "dep:tracing" "dep:aws-sdk-s3") ("rekognition" "dep:thiserror" "dep:tracing" "dep:aws-sdk-rekognition") ("lambda_events" "dep:aws_lambda_events"))))))

(define-public crate-awwsy-0.3.0 (c (n "awwsy") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "aws-config") (r "^1.0.1") (d #t) (k 0)) (d (n "aws-sdk-polly") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-rekognition") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-sqs") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws_lambda_events") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "lambda_runtime") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)))) (h "12dz1maiv4syw7ba9my4fnwj70iyr21rnyjaygrm4s6rlp3r3q1d") (f (quote (("default")))) (s 2) (e (quote (("sqs" "dep:tracing" "dep:aws-sdk-sqs" "dep:serde_json" "dep:serde" "dep:nanoid" "dep:aws_lambda_events") ("s3" "dep:tracing" "dep:aws-sdk-s3") ("rekognition" "dep:tracing" "dep:aws-sdk-rekognition") ("polly" "dep:tracing" "dep:aws-sdk-polly") ("lambda_runtime" "dep:lambda_runtime") ("lambda_events" "dep:aws_lambda_events"))))))

(define-public crate-awwsy-0.4.0 (c (n "awwsy") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "async_once") (r "^0.2.6") (d #t) (k 0)) (d (n "aws-config") (r "^1.0.1") (d #t) (k 0)) (d (n "aws-sdk-dynamodb") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-polly") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-rekognition") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "aws-sdk-sqs") (r "^1.3.0") (o #t) (d #t) (k 0)) (d (n "aws_lambda_events") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (o #t) (d #t) (k 0)) (d (n "convert_case") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "lambda_runtime") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "nanoid") (r "^0.4.0") (d #t) (k 2)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)))) (h "0dwzdsaqnyw96cgbv6iwjv0cx9v23lij3h76i2nmh3928m7pdyvg") (f (quote (("default")))) (s 2) (e (quote (("sqs" "dep:tracing" "dep:aws-sdk-sqs" "dep:serde_json" "dep:serde" "dep:nanoid" "dep:aws_lambda_events") ("s3" "dep:tracing" "dep:aws-sdk-s3") ("rekognition" "dep:tracing" "dep:aws-sdk-rekognition") ("polly" "dep:tracing" "dep:aws-sdk-polly") ("lambda_runtime" "dep:lambda_runtime") ("lambda_events" "dep:aws_lambda_events") ("dynamodb" "dep:tracing" "dep:aws-sdk-dynamodb" "dep:serde" "dep:serde_json" "dep:convert_case" "dep:chrono"))))))

