(define-module (crates-io aw s- aws-auth-payload) #:use-module (crates-io))

(define-public crate-aws-auth-payload-0.1.0 (c (n "aws-auth-payload") (v "0.1.0") (d (list (d (n "base64") (r "^0.10.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.6.1") (d #t) (k 2)) (d (n "failure") (r "^0.1.3") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.40.0") (d #t) (k 0)) (d (n "rusoto_mock") (r "^0.40.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_urlencoded") (r "^0.5.1") (d #t) (k 0)) (d (n "url") (r "^1.7.2") (d #t) (k 2)))) (h "1ppbrsg6pzqia902a1wcfkdn464nmvx7fy1ffbs8rgpqlck7rr91")))

(define-public crate-aws-auth-payload-0.1.1 (c (n "aws-auth-payload") (v "0.1.1") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "failure") (r "^0.1.3") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.42.0") (d #t) (k 0)) (d (n "rusoto_mock") (r "^0.42.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "url") (r "^2.1.0") (d #t) (k 2)))) (h "1ybsy4igna43wgzabm1sxhmc8z3zikjkamwvm9big708pf53s7i1")))

(define-public crate-aws-auth-payload-0.2.0 (c (n "aws-auth-payload") (v "0.2.0") (d (list (d (n "base64") (r "^0.11.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "failure") (r "^0.1.3") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.43") (d #t) (k 0)) (d (n "rusoto_mock") (r "^0.43") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_urlencoded") (r "^0.6.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros" "rt-threaded"))) (d #t) (k 2)) (d (n "url") (r "^2.1.0") (d #t) (k 2)))) (h "1hcczv50dp737jh1lqadg9d1k2x02s1zx6mak77pcj7byzbms7mb")))

(define-public crate-aws-auth-payload-0.3.0 (c (n "aws-auth-payload") (v "0.3.0") (d (list (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "failure") (r "^0.1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "rusoto_core") (r "^0.47") (d #t) (k 0)) (d (n "rusoto_mock") (r "^0.47") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "serde_urlencoded") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "url") (r "^2.2") (d #t) (k 2)))) (h "01dmxlpmlsq5y77hmnjain0vq8pp7an0b5sp114b0yp2admdx8k6")))

