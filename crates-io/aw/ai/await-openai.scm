(define-module (crates-io aw ai await-openai) #:use-module (crates-io))

(define-public crate-await-openai-0.1.1 (c (n "await-openai") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "015pvf6qlrv7h27j5wpi94vrk2q3a5aazs9p2dj8rpp1ncgghji1") (f (quote (("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.1.2 (c (n "await-openai") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "052qdcpni1bd7vhk2lc0z0vpm031788fz58y75r0qgn5bx59l01a") (f (quote (("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.2.0 (c (n "await-openai") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "0zpnnsg0w9zilp0xkx81njg3jmi8jzn11029klvh8k9xqhj1vgwi") (f (quote (("tools" "schemars" "anyhow") ("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.2.1 (c (n "await-openai") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "04wv1672s3yn493wzfqvp5ak6y0ji78lcd872wc0jhzfhzw5dkmq") (f (quote (("tools" "schemars" "anyhow") ("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.2.2 (c (n "await-openai") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "0bbsnrrfgmwach1vhl29xrrif9swyjdkhg5lz8pwv76wvkdm8lvy") (f (quote (("tools" "schemars" "anyhow") ("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.2.3 (c (n "await-openai") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "081v2sc8fykww498lxc58mzfp4c50xj03k9ljq1v7fbi7v8y100r") (f (quote (("tools" "schemars" "anyhow") ("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.2.4 (c (n "await-openai") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "1a3s5wysy7q8rlmw5dmzbk41k94prwl4bbvpd06m38gljwwpzw8l") (f (quote (("tools" "schemars" "anyhow") ("tiktoken" "tiktoken-rs" "anyhow") ("default" "chat-completion") ("chat-completion"))))))

(define-public crate-await-openai-0.3.0 (c (n "await-openai") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "1iid9w4jaryxyj0kplqx1yjczhvglysjh7dczmidmalyyp3mrs1y") (f (quote (("tiktoken" "openai" "tiktoken-rs" "anyhow") ("openai_tools" "openai" "schemars" "anyhow") ("openai") ("default" "openai"))))))

(define-public crate-await-openai-0.4.0 (c (n "await-openai") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "156dcc2sd2ifwf0zi9iiqznvdj7q0kmq1r2j134g318ivl1gzyph") (f (quote (("tools" "schemars" "anyhow") ("tiktoken" "tiktoken-rs" "anyhow") ("default"))))))

(define-public crate-await-openai-0.6.0 (c (n "await-openai") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "149zzgmnpw4vf2h803gamb7f21ss5ipp079f0g3785gx6igqxps2") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default"))))))

(define-public crate-await-openai-0.6.1 (c (n "await-openai") (v "0.6.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)))) (h "110jai7jazzlbc65p1n8x5jxcdjai0022isd06jmr402fm0w18hn") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default"))))))

(define-public crate-await-openai-0.7.0 (c (n "await-openai") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "11zhrgff95dca4dnh8dkf2jdpqrjmdj8yziygfdic38rb21539ga") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.7.1 (c (n "await-openai") (v "0.7.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "19mc6lh60l56n253fbmg5zpb896d8sz142vfy2pvr8j54cv4k94g") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.7.2 (c (n "await-openai") (v "0.7.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1i479gzrxsynqivv7hw7d60iknaxj7xsz407hhbjpkf0kfd7bylx") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.8.0 (c (n "await-openai") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0fwibmx0yvvr14j6lrb23mpqlnhm51vh2jlcsc9qal6byfa040vv") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.9.0 (c (n "await-openai") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1jqq6v8cgc1xkhrvcd522a2wqvrf8m15mgiwlw7zwafk9aslqfq1") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.9.1 (c (n "await-openai") (v "0.9.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.0.3") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0zl4n7hikch5wyfwb0s8m9fr3j9bf1h93xkfx1nq6nz0mvs2x92x") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.9.2 (c (n "await-openai") (v "0.9.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0z9mw1811zglg14zjmhan7mbvqvm2nf3bs6hv9mnzkkf0plj5gdd") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.10.0 (c (n "await-openai") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0sny5k2xvaid1win9dnbd7nh9kyikpk5afrpl8k7a09a1hwg3aws") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.11.0 (c (n "await-openai") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0vx7jjgyik9xivk1c1wz2h3cnsaif1xgf1agv1xbfalssq0w2hrj") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.12.0 (c (n "await-openai") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "149h4g06yclyd4yhih8lg7wwv51dpaxpklb4hx4bisfz92mlmpk8") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.13.0 (c (n "await-openai") (v "0.13.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1d92ibjdq61h84gpfdvsd2ncc8pvgwcap89php1v7w8pj3r98ghj") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.15.0 (c (n "await-openai") (v "0.15.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "05a92zj896imblnk6r2x3dx63rh6vfg73jgfn9ybml55lhf3lmkz") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.16.0 (c (n "await-openai") (v "0.16.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1sa42292i45g4agb41ax0f57phmdsq493c0xb8l1vdl5iy6jl76s") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.17.0 (c (n "await-openai") (v "0.17.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1mk8n22mljl8w7l6pd592z2yavwg4v4a9md8s7mhnm3aza58cl8y") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.18.0 (c (n "await-openai") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1z65mpa3ny8w20ij4kmjvn13my5wm9x7ch0r5ff1v8knhlgjf8f5") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.18.1 (c (n "await-openai") (v "0.18.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "openai-func-enums") (r "^0") (d #t) (k 2)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1p09rkrh8icva4rqnmaadka5zrl36qln8zrhgqyxj4bfs1xlc7ly") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.18.2 (c (n "await-openai") (v "0.18.2") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0w5lhrj4pl24hbd7yjqr79l1w7gbbyj1rqj27npkn75r919ikfms") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.19.0 (c (n "await-openai") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "07ph82w0dkdaqk46919p33xm3va41wivx6f9lk5n3wxnrmr83pyr") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("price") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.20.0 (c (n "await-openai") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.0.5") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "1bklxy2ywrxphndab4rkkq8mqjg4g679lba6ggf0k419qr1ii432") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("price") ("gemini" "async-gemini") ("default") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.21.0 (c (n "await-openai") (v "0.21.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "0caj3kgiap9gdz1r793gzcbp2x6dbkv9kqxjcbiglvjjxxzz0qrj") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("price") ("gemini" "async-gemini") ("default") ("claude-price" "claude" "async-claude/price") ("claude" "async-claude" "tracing"))))))

(define-public crate-await-openai-0.22.0 (c (n "await-openai") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-claude") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "async-gemini") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "async-openai") (r "^0") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "paste") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "tiktoken-rs") (r "^0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0") (o #t) (d #t) (k 0)))) (h "02lid90jv7ajw8603rvpcvligfjzy0jxqraaby6r45q5fdmcrcdy") (f (quote (("tool" "schemars" "anyhow" "paste") ("tiktoken" "tiktoken-rs" "anyhow") ("price") ("gemini" "async-gemini") ("default") ("claude-price" "claude" "async-claude/price") ("claude" "async-claude" "tracing"))))))

