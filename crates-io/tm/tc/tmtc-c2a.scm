(define-module (crates-io tm tc tmtc-c2a) #:use-module (crates-io))

(define-public crate-tmtc-c2a-0.7.0-beta.5 (c (n "tmtc-c2a") (v "0.7.0-beta.5") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("http1" "tokio"))) (k 0)) (d (n "c2a-devtools-frontend") (r "^0.7.0-beta.5") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "funty") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gaia-ccsds-c2a") (r "^0.7.0-beta.5") (d #t) (k 0)) (d (n "gaia-tmtc") (r "^0.7.0-beta.5") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kble-socket") (r "^0.3.0") (f (quote ("tungstenite"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "notalawyer") (r "^0.1.0") (d #t) (k 0)) (d (n "notalawyer-build") (r "^0.1.0") (d #t) (k 1)) (d (n "notalawyer-clap") (r "^0.1.0") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "sentry") (r "^0.32") (f (quote ("backtrace" "contexts" "panic" "rustls" "reqwest"))) (k 0)) (d (n "sentry-tracing") (r "^0.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structpack") (r "^0.6") (d #t) (k 0)) (d (n "tlmcmddb") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (d #t) (k 0)) (d (n "tonic") (r "^0.10") (f (quote ("tls" "tls-roots-common" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.10") (d #t) (k 1)) (d (n "tonic-health") (r "^0.10") (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.10") (d #t) (k 0)) (d (n "tonic-web") (r "^0.10") (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("trace" "cors"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1fklakh4qcxvzgxhchyvvkpgfk6wh7yn3qyz3318ixhp7ji08qbz")))

(define-public crate-tmtc-c2a-0.7.0 (c (n "tmtc-c2a") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("http1" "tokio"))) (k 0)) (d (n "c2a-devtools-frontend") (r "^0.7") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "funty") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gaia-ccsds-c2a") (r "^0.7") (d #t) (k 0)) (d (n "gaia-tmtc") (r "^0.7") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "kble-socket") (r "^0.3.0") (f (quote ("tungstenite"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "notalawyer") (r "^0.1.0") (d #t) (k 0)) (d (n "notalawyer-build") (r "^0.1.0") (d #t) (k 1)) (d (n "notalawyer-clap") (r "^0.1.0") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "sentry") (r "^0.32") (f (quote ("backtrace" "contexts" "panic" "rustls" "reqwest"))) (k 0)) (d (n "sentry-tracing") (r "^0.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structpack") (r "^0.6") (d #t) (k 0)) (d (n "tlmcmddb") (r "^0.2.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (d #t) (k 0)) (d (n "tonic") (r "^0.10") (f (quote ("tls" "tls-roots-common" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.10") (d #t) (k 1)) (d (n "tonic-health") (r "^0.10") (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.10") (d #t) (k 0)) (d (n "tonic-web") (r "^0.10") (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("trace" "cors"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "132385q9k9zbjw2yac2v29yw93f7mbflib2d7chpq8l88g36bakv")))

(define-public crate-tmtc-c2a-1.0.0 (c (n "tmtc-c2a") (v "1.0.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("http1" "tokio"))) (k 0)) (d (n "c2a-devtools-frontend") (r "^1.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "funty") (r "^2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "gaia-ccsds-c2a") (r "^1.0") (d #t) (k 0)) (d (n "gaia-tmtc") (r "^1.0") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "kble-socket") (r "^0.3.0") (f (quote ("tungstenite"))) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (d #t) (k 0)) (d (n "notalawyer") (r "^0.1.0") (d #t) (k 0)) (d (n "notalawyer-build") (r "^0.1.0") (d #t) (k 1)) (d (n "notalawyer-clap") (r "^0.1.0") (d #t) (k 0)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "prost-types") (r "^0.12") (d #t) (k 0)) (d (n "sentry") (r "^0.32") (f (quote ("backtrace" "contexts" "panic" "rustls" "reqwest"))) (k 0)) (d (n "sentry-tracing") (r "^0.32") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "structpack") (r "^1.0") (d #t) (k 0)) (d (n "tlmcmddb") (r "^2.5.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.20.1") (d #t) (k 0)) (d (n "tonic") (r "^0.11") (f (quote ("tls" "tls-roots-common" "tls-webpki-roots"))) (d #t) (k 0)) (d (n "tonic-build") (r "^0.11") (d #t) (k 1)) (d (n "tonic-health") (r "^0.11") (d #t) (k 0)) (d (n "tonic-reflection") (r "^0.11") (d #t) (k 0)) (d (n "tonic-web") (r "^0.11") (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "tower-http") (r "^0.4") (f (quote ("trace" "cors"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1iymh3g5wvcvigz6df4a4kmc03gza2k27scrqinzzmg55ym2a72r")))

