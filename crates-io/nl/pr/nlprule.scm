(define-module (crates-io nl pr nlprule) #:use-module (crates-io))

(define-public crate-nlprule-0.3.0 (c (n "nlprule") (v "0.3.0") (d (list (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.1.3") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1.0") (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.7") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8.3") (o #t) (d #t) (k 0)))) (h "06yqri7dxazgcihc9caswzxk11yifgjxqd94vk6v4vfarvpgqlcz") (f (quote (("compile" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.4.2 (c (n "nlprule") (v "0.4.2") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "onig") (r "^6.1") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0vbf8gm867ifq0lpzgc44kk3dibllvcmqidh86yx0358xqwmyn2m") (f (quote (("compile" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "bin") ("bin" "clap" "env_logger")))) (y #t)))

(define-public crate-nlprule-0.4.3 (c (n "nlprule") (v "0.4.3") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.5") (d #t) (k 0)) (d (n "onig") (r "^6.1") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0qq9kcj1y1x3v6qgb2f2wg03f069wfvml4d6an7qj8qhqk0bavkp") (f (quote (("compile" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "bin") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.4.4 (c (n "nlprule") (v "0.4.4") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1nnqxqi9gcsjqyjg09jq1lm8f1dsjdi5xxs0ssfjn42ca012nqrk") (f (quote (("compile" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "bin") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.4.5 (c (n "nlprule") (v "0.4.5") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1jj6204bvr1nh24fjy9k1vqx0piqfh14wddaq20hikvpv7ajcpl1") (f (quote (("compile" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "bin") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.4.6 (c (n "nlprule") (v "0.4.6") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "02x0jhix7xs8g59xywq2rr5anyhx8dsannkxyy7xpqibywwp598v") (f (quote (("compile" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "bin") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.5.1 (c (n "nlprule") (v "0.5.1") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "05730vbpc8a0zv15vwh5nr8634w6mv0fjdhqmg4fhvmk9jkbw97g") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.5.2 (c (n "nlprule") (v "0.5.2") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "1ncj0v9dh92fsxnf2y9qyn65dzv2irsmshm786fh0chjph1fz5kn") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger")))) (y #t)))

(define-public crate-nlprule-0.5.3 (c (n "nlprule") (v "0.5.3") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0zq5ifhfybn7fzmmjy7xjlgly58qccjlylnyfwl60w5w1085wh3z") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.6.0 (c (n "nlprule") (v "0.6.0") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "18i0dxrswgvg7nql8gcm9m29x72jyq580k76c9fja8agqa712w30") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.6.1 (c (n "nlprule") (v "0.6.1") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "01daxcycmgyw7mylr7hkpy7f2fbcdfrxqwdb7xrclvpbpnb4sp2h") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.6.2 (c (n "nlprule") (v "0.6.2") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "12df6yhi4350xssjijx4a9z1pnmlx9x574nm09nydgq6mny2hlsn") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.6.3 (c (n "nlprule") (v "0.6.3") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "04jqlaij7x5zqkbqjazwmmhvwq9dk9fg9y3gkgb4xjxj2i9hqjar") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

(define-public crate-nlprule-0.6.4 (c (n "nlprule") (v "0.6.4") (d (list (d (n "aho-corasick") (r "^0.7") (d #t) (k 0)) (d (n "bimap") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derivative") (r "^2.2") (d #t) (k 0)) (d (n "either") (r "^1.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "fancy-regex") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 0)) (d (n "fs-err") (r "^2.5") (d #t) (k 1)) (d (n "fst") (r "^0.4") (d #t) (k 0)) (d (n "half") (r "^1.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "onig") (r "^6.1") (o #t) (k 0)) (d (n "quickcheck") (r "^1.0") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.1") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 1)) (d (n "srx") (r "^0.1.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "unicase") (r "^2.6") (d #t) (k 0)) (d (n "xml-rs") (r "^0.8") (o #t) (d #t) (k 0)))) (h "0gpk40sn8x1mv3vxzrwd2wc9sl7c7gdgkngpvjgwab4sdgm2hznp") (f (quote (("regex-onig" "onig") ("regex-fancy" "fancy-regex") ("regex-all-test" "regex-onig" "regex-fancy") ("default" "regex-onig") ("compile" "regex-syntax" "serde-xml-rs" "xml-rs" "roxmltree" "serde_json" "srx/from_xml" "regex-all-test") ("bin" "clap" "env_logger"))))))

