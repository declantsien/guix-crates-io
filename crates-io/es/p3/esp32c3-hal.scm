(define-module (crates-io es p3 esp32c3-hal) #:use-module (crates-io))

(define-public crate-esp32c3-hal-0.1.0 (c (n "esp32c3-hal") (v "0.1.0") (d (list (d (n "critical-section") (r "^1.1.0") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.8") (d #t) (k 0) (p "embedded-hal")) (d (n "esp-backtrace") (r "^0.2.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.1.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-println") (r "^0.2.2") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "r0") (r "^1.0.0") (d #t) (k 0)) (d (n "riscv") (r "^0.8.0") (d #t) (k 0)) (d (n "riscv-rt") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)))) (h "1qy7xjwk2wka97y0si7307zp2jmdx4p2i6064k8d2x6jg0f9rnin") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("smartled" "esp-hal-common/smartled") ("rt" "riscv-rt") ("eh1" "esp-hal-common/eh1") ("direct-boot") ("default" "rt" "vectored")))) (r "1.60.0")))

(define-public crate-esp32c3-hal-0.2.0 (c (n "esp32c3-hal") (v "0.2.0") (d (list (d (n "critical-section") (r "^1.1.0") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.8") (d #t) (k 0) (p "embedded-hal")) (d (n "esp-backtrace") (r "^0.2.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.2.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-println") (r "^0.3.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "r0") (r "^1.0.0") (d #t) (k 0)) (d (n "riscv") (r "^0.8.0") (d #t) (k 0)) (d (n "riscv-rt") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)))) (h "1r6dczyrz97kmw7dgx7y6ha45451qcjcz7l8h2zl7aqqg9s8qinq") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("smartled" "esp-hal-common/smartled") ("rt" "riscv-rt") ("eh1" "esp-hal-common/eh1") ("direct-boot") ("default" "rt" "vectored")))) (r "1.60.0")))

(define-public crate-esp32c3-hal-0.3.0 (c (n "esp32c3-hal") (v "0.3.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.1.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.3.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.3.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-println") (r "^0.3.1") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "r0") (r "^1.0.0") (d #t) (k 0)) (d (n "riscv") (r "^0.10.0") (d #t) (k 0)) (d (n "riscv-rt") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 2)))) (h "160j55srq3c8ng3ck70xry1n7ivd06phnv8x4klp07gs0ysckywq") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("smartled" "esp-hal-common/smartled") ("rt" "riscv-rt") ("mcu-boot") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot") ("default" "rt" "vectored") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb")))) (r "1.60.0")))

(define-public crate-esp32c3-hal-0.4.0 (c (n "esp32c3-hal") (v "0.4.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.1.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.4.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.4.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-println") (r "^0.3.1") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "r0") (r "^1.0.0") (d #t) (k 0)) (d (n "riscv") (r "^0.10.0") (d #t) (k 0)) (d (n "riscv-rt") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 2)))) (h "049i6z0qxnr46rv55jxk9haarky83w6676ilp0znsbk9c7dcmknw") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("smartled" "esp-hal-common/smartled") ("rt" "riscv-rt") ("mcu-boot") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot") ("default" "rt" "vectored") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb")))) (r "1.60.0")))

(define-public crate-esp32c3-hal-0.5.0 (c (n "esp32c3-hal") (v "0.5.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.1.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.4.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.5.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-println") (r "^0.3.1") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "r0") (r "^1.0.0") (d #t) (k 0)) (d (n "riscv") (r "^0.10.1") (d #t) (k 0)) (d (n "riscv-rt") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 2)))) (h "1gzvf6cajrxzqda8wpmvkypp3jv8krdw5wqazk8gqcf9p1i2kqyl") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("smartled" "esp-hal-common/smartled") ("rt" "riscv-rt") ("mcu-boot") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot") ("default" "rt" "vectored") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb" "dep:embedded-can")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.7.0 (c (n "esp32c3-hal") (v "0.7.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.5.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.7.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-println") (r "^0.3.1") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "r0") (r "^1.0.0") (d #t) (k 0)) (d (n "sha2") (r "^0.10.6") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 2)))) (h "1ybmyxssnad7g36jariin8fl12rd7hihkjrf25pc56gn33kzbmyg") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("smartled" "esp-hal-common/smartled") ("rt") ("mcu-boot") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot") ("default" "rt" "vectored") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb" "dep:embedded-can")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.8.0 (c (n "esp32c3-hal") (v "0.8.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.0") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.9") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.6.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.8.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.1.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.4.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 2)))) (h "06jcj6ym2kqhhz5fhhkkylranr2l47g7ig015mqwmrwxschna6dz") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("mcu-boot") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot" "esp-hal-common/rv-init-data" "esp-hal-common/rv-init-rtc-data") ("default" "rt" "vectored" "esp-hal-common/rv-zero-rtc-bss") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb" "dep:embedded-can")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.9.0 (c (n "esp32c3-hal") (v "0.9.0") (d (list (d (n "aes") (r "^0.8.2") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (k 2)) (d (n "embassy-executor") (r "^0.2.0") (f (quote ("nightly" "integrated-timers" "arch-riscv32" "executor-thread"))) (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.1") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.10") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.7.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.9.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.2.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.5.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.7.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.0.0") (d #t) (k 2)))) (h "1r67rakc0n1y39nw2xj95lsln7wybxpghinh5bmldivhgxr6jd5v") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("mcu-boot") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot" "esp-hal-common/rv-init-data" "esp-hal-common/rv-init-rtc-data") ("default" "rt" "vectored" "esp-hal-common/rv-zero-rtc-bss") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb" "dep:embedded-can")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.10.0 (c (n "esp32c3-hal") (v "0.10.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (k 2)) (d (n "embassy-executor") (r "^0.2.0") (f (quote ("nightly" "integrated-timers" "arch-riscv32" "executor-thread"))) (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.1") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.8.0") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.10") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.7.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.10.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.3.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.5.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7.16") (d #t) (k 2)) (d (n "lis3dh-async") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.0") (d #t) (k 2)) (d (n "static_cell") (r "^1.1.0") (d #t) (k 2)))) (h "17gqnx3fdy5mdi5dy4b0417gmpf362j94iwspqb0pvr0x4wd9vz8") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("mcu-boot") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-boot" "esp-hal-common/rv-init-data" "esp-hal-common/rv-init-rtc-data") ("default" "rt" "vectored" "esp-hal-common/rv-zero-rtc-bss") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async" "embedded-hal-async") ("allow-opt-level-z")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb" "dep:embedded-can")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.11.0 (c (n "esp32c3-hal") (v "0.11.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.2") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (k 2)) (d (n "embassy-executor") (r "^0.2.0") (f (quote ("nightly" "integrated-timers" "arch-riscv32" "executor-thread"))) (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.2") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.8.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-hal-1") (r "=1.0.0-alpha.11") (o #t) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=0.2.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.3") (o #t) (d #t) (k 0)) (d (n "esp-backtrace") (r "^0.7.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.11.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.4.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.5.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7.16") (d #t) (k 2)) (d (n "lis3dh-async") (r "^0.7.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.0") (d #t) (k 2)) (d (n "static_cell") (r "^1.2.0") (d #t) (k 2)))) (h "0h3jj2pl1xgg8q8rxp2g5mlh0qkk038521ikw0m0cgq16lfvrk4c") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("mcu-boot") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("direct-vectoring" "esp-hal-common/direct-vectoring") ("direct-boot" "esp-hal-common/rv-init-data" "esp-hal-common/rv-init-rtc-data") ("default" "rt" "vectored" "esp-hal-common/rv-zero-rtc-bss") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async" "embedded-hal-async")))) (s 2) (e (quote (("eh1" "esp-hal-common/eh1" "dep:embedded-hal-1" "dep:embedded-hal-nb" "dep:embedded-can")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.12.0 (c (n "esp32c3-hal") (v "0.12.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.2") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.3") (k 2)) (d (n "embassy-executor") (r "^0.3.0") (f (quote ("nightly" "integrated-timers" "arch-riscv32" "executor-thread"))) (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.3") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.8.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 2)) (d (n "embedded-hal-1") (r "=1.0.0-rc.1") (d #t) (k 2) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.5.0") (d #t) (k 2)) (d (n "esp-backtrace") (r "^0.8.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.12.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.5.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.6.0") (f (quote ("esp32c3" "log"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7.16") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 2)) (d (n "lis3dh-async") (r "^0.8.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.7") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.1") (d #t) (k 2)) (d (n "static_cell") (r "^1.2.0") (f (quote ("nightly"))) (d #t) (k 2)))) (h "004a2ic3sml97v6v2c1npm39x4xj6d2hgs6dfh89309hxbz1ql4q") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("mcu-boot") ("log" "esp-hal-common/log") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("eh1" "esp-hal-common/eh1") ("direct-vectoring" "esp-hal-common/direct-vectoring") ("direct-boot" "esp-hal-common/rv-init-data" "esp-hal-common/rv-init-rtc-data") ("defmt" "esp-hal-common/defmt") ("default" "rt" "vectored" "esp-hal-common/rv-zero-rtc-bss") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async")))) (r "1.65.0")))

(define-public crate-esp32c3-hal-0.13.0 (c (n "esp32c3-hal") (v "0.13.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.2") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.3") (k 2)) (d (n "embassy-executor") (r "^0.3.0") (f (quote ("nightly" "integrated-timers" "arch-riscv32" "executor-thread"))) (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3.0") (d #t) (k 2)) (d (n "embassy-time") (r "^0.1.5") (f (quote ("nightly"))) (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.8.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 2)) (d (n "embedded-hal-1") (r "=1.0.0-rc.1") (d #t) (k 2) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6.0") (d #t) (k 2)) (d (n "esp-backtrace") (r "^0.9.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.13.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.6.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.7.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7.16") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 2)) (d (n "lis3dh-async") (r "^0.8.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.4") (d #t) (k 2)) (d (n "static_cell") (r "^1.2.0") (f (quote ("nightly"))) (d #t) (k 2)))) (h "0p4zpy5xhgb33px0biqg3q305h7zgqhf27swi6qxzy6bgiw1mcd2") (f (quote (("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("mcu-boot") ("log" "esp-hal-common/log" "esp-println/log") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy" "esp-hal-common/embassy") ("eh1" "esp-hal-common/eh1") ("direct-vectoring" "esp-hal-common/direct-vectoring") ("direct-boot" "esp-hal-common/rv-init-data" "esp-hal-common/rv-init-rtc-data") ("defmt" "esp-hal-common/defmt" "esp-println/defmt") ("default" "rt" "vectored" "esp-hal-common/rv-zero-rtc-bss") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async")))) (r "1.67.0")))

(define-public crate-esp32c3-hal-0.14.0 (c (n "esp32c3-hal") (v "0.14.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "critical-section") (r "^1.1.2") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.5") (k 2)) (d (n "embassy-executor") (r "^0.4.0") (f (quote ("nightly"))) (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5.0") (d #t) (k 2)) (d (n "embassy-time") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.8.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 2)) (d (n "embedded-hal-1") (r "=1.0.0-rc.2") (d #t) (k 2) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.2") (d #t) (k 2)) (d (n "embedded-hal-bus") (r "^0.1.0-rc.2") (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6.1") (d #t) (k 2)) (d (n "esp-backtrace") (r "^0.9.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.14.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.7.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.7.1") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "heapless") (r "^0.8.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 2)) (d (n "lis3dh-async") (r "^0.8.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 2)) (d (n "smart-leds") (r "^0.3.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.4") (d #t) (k 2)) (d (n "static_cell") (r "^2.0.0") (f (quote ("nightly"))) (d #t) (k 2)))) (h "0yc2772asr3vz6xwm12ih59vkiyfdyh5x4ddliaxzf6m16frwc12") (f (quote (("zero-rtc-bss" "esp-hal-common/rv-zero-rtc-bss") ("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt") ("log" "esp-hal-common/log" "esp-println/log") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("init-rtc-data" "esp-hal-common/rv-init-rtc-data") ("init-data" "esp-hal-common/rv-init-data") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy-integrated-timers" "esp-hal-common/embassy-integrated-timers") ("embassy-generic-queue-8" "esp-hal-common/embassy-generic-queue-8") ("embassy-generic-queue-64" "esp-hal-common/embassy-generic-queue-64") ("embassy-generic-queue-32" "esp-hal-common/embassy-generic-queue-32") ("embassy-generic-queue-16" "esp-hal-common/embassy-generic-queue-16") ("embassy-generic-queue-128" "esp-hal-common/embassy-generic-queue-128") ("embassy-executor-thread" "esp-hal-common/embassy-executor-thread") ("embassy-executor-interrupt" "esp-hal-common/embassy-executor-interrupt") ("embassy" "esp-hal-common/embassy") ("eh1" "esp-hal-common/eh1") ("direct-vectoring" "esp-hal-common/direct-vectoring") ("defmt" "esp-hal-common/defmt" "esp-println/defmt") ("default" "rt" "vectored" "zero-rtc-bss" "embassy-integrated-timers") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async")))) (r "1.67.0")))

(define-public crate-esp32c3-hal-0.15.0 (c (n "esp32c3-hal") (v "0.15.0") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "critical-section") (r "^1.1.2") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.5") (k 2)) (d (n "embassy-executor") (r "^0.5.0") (f (quote ("nightly"))) (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5.0") (d #t) (k 2)) (d (n "embassy-time") (r "^0.3.0") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.8.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 2)) (d (n "embedded-hal-1") (r "^1.0.0") (d #t) (k 2) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^1.0.0") (d #t) (k 2)) (d (n "embedded-hal-bus") (r "^0.1.0") (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6.1") (d #t) (k 2)) (d (n "esp-backtrace") (r "^0.10.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.15.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.8.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.8.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "heapless") (r "^0.8.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 2)) (d (n "lis3dh-async") (r "^0.9.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 2)) (d (n "smart-leds") (r "^0.4.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.4") (d #t) (k 2)) (d (n "static_cell") (r "^2.0.0") (f (quote ("nightly"))) (d #t) (k 2)))) (h "0p8w94sxpm3ivf8k9zvl2mmwkvgbvj7p5jp79ik95pj7975c4ssb") (f (quote (("zero-rtc-bss" "esp-hal-common/rv-zero-rtc-bss") ("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt" "esp-hal-common/rt-riscv") ("log" "esp-hal-common/log" "esp-println/log") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("init-rtc-data" "esp-hal-common/rv-init-rtc-data") ("init-data" "esp-hal-common/rv-init-data") ("embedded-io" "esp-hal-common/embedded-io") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy-integrated-timers" "esp-hal-common/embassy-integrated-timers") ("embassy-executor-thread" "esp-hal-common/embassy-executor-thread") ("embassy-executor-interrupt" "esp-hal-common/embassy-executor-interrupt") ("embassy" "esp-hal-common/embassy") ("eh1" "esp-hal-common/eh1") ("direct-vectoring" "esp-hal-common/direct-vectoring") ("defmt" "esp-hal-common/defmt" "esp-println/defmt-espflash") ("default" "rt" "vectored" "zero-rtc-bss" "embassy-integrated-timers") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async")))) (r "1.67.0")))

(define-public crate-esp32c3-hal-0.15.1 (c (n "esp32c3-hal") (v "0.15.1") (d (list (d (n "aes") (r "^0.8.3") (d #t) (k 2)) (d (n "build-alert") (r "^0.1.6") (d #t) (k 1)) (d (n "critical-section") (r "^1.1.2") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.5") (k 2)) (d (n "embassy-executor") (r "^0.5.0") (f (quote ("nightly"))) (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5.0") (d #t) (k 2)) (d (n "embassy-time") (r "^0.3.0") (d #t) (k 2)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 2)) (d (n "embedded-graphics") (r "^0.8.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 2)) (d (n "embedded-hal-1") (r "^1.0.0") (d #t) (k 2) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^1.0.0") (d #t) (k 2)) (d (n "embedded-hal-bus") (r "^0.1.0") (d #t) (k 2)) (d (n "embedded-io-async") (r "^0.6.1") (d #t) (k 2)) (d (n "esp-backtrace") (r "^0.10.0") (f (quote ("esp32c3" "panic-handler" "exception-handler" "print-uart"))) (d #t) (k 2)) (d (n "esp-hal-common") (r "^0.15.0") (f (quote ("esp32c3"))) (d #t) (k 0)) (d (n "esp-hal-smartled") (r "^0.8.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "esp-println") (r "^0.8.0") (f (quote ("esp32c3"))) (d #t) (k 2)) (d (n "heapless") (r "^0.8.0") (d #t) (k 2)) (d (n "hmac") (r "^0.12.1") (k 2)) (d (n "lis3dh-async") (r "^0.9.1") (d #t) (k 2)) (d (n "sha2") (r "^0.10.8") (k 2)) (d (n "smart-leds") (r "^0.4.0") (d #t) (k 2)) (d (n "ssd1306") (r "^0.8.4") (d #t) (k 2)) (d (n "static_cell") (r "^2.0.0") (f (quote ("nightly"))) (d #t) (k 2)))) (h "12h634nlnikhz3rghyzjvy77fah5hsys68w2f0g89hx8p2v24sck") (f (quote (("zero-rtc-bss" "esp-hal-common/rv-zero-rtc-bss") ("vectored" "esp-hal-common/vectored") ("ufmt" "esp-hal-common/ufmt") ("rt" "esp-hal-common/rt-riscv") ("log" "esp-hal-common/log" "esp-println/log") ("interrupt-preemption" "esp-hal-common/interrupt-preemption") ("init-rtc-data" "esp-hal-common/rv-init-rtc-data") ("init-data" "esp-hal-common/rv-init-data") ("embedded-io" "esp-hal-common/embedded-io") ("embassy-time-timg0" "esp-hal-common/embassy-time-timg0" "embassy-time/tick-hz-1_000_000") ("embassy-time-systick" "esp-hal-common/embassy-time-systick" "embassy-time/tick-hz-16_000_000") ("embassy-integrated-timers" "esp-hal-common/embassy-integrated-timers") ("embassy-executor-thread" "esp-hal-common/embassy-executor-thread") ("embassy-executor-interrupt" "esp-hal-common/embassy-executor-interrupt") ("embassy" "esp-hal-common/embassy") ("eh1" "esp-hal-common/eh1") ("direct-vectoring" "esp-hal-common/direct-vectoring") ("defmt" "esp-hal-common/defmt" "esp-println/defmt-espflash") ("default" "rt" "vectored" "zero-rtc-bss" "embassy-integrated-timers") ("debug" "esp-hal-common/debug") ("async" "esp-hal-common/async")))) (r "1.67.0")))

