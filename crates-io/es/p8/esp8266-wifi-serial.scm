(define-module (crates-io es p8 esp8266-wifi-serial) #:use-module (crates-io))

(define-public crate-esp8266-wifi-serial-0.1.0 (c (n "esp8266-wifi-serial") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "atoi") (r "^0.4.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (d #t) (k 0)) (d (n "no-stdout") (r "^0.1.0") (d #t) (k 0)) (d (n "nom") (r "^6.1") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serialport") (r "^4.0") (d #t) (k 2)) (d (n "simple-clock") (r "^0.1") (d #t) (k 0)))) (h "09spckp3g9bhg04fclq4423fsjv5c1v785bfn6dagyszcf279nlq") (f (quote (("integration_tests"))))))

(define-public crate-esp8266-wifi-serial-0.1.1 (c (n "esp8266-wifi-serial") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "atoi") (r "^0.4.0") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (d #t) (k 0)) (d (n "no-stdout") (r "^0.1.0") (d #t) (k 0)) (d (n "nom") (r "^6.1") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serialport") (r "^4.0") (d #t) (k 2)) (d (n "simple-clock") (r "^0.1") (d #t) (k 0)))) (h "07b7pny208vhkfb33d2k7vpx8wsjsdcdw263v7hwigwm4rm3hxwh") (f (quote (("integration_tests"))))))

(define-public crate-esp8266-wifi-serial-0.1.2 (c (n "esp8266-wifi-serial") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (d #t) (k 0)) (d (n "no-stdout") (r "^0.1.0") (d #t) (k 0)) (d (n "nom") (r "^6.1") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serialport") (r "^4.0") (d #t) (k 2)) (d (n "simple-clock") (r "^0.1") (d #t) (k 0)))) (h "0l977rcmm7almyaq9fa0lgma9m8sqd1sn4n6yabwqa7zxkz7kvf0") (f (quote (("integration_tests")))) (y #t)))

(define-public crate-esp8266-wifi-serial-0.1.3 (c (n "esp8266-wifi-serial") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "embedded-hal") (r "^0.2") (d #t) (k 0)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "no-std-net") (r "^0.5") (d #t) (k 0)) (d (n "no-stdout") (r "^0.1.0") (d #t) (k 0)) (d (n "nom") (r "^6.1") (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 0)) (d (n "serialport") (r "^4.0") (d #t) (k 2)) (d (n "simple-clock") (r "^0.1") (d #t) (k 0)))) (h "0ad7yri7z7cyhflf42g4h6my4awwlblj01iakdb79lfib6i5wb0g") (f (quote (("integration_tests"))))))

