(define-module (crates-io es p- esp-idf-hal) #:use-module (crates-io))

(define-public crate-esp-idf-hal-0.1.0 (c (n "esp-idf-hal") (v "0.1.0") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "02mk3fk0d8b4wmmddxcrgwfmq84cdjn4bfq13xk6gk0krwpdxlx0")))

(define-public crate-esp-idf-hal-0.1.1 (c (n "esp-idf-hal") (v "0.1.1") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.1.0") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "00m4g5ggwlrbrxbc87lsg0nd9zdh8767b4m5xn3gk7lzriqr4bim")))

(define-public crate-esp-idf-hal-0.1.2 (c (n "esp-idf-hal") (v "0.1.2") (d (list (d (n "embedded-hal") (r "^0.2.3") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.1.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0jafwx5x5cv0x9qb3k9k4k3lirx8w5206mwwlgqjf0lq02rzbmpf")))

(define-public crate-esp-idf-hal-0.16.0 (c (n "esp-idf-hal") (v "0.16.0") (d (list (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)) (d (n "panic-halt") (r "^0.2.0") (d #t) (k 2)))) (h "1s9ja51a7x1arihfq2l7nwhm6w9rpws5pprncamwbzysidiis6vk") (f (quote (("std" "esp-idf-sys/std") ("default" "std"))))))

(define-public crate-esp-idf-hal-0.16.1 (c (n "esp-idf-hal") (v "0.16.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "042vg54n7mgzka55rb9kpimi64ky99c5q90lcw2x9r90wi04fmfd") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.16.2 (c (n "esp-idf-hal") (v "0.16.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0kjd899h7hgs1is85mpmzxy0rlw2dbbarwis2cn9y1a2rln4nfn9") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.17.1 (c (n "esp-idf-hal") (v "0.17.1") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16.3") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1abjdgjl6xxf72a8vz0ys7idkq2yjgj9aqx1b29j8cmxs5f1qdn3") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.17.2 (c (n "esp-idf-hal") (v "0.17.2") (d (list (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.17") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0vn56gxdzlaxksdj1qgk0c5j98r4nqn3hjjinmnl7q9x0y6vb10l") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.18.0 (c (n "esp-idf-hal") (v "0.18.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cargo-pio") (r "^0.21") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.18") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "18rg0c4i3h0s0dzhny7qwhnjwgqwc5ll4whi6nsmp62sv7y4mvpz") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.19.0 (c (n "esp-idf-hal") (v "0.19.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.19") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0kwk6d9nw6nkp14bk93wxfq2abbra8jn7aa98fvslpl72vjkah1d") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.19.1 (c (n "esp-idf-hal") (v "0.19.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.19") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1ligw9wfsfisrrwkjkq6752nmkifz6l4439iarznggq83g90xqjb") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.19.2 (c (n "esp-idf-hal") (v "0.19.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.19") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0i079firf5w4b7iz60z8s9fajzpvdsyhfcfxnq39wigxpvwgq2jl") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.20.0 (c (n "esp-idf-hal") (v "0.20.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.20") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "120bizw0l0ya9m45b5kh9cf351vy4ab5ddqs5fwik33gzdg1sn6x") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys" "esp-idf-sys/default"))))))

(define-public crate-esp-idf-hal-0.21.0 (c (n "esp-idf-hal") (v "0.21.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.21") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0qbl201fc7zpmp3731ifm9j52ipak2pi0dly2hj8sn6zahfn3ixd") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys" "esp-idf-sys/default"))))))

(define-public crate-esp-idf-hal-0.21.1 (c (n "esp-idf-hal") (v "0.21.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.21") (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0ayx5psgvhhw8nd2qq55cbn05w483pk00xl3inpwprlj2sq8977k") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys" "esp-idf-sys/default"))))))

(define-public crate-esp-idf-hal-0.21.2 (c (n "esp-idf-hal") (v "0.21.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.22.3") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1s1lza4qwsk5qm2akxblhhkvfbcyflkvb84wy97hyjzj59ri9bj9") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.22.0 (c (n "esp-idf-hal") (v "0.22.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.23") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0rryiv2fk6hyrzvn2x75ddfq5vzcihpa26wjdq225wan06w3326k") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.23.0 (c (n "esp-idf-hal") (v "0.23.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0yjdzk2hmk2kkhwn2fk49b91lxcs56h4l3lc8npgv6jaayc2lzx6") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.23.1 (c (n "esp-idf-hal") (v "0.23.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0z9cs8lllckidg1mc2f48pmd6jkyqzdgdbcirf8n6v8gshxc23sg") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.23.2 (c (n "esp-idf-hal") (v "0.23.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "061h49bv45716vbl0d3swwz287h8wmq6xmdlkh2zh6y0ngbxi6qz") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.23.3 (c (n "esp-idf-hal") (v "0.23.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0f8k10jgnb1m5nzjqi0p5w5gvrzd7hzd33nj1imf9v8zyv96mx8p") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.24.0 (c (n "esp-idf-hal") (v "0.24.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "06zfa9qgj6qhjj3mgy9wif7snniardj6ly74ymkh4dsyb3v16g60") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.25.0 (c (n "esp-idf-hal") (v "0.25.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.25") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1fdsvnawdgvj929lbspv2bs540hy3dp8l5zr21lrn89h75d19b4h") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.26.0 (c (n "esp-idf-hal") (v "0.26.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.26") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "18lwdshhyfmb700xpw81hbm7kh2xa6m45dy43hrd9ka8byf75nis") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.27.0 (c (n "esp-idf-hal") (v "0.27.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0j6z3p42i0jawyxprl1f7mbxl5r89dlq8mirgw6jyzncd8x82awp") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.28.0 (c (n "esp-idf-hal") (v "0.28.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0q17dwdw9x3g9m8wmfyfxsn1vajg1w4awy67lji31r4964yzh5zj") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.29.0 (c (n "esp-idf-hal") (v "0.29.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.26") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.28") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1a9794cf9z8k0xkhgp6zxlsmfy90zimcjvaialrgfgq6hw4lzr3v") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.29.1 (c (n "esp-idf-hal") (v "0.29.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.26") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.28") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0f3y6axarfkhv5d2fd1wm2fzx9rwc84y0z63bvaxdk5bx7ha69bw") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.29.3 (c (n "esp-idf-hal") (v "0.29.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.26") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1kspa0bfl8vmyzi8x7g5iz26paw3j1qcrlvjhd00hg90q1i9xgqq") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.29.4 (c (n "esp-idf-hal") (v "0.29.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0ib5cg1nzi63gygvp1xb9vyr0ymcqz66yl4z0r1mkknwb7j7xyny") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.29.5 (c (n "esp-idf-hal") (v "0.29.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "12yzwizw6i9srjlm9h6bvx04ncn63p6r6x9d2j3lyxnw9wgy52pc") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.30.0 (c (n "esp-idf-hal") (v "0.30.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0jihccpa8nadajqhp2q3fiyi66cc8i51dfx4ykk43n1yvgjpzay1") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.31.0 (c (n "esp-idf-hal") (v "0.31.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1fsngqc2i2n3zpbdzab64m90a5ryl70pla794lby3mnd6r5a7n36") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.31.1 (c (n "esp-idf-hal") (v "0.31.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "055jjq7ny94v9l4pd8hn22i88qfscxb9dq4k299bvksiasxvxdn5") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.0 (c (n "esp-idf-hal") (v "0.32.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0r4vmr6v0fyaci0hgx3ya0vzv4jzvqfs9k1b20m6905cbbm06bl8") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.1 (c (n "esp-idf-hal") (v "0.32.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "07r4vi83dvkppbii84cvq894s8y220m1ggk2fjdcn1xyz3wl37cd") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.2 (c (n "esp-idf-hal") (v "0.32.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "05y38bk01sc0wmgr700lx833vxjwic46ji5rrgqcz1gw15dg9x2b") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.3 (c (n "esp-idf-hal") (v "0.32.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "13g5jxsxav4ccj0g6n3hi2xzyb4yvpf8pqnndpq0l16kk9cchqmc") (f (quote (("ulp") ("std" "esp-idf-sys/std") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.4 (c (n "esp-idf-hal") (v "0.32.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1bw7csx9a9sik3z1v6hlvphwr6370kwabhw2xg95ndrpwxa65lsy") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.5 (c (n "esp-idf-hal") (v "0.32.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1may22708xwai95adrwz7n7k689xy27211pq3k4ysbr9kbi0n629") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.6 (c (n "esp-idf-hal") (v "0.32.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0k947icynywcjq6kmxkq8y20sis0dpzcq8x34nl506vpv66ardq8") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("embedded-svc-mutex" "embedded-svc") ("default" "std" "esp-idf-sys"))))))

(define-public crate-esp-idf-hal-0.32.7 (c (n "esp-idf-hal") (v "0.32.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-svc") (r "^0.36.2") (d #t) (k 2)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1whcpbzp3l7mg7f80zd0wlrw48ahz36hpv8k2pl1ib8ksi2zfa3v") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "esp-idf-sys" "embedded-svc"))))))

(define-public crate-esp-idf-hal-0.32.8 (c (n "esp-idf-hal") (v "0.32.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-svc") (r "^0.36.2") (d #t) (k 2)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0j5j9q3s4hcn0r64pz533h7jl81f3fbjz4fpwav1pymjp939hbar") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "esp-idf-sys" "embedded-svc"))))))

(define-public crate-esp-idf-hal-0.32.9 (c (n "esp-idf-hal") (v "0.32.9") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-svc") (r "^0.36.2") (d #t) (k 2)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "00r16cc5ylghwmq4inggkjr997kgxhbkg52fabwb6qqzw7k6sas1") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "esp-idf-sys" "embedded-svc"))))))

(define-public crate-esp-idf-hal-0.32.10 (c (n "esp-idf-hal") (v "0.32.10") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.6") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.16.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-svc") (r "^0.36.2") (d #t) (k 2)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0cl8ml1ayl03azdxkdaggkyk237hr0rckf42xbvka8vdpkvda0yj") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "esp-idf-sys" "embedded-svc"))))))

(define-public crate-esp-idf-hal-0.33.0 (c (n "esp-idf-hal") (v "0.33.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.17.1") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0iizn6kk669zhyppmcr8dc9c4mv381bgq9ziwjb33zz6yv70vsad") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "esp-idf-sys" "embedded-svc"))))))

(define-public crate-esp-idf-hal-0.33.1 (c (n "esp-idf-hal") (v "0.33.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.17.1") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0lm3vm8c78qayclqw5927bxz4r5gsy77h36plnqykzs4zg7nhrjc") (f (quote (("std" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "esp-idf-sys" "embedded-svc"))))))

(define-public crate-esp-idf-hal-0.33.2 (c (n "esp-idf-hal") (v "0.33.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.17.4") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0ms3cg1c0sfmn9557w35vdyi17wrdkrsny4ncv19nd1l8jqx8kpn") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.34.0 (c (n "esp-idf-hal") (v "0.34.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.18") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1qj58rsnmrvkf87jvbmk70mawpa130hwfyv0c2c7d6wwb39rypg6") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.34.1 (c (n "esp-idf-hal") (v "0.34.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.18") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0rv0ipcwyp1ll5zhq3hcjvbxppcclvpvcvv8mcmfrn3qp5w1lhy5") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.35.0 (c (n "esp-idf-hal") (v "0.35.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.19") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0qf83n9im6fy6cqkj9zwyah6pw819qvs8jv04rh361zfjfnbhm14") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.35.1 (c (n "esp-idf-hal") (v "0.35.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.19") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0wvii0b5p4wx76jb6ya6nvkavbww1rza3maxv4w1d1vxckn4b5rw") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.35.2 (c (n "esp-idf-hal") (v "0.35.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.7") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.19") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0j4m7m67fz5fc9zr2hrhgxkk98b8nw66a1ffwhfd5c210v2rrxa0") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.36.0 (c (n "esp-idf-hal") (v "0.36.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.20") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0bncifcv28n1g62wdhq2l4wgwvmz4lxdl4mqvkmmnnyv1gkggxjd") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.37.0 (c (n "esp-idf-hal") (v "0.37.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.21") (o #t) (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1g1j07vdvfk91r21sh3p9xgq9w4cq21vk5f131llwi7j9yyzcll2") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc")))) (y #t)))

(define-public crate-esp-idf-hal-0.37.1 (c (n "esp-idf-hal") (v "0.37.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.21") (o #t) (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.1") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.1") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "037ggk572f4fw739xamb3pr2w9sq2125bnab7yfi556v24zfwn0c") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc")))) (y #t)))

(define-public crate-esp-idf-hal-0.37.2 (c (n "esp-idf-hal") (v "0.37.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.21") (o #t) (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.2") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.2") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "0pwhm53hz4n2k9hvs7lx7wi0zrxvyz2hza19v2kzc0lb9v25hz91") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc")))) (y #t)))

(define-public crate-esp-idf-hal-0.37.3 (c (n "esp-idf-hal") (v "0.37.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.21") (o #t) (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1b9iqbyjf24m88kgwbil2yivc2n7wa1hv8v6a4qj46n9kh75ki7l") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc")))) (y #t)))

(define-public crate-esp-idf-hal-0.37.4 (c (n "esp-idf-hal") (v "0.37.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.21.2") (o #t) (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1l2mmwzmmrrc6jdw37ly4b65cljly8fpbbx115jlxw9c3i07f34k") (f (quote (("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("experimental") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc") ("alloc"))))))

(define-public crate-esp-idf-hal-0.38.0 (c (n "esp-idf-hal") (v "0.38.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.22.0") (o #t) (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "1mmj3a5060apkva0ig14fa9vh5lvq955yaxp6nj3s2zbsjnqx6fc") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "embedded-svc?/std") ("experimental" "embedded-svc?/experimental") ("alloc" "embedded-svc?/alloc"))))))

(define-public crate-esp-idf-hal-0.38.1 (c (n "esp-idf-hal") (v "0.38.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^0.2.5") (f (quote ("custom-impl"))) (o #t) (d #t) (k 0)) (d (n "embassy") (r "^0") (o #t) (d #t) (k 0)) (d (n "embedded-hal") (r "=1.0.0-alpha.8") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-svc") (r "^0.22.0") (o #t) (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.4") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "mutex-trait") (r "^0.2") (o #t) (k 0)) (d (n "nb") (r "^0.1.2") (d #t) (k 0)))) (h "11r46ygkk1bhwikk4wywpndsyhg072bk5pmpb6dl7ijgq846nhda") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys" "embedded-svc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "embedded-svc?/std") ("experimental" "embedded-svc?/experimental") ("alloc" "embedded-svc?/alloc"))))))

(define-public crate-esp-idf-hal-0.39.0 (c (n "esp-idf-hal") (v "0.39.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "1gj2wbpjjcmf6znmpqa6vng9zns3k6j2pja3xswnmkbjrx677vml") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (y #t) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.39.1 (c (n "esp-idf-hal") (v "0.39.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "1p56qa97ky4fs771qf5gsv7va0g67ycm7fdf51d9wyd339cq2l7n") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (y #t) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.39.2 (c (n "esp-idf-hal") (v "0.39.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "17z2jkawbibrynz1vqj8iknd1lmr2kajglk60192iv95lafnj08v") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (y #t) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.39.3 (c (n "esp-idf-hal") (v "0.39.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "14y1awwi106yvsg1klh6m4a2ygzpavnl0xzmdzr18fji82z36m7g") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.39.4 (c (n "esp-idf-hal") (v "0.39.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "0xdchkpg1zdzifbwyrwzb7fy3ndsplwwrvv5nkm44zr5cj5kxh81") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.40.0 (c (n "esp-idf-hal") (v "0.40.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.31") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.32") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.32") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "122i9vvhhkv0wfb00w5zhjr9vslzs6h17rcll6p82bhb2bgy2dyy") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.40.1 (c (n "esp-idf-hal") (v "0.40.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "critical-section") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.9") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.1") (d #t) (k 0)) (d (n "embuild") (r "^0.31") (d #t) (k 1)) (d (n "esp-idf-sys") (r "^0.32") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.32") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "0awmqhv3d9ir16m1dwzzavm2d9c5967ykcjyqmsycz8m9p64sdf4") (f (quote (("riscv-ulp-hal") ("default" "std" "alloc" "esp-idf-sys") ("alloc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std")))) (r "1.61")))

(define-public crate-esp-idf-hal-0.41.0 (c (n "esp-idf-hal") (v "0.41.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.10") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.2") (d #t) (k 0)) (d (n "embuild") (r "^0.31.2") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "12khhqs75hh2bvfb2blz255n0nwsq2vzhr12w85pdxx5lygcqdlf") (f (quote (("riscv-ulp-hal") ("nightly" "embedded-hal-async") ("default" "std" "alloc") ("alloc")))) (y #t) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std") ("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.66")))

(define-public crate-esp-idf-hal-0.41.1 (c (n "esp-idf-hal") (v "0.41.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.10") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.2") (d #t) (k 0)) (d (n "embuild") (r "^0.31.2") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "10a34qa0prldi4bvhd7fz7gj5jnylwi0qrcax6i5nvh7midf95ka") (f (quote (("riscv-ulp-hal") ("nightly" "embedded-hal-async") ("default" "std" "alloc") ("alloc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std") ("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.66")))

(define-public crate-esp-idf-hal-0.41.2 (c (n "esp-idf-hal") (v "0.41.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "edge-executor") (r "^0.3") (o #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-alpha.10") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^0.2.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-alpha.2") (d #t) (k 0)) (d (n "embuild") (r "^0.31.2") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)))) (h "1mh40xjimbk4s4f8g69imssiz6ykh86awnijln3hfa6z3vjdc3pa") (f (quote (("riscv-ulp-hal") ("nightly" "embedded-hal-async") ("default" "std" "alloc") ("alloc")))) (s 2) (e (quote (("std" "alloc" "esp-idf-sys/std" "edge-executor?/std") ("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.66")))

(define-public crate-esp-idf-hal-0.42.0 (c (n "esp-idf-hal") (v "0.42.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33.3") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "1k1hpl718knzk47c57yym7924ba5baq3ifx89w6pphjv472gyisi") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly" "embedded-hal-async" "embedded-io-async") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "native" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (y #t) (l "esp_idf_hal") (s 2) (e (quote (("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.71")))

(define-public crate-esp-idf-hal-0.42.1 (c (n "esp-idf-hal") (v "0.42.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33.3") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "055pnmvxmj24zlp80f62aq3ymkrq6cl6g2pybc2c8068phik9mqr") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly" "embedded-hal-async" "embedded-io-async") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "native" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (y #t) (l "esp_idf_hal") (s 2) (e (quote (("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.71")))

(define-public crate-esp-idf-hal-0.42.2 (c (n "esp-idf-hal") (v "0.42.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33.5") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "0fnxrd8qvm9iw94cgka5rjyl9lnv8rcqyjx1la2kf1v6rgq923zw") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly" "embedded-hal-async" "embedded-io-async") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "native" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (y #t) (l "esp_idf_hal") (s 2) (e (quote (("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.71")))

(define-public crate-esp-idf-hal-0.42.3 (c (n "esp-idf-hal") (v "0.42.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33.5") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "0rry39i52gsr8r88i1phaigicbq5g3rp14w523x5bzrgczf6gl4g") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly" "embedded-hal-async" "embedded-io-async") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "native" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (y #t) (l "esp_idf_hal") (s 2) (e (quote (("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.71")))

(define-public crate-esp-idf-hal-0.42.4 (c (n "esp-idf-hal") (v "0.42.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33.5") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "1b5dkqspy02lv1qzhbmq1a65fa6fz9b42yari7riqangvwhrxg1j") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly" "embedded-hal-async" "embedded-io-async") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "native" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (y #t) (l "esp_idf_hal") (s 2) (e (quote (("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.71")))

(define-public crate-esp-idf-hal-0.42.5 (c (n "esp-idf-hal") (v "0.42.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (o #t) (k 0)) (d (n "critical-section") (r "^1.1.1") (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.3") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "=1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "embedded-hal-nb") (r "=1.0.0-rc.1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-sys") (r "^0.33.5") (f (quote ("native"))) (o #t) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.7") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1.0.0") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "1qmwj3vkp00hayrnpdraz5l2f8mbwdya1alaps9qpmfnyfrlsf6f") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("riscv-ulp-hal") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly" "embedded-hal-async" "embedded-io-async") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "native" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (l "esp_idf_hal") (s 2) (e (quote (("esp-idf-sys" "dep:esp-idf-sys" "atomic-waker")))) (r "1.71")))

(define-public crate-esp-idf-hal-0.43.0 (c (n "esp-idf-hal") (v "0.43.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "critical-section") (r "^1.1.1") (f (quote ("restore-state-none"))) (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^1") (d #t) (k 0)) (d (n "embedded-hal-nb") (r "^1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1.1") (k 0)) (d (n "esp-idf-sys") (r "^0.34") (k 0)) (d (n "esp-idf-sys") (r "^0.34") (f (quote ("binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "060m37hw599bx3s0p3iqv8al4fmxqm61cwn5haj3s29k4zmn5sb7") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (l "esp_idf_hal") (r "1.75")))

(define-public crate-esp-idf-hal-0.43.1 (c (n "esp-idf-hal") (v "0.43.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "atomic-waker") (r "^1.1.1") (k 0)) (d (n "critical-section") (r "^1.1.1") (f (quote ("restore-state-none"))) (o #t) (d #t) (k 0)) (d (n "display-interface-spi") (r "^0.4.1") (d #t) (k 2)) (d (n "embassy-sync") (r "^0.5") (d #t) (k 0)) (d (n "embedded-can") (r "^0.4.1") (d #t) (k 0)) (d (n "embedded-graphics") (r "^0.7.1") (d #t) (k 2)) (d (n "embedded-hal") (r "^1") (d #t) (k 0)) (d (n "embedded-hal-0-2") (r "^0.2.7") (f (quote ("unproven"))) (d #t) (k 0) (p "embedded-hal")) (d (n "embedded-hal-async") (r "^1") (d #t) (k 0)) (d (n "embedded-hal-nb") (r "^1") (d #t) (k 0)) (d (n "embedded-io") (r "^0.6") (d #t) (k 0)) (d (n "embedded-io-async") (r "^0.6") (d #t) (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1.1") (k 0)) (d (n "esp-idf-sys") (r "^0.34") (k 0)) (d (n "esp-idf-sys") (r "^0.34") (f (quote ("binstart"))) (d #t) (k 2)) (d (n "heapless") (r "^0.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mipidsi") (r "^0.5.0") (d #t) (k 2)) (d (n "nb") (r "^1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7") (k 0)))) (h "0x1aqkxmw59v7p126jfyzkw9viiahmxqmax1prn03jm937xz7bgp") (f (quote (("wake-from-isr") ("std" "alloc" "esp-idf-sys/std") ("pio" "esp-idf-sys/pio") ("panic_handler" "esp-idf-sys/panic_handler") ("nightly") ("native" "esp-idf-sys/native") ("libstart" "esp-idf-sys/libstart") ("embassy-sync") ("default" "std" "binstart") ("binstart" "esp-idf-sys/binstart") ("alloc_handler" "esp-idf-sys/alloc_handler") ("alloc")))) (l "esp_idf_hal") (r "1.75")))

