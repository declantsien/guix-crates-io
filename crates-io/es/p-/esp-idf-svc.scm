(define-module (crates-io es p- esp-idf-svc) #:use-module (crates-io))

(define-public crate-esp-idf-svc-0.16.0 (c (n "esp-idf-svc") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.7") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "090pchsg6kpffpy8ql0za4b23pbd0b0m1kdnr7jzwwnd7cq1wjrv") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.16.1 (c (n "esp-idf-svc") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.7") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0zfwj00wfi3fys2slv24cl5kqr6f53ksfs1dfvdvny35rxy1y2kn") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.16.3 (c (n "esp-idf-svc") (v "0.16.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.7") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "07v3a32lrcvh0kcksymvk5r1wcnmxnl5ppn6cl2qkv1m141kzc8v") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.16.4 (c (n "esp-idf-svc") (v "0.16.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.7") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "12k6pjj9pmz11l2cjvhcyl9bwwg70vl0yscfyy2bafh0a1c6lkyz") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.16.5 (c (n "esp-idf-svc") (v "0.16.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.7") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1byjdqjv4ah1yb0hzv5wgqk0d1pyk9ihlyz2c9cnms0qdq9g275r") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.16.6 (c (n "esp-idf-svc") (v "0.16.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.7") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0prjifslj6l1ac34pz324lhrzrivsq8b62p0npjhxdgf3bb19zlw") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.17.0 (c (n "esp-idf-svc") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.17") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0djwrwfv66sccsajxyybm92p5lvyszymjvnwfhgn1gzw3gcjzcsb") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.17.1 (c (n "esp-idf-svc") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.17") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0bpslpd7pq540zf03wxasjqmh10jnjx7pl53a30qg9a5f2dxjp33") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.18.0 (c (n "esp-idf-svc") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cargo-pio") (r "^0.21") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.18") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "15psbhc55gd6rikdpml2l8rzklmgjyqvkk8f8ybqvipzqk04860z") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.18.1 (c (n "esp-idf-svc") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cargo-pio") (r "^0.21") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.3") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.18.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0agcw4yd95n3933b2qq6xnj1xiyp24b3h59b2zva1zm0k7g5frg2") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.18.2 (c (n "esp-idf-svc") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cargo-pio") (r "^0.21") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.3") (d #t) (k 0)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.18.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "04rfa766sh179746l9qwf7pab1bp46qb5cgg5227jswfps19l2jf") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.19.0 (c (n "esp-idf-svc") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.3") (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1mdjpw8viid76z60nz6cfsy9cwz65d2kpai8lp6qlv7nscvc7bn5") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.19.1 (c (n "esp-idf-svc") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.3") (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1ra932wwk38hn40sdjj3kdqndc4hr4pzqm4v4ahl0c7wxlfib5qi") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.19.2 (c (n "esp-idf-svc") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.4") (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "17zwxcnq550c2b44v8sg39a7xi7w73lgsshss4y1qd71lliby1dq") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.19.3 (c (n "esp-idf-svc") (v "0.19.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.4") (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0zd405rdc3y5q1advprbiavcij4wwmvqb33lly7xmf603axz992j") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.19.4 (c (n "esp-idf-svc") (v "0.19.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.4") (d #t) (k 0)) (d (n "embuild") (r "^0.23") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.19") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1xz9xbalcirdjala74jl8qb4cgxsqyk2jmpkdx37z58rqph4jhwk") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.20.0 (c (n "esp-idf-svc") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.4") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "17ri40i1jg61f58msi5qw88w8dmk7iy4babrnlvk0k86yxdynay9") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.20.1 (c (n "esp-idf-svc") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.8.7") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1v81iy5j6g3aqbajhgpksagv0fb488dri5x7ygyvikpgs3jdbvr8") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.22.0 (c (n "esp-idf-svc") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.9") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0b0ji2azfj64l7g5kbm3a3vmm5zrcf3xlan6x4p3qmz3z7vfvy65") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.23.0 (c (n "esp-idf-svc") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.10") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "02nkbnkdkmqkp7nc0rr0vgkwx7mzca32xs9kqk60d9ajkklay782") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.23.1 (c (n "esp-idf-svc") (v "0.23.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.10.3") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20.8") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0v8dpz0m92fg4gxqgf6680mpcyy1hk6f88cxnifrkr38jzwdpd9k") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.24.0 (c (n "esp-idf-svc") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.20") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1f08ybxw0brlrbmpp2dvk5i0dxsw4pd4s9346yq4qrrp9fww6rx4") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.25.0 (c (n "esp-idf-svc") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.20") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "13nl4gixm76a2jrwk9pc5payhn2kcsmlgwq2yy7irnl1bsfgy14x") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.25.1 (c (n "esp-idf-svc") (v "0.25.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.20") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.20.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "00j7b2bicphcp4na94jyzp9zk3brv6w0zl161vv8x3ly2vii1f38") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("libstart") ("experimental" "embedded-svc/experimental") ("default" "std") ("binstart") ("alloc" "cstr_core/alloc" "anyhow"))))))

(define-public crate-esp-idf-svc-0.26.0 (c (n "esp-idf-svc") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.21") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.21") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1fywyvx7ls9fq3wc8fz82vz9frz83i2a3j5chcb8ijclj77rd65q") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.26.1 (c (n "esp-idf-svc") (v "0.26.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.21") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.21") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1ai2arpv57nc038x5y9ay9lj83pcwc5205y3hdw6vp5gzxhhlg1r") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.27.0 (c (n "esp-idf-svc") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.21") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.21") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0rj3635nxpl4yghy6csrs4g8xx91z6vdmrcvj9jwm6nndgxwi3g5") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.27.1 (c (n "esp-idf-svc") (v "0.27.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (d #t) (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.21") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.21") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1bmja3cvjrrfhs6l6c1qjx6iczb3b7m7n3ph76qbmip66933a9xy") (f (quote (("std" "alloc" "anyhow/std" "esp-idf-sys/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.27.2 (c (n "esp-idf-svc") (v "0.27.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("backtrace"))) (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.11") (k 0)) (d (n "embuild") (r "^0.24") (d #t) (k 1)) (d (n "enumset") (r "^1") (d #t) (k 0)) (d (n "esp-idf-hal") (r "^0.21.2") (d #t) (k 0)) (d (n "esp-idf-sys") (r "^0.22.3") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1yfnqyqndv9qz9pl8s42xx1yc9h266d9hlvx3hpr8jw8r8vq84p0") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.28.0 (c (n "esp-idf-svc") (v "0.28.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.12") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.23") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1vrz3w19c6lc6w27ag9b3dcrjp4p2hbdcgqf01n6jia9dqy2mzvp") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.28.1 (c (n "esp-idf-svc") (v "0.28.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.12") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.23") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1rxvvf9qcgbiafq4jp5ng9yx2wip3dsaxdbgxll6wr8fac9dfc2h") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.29.0 (c (n "esp-idf-svc") (v "0.29.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.12") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.24") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1fjb6dj21ij093cm5casss1bf4lwcpsxg6gh8axvb2sw3dbs99x4") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.29.1 (c (n "esp-idf-svc") (v "0.29.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.12") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.24") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0zdccpkmk5zhfmc0x0hg7bz0ddzmnqbjx6fhcwrsxf9cy43s44dk") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.29.2 (c (n "esp-idf-svc") (v "0.29.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.12") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.24") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.24") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1s6klr89wn58rrv9sxxw5jb8r33swbv6zkh4lwsjzhwq1hwx6xc1") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.30.0 (c (n "esp-idf-svc") (v "0.30.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.13") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.25") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.25") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "12q8irm3pgp44nzzb2vxsrnyx8xx467jpvmcfrrmxk4szz8bq6vr") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.31.0 (c (n "esp-idf-svc") (v "0.31.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.14") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.26") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.26") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1f1ayd9058g6fa8cnqiyigdqh92igzsb8hs73nq9c3jbwaldc3c7") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.31.1 (c (n "esp-idf-svc") (v "0.31.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.14") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.26") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.26") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0gnj290vcgg10yyv6i2azir95729nkqpa64kvjmvgqr32hvv0q9v") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.32.0 (c (n "esp-idf-svc") (v "0.32.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.27") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "08q5xazcrv6bwvjfcnjvhq2h7k9zlvlw8yfy1gmc82sf024hbwr6") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.32.1 (c (n "esp-idf-svc") (v "0.32.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.1") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.27") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0n3sj4rfafdvdaxdbzgvs30gnx63w0yrm49hvflwfh7g666n7kwq") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.32.2 (c (n "esp-idf-svc") (v "0.32.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.2") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.27") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1cy0yni0hbingl7kcbbfd97bqpvr3r9gj2a3karvvva5x0ncy0kv") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.32.3 (c (n "esp-idf-svc") (v "0.32.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.3") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.27") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1ywc60w3bsb39n23g8ixm9m802a2jap55b55qs0zjvc90wwz95c2") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.33.0 (c (n "esp-idf-svc") (v "0.33.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.3") (k 0)) (d (n "embuild") (r "^0.25") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.28") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.27") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0lhq65sn87mqir5qjs7mak55hm9krx0whgw5flqb5ff3ypfy97iy") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.34.0 (c (n "esp-idf-svc") (v "0.34.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.3") (k 0)) (d (n "embuild") (r "^0.26") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.29") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.28") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "0fsp9gxw2zd8j1w0kwamnsd292ijdx8y0b3izkjnzpgzh1zrwn76") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.34.1 (c (n "esp-idf-svc") (v "0.34.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.4") (k 0)) (d (n "embuild") (r "^0.26") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.29.3") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1nxshdk41mvrrmzm2al6d6wizakr753qshz8wrj56nab6khkqdy0") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.34.2 (c (n "esp-idf-svc") (v "0.34.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.4") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.29.3") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "1zbhx2pcrxvjnwp5qmv84dr2r138lwbwk2drgbcc1k6rvnny1mgd") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.34.3 (c (n "esp-idf-svc") (v "0.34.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.15.4") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.30.0") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.28.1") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "mutex-trait") (r "^0.2") (d #t) (k 0)))) (h "11hzdff52l77as9v02hj8g6czzpmy7a8n36yscq9dx15g03vjsd8") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.35.0 (c (n "esp-idf-svc") (v "0.35.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.31") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "0343mrghxg2m8zmcmz6s2aw3akkvcqbr5pwqgxg8nlmh4cqql0vj") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.35.1 (c (n "esp-idf-svc") (v "0.35.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.1") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.31") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "0bp72s7azqg8ffznm9hk5fqlgjww6rhd9f2c9pa9cwvi5fdkgbgf") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.35.2 (c (n "esp-idf-svc") (v "0.35.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.1") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.31") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "0g9r0dyx4w86yx51cbflm3iab41pz63cs3hcwf09h7h9ygicc1g4") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.0 (c (n "esp-idf-svc") (v "0.36.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.1") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "0m40m5r8g8x63m8kikg2kvckr2nwvbb7r6wk1p7hggmamz5pilka") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.1 (c (n "esp-idf-svc") (v "0.36.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.2") (k 0)) (d (n "embuild") (r "^0.27") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.29") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "0c02kfspg4s9h7b15k456ysvdjcn6c6qf0hyxh37a93d19spx8mm") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.2 (c (n "esp-idf-svc") (v "0.36.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.2") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.3") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "1bx4wiqci8mrc451mk0hgfv989vkw6j29bjnnshr0w3wzz8fazjv") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.3 (c (n "esp-idf-svc") (v "0.36.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.3") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.4") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)))) (h "1blcn81mcqr2arl0w80l8zzjm9xfv3hsy1mig6pwh2ks14cbl3af") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.4 (c (n "esp-idf-svc") (v "0.36.4") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.3") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.4") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0a5p1dz1mi71mrmvwrv49cv7fh4q4ky9ixi2h1x7kl6s8isgggdi") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.5 (c (n "esp-idf-svc") (v "0.36.5") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.5") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.4") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1mzxbga4sdkhb5brfz08l0cgbv8j9nh94v2fz8d6ahk84gpdqqg3") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.6 (c (n "esp-idf-svc") (v "0.36.6") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.5") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.4") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0n59nk5rzci5fhmcqgnz13vhzx6fbivj37l6pl192jxpkr4xxgqn") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.7 (c (n "esp-idf-svc") (v "0.36.7") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.5") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.4") (f (quote ("esp-idf-sys" "embedded-svc-mutex"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1b29pqmnirsgis84jwqf3rj1hvwsqy414wri300nqzqn6c6cvfj4") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.8 (c (n "esp-idf-svc") (v "0.36.8") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.5") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.8") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "07jzvkwcpmfqkykl8kbgqdppc2xhngbms2s92mnkajv75gdkwip6") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.9 (c (n "esp-idf-svc") (v "0.36.9") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.7") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.8") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0dzzna08c2ybq79khqf4hhaj4d93d27axrvlyp7ycq7s6r66aci2") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.36.10 (c (n "esp-idf-svc") (v "0.36.10") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.16.8") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.32.8") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1c1baxri743ffs6hj47wflklm9x7hvlwgmkw3pbwqw5hb011qsrv") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.37.0 (c (n "esp-idf-svc") (v "0.37.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.17.1") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.33.1") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0zc8l129rwywssnd4g3kn1s10715asy66l0kgf3wxghcjsxnr7x7") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.37.2 (c (n "esp-idf-svc") (v "0.37.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.17.2") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.33.1") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "07xj8c105zxac0fxmw1xi5flfsd54i61v9vlxxbqmz2wbh22lvdd") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.37.3 (c (n "esp-idf-svc") (v "0.37.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.17.4") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.33.1") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.30") (f (quote ("pio"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1p4d60vs6c3l56sc0ibpmcmmqfd7dwz8jykjsir5mm2wpykirxsv") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.38.0 (c (n "esp-idf-svc") (v "0.38.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.18") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.34") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1anzam6zq13z79qh69f4gw463adxrqxpdf6npvrynny4sk8jl8vr") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.38.1 (c (n "esp-idf-svc") (v "0.38.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.18.1") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.34") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0g9fl9rv5m7fl6jgcn645h4l6hpgg5bwmxrjg6dr8ibf8nl5mm2l") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.38.2 (c (n "esp-idf-svc") (v "0.38.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.18.2") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.34") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "06558761zc7walsqxjmmfz2dnr7842f6qzij1n6mb29ldpiar18r") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.39.0 (c (n "esp-idf-svc") (v "0.39.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.19") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.35") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "08rmhl3xaxg85snf2bvm5xix4q4a83v926lnr36cy7g5xd4zp4bd") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.39.1 (c (n "esp-idf-svc") (v "0.39.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.19") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.35.1") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0vbip3y7iv8zag325n73yy45qhb7rg5i37rrfir5rmz1kfwmjlh7") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.39.2 (c (n "esp-idf-svc") (v "0.39.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.19.1") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.35.2") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1f48l9mi40vnn4bjrqq2k07nsf5insc5n6jha53h9wgnljrqddm6") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.40.0 (c (n "esp-idf-svc") (v "0.40.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.20") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.36") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1zkc9hgznypagbkvy2aakxcgvsnji6rz2yvnw204zlld9ngj5pny") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.40.1 (c (n "esp-idf-svc") (v "0.40.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.20") (k 0)) (d (n "embuild") (r "^0.28") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.36") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1fcvknmzlr0k89vbkkkrapnkyhylxc8n103n4ci9g6fb03dyh2qg") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.41.0 (c (n "esp-idf-svc") (v "0.41.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.21") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.37") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.1") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0fgg8cfm9cq1xlzci63w80c15w83b8rrpyx55xp259h5izwj1sm9") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc")))) (y #t)))

(define-public crate-esp-idf-svc-0.41.1 (c (n "esp-idf-svc") (v "0.41.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.21") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.37.2") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.2") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "00a91m1krlzilq0444fnvk5f815djwfwdrhs9zfgx3diwvbb0gp0") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "embedded-svc/alloc")))) (y #t)))

(define-public crate-esp-idf-svc-0.41.2 (c (n "esp-idf-svc") (v "0.41.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.21") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.37.3") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "13gvck42pb52v8pgjdkck213rjklwxqhzvdl38fxj1xsihvhxhgh") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t)))

(define-public crate-esp-idf-svc-0.41.3 (c (n "esp-idf-svc") (v "0.41.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.21.2") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.37.4") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "12x9izi7c74sjq0z0z9qqs6xn6b68dcjs7l2ppnl4iw542lw1mjl") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "heapless" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.41.4 (c (n "esp-idf-svc") (v "0.41.4") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.21.3") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.37.4") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (o #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0r5pd1lnmb64bx1kbxnip0fd007wprkxl5r73jlrf5w8q9p75g8j") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "heapless" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.42.0 (c (n "esp-idf-svc") (v "0.42.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.22") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.38") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "02yd8xjwyh3p3pxpna9sxfpsn3g1v5fdlnmqvfsx4z0rcivxiyqn") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.42.1 (c (n "esp-idf-svc") (v "0.42.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.22") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.38") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1hyfddcxry80fknldfagyy17x1qi3q2j9x57h0k85z72fszq1wwq") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.42.2 (c (n "esp-idf-svc") (v "0.42.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.22") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.38") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "00rp59dbd34xkrfl8qrn138cswhry2rw0qyh036x9d2qj953qnsb") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.42.3 (c (n "esp-idf-svc") (v "0.42.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.22") (k 0)) (d (n "embuild") (r "^0.29") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.38") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.5") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1k3dq7a7h8b1bxv6l5kzdgqmhfywjhnx99l54dbzakx26id84z9q") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.42.4 (c (n "esp-idf-svc") (v "0.42.4") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.22") (k 0)) (d (n "embuild") (r "^0.30.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.38") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.9") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "1qxn5w6gig7m9mdyr8vfamdih6rh799ji62hi7x88k8g6bkwnjc2") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t)))

(define-public crate-esp-idf-svc-0.42.5 (c (n "esp-idf-svc") (v "0.42.5") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embedded-svc") (r "^0.22") (k 0)) (d (n "embuild") (r "^0.30.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.38") (f (quote ("esp-idf-sys" "embedded-svc"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.9") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.6") (o #t) (d #t) (k 0)))) (h "0m3lwg8n8p3ry4w00l081wjmx0hh442j4d50qgji32h65dgl52sy") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("isr-async-executor" "embedded-svc/isr-async-executor" "alloc" "experimental") ("experimental" "embedded-svc/experimental" "esp-idf-hal/experimental" "uncased") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc"))))))

(define-public crate-esp-idf-svc-0.43.0 (c (n "esp-idf-svc") (v "0.43.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23") (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.39") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "017dckbns138lkswzwz08j7ysx4xdp2krr6bzx181slv503qlzfd") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t) (r "1.61")))

(define-public crate-esp-idf-svc-0.43.1 (c (n "esp-idf-svc") (v "0.43.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23") (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.39") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "0a5ry4lbin7a4yzyqa9zlmj0rn5ybzpn36vi1qz3gpq0hndk99pi") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t) (r "1.61")))

(define-public crate-esp-idf-svc-0.43.2 (c (n "esp-idf-svc") (v "0.43.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23.1") (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.39") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "0rcxx6pak1q5n4l40cmzws0k45a8nrprs1gcl07shx9f89ia3f0l") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t) (r "1.61")))

(define-public crate-esp-idf-svc-0.43.3 (c (n "esp-idf-svc") (v "0.43.3") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23.1") (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.39") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "11k1xwi13zr269ws85i5ss8smq820inkjlkz7da3nciwj1bvmpgc") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t) (r "1.61")))

(define-public crate-esp-idf-svc-0.43.4 (c (n "esp-idf-svc") (v "0.43.4") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23.1") (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.39.3") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "090w0kxv15rhrm7yg5g505x0l3sr42lfhh1whlqqxcim1amrdznk") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.61")))

(define-public crate-esp-idf-svc-0.43.5 (c (n "esp-idf-svc") (v "0.43.5") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "cstr_core") (r "^0.2") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23.1") (k 0)) (d (n "embuild") (r "^0.30.4") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.39.3") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.31.11") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "0aj8pr7kyil7y70f5qcbih74xs5rjq6ha4zir34vnd26miqnmh34") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "cstr_core/alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.61")))

(define-public crate-esp-idf-svc-0.44.0 (c (n "esp-idf-svc") (v "0.44.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.23.2") (k 0)) (d (n "embuild") (r "^0.31") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.40") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.32") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "01d14h5nq44swyin3qvrnqn8h03dvxmxf0nq9z0ix0gm4rknpfcc") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.61")))

(define-public crate-esp-idf-svc-0.45.0 (c (n "esp-idf-svc") (v "0.45.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "embassy-sync") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.24") (k 0)) (d (n "embuild") (r "^0.31") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.40") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.32") (f (quote ("native"))) (k 0)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "03wyyfzvk9k7y65fqj0ip9prqj45dvrshbrllnfd30dgxqk520zn") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.61")))

(define-public crate-esp-idf-svc-0.46.0 (c (n "esp-idf-svc") (v "0.46.0") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25") (k 0)) (d (n "embuild") (r "^0.31.2") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.41") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "0qsdp0ll7d5s4zcyg20ixa5vna6wd2lbj0xnpbql3lb7cni36lk6") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "esp-idf-hal/embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.66")))

(define-public crate-esp-idf-svc-0.46.1 (c (n "esp-idf-svc") (v "0.46.1") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25") (k 0)) (d (n "embuild") (r "^0.31.2") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.41") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "1zrllgmprpwhvh3b4diq910wqvs5wabhkq40izr5120yznkd4rb7") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "esp-idf-hal/embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.66")))

(define-public crate-esp-idf-svc-0.46.2 (c (n "esp-idf-svc") (v "0.46.2") (d (list (d (n "anyhow") (r "^1") (o #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 1)) (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.25") (k 0)) (d (n "embuild") (r "^0.31.2") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.41") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "08qi76xrn9vsfp44bngsrw3lji2yh222yvc33l8w7b08zr1r8adi") (f (quote (("std" "alloc" "anyhow/std" "log/std" "esp-idf-sys/std" "esp-idf-hal/std" "embedded-svc/std") ("nightly" "embedded-svc/nightly") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "esp-idf-hal/embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std") ("alloc" "anyhow" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (r "1.66")))

(define-public crate-esp-idf-svc-0.47.0 (c (n "esp-idf-svc") (v "0.47.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.3") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26") (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.42") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33.3") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "0f9aajkjr5vcda5gr00rxhd4k29a85yc57kd5jpqlv35v51l4y01") (f (quote (("wake-from-isr" "esp-idf-hal/wake-from-isr") ("std" "alloc" "log/std" "esp-idf-hal/std" "embedded-svc/std") ("pio" "esp-idf-hal/pio") ("panic_handler" "esp-idf-hal/panic_handler") ("nightly" "embedded-svc/nightly" "esp-idf-hal/nightly") ("native" "esp-idf-hal/native") ("libstart" "esp-idf-hal/libstart") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std" "native" "binstart") ("critical-section" "esp-idf-hal/critical-section") ("binstart" "esp-idf-hal/binstart") ("alloc_handler" "esp-idf-hal/alloc_handler") ("alloc" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t) (l "esp_idf_svc") (s 2) (e (quote (("embassy-sync" "esp-idf-hal/embassy-sync" "dep:embassy-sync")))) (r "1.71")))

(define-public crate-esp-idf-svc-0.47.1 (c (n "esp-idf-svc") (v "0.47.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.3") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26.1") (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.42") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33.3") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (d #t) (k 0)))) (h "09r8l6fqfwabl71m3h2lcmds958lacicz8fhr8y5sn13n1inmg08") (f (quote (("wake-from-isr" "esp-idf-hal/wake-from-isr") ("std" "alloc" "log/std" "esp-idf-hal/std" "embedded-svc/std") ("pio" "esp-idf-hal/pio") ("panic_handler" "esp-idf-hal/panic_handler") ("nightly" "embedded-svc/nightly" "esp-idf-hal/nightly") ("native" "esp-idf-hal/native") ("libstart" "esp-idf-hal/libstart") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std" "native" "binstart") ("critical-section" "esp-idf-hal/critical-section") ("binstart" "esp-idf-hal/binstart") ("alloc_handler" "esp-idf-hal/alloc_handler") ("alloc" "esp-idf-hal/alloc" "embedded-svc/alloc")))) (y #t) (l "esp_idf_svc") (s 2) (e (quote (("embassy-sync" "esp-idf-hal/embassy-sync" "dep:embassy-sync")))) (r "1.71")))

(define-public crate-esp-idf-svc-0.47.2 (c (n "esp-idf-svc") (v "0.47.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.3") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26.1") (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.42") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33.3") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (k 0)))) (h "0119p5n4rwkwkj7i6ggzlw2g3x1rj6v65615545wpp970zv2n833") (f (quote (("wake-from-isr" "esp-idf-hal/wake-from-isr") ("std" "alloc" "log/std" "esp-idf-hal/std" "embedded-svc/std") ("pio" "esp-idf-hal/pio") ("panic_handler" "esp-idf-hal/panic_handler") ("nightly" "embedded-svc/nightly" "esp-idf-hal/nightly") ("native" "esp-idf-hal/native") ("libstart" "esp-idf-hal/libstart") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std" "native" "binstart") ("critical-section" "esp-idf-hal/critical-section") ("binstart" "esp-idf-hal/binstart") ("alloc_handler" "esp-idf-hal/alloc_handler") ("alloc" "esp-idf-hal/alloc" "embedded-svc/alloc" "uncased/alloc")))) (y #t) (l "esp_idf_svc") (s 2) (e (quote (("embassy-sync" "esp-idf-hal/embassy-sync" "dep:embassy-sync")))) (r "1.71")))

(define-public crate-esp-idf-svc-0.47.3 (c (n "esp-idf-svc") (v "0.47.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-sync") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "embassy-time") (r "^0.1.3") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-svc") (r "^0.26.4") (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.42.5") (f (quote ("esp-idf-sys"))) (k 0)) (d (n "esp-idf-sys") (r "^0.33.3") (f (quote ("native" "binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.7") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (k 0)))) (h "19gb07rz20bifyhdkrz5lg7ipk5gdagg6f1vhab3nnmgp46x4avf") (f (quote (("wake-from-isr" "esp-idf-hal/wake-from-isr") ("std" "alloc" "log/std" "esp-idf-hal/std" "embedded-svc/std") ("pio" "esp-idf-hal/pio") ("panic_handler" "esp-idf-hal/panic_handler") ("nightly" "embedded-svc/nightly" "esp-idf-hal/nightly") ("native" "esp-idf-hal/native") ("libstart" "esp-idf-hal/libstart") ("experimental" "embedded-svc/experimental") ("embassy-time-isr-queue" "embassy-sync" "embassy-time" "embassy-sync") ("embassy-time-driver" "embassy-time") ("default" "std" "native" "binstart") ("critical-section" "esp-idf-hal/critical-section") ("binstart" "esp-idf-hal/binstart") ("alloc_handler" "esp-idf-hal/alloc_handler") ("alloc" "esp-idf-hal/alloc" "embedded-svc/alloc" "uncased/alloc")))) (l "esp_idf_svc") (s 2) (e (quote (("embassy-sync" "esp-idf-hal/embassy-sync" "dep:embassy-sync")))) (r "1.71")))

(define-public crate-esp-idf-svc-0.48.0 (c (n "esp-idf-svc") (v "0.48.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^2") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-time-driver") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1") (k 0)) (d (n "embedded-svc") (r "^0.27") (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.43") (k 0)) (d (n "esp-idf-sys") (r "^0.34") (f (quote ("binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.8") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (k 0)))) (h "0jkikk8z2pgavphy9lvbppcvv5j25i4rqdhck467rb4czjcy0bdy") (f (quote (("wake-from-isr" "esp-idf-hal/wake-from-isr") ("std" "alloc" "log/std" "esp-idf-hal/std" "embedded-svc/std") ("pio" "esp-idf-hal/pio") ("panic_handler" "esp-idf-hal/panic_handler") ("nightly" "embedded-svc/nightly" "esp-idf-hal/nightly") ("native" "esp-idf-hal/native") ("libstart" "esp-idf-hal/libstart") ("experimental" "embedded-svc/experimental") ("embassy-sync" "esp-idf-hal/embassy-sync") ("default" "std" "binstart") ("critical-section" "esp-idf-hal/critical-section") ("binstart" "esp-idf-hal/binstart") ("alloc_handler" "esp-idf-hal/alloc_handler") ("alloc" "esp-idf-hal/alloc" "embedded-svc/alloc" "uncased/alloc")))) (l "esp_idf_svc") (r "1.75")))

(define-public crate-esp-idf-svc-0.48.1 (c (n "esp-idf-svc") (v "0.48.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-io") (r "^2") (d #t) (k 2)) (d (n "embassy-futures") (r "^0.1") (d #t) (k 0)) (d (n "embassy-time-driver") (r "^0.1") (f (quote ("tick-hz-1_000_000"))) (o #t) (d #t) (k 0)) (d (n "embedded-hal-async") (r "^1") (k 0)) (d (n "embedded-svc") (r "^0.27") (k 0)) (d (n "embuild") (r "^0.31.3") (d #t) (k 1)) (d (n "enumset") (r "^1") (k 0)) (d (n "esp-idf-hal") (r "^0.43") (k 0)) (d (n "esp-idf-sys") (r "^0.34") (f (quote ("binstart"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "heapless") (r "^0.8") (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "num_enum") (r "^0.7") (k 0)) (d (n "postcard") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (k 2)) (d (n "serde_json") (r "^1") (f (quote ("alloc"))) (k 2)) (d (n "uncased") (r "^0.9.7") (k 0)))) (h "0szjhjxcmn1xd2pdmwgxcyhalrmafwd9nyj1xk0zx9r2l4n69011") (f (quote (("wake-from-isr" "esp-idf-hal/wake-from-isr") ("std" "alloc" "log/std" "esp-idf-hal/std" "embedded-svc/std") ("pio" "esp-idf-hal/pio") ("panic_handler" "esp-idf-hal/panic_handler") ("nightly" "embedded-svc/nightly" "esp-idf-hal/nightly") ("native" "esp-idf-hal/native") ("libstart" "esp-idf-hal/libstart") ("experimental" "embedded-svc/experimental") ("embassy-sync" "esp-idf-hal/embassy-sync") ("default" "std" "binstart") ("critical-section" "esp-idf-hal/critical-section") ("binstart" "esp-idf-hal/binstart") ("alloc_handler" "esp-idf-hal/alloc_handler") ("alloc" "esp-idf-hal/alloc" "embedded-svc/alloc" "uncased/alloc")))) (l "esp_idf_svc") (r "1.75")))

