(define-module (crates-io es l0 esl01-dag) #:use-module (crates-io))

(define-public crate-esl01-dag-0.1.0 (c (n "esl01-dag") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.20") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "drawdag") (r "^0.1") (d #t) (k 2) (p "esl01-drawdag")) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "indexedlog") (r "^0.1") (d #t) (k 0) (p "esl01-indexedlog")) (d (n "indexmap") (r "^1.0.1") (d #t) (k 0)) (d (n "minibytes") (r "^0.1") (d #t) (k 0) (p "esl01-minibytes")) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "12xm0zn6z0jywrim5bdx0hy8czjz13rpk9nv7xcf03k9jr0l6vv6")))

(define-public crate-esl01-dag-0.1.1 (c (n "esl01-dag") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.20") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "drawdag") (r "^0.1") (d #t) (k 2) (p "esl01-drawdag")) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "indexedlog") (r "^0.1.1") (d #t) (k 0) (p "esl01-indexedlog")) (d (n "indexmap") (r "^1.0.1") (d #t) (k 0)) (d (n "minibytes") (r "^0.2") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "1q9h3whgwcpc1mnjpk2zlydcs6nss5rdh3bpj4bchs26mwxvhwni")))

(define-public crate-esl01-dag-0.2.0 (c (n "esl01-dag") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.20") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "drawdag") (r "^0.1") (d #t) (k 0) (p "esl01-drawdag")) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "indexedlog") (r "^0.1.1") (d #t) (k 0) (p "esl01-indexedlog")) (d (n "indexmap") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "minibytes") (r "^0.2") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 2)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "0ifiwqb3pgjaa8pw4jf9n6nqaz8yazsg0gq16zjj18bfsy7l2b2f")))

(define-public crate-esl01-dag-0.2.1 (c (n "esl01-dag") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.20") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "drawdag") (r "^0.1") (d #t) (k 0) (p "esl01-drawdag")) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "indexedlog") (r "^0.1.1") (d #t) (k 0) (p "esl01-indexedlog")) (d (n "indexmap") (r "^1.0.1") (d #t) (k 0)) (d (n "itertools") (r "^0.8") (d #t) (k 0)) (d (n "minibytes") (r "^0.2") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.7") (d #t) (k 2)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "0gan93cs8sa7chprri8z0wxvaccsdbiz41m39d7nq6syawwg717j")))

(define-public crate-esl01-dag-0.3.0 (c (n "esl01-dag") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "dag-types") (r "^0.3.0") (k 0) (p "esl01-dag-types")) (d (n "drawdag") (r "^0.3.0") (d #t) (k 0) (p "esl01-drawdag")) (d (n "fail") (r "^0.4") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "indexedlog") (r "^0.3") (o #t) (d #t) (k 0) (p "esl01-indexedlog")) (d (n "indexmap") (r "^1") (d #t) (k 0)) (d (n "mincode") (r "^0.3") (d #t) (k 0) (p "esl01-mincode")) (d (n "minibytes") (r "^0.3") (k 0) (p "esl01-minibytes")) (d (n "nonblocking") (r "^0.3") (d #t) (k 0) (p "esl01-nonblocking")) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "renderdag") (r "^0.3") (o #t) (d #t) (k 0) (p "esl01-renderdag")) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.3") (d #t) (k 0) (p "esl01-vlqencoding")) (d (n "dev-logger") (r "^0.3") (d #t) (k 2) (p "esl01-dev-logger")) (d (n "fs2") (r "^0.4") (d #t) (k 2)) (d (n "indexedlog") (r "^0.3") (d #t) (k 2) (p "esl01-indexedlog")) (d (n "once_cell") (r "^1") (d #t) (k 2)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "renderdag") (r "^0.3") (d #t) (k 2) (p "esl01-renderdag")) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt"))) (d #t) (k 2)))) (h "0p0cj781mzr4is2vlvi5nd4dr81y139pjqvfid0d3gmfjdnkrwrc") (f (quote (("render" "renderdag") ("indexedlog-backend" "fs2" "indexedlog" "tempfile") ("default" "indexedlog-backend" "render"))))))

