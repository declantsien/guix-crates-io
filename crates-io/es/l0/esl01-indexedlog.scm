(define-module (crates-io es l0 esl01-indexedlog) #:use-module (crates-io))

(define-public crate-esl01-indexedlog-0.1.0 (c (n "esl01-indexedlog") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "minibytes") (r "^0.1") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "0wkhnszbv5d5vwklw68i8n90ji03r2f0syzagbi6wly3yz8rx83f")))

(define-public crate-esl01-indexedlog-0.1.1 (c (n "esl01-indexedlog") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "minibytes") (r "^0.2") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "0zpb211r49x6vjgmwjm1injrkr9migv4m38gjdqmpnxz648yfimd")))

(define-public crate-esl01-indexedlog-0.1.2 (c (n "esl01-indexedlog") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.2.7") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7.0") (d #t) (k 0)) (d (n "minibytes") (r "^0.2") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "tempfile") (r "^3.0.7") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.1") (d #t) (k 0) (p "esl01-vlqencoding")))) (h "0iwixlc7w54f56qrwj4nb1g2qb0vky5wr6pnfaa9svgf89q3s118")))

(define-public crate-esl01-indexedlog-0.3.0 (c (n "esl01-indexedlog") (v "0.3.0") (d (list (d (n "atomicfile") (r "^0.3") (d #t) (k 0) (p "esl01-atomicfile")) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "fs2") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "memmap") (r "^0.7") (d #t) (k 0)) (d (n "minibytes") (r "^0.3") (d #t) (k 0) (p "esl01-minibytes")) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "twox-hash") (r "^1") (d #t) (k 0)) (d (n "vlqencoding") (r "^0.3") (d #t) (k 0) (p "esl01-vlqencoding")) (d (n "dev_logger") (r "^0.3") (d #t) (k 2) (p "esl01-dev-logger")) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)))) (h "12ckyiqm69mxz60ks4367s6wiq0bvyl790mcw1sicdaf6rvrn66a")))

