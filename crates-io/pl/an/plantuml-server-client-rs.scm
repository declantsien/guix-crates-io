(define-module (crates-io pl an plantuml-server-client-rs) #:use-module (crates-io))

(define-public crate-plantuml-server-client-rs-0.1.0 (c (n "plantuml-server-client-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage"))) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "plantuml-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "1smirs2iqqblza0gf9hdymm8d2h4aip4nk9p92zz9dzq3vplalcs")))

(define-public crate-plantuml-server-client-rs-0.1.1 (c (n "plantuml-server-client-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage"))) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "plantuml-parser") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "1x7frm0iwkn2cg3c1vi076nb8rln7whsxrsyhznd3ifs7l5fg9bw")))

(define-public crate-plantuml-server-client-rs-0.1.2 (c (n "plantuml-server-client-rs") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "plantuml-parser") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "0l5m6v5fnnagmv9zi1z1hi0p316wnrzws0500pm1g8lh9yfz0p4b")))

(define-public crate-plantuml-server-client-rs-0.1.3 (c (n "plantuml-server-client-rs") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "plantuml-parser") (r "^0.1.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "05g9rk5hsbnnzw9pnab18j8594bczkryyv1c9aszbg67ba0x1cqh")))

(define-public crate-plantuml-server-client-rs-0.1.4 (c (n "plantuml-server-client-rs") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "plantuml-parser") (r "^0.1.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "1mwc846par77b63fbb1fs699b3wfvlmhq0hckxyr0bzqh23vaj89")))

(define-public crate-plantuml-server-client-rs-0.1.5 (c (n "plantuml-server-client-rs") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "plantuml-parser") (r "^0.1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "1dj8hib5jlm5vbpgps6inff8df7kzz5ypl68wnrxh22c1a3rwpxd")))

(define-public crate-plantuml-server-client-rs-0.2.0 (c (n "plantuml-server-client-rs") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "plantuml-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "0s4clgnnjc2agx9415szdc8jhb0ffdfn7w1nkbsbn10d16g30k1p")))

(define-public crate-plantuml-server-client-rs-0.2.1 (c (n "plantuml-server-client-rs") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "plantuml-parser") (r "^0.2.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "1yly235rnv4nsy93mgrmfqygv3ia9zz7x5zmhyaw8c6kswj2px7h")))

(define-public crate-plantuml-server-client-rs-0.3.0 (c (n "plantuml-server-client-rs") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "plantuml-parser") (r "^0.3.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std"))) (k 0)))) (h "1mcyzhkk5zqszys64k5xx4yygbn6yq2y8y5kf5863idrnlmxg274")))

(define-public crate-plantuml-server-client-rs-0.4.0 (c (n "plantuml-server-client-rs") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 2)) (d (n "normalize-path") (r "^0.2.1") (d #t) (k 0)) (d (n "plantuml-parser") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std" "env-filter"))) (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)))) (h "1ipw3ai0zfxijbqsni5ra290ypxwvr7h99qxjdvr052wcf35n2hq")))

(define-public crate-plantuml-server-client-rs-0.5.0 (c (n "plantuml-server-client-rs") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "normalize-path") (r "^0.2.1") (d #t) (k 0)) (d (n "plantuml-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std" "env-filter"))) (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)))) (h "0ppwdnsnzk1rvkgjf0d3ndy4cqvwhmz7jc1iwl3s1xd7zyqmk4nd")))

(define-public crate-plantuml-server-client-rs-0.5.1 (c (n "plantuml-server-client-rs") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.71") (f (quote ("std"))) (k 0)) (d (n "base64") (r "^0.21.2") (k 0)) (d (n "bytes") (r "^1.4.0") (k 0)) (d (n "clap") (r "^4.3.4") (f (quote ("std" "derive" "help" "usage" "string"))) (k 0)) (d (n "const_format") (r "^0.2.31") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 2)) (d (n "normalize-path") (r "^0.2.1") (d #t) (k 0)) (d (n "plantuml-parser") (r "^0.5.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls" "stream"))) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.6") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("fmt" "std" "env-filter"))) (k 0)) (d (n "typed-builder") (r "^0.18.0") (d #t) (k 0)))) (h "0z0fdsvnwk552wy6ppjylhcp3l9xz0lwh68s2kp09gfqak2asz16")))

