(define-module (crates-io pl ug plugx-input) #:use-module (crates-io))

(define-public crate-plugx-input-0.0.1 (c (n "plugx-input") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("json"))) (d #t) (k 2)))) (h "0ggbsd84yx69n6wzdia1p1lz3jf9a0faffm5isp8hv2zipydacmm") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("logging" "dep:log"))))))

(define-public crate-plugx-input-0.1.0 (c (n "plugx-input") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "faccess") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("json"))) (d #t) (k 2)))) (h "10y474k78i9jsgargh77ccqlrfdlq4l2lfn17ka43r9l76hpyhy1") (f (quote (("logging") ("default")))) (s 2) (e (quote (("validation" "dep:faccess") ("tracing" "dep:tracing"))))))

(define-public crate-plugx-input-0.1.1 (c (n "plugx-input") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "faccess") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("json"))) (d #t) (k 2)))) (h "060q7yryn6jafwvhzj878k48x25ink95nzkva407r7f1dpfvkqvv") (f (quote (("logging") ("default")))) (s 2) (e (quote (("validation" "dep:faccess") ("tracing" "dep:tracing"))))))

(define-public crate-plugx-input-0.2.0 (c (n "plugx-input") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "faccess") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.19") (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("json"))) (d #t) (k 2)))) (h "0ad757bz0mm39r31dzgfdqsf7v4sn9aqdzyjpx639mcfw0wd01nz") (f (quote (("logging") ("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("schema" "dep:faccess" "dep:regex"))))))

(define-public crate-plugx-input-0.3.0 (c (n "plugx-input") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.77") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "faccess") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (o #t) (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.52") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 2)))) (h "0jm8fgkwy1bl6c69m0inq3yfis06ij0l5q39620ji8vphmr2wd62") (f (quote (("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("schema" "dep:faccess" "dep:regex") ("logging" "dep:log"))))))

(define-public crate-plugx-input-0.3.1 (c (n "plugx-input") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.77") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "faccess") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "regex") (r "^1.10.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.52") (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("json"))) (d #t) (k 2)))) (h "1m8cwm68zym2s1k9yrv0b84rbkjqjf8s356bs6z4p66dapbrrlxf") (f (quote (("logging") ("default")))) (s 2) (e (quote (("tracing" "dep:tracing") ("schema" "dep:faccess" "dep:regex"))))))

