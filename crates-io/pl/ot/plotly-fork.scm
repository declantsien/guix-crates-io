(define-module (crates-io pl ot plotly-fork) #:use-module (crates-io))

(define-public crate-plotly-fork-0.8.4 (c (n "plotly-fork") (v "0.8.4") (d (list (d (n "askama") (r ">=0.11.0, <0.13.0") (f (quote ("serde-json"))) (d #t) (k 0)) (d (n "csv") (r "^1.1.6") (d #t) (k 2)) (d (n "dyn-clone") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "itertools-num") (r "^0.1.3") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (o #t) (d #t) (k 0)) (d (n "ndarray") (r "^0.15.4") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "plotly_derive") (r "^0.8.4") (d #t) (k 0)) (d (n "plotly_kaleido") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "plotly_kaleido") (r "^0.8.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "10ii2kin899bj8al1kacq1852fx6hbyqxdhndlr2jkjvi1npzc0y") (f (quote (("wasm" "getrandom" "js-sys" "wasm-bindgen" "wasm-bindgen-futures") ("plotly_ndarray" "ndarray") ("plotly_image" "image") ("kaleido" "plotly_kaleido"))))))

