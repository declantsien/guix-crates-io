(define-module (crates-io pl on plonky2) #:use-module (crates-io))

(define-public crate-plonky2-0.1.0 (c (n "plonky2") (v "0.1.0") (d (list (d (n "ahash") (r "^0.7.6") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.1.0") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.1.0") (k 0)) (d (n "plonky2_util") (r "^0.1.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)))) (h "0zw5bffd1mwnz1q0l8hvrx28g7rn465zlj317nc87anyk0ddak3a") (f (quote (("timing" "std") ("std" "anyhow/std" "rand/std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing"))))))

(define-public crate-plonky2-0.1.1 (c (n "plonky2") (v "0.1.1") (d (list (d (n "ahash") (r "^0.7.6") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.1.0") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.1.0") (k 0)) (d (n "plonky2_util") (r "^0.1.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)))) (h "18fhaw4yyfgv1jz713b5ya2dbb8hs77spx8i0ndp6ybz9w9p5xiw") (f (quote (("timing" "std") ("std" "anyhow/std" "rand/std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing"))))))

(define-public crate-plonky2-0.1.2 (c (n "plonky2") (v "0.1.2") (d (list (d (n "ahash") (r "^0.7.6") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.1.0") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.1.0") (k 0)) (d (n "plonky2_util") (r "^0.1.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)))) (h "0k5li1fqbh1g4l3510hm7z49s1l4lzrlqsqvgf280mn6iihh76fk") (f (quote (("timing" "std") ("std" "anyhow/std" "rand/std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing"))))))

(define-public crate-plonky2-0.1.3 (c (n "plonky2") (v "0.1.3") (d (list (d (n "ahash") (r "^0.7.6") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.4.0") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "hashbrown") (r "^0.12.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.10.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.1.0") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.1.0") (k 0)) (d (n "plonky2_util") (r "^0.1.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)))) (h "1dx2iib77whyyh3c57sr19zm0vi5gksymbsb7irz45n7kw3d78yj") (f (quote (("timing" "std") ("std" "anyhow/std" "rand/std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing"))))))

(define-public crate-plonky2-0.1.4 (c (n "plonky2") (v "0.1.4") (d (list (d (n "ahash") (r "^0.8.3") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.11.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.1.1") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.1.1") (k 0)) (d (n "plonky2_util") (r "^0.1.1") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)))) (h "1mi77hr83a8x4fq7naxqvyisv2axp7m1ccaksc0g1nhzhz3sriri") (f (quote (("timing" "std") ("std" "anyhow/std" "rand/std" "itertools/use_std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing"))))))

(define-public crate-plonky2-0.2.0 (c (n "plonky2") (v "0.2.0") (d (list (d (n "ahash") (r "^0.8.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.11.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.2.0") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (k 0)) (d (n "plonky2_util") (r "^0.2.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)) (d (n "web-time") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "1h8scr5lj7gxbx6dva0cilc3si8fydw61lwwz711884w9fdfnpdj") (f (quote (("std" "anyhow/std" "rand/std" "itertools/use_std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing")))) (s 2) (e (quote (("timing" "std" "dep:web-time"))))))

(define-public crate-plonky2-0.2.1 (c (n "plonky2") (v "0.2.1") (d (list (d (n "ahash") (r "^0.8.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.11.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.2.1") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (k 0)) (d (n "plonky2_util") (r "^0.2.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)) (d (n "web-time") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "097jiv4lyai0mrghx2q7wqnsn245p9yia89z3s72mmiw57x7sk6h") (f (quote (("std" "anyhow/std" "rand/std" "itertools/use_std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing")))) (s 2) (e (quote (("timing" "std" "dep:web-time"))))))

(define-public crate-plonky2-0.2.2 (c (n "plonky2") (v "0.2.2") (d (list (d (n "ahash") (r "^0.8.7") (f (quote ("compile-time-rng"))) (k 0)) (d (n "anyhow") (r "^1.0.40") (k 0)) (d (n "criterion") (r "^0.5.1") (k 2)) (d (n "env_logger") (r "^0.9.0") (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (t "cfg(all(target_arch = \"wasm32\", target_os = \"unknown\"))") (k 0)) (d (n "hashbrown") (r "^0.14.3") (f (quote ("ahash" "serde"))) (k 0)) (d (n "itertools") (r "^0.11.0") (k 0)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 2)) (d (n "keccak-hash") (r "^0.8.0") (k 0)) (d (n "log") (r "^0.4.14") (k 0)) (d (n "num") (r "^0.4") (f (quote ("rand"))) (k 0)) (d (n "num_cpus") (r "^1.14.0") (k 2)) (d (n "plonky2_field") (r "^0.2.2") (k 0)) (d (n "plonky2_maybe_rayon") (r "^0.2.0") (k 0)) (d (n "plonky2_util") (r "^0.2.0") (k 0)) (d (n "rand") (r "^0.8.4") (k 0)) (d (n "rand") (r "^0.8.4") (f (quote ("getrandom"))) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (k 0)) (d (n "serde_cbor") (r "^0.11.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (k 0)) (d (n "structopt") (r "^0.3.26") (k 2)) (d (n "tynm") (r "^0.1.6") (k 2)) (d (n "unroll") (r "^0.1.5") (k 0)) (d (n "web-time") (r "^1.0.0") (o #t) (d #t) (k 0)))) (h "03vdhiipp1qc9qpa4wvjgvvapg0ziisfskkamzgfp6lq1c4npwl5") (f (quote (("std" "anyhow/std" "rand/std" "itertools/use_std") ("parallel" "hashbrown/rayon" "plonky2_maybe_rayon/parallel") ("gate_testing") ("default" "gate_testing" "parallel" "rand_chacha" "std" "timing")))) (s 2) (e (quote (("timing" "std" "dep:web-time"))))))

