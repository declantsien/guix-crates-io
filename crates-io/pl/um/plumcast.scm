(define-module (crates-io pl um plumcast) #:use-module (crates-io))

(define-public crate-plumcast-0.0.1 (c (n "plumcast") (v "0.0.1") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.0") (d #t) (k 0)) (d (n "plumtree") (r "^0.0") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "0frqbpzgigyhm93isw3315i998xk4w4v5isz7ql1b6bf50zik6mm")))

(define-public crate-plumcast-0.0.2 (c (n "plumcast") (v "0.0.2") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.0") (d #t) (k 0)) (d (n "plumtree") (r "^0.0") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "0cgnw0v1bc7afphc50zqbipdhrd3g3gg57x3nj9a12m034qlcbmw")))

(define-public crate-plumcast-0.0.3 (c (n "plumcast") (v "0.0.3") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.0") (d #t) (k 0)) (d (n "plumtree") (r "^0.0") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "1fwp4laimyz8h04fw7h1c8hg0k3bzwiffny1yi4xqw6bbk09h3fj")))

(define-public crate-plumcast-0.1.0 (c (n "plumcast") (v "0.1.0") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.1") (d #t) (k 0)) (d (n "plumtree") (r "^0.1") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.2") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "0ryc9ffr819ks8h6176w1n6p3dkhfaj0s8vj1fvn9rvkvj0xi9kr")))

(define-public crate-plumcast-0.1.1 (c (n "plumcast") (v "0.1.1") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_global") (r "^0.1") (d #t) (k 2)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.1") (d #t) (k 0)) (d (n "plumtree") (r "^0.1") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "1f34h0p1409kcy7c0s1a7ggjsjyfgpz55bmi46sdb9j6ydcvzjjm")))

(define-public crate-plumcast-0.1.2 (c (n "plumcast") (v "0.1.2") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_global") (r "^0.1") (d #t) (k 2)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.1") (d #t) (k 0)) (d (n "plumtree") (r "^0.1") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "13d42vgc6a79l2lxkyps2kp9gwzgxs91zhnav7mna5ksi32zd2ly")))

(define-public crate-plumcast-0.1.3 (c (n "plumcast") (v "0.1.3") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_global") (r "^0.1") (d #t) (k 2)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.1") (d #t) (k 0)) (d (n "plumtree") (r "^0.1") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "1krh7bxsa9h1dm6ml6ilkvanskdjfycrin6wj6if80219zk8sqxh") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-plumcast-0.1.4 (c (n "plumcast") (v "0.1.4") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_global") (r "^0.1") (d #t) (k 2)) (d (n "fibers_rpc") (r "^0.2") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.1") (d #t) (k 0)) (d (n "plumtree") (r "^0.1") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "1hrmrq51yr459jn4vfjrvzgw492s4w1k59j26wwr7q2irggwfd5x") (f (quote (("serialize" "serde" "serde_derive"))))))

(define-public crate-plumcast-0.1.5 (c (n "plumcast") (v "0.1.5") (d (list (d (n "atomic_immut") (r "^0.1") (d #t) (k 0)) (d (n "bytecodec") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "fibers") (r "^0.1") (d #t) (k 0)) (d (n "fibers_global") (r "^0.1") (d #t) (k 2)) (d (n "fibers_rpc") (r "^0.3") (d #t) (k 0)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyparview") (r "^0.1") (d #t) (k 0)) (d (n "plumtree") (r "^0.1") (d #t) (k 0)) (d (n "prometrics") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (o #t) (d #t) (k 0)) (d (n "slog") (r "^2") (d #t) (k 0)) (d (n "sloggers") (r "^0.3") (d #t) (k 2)) (d (n "trackable") (r "^0.2") (d #t) (k 0)))) (h "17dljbjfd21zmb40y25lxry321c9x75z2gy4vmln29rq21xwh4ib") (f (quote (("serialize" "serde" "serde_derive"))))))

