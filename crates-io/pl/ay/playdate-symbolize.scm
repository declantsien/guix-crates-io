(define-module (crates-io pl ay playdate-symbolize) #:use-module (crates-io))

(define-public crate-playdate-symbolize-0.1.0 (c (n "playdate-symbolize") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-stream") (r "^0.3") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("std" "env" "derive" "help" "usage" "color"))) (o #t) (d #t) (k 0)) (d (n "const-str") (r "^0.5") (o #t) (k 0)) (d (n "env_logger") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "sqlx") (r "^0.7") (f (quote ("runtime-tokio" "sqlite" "macros"))) (k 0)) (d (n "symbolic") (r "^12.8") (f (quote ("demangle"))) (d #t) (k 0)) (d (n "tokio") (r "^1.37") (f (quote ("full" "rt-multi-thread"))) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "utils") (r "^0.3") (f (quote ("log"))) (k 0) (p "playdate-build-utils")))) (h "1ppdi6ak590q3lkcw12mfch2g5rni4p9qv76qhiqbl0zc82hfvch") (f (quote (("default" "clap" "env_logger" "const-str"))))))

