(define-module (crates-io pl ay playing-cards) #:use-module (crates-io))

(define-public crate-playing-cards-0.0.1 (c (n "playing-cards") (v "0.0.1") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 1)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sfmt") (r "^0.7.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "1ickda99wd7nxbxbk0ia7vkajryvvks2kwm23lrqwfzp7p5ky756") (f (quote (("default")))) (s 2) (e (quote (("poker" "dep:bincode"))))))

(define-public crate-playing-cards-0.0.2 (c (n "playing-cards") (v "0.0.2") (d (list (d (n "async-std") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 1)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sfmt") (r "^0.7.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "0rz4zcalrnmbk043z5f5diqylmqf9sky8w93i2c24549lrnv7ld5") (f (quote (("default")))) (s 2) (e (quote (("poker" "dep:bincode" "dep:async-std"))))))

(define-public crate-playing-cards-0.0.3 (c (n "playing-cards") (v "0.0.3") (d (list (d (n "async-std") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 1)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sfmt") (r "^0.7.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "1nzidzmvzqc93ndp9kin0fx69p7zvqwy69sfka95yk2l9gq6d0xr") (f (quote (("unstable") ("default")))) (s 2) (e (quote (("poker" "dep:bincode" "dep:async-std"))))))

(define-public crate-playing-cards-0.0.4 (c (n "playing-cards") (v "0.0.4") (d (list (d (n "async-std") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 1)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "sfmt") (r "^0.7.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)))) (h "12ppwkf8an1hvn89i39ipgbwsy6ryc7a9ls4rvff8l4r4r7vp6w9") (f (quote (("unstable") ("default")))) (s 2) (e (quote (("poker" "dep:bincode" "dep:async-std"))))))

(define-public crate-playing-cards-0.1.0 (c (n "playing-cards") (v "0.1.0") (d (list (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (o #t) (d #t) (k 0)))) (h "1fpydb80jwil5qyyrjhzj9cc5cyimyvd0g7plknzq5h2n0xj97bv") (f (quote (("unstable") ("default" "poker")))) (s 2) (e (quote (("poker" "dep:phf" "dep:itertools" "dep:thiserror"))))))

(define-public crate-playing-cards-0.1.1 (c (n "playing-cards") (v "0.1.1") (d (list (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (o #t) (d #t) (k 0)))) (h "0733akznm1nz7h4zdwyca22d7whvaan07zis5k7pxnr7y7jkp54g") (f (quote (("unstable") ("default" "poker")))) (y #t) (s 2) (e (quote (("poker" "dep:phf" "dep:itertools" "dep:thiserror"))))))

(define-public crate-playing-cards-0.1.2 (c (n "playing-cards") (v "0.1.2") (d (list (d (n "getrandom") (r "^0.2.7") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (f (quote ("macros"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_core") (r "^0.6.3") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 2)) (d (n "serde") (r "^1.0.139") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)))) (h "0dkmadvbj2p8hnas0v5lbjpd39zypv3l5l2wx8pj61bi4axgcqlp") (f (quote (("unstable") ("default" "poker")))) (s 2) (e (quote (("poker" "dep:phf" "dep:itertools"))))))

