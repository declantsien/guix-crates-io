(define-module (crates-io pl ia pliantdb-server) #:use-module (crates-io))

(define-public crate-pliantdb-server-0.1.0-dev-2 (c (n "pliantdb-server") (v "0.1.0-dev-2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "pliantdb-core") (r "^0.1.0-dev-2") (f (quote ("networking"))) (d #t) (k 0)) (d (n "pliantdb-core") (r "^0.1.0-dev-2") (f (quote ("test-util" "certificate-generation"))) (d #t) (k 2)) (d (n "pliantdb-jobs") (r "^0.1.0-dev-2") (d #t) (k 0)) (d (n "pliantdb-local") (r "^0.1.0-dev-2") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.14") (o #t) (d #t) (k 0)))) (h "0mwa8vkzp6bq374y0zbd72xz1f30cm3j93ld07bz472yg46g5n9l") (f (quote (("websockets" "pliantdb-core/websockets" "tokio-tungstenite" "bincode") ("trusted-dns" "pliantdb-core/trusted-dns") ("test-util" "pliantdb-core/test-util") ("default") ("cli" "certificate-generation" "structopt") ("certificate-generation" "pliantdb-core/certificate-generation")))) (y #t)))

(define-public crate-pliantdb-server-0.1.0-dev.3 (c (n "pliantdb-server") (v "0.1.0-dev.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "pliantdb-core") (r "^0.1.0-dev.3") (f (quote ("networking"))) (k 0)) (d (n "pliantdb-core") (r "^0.1.0-dev.3") (f (quote ("test-util"))) (k 2)) (d (n "pliantdb-jobs") (r "^0.1.0-dev.3") (d #t) (k 0)) (d (n "pliantdb-local") (r "^0.1.0-dev.3") (f (quote ("internal-apis"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.14") (o #t) (d #t) (k 0)))) (h "1hd2ccfilvc8333sdpd2pg5c0wrmdi6f1aqfq4f76q340q5lxi7s") (f (quote (("websockets" "pliantdb-core/websockets" "tokio-tungstenite" "bincode") ("test-util" "pliantdb-core/test-util") ("pubsub" "pliantdb-core/pubsub" "pliantdb-local/pubsub") ("keyvalue" "pliantdb-core/keyvalue" "pliantdb-local/keyvalue") ("full" "cli" "websockets" "pubsub" "keyvalue") ("default" "full") ("cli" "structopt")))) (y #t)))

(define-public crate-pliantdb-server-0.1.0-dev.4 (c (n "pliantdb-server") (v "0.1.0-dev.4") (d (list (d (n "actionable") (r "^0.1.0-dev.3") (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "fabruic") (r "^0.0.1-dev.2") (f (quote ("dangerous"))) (d #t) (k 0)) (d (n "flume") (r "^0.10") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "pliantdb-core") (r "^0.1.0-dev.4") (f (quote ("networking" "actionable-traits"))) (k 0)) (d (n "pliantdb-core") (r "^0.1.0-dev.4") (f (quote ("test-util"))) (k 2)) (d (n "pliantdb-jobs") (r "^0.1.0-dev.4") (d #t) (k 0)) (d (n "pliantdb-local") (r "^0.1.0-dev.4") (f (quote ("internal-apis"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_cbor") (r "^0.11") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-tungstenite") (r "^0.14") (o #t) (d #t) (k 0)))) (h "1kf0zfm9ldlgcsamn20n68zhwcdaswv61gj11gxmiialjj5a50ap") (f (quote (("websockets" "pliantdb-core/websockets" "tokio-tungstenite" "bincode") ("test-util" "pliantdb-core/test-util") ("pubsub" "pliantdb-core/pubsub" "pliantdb-local/pubsub") ("keyvalue" "pliantdb-core/keyvalue" "pliantdb-local/keyvalue") ("full" "cli" "websockets" "pubsub" "keyvalue") ("default" "full") ("cli" "structopt")))) (y #t)))

