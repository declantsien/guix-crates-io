(define-module (crates-io pl mi plmidi) #:use-module (crates-io))

(define-public crate-plmidi-0.9.0 (c (n "plmidi") (v "0.9.0") (d (list (d (n "clap") (r "^3.0.0-beta.4") (d #t) (k 0)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.12.0") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (f (quote ("stderr"))) (k 0)))) (h "03yw39mf9a3gdmn2q9xs6rfbpv8lm0hwcpv4pj98wp2rrmz5z9vx") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.9.3 (c (n "plmidi") (v "0.9.3") (d (list (d (n "clap") (r "^3.0.0-beta.5") (d #t) (k 0)) (d (n "crossterm") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.13.2") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.13.0") (f (quote ("stderr"))) (k 0)))) (h "0wkc9xdljk4wnbfsm7p26grq90z5d2rljyrkw43hjcaxgbshdzh9") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.9.4 (c (n "plmidi") (v "0.9.4") (d (list (d (n "clap") (r "^3.0.0-rc.7") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.13.2") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.16.0") (f (quote ("stderr"))) (k 0)))) (h "10sv2p0yy7vmgywjk8lc1lpd4i39xl76g2mvwy3id19iag6xrrbr") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.9.5 (c (n "plmidi") (v "0.9.5") (d (list (d (n "clap") (r "^3.0.0") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.22.1") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.13.2") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^1.16.0") (f (quote ("stderr"))) (k 0)))) (h "08mhl2jcpc0zc0xks84glj1qf7l9iwswir53r5sxg8f2s99cb596") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.9.6 (c (n "plmidi") (v "0.9.6") (d (list (d (n "clap") (r "^3.1.5") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.13.2") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "0blnnjq39hkrknc28whyq3l3xgkxqyv96a7bs48dsiylipd730kp") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.9.7 (c (n "plmidi") (v "0.9.7") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.14.0") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "1c9r1a5cs8jpr78dhphcwz7ifycwzjpf0y99wc9z721by3qdx51r") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.9.8 (c (n "plmidi") (v "0.9.8") (d (list (d (n "clap") (r "^3.1.8") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.1") (d #t) (k 0)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "midir") (r "^0.7.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.15.1") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "0lj868rbdp5npr74g9l31ypxpym121gs614jjqw5b3f8z0zc4jza") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.10.0 (c (n "plmidi") (v "0.10.0") (d (list (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.15.2") (f (quote ("hybrid-sleep"))) (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "0hl9jg49qllsdxpyn4ygmykv5rglvm5n50wkac7k1m22yadgjidf") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.11.2 (c (n "plmidi") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.15.2") (f (quote ("hybrid-sleep"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "13n3n6pcn3mfcmqgbr8nmaqs9i56kxzg52czs9490j34373jjpln") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.11.3 (c (n "plmidi") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.15.2") (f (quote ("hybrid-sleep"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "1kg61rg150s1w4a4rbn56hmvgims896w702b1xpfpbw78ckck84k") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.11.4 (c (n "plmidi") (v "0.11.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "midly") (r "^0.5.2") (d #t) (k 0)) (d (n "nodi") (r "^0.15.2") (f (quote ("hybrid-sleep"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr"))) (k 0)))) (h "11aczl5n3a6gy4629j29djdmg3zl69s3813j525xp008vnvxqkv9") (f (quote (("winrt" "nodi/winrt") ("jack" "nodi/jack") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot") ("default" "nodi/midir"))))))

(define-public crate-plmidi-0.12.0 (c (n "plmidi") (v "0.12.0") (d (list (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "nodi") (r "^0.18.1") (f (quote ("hybrid-sleep" "midir"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr" "colored"))) (k 0)))) (h "0s7f6nx6h8as63iccc4paavw2dq08yjkf4ylxxjd1hv6rpc8cwa9") (f (quote (("winrt" "nodi/midir-winrt") ("jack" "nodi/midir-jack") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot") ("default"))))))

(define-public crate-plmidi-0.13.1 (c (n "plmidi") (v "0.13.1") (d (list (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "midir") (r "^0.8.0") (d #t) (k 0)) (d (n "nodi") (r "^0.19.0") (f (quote ("hybrid-sleep" "midir"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr" "colored"))) (k 0)) (d (n "wild") (r "^2.0.4") (d #t) (k 0)))) (h "1z24r167gdkmilpprxgfxdx924wp0vfar7zwwyjwdps27b7zyj67") (f (quote (("winrt" "nodi/midir-winrt") ("jack" "nodi/midir-jack") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot") ("default"))))))

(define-public crate-plmidi-0.14.0 (c (n "plmidi") (v "0.14.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nodi") (r "^0.19.1") (f (quote ("hybrid-sleep"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr" "colored"))) (k 0)) (d (n "wild") (r "^2.0.4") (d #t) (k 0)))) (h "1ldpxabgz38q7yqiwvfflp09qz2klj2pfzh0wqjwbj3sjv6vhad0") (f (quote (("system-winrt" "system" "nodi/midir-winrt") ("system-jack" "system" "nodi/midir-jack") ("system" "nodi/midir") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot" "clap/env") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot" "clap/env") ("default" "fluid-bundled"))))))

(define-public crate-plmidi-0.14.2 (c (n "plmidi") (v "0.14.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "=3.1.18") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 0)) (d (n "cpal") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "crossterm") (r "^0.23.2") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "fluidlite") (r "^0.2.1") (f (quote ("static"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("executor"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nodi") (r "^0.19.2") (f (quote ("hybrid-sleep"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "simple_logger") (r "^2.1.0") (f (quote ("stderr" "colored"))) (k 0)) (d (n "wild") (r "^2.0.4") (d #t) (k 0)))) (h "07pwam413iv1hxh2x61zgrmhzb3jfvw137rcy7bqhk6g4gw18xi1") (f (quote (("system-winrt" "system" "nodi/midir-winrt") ("system-jack" "system" "nodi/midir-jack") ("system" "nodi/midir") ("fluid-bundled" "fluidlite/builtin" "cpal" "parking_lot" "clap/env") ("fluid" "fluidlite/pkg-config" "cpal" "parking_lot" "clap/env") ("default" "fluid-bundled"))))))

