(define-module (crates-io ry ot ryot_sprites) #:use-module (crates-io))

(define-public crate-ryot_sprites-0.2.2 (c (n "ryot_sprites") (v "0.2.2") (d (list (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "bevy_app") (r "^0.13") (d #t) (k 0)) (d (n "bevy_asset") (r "^0.13") (d #t) (k 0)) (d (n "bevy_asset_loader") (r "^0.20.1") (f (quote ("2d" "standard_dynamic_assets"))) (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.13") (f (quote ("bevy_reflect"))) (d #t) (k 0)) (d (n "bevy_hierarchy") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (f (quote ("bevy"))) (d #t) (k 0)) (d (n "bevy_render") (r "^0.13") (d #t) (k 0)) (d (n "bevy_sprite") (r "^0.13") (d #t) (k 0)) (d (n "bevy_stroked_text") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bevy_time") (r "^0.13") (d #t) (k 0)) (d (n "bevy_transform") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "ryot_core") (r "^0.2") (d #t) (k 0)) (d (n "ryot_tiled") (r "^0.2") (d #t) (k 0)) (d (n "ryot_utils") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-test") (r "^0.2.3") (d #t) (k 2)))) (h "0663as0s3sag0gj4wdxzdcf7qi5301jpbcmixsb21kv9fs92c0id") (s 2) (e (quote (("debug" "dep:bevy_hierarchy" "dep:bevy_stroked_text" "dep:bevy_transform"))))))

