(define-module (crates-io ry ot ryot_internal) #:use-module (crates-io))

(define-public crate-ryot_internal-0.2.2 (c (n "ryot_internal") (v "0.2.2") (d (list (d (n "ryot_assets") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ryot_core") (r "^0.2") (d #t) (k 0)) (d (n "ryot_pathfinder") (r "^0.2.0") (f (quote ("ryot_tiled"))) (o #t) (d #t) (k 0)) (d (n "ryot_ray_casting") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ryot_sprites") (r "^0.2") (d #t) (k 0)) (d (n "ryot_tibia") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ryot_tiled") (r "^0.2") (d #t) (k 0)) (d (n "ryot_utils") (r "^0.2") (d #t) (k 0)))) (h "10k1iwlhjw4d5xxnnadp0yyvbgaxb279qcdpy47mrf5hwib3xjsv") (f (quote (("ray_cast" "ryot_ray_casting") ("lmdb" "ryot_tiled/lmdb") ("egui" "ryot_tiled/egui") ("debug" "ryot_sprites/debug" "ryot_tiled/debug") ("compression" "ryot_utils/compression")))) (s 2) (e (quote (("ryot_tibia" "dep:ryot_tibia" "ryot_assets/ryot_tibia") ("bevy" "ryot_assets" "ryot_core/bevy" "ryot_utils/bevy" "ryot_tiled/bevy" "ryot_tibia?/bevy"))))))

