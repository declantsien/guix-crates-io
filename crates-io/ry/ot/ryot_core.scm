(define-module (crates-io ry ot ryot_core) #:use-module (crates-io))

(define-public crate-ryot_core-0.2.2 (c (n "ryot_core") (v "0.2.2") (d (list (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "bevy_asset") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_asset_loader") (r "^0.20.1") (f (quote ("2d" "standard_dynamic_assets"))) (o #t) (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.13") (f (quote ("bevy_reflect"))) (o #t) (d #t) (k 0)) (d (n "bevy_math") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (f (quote ("bevy"))) (o #t) (d #t) (k 0)) (d (n "bevy_render") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_sprite") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-test") (r "^0.2.3") (d #t) (k 2)))) (h "0c2gr2xma1x1gljp538p1mdmg73j6ihp0vfgmckycblz167lskf8") (f (quote (("default" "bevy")))) (s 2) (e (quote (("bevy" "dep:bevy_asset" "dep:bevy_ecs" "dep:bevy_math" "dep:bevy_reflect" "dep:bevy_render" "dep:bevy_sprite" "dep:bevy_utils" "dep:bevy_asset_loader"))))))

(define-public crate-ryot_core-0.3.0-alpha.1 (c (n "ryot_core") (v "0.3.0-alpha.1") (d (list (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "bevy_asset") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_asset_loader") (r "^0.20.1") (f (quote ("2d" "standard_dynamic_assets"))) (o #t) (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.13") (f (quote ("bevy_reflect"))) (o #t) (d #t) (k 0)) (d (n "bevy_math") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (f (quote ("bevy"))) (o #t) (d #t) (k 0)) (d (n "bevy_render") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_sprite") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-test") (r "^0.2.3") (d #t) (k 2)))) (h "1f552l8fv5qb9k3f0cf91yj0zq36bh7lrc5k2d5f6640x6095jcq") (f (quote (("default" "bevy")))) (s 2) (e (quote (("bevy" "dep:bevy_asset" "dep:bevy_ecs" "dep:bevy_math" "dep:bevy_reflect" "dep:bevy_render" "dep:bevy_sprite" "dep:bevy_utils" "dep:bevy_asset_loader"))))))

(define-public crate-ryot_core-0.2.3 (c (n "ryot_core") (v "0.2.3") (d (list (d (n "async-std") (r "^1.12.0") (d #t) (k 0)) (d (n "bevy_asset") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_asset_loader") (r "^0.20.1") (f (quote ("2d" "standard_dynamic_assets"))) (o #t) (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.13") (f (quote ("bevy_reflect"))) (o #t) (d #t) (k 0)) (d (n "bevy_math") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_reflect") (r "^0.13") (f (quote ("bevy"))) (o #t) (d #t) (k 0)) (d (n "bevy_render") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_sprite") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bevy_utils") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "glam") (r "^0.25") (f (quote ("serde"))) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "strum") (r "^0.26") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time-test") (r "^0.2.3") (d #t) (k 2)))) (h "0h6aj2wjvryjqbwr58f6b2059mw0pylviynnbbwh0knca54xwb5p") (f (quote (("default" "bevy")))) (s 2) (e (quote (("bevy" "dep:bevy_asset" "dep:bevy_ecs" "dep:bevy_math" "dep:bevy_reflect" "dep:bevy_render" "dep:bevy_sprite" "dep:bevy_utils" "dep:bevy_asset_loader"))))))

