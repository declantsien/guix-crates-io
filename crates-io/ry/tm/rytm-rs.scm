(define-module (crates-io ry tm rytm-rs) #:use-module (crates-io))

(define-public crate-rytm-rs-0.1.0 (c (n "rytm-rs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitstream-io") (r "^2.2.0") (d #t) (k 0)) (d (n "clearscreen") (r "^2") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "embed-doc-image") (r "^0.1.4") (d #t) (k 0)) (d (n "midir") (r "^0.9") (d #t) (k 2)) (d (n "rytm-rs-macro") (r "^0.1") (d #t) (k 0)) (d (n "rytm-sys") (r "^0.1") (d #t) (k 0)) (d (n "rytm-sys") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "037hnmgh0ll7rz66z6zdpdvv2w98nviqpm24b54x2r3ndh405df3")))

(define-public crate-rytm-rs-0.1.1 (c (n "rytm-rs") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "bitstream-io") (r "^2.2.0") (d #t) (k 0)) (d (n "clearscreen") (r "^2") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "embed-doc-image") (r "^0.1.4") (d #t) (k 0)) (d (n "midir") (r "^0.9") (d #t) (k 2)) (d (n "rytm-rs-macro") (r "^0.1") (d #t) (k 0)) (d (n "rytm-sys") (r "^0.1") (d #t) (k 0)) (d (n "rytm-sys") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-big-array") (r "^0.5.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)))) (h "104wnlf5y2hdyzrnc4kydcwgi8vncs76p46c8sx946kivr71d09h")))

