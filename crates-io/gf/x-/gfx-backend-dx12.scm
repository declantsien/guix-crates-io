(define-module (crates-io gf x- gfx-backend-dx12) #:use-module (crates-io))

(define-public crate-gfx-backend-dx12-0.1.0 (c (n "gfx-backend-dx12") (v "0.1.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "11kn0yr1vps0jzmc5vaqcnqbr32sfy6wx43sb9hgv84dk503ydrc") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.1.1 (c (n "gfx-backend-dx12") (v "0.1.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "048cf0rdg9fqxia7455sgvgl5c0ba7lgqphlcjmlf3qindp54pv3") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.1.2 (c (n "gfx-backend-dx12") (v "0.1.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0g3agm2p08n36fyb56bnfgbjy5vyh6grmza5sq7s8i009wdv4nrx") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.1.3 (c (n "gfx-backend-dx12") (v "0.1.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "1d7wjld4k4p7bf4zm2yzik8fyiad6rjxcn10gkla1nrrvlpbpn0m") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.2.0 (c (n "gfx-backend-dx12") (v "0.2.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0n76by3xysxjkr6y5s0j2ic1m71x2jphz08hzjrnvs3vl1yahgnl") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.2.1 (c (n "gfx-backend-dx12") (v "0.2.1") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1hr76igx5zxr811ba6alcfg7fk6raghv36mzn5y23qwf3fr73mys") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.2.2 (c (n "gfx-backend-dx12") (v "0.2.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1kf5ddvnj7swr3j3rl798qiizqs1n1hlp7mf3q110clnwpqiylgp") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.2.3 (c (n "gfx-backend-dx12") (v "0.2.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1l5x5s0xddkwan0mpdmjda9d05g7g97s3ly9k3qncqwa11j4ij0g") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.2.4 (c (n "gfx-backend-dx12") (v "0.2.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "18h6cbdybrdr6i2rad47jmkb6hadv72fa1pbib5753byhhcy2rmc") (f (quote (("default" "winit"))))))

(define-public crate-gfx-backend-dx12-0.3.0 (c (n "gfx-backend-dx12") (v "0.3.0") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.14.0") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1asg9jdwk1pbmc44k9pm7163fy84sxyzkva6d06n2jsd06bav9s2") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.3.2 (c (n "gfx-backend-dx12") (v "0.3.2") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.14.0") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0rabhh3pr65rihghdm2riph3bmvin519i00l86y6j7szly6v36ra") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.3.3 (c (n "gfx-backend-dx12") (v "0.3.3") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.14.0") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1d2pfz45vw2bicvzh0pbiz659xl57ni9w2w7dsq9ygnhirwad3mr") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.3.4 (c (n "gfx-backend-dx12") (v "0.3.4") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.14.0") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1av3dn3fpabg8alywcg303lp9f00vc245liq87lnvw14jkdq5ip5") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.4.0 (c (n "gfx-backend-dx12") (v "0.4.0") (d (list (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.2.2") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0vfc1i9427swagjcqihc375r4nla0fgqzy7naz59h5r3s0mnlvr0") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.4.1 (c (n "gfx-backend-dx12") (v "0.4.1") (d (list (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0hfk8d1naljvzh6n0wnnxzxsmadc08d0j864lamjxc8gh3617sdn") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.3.5 (c (n "gfx-backend-dx12") (v "0.3.5") (d (list (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.1") (d #t) (k 0)) (d (n "derivative") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.14.0") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "17bgsmd8vrznykfhqs585r4gn81q1xbmy78b2r201a9cbfvwb53w") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.4.3 (c (n "gfx-backend-dx12") (v "0.4.3") (d (list (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "d3d12") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0)) (d (n "gfx-hal") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "050pps5x5m5lwmp16d7v7sid9appfh0k5gz2z27dvdv5cfz20mih") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.0 (c (n "gfx-backend-dx12") (v "0.5.0") (d (list (d (n "auxil") (r "^0.3") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.18") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "01fsfwjxgk80l0bwgkd8bqdshrvyjic8kc2i2m879sbrcds2drd0") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.1 (c (n "gfx-backend-dx12") (v "0.5.1") (d (list (d (n "auxil") (r "^0.3") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.18") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1jixh379fwjrh1g2ahm264560gi7s4m96287xavkqfrqpg6vzb3g") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.2 (c (n "gfx-backend-dx12") (v "0.5.2") (d (list (d (n "auxil") (r "^0.3") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.18") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0mg451p00j4x3ijna1bpn0gfhx3xl1sm0ngffv0cmcz380a7qxkk") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.3 (c (n "gfx-backend-dx12") (v "0.5.3") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1z12xqgrcafp14jgwymxm09vp7qisg8xyy1z1nnfyp6m4wlmwdip") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.4 (c (n "gfx-backend-dx12") (v "0.5.4") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1m02gp4yxyc2ln37kf179n6xhpfsw377rxqbv73rqiy59yyldbv9") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.5 (c (n "gfx-backend-dx12") (v "0.5.5") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1vdjvbqrmb46nfqwcf1mfn8jap9nq2bfh48ckmd1dllk2z2ng03h") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.6 (c (n "gfx-backend-dx12") (v "0.5.6") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5.1") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0kv9dg2av99q0jad3b47949vqy4bzwb6vhls46q1vxfn73xriicq") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.7 (c (n "gfx-backend-dx12") (v "0.5.7") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5.2") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0wxgpfi5k9klhv4kfdq91iasp6s4pf61qld7r9xp28rhg6d9f6kf") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.8 (c (n "gfx-backend-dx12") (v "0.5.8") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5.3") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1mqqj9hlib018x4k4wc9rkv8j6s3h8j4psvggnn257skjif8n885") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.9 (c (n "gfx-backend-dx12") (v "0.5.9") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5.3") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "11na2ajp9ijfmv98m2rch83fsq6fhhqi4i231zl06w1sgxi0dmfg") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.5.10 (c (n "gfx-backend-dx12") (v "0.5.10") (d (list (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.5.3") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1r2jmspzg88rd2nqmr43dpxscsp8fqz4q0i8273h8zlfsjfwwnar") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.0 (c (n "gfx-backend-dx12") (v "0.6.0") (d (list (d (n "auxil") (r "^0.5") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1647bj9i88xpysiazh1zydz6q662ch2hjgxsaa7ak8saj95sjpl1") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.1 (c (n "gfx-backend-dx12") (v "0.6.1") (d (list (d (n "auxil") (r "^0.5") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "170mj9sx966115nc8wzlvriw085zrs45whjmxf8d1vnz20pm7nmc") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.2 (c (n "gfx-backend-dx12") (v "0.6.2") (d (list (d (n "auxil") (r "^0.5") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "02qblf9970pjsn3fkakpv7c78wkvh66biqclpxx15g48mq1az4n3") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.3 (c (n "gfx-backend-dx12") (v "0.6.3") (d (list (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "15ynlvjqcsxls4n9cwbbb2jq97gwgw499bhv30zhfh0mk96ikz0b") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.4 (c (n "gfx-backend-dx12") (v "0.6.4") (d (list (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0fmwvm9w5aaqy7bklmrqza2yf8yq07xv23f8xiqp5qkijfd5zrnm") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.5 (c (n "gfx-backend-dx12") (v "0.6.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "18khhfrza9w42vkpvyd58d6mxrpf1vd43giyn676wcz567z9yd34") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.6 (c (n "gfx-backend-dx12") (v "0.6.6") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0ffnf28lp5ja8y6qwicki51ajcbfn9mbl0kc7ywbinh9qa5k6wri") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.7 (c (n "gfx-backend-dx12") (v "0.6.7") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0jp9srz67k56vmng740hqx87xdd2d9czjpicrxcx9h688ar2v8wv") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.8 (c (n "gfx-backend-dx12") (v "0.6.8") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1fik9wbg1rnngy9jqjx8djjrz8v786wnw6ggb6mczd4b9wcgnr4h") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.9 (c (n "gfx-backend-dx12") (v "0.6.9") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1024xwxl4l25dxbw8pd6256c2xnwdxvlf4qzlikcq840y38fkigz") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.10 (c (n "gfx-backend-dx12") (v "0.6.10") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1jilwjvh4s6wyhw7w0fqyqjv3cyc4c1vrgrbq75a4y57hcr6hp33") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.11 (c (n "gfx-backend-dx12") (v "0.6.11") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.7") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1nhxyzavq96fp0i5pn346cijimxlfzn4ikays9g7dy1yf2h0i2h1") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.12 (c (n "gfx-backend-dx12") (v "0.6.12") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.7") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1c2h238025yk1jzzylagb3ga3fv9szaqfavanqi9gi5skqrcd2xz") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.6.13 (c (n "gfx-backend-dx12") (v "0.6.13") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.7") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1xqsyxqf1k5rxz5r1nwn3a51a989ky4xsdj7c01npmr4xpg18l1p") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.7.0 (c (n "gfx-backend-dx12") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.8") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.7") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_5" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1jbbppf5ylfyn7jyx235fw1wflyxrkslzxxq4wmjqzk4nyi6pp1n") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.7.1 (c (n "gfx-backend-dx12") (v "0.7.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.8") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.7") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.3") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "thunderdome") (r "^0.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_5" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "17smqq9m9zwkmn9kqc67zgw1l21jvk2r99vm8vxxmx55l8bdfcjh") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.8.0 (c (n "gfx-backend-dx12") (v "0.8.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.9") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "hal") (r "^0.8") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.4") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "thunderdome") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_5" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1qq06yayfjd9r443ljnhhkhvqvd0z4lhv61k9sx9p0x51n5p6drr") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.9.0 (c (n "gfx-backend-dx12") (v "0.9.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.10") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "gfx-renderdoc") (r "^0.1.0") (d #t) (k 0)) (d (n "hal") (r "^0.9") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.4") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "thunderdome") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_5" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "1klhh2q81lahwnbgf4d0gp9wd1m2s7sw10zb46d9x9iaijfrxw31") (f (quote (("default"))))))

(define-public crate-gfx-backend-dx12-0.9.1 (c (n "gfx-backend-dx12") (v "0.9.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.10") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bit-set") (r "^0.5") (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "gfx-renderdoc") (r "^0.1.0") (d #t) (k 0)) (d (n "hal") (r "^0.9") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "native") (r "^0.4") (f (quote ("libloading"))) (d #t) (k 0) (p "d3d12")) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("hlsl"))) (d #t) (k 0)) (d (n "thunderdome") (r "^0.4") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("basetsd" "d3d12" "d3d12sdklayers" "d3d12shader" "d3dcommon" "d3dcompiler" "dxgi1_2" "dxgi1_3" "dxgi1_4" "dxgi1_5" "dxgi1_6" "dxgidebug" "dxgiformat" "dxgitype" "handleapi" "minwindef" "synchapi" "unknwnbase" "winbase" "windef" "winerror" "winnt" "winuser"))) (d #t) (k 0)))) (h "0ak8wygg7n2gdd2ia8vixcrswmiq0wq9ma42j4w4sg2ayscn6l11") (f (quote (("default"))))))

