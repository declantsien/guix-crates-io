(define-module (crates-io gf x- gfx-backend-vulkan) #:use-module (crates-io))

(define-public crate-gfx-backend-vulkan-0.1.0 (c (n "gfx-backend-vulkan") (v "0.1.0") (d (list (d (n "ash") (r "^0.24.4") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "glsl-to-spirv") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "13vr7k9w0jp5y28blcs0gpy28c7idjdjp1rdigkagvnxv67n2b4q") (f (quote (("use-rtld-next" "shared_library") ("default" "winit"))))))

(define-public crate-gfx-backend-vulkan-0.2.0 (c (n "gfx-backend-vulkan") (v "0.2.0") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1sp7wks3qmayhq55p46p35xmanrcfgyfwickavrh2bl2pc8x3bj0") (f (quote (("use-rtld-next" "shared_library") ("default" "winit"))))))

(define-public crate-gfx-backend-vulkan-0.2.1 (c (n "gfx-backend-vulkan") (v "0.2.1") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0s3kzs2kr2xwgxnfl3gy43sff4nj9al1niwnbzkr7p5087fpqzp9") (f (quote (("use-rtld-next" "shared_library") ("default" "winit"))))))

(define-public crate-gfx-backend-vulkan-0.2.2 (c (n "gfx-backend-vulkan") (v "0.2.2") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0mpykrhzcjxlydsjvxbw6609zls8srlkybsypbrxzpf7cyfb4cks") (f (quote (("use-rtld-next" "shared_library") ("default" "winit"))))))

(define-public crate-gfx-backend-vulkan-0.2.3 (c (n "gfx-backend-vulkan") (v "0.2.3") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1qd6lrsvzf54mlajfada98dfchhiipqq98acgjhkly7yi5w99hxk") (f (quote (("use-rtld-next" "shared_library") ("default" "winit"))))))

(define-public crate-gfx-backend-vulkan-0.3.0 (c (n "gfx-backend-vulkan") (v "0.3.0") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1drzm6m9wdq2ac5q74vf9wh96mkgk3f48y3pd2m9haw0r5sy4zh5") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.3.2 (c (n "gfx-backend-vulkan") (v "0.3.2") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1wz0xyhild8ydmx6b4fxi4d5irrah6i8im65wr9kr15wmvr9d3ha") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.3.3 (c (n "gfx-backend-vulkan") (v "0.3.3") (d (list (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "derivative") (r "^1.0") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.3.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0m4cgyivmrsqjlxvgkpcm2n4k6y809bghxr0d29nlsihwjvg1b2z") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.4.0 (c (n "gfx-backend-vulkan") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "01wjlnpafz9g9dl389kqz2bvrzw5s0lim3if2s59cy3asvnqylv2") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.4.1 (c (n "gfx-backend-vulkan") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1zfhmvbcbf05f887dvh47p2am5c93r4h45kphagknkq2yldh70i8") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.4.2 (c (n "gfx-backend-vulkan") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "05nrcqj2jil8fm4fbb4bhy8fkvg5g4xavasx7lcl6if2dvj9v6pd") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.0 (c (n "gfx-backend-vulkan") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1cml3v4wfq4s1d483jh0s8msfmzvrgg8dnhnxgavsyr0mq6m5qib") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.1 (c (n "gfx-backend-vulkan") (v "0.5.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0paj578kkdam49yhv5nz5nal60f01rnxxxpsbybbgzslmlay5c0j") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.2 (c (n "gfx-backend-vulkan") (v "0.5.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0wqncdpj1l7j7vmlbcjy1jczlzqcyz8j5fn5aaxg3n6qkghdxlgb") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.4.3 (c (n "gfx-backend-vulkan") (v "0.4.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.29.0") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.8") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1d161calh4nrxnrxmd3qivxyi7n801gqxkfs0z9k85qxjh0xkf7i") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.3 (c (n "gfx-backend-vulkan") (v "0.5.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0z62hb3dzd4jzwfdjq0mqq8akwm1vyfifppda8p9gjz926msck9f") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.4 (c (n "gfx-backend-vulkan") (v "0.5.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0rjl5bsnh7kb08vdm3a9cj68mhnqq9qi3990rnl650ai85jhgla1") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.5 (c (n "gfx-backend-vulkan") (v "0.5.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0nb92sdqy63pcygca2q2gdxb98xidhyjavsv2l3zwbbvz06xg5i1") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.6 (c (n "gfx-backend-vulkan") (v "0.5.6") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1nikmcl8irylgmsradd2jyk4a09sc2141mxc54ys47w0mvz3dzs5") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.7 (c (n "gfx-backend-vulkan") (v "0.5.7") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5.1") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0gw6ky43722z7l8b5w87jczjkxrk501r83djdmv643bmgdr18ijs") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.8 (c (n "gfx-backend-vulkan") (v "0.5.8") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.30") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5.2") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0gn53cmssh56r8i1lhk7c308q1yq3zwx7s81x0spnn4p4l691bq4") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.9 (c (n "gfx-backend-vulkan") (v "0.5.9") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5.3") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "12qhxxqscfb3h5f24fln6gbh9k8paykn4m03qzz0psjv7ssqnbjz") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.10 (c (n "gfx-backend-vulkan") (v "0.5.10") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5.3") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0slmrw3x8va184jrzzpqfska6ivhkq595hripglf7gha8h657aw4") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.5.11 (c (n "gfx-backend-vulkan") (v "0.5.11") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.5.3") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0ni7k1pr609b099pyg4sz4njza8636f60f5adb1x4dn2rwcwkjdf") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.6.0 (c (n "gfx-backend-vulkan") (v "0.6.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1rq5ad3y55mdqrifvm0xl6ncw7liycwbzz8mjs79qvqacq99va89") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.6.1 (c (n "gfx-backend-vulkan") (v "0.6.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1imdzh1frfpvmp0gp6imari9rqbanwmix03msl91jbm8011dljx8") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.6.2 (c (n "gfx-backend-vulkan") (v "0.6.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1xk7q3mzixbp8r4swj0zl9ccbbjrmqc1wxzgl5s3f2fxnhi9xmyk") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.6.3 (c (n "gfx-backend-vulkan") (v "0.6.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1xq6w347cwk8g6m1wb0dyc158xk0clsw1slvi7iidlk0awdd3akh") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.6.4 (c (n "gfx-backend-vulkan") (v "0.6.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "1jp7cpjsrpiphapv7rq8hgmp7g92gkbsjx954ps64cwm32vwbmi6") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.6.5 (c (n "gfx-backend-vulkan") (v "0.6.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.15") (f (quote ("xlib"))) (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)) (d (n "xcb") (r "^0.9") (o #t) (d #t) (t "cfg(all(unix, not(target_os = \"macos\"), not(target_os = \"ios\"), not(target_os = \"android\")))") (k 0)))) (h "0ibccsqlr0dxgdh99lmywpnwbq1argrhlj5cs6vhjyh6c77n6fis") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.7.0 (c (n "gfx-backend-vulkan") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.31") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.7") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "naga") (r "^0.3") (f (quote ("spv-out"))) (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "shared_library") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1ncvxxa5c1k2xgg3gaabdq35hj1nf1zca724kfb0y7n9lnqqigns") (f (quote (("use-rtld-next" "shared_library") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.8.0 (c (n "gfx-backend-vulkan") (v "0.8.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.32") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "hal") (r "^0.8") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "naga") (r "^0.4") (f (quote ("spv-out"))) (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "153d2jqk0p31q0x3zwyah3kafdqfhzj79fwvwinn9v22vdpzqlx3") (f (quote (("use-rtld-next" "libc") ("default"))))))

(define-public crate-gfx-backend-vulkan-0.9.0 (c (n "gfx-backend-vulkan") (v "0.9.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "ash") (r "^0.32") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "gfx-renderdoc") (r "^0.1.0") (d #t) (k 0)) (d (n "hal") (r "^0.9") (d #t) (k 0) (p "gfx-hal")) (d (n "inplace_it") (r "^0.3.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "naga") (r "^0.5") (f (quote ("spv-out"))) (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("libloaderapi" "windef" "winuser"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1h75s29r4vkplh9x9in23n0nx21429v6v5jg1rfcdfxcap41x1m9") (f (quote (("use-rtld-next" "libc") ("default"))))))

