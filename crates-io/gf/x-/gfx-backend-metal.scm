(define-module (crates-io gf x- gfx-backend-metal) #:use-module (crates-io))

(define-public crate-gfx-backend-metal-0.1.0 (c (n "gfx-backend-metal") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.13.0") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.0") (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "0zqb7spcfsldhjy9jz082b48bdli89rkddyvpmk7a3r868g03yk8") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.1.1 (c (n "gfx-backend-metal") (v "0.1.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "gfx-hal") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.14.0") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.0") (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.18") (o #t) (d #t) (k 0)))) (h "05sm5md67ipvq98yv23a5psy7d7i9hhyc7w4x02pzshrfs4zm836") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.2.0 (c (n "gfx-backend-metal") (v "0.2.0") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.2") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.14.0") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "033nlzmv8l5bddqchfz65pwcb7s34126sc8642m7ydh8bshd2f9x") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.2.1 (c (n "gfx-backend-metal") (v "0.2.1") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.2") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.15") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0710lfv7fc30j4rdjsm8xqsq78jpml4rzg4p4gv3r6a5d5yb0xwy") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.2.2 (c (n "gfx-backend-metal") (v "0.2.2") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.2") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.15") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.12.1") (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0wkzczirgi2qgds6nrxcg6x81994d44x97jshhmx5v7psh5qvkbs") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.2.3 (c (n "gfx-backend-metal") (v "0.2.3") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.2") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.15") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.15.0") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0pydkb8pzhcn8mxd2fk08v8vs5aqwjn1irga3zwjx3hjccf3anyv") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.2.4 (c (n "gfx-backend-metal") (v "0.2.4") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "copyless") (r "^0.1") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.2") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.15") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.6.3") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.15.0") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.1.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0f3hzryj4f9fspxapnwcdiza3qjjwfywfakaxb7q66w38aglfn92") (f (quote (("default" "winit") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.3.0 (c (n "gfx-backend-metal") (v "0.3.0") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.18") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.3") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.15") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.15") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0cdc90iww2lqdyz1kzai0b4bmn6pzwbz7kmvg7qnk35mvmaiv8fk") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.3.1 (c (n "gfx-backend-metal") (v "0.3.1") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.3") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.16") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.15") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0ncz8by11bybimarw8ybr081s6n51ffnk3n4abm2qyrmvr1bcxiq") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.3.2 (c (n "gfx-backend-metal") (v "0.3.2") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.3.1") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.16") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.15") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "0kd8nmzh2r3f5ihi7d4p1ply93wqawi8100abbdmrjnlvh8r8m0v") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.3.3 (c (n "gfx-backend-metal") (v "0.3.3") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.3.1") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.16") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.1") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.15") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)) (d (n "winit") (r "^0.19") (o #t) (d #t) (k 0)))) (h "1kgq9wly3fib46j2xp883cbfsv8hz7yv8ziifkc97w8hrmyq17cp") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.4.0 (c (n "gfx-backend-metal") (v "0.4.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.17") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "1h5hsz43jrqyzr4knvn4dxd4hi7gfb27hv2dp2amr05s30gwgrcd") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.4.1 (c (n "gfx-backend-metal") (v "0.4.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.17") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0cl6a63fjp65spqn3aff5hin8sw2n8yxn6p5dia870npaqysmf0m") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.4.2 (c (n "gfx-backend-metal") (v "0.4.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.17") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0hnc62l5h655qxsv6mwv80qmpip8iql2als9whw992l7fpp951m3") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.4.3 (c (n "gfx-backend-metal") (v "0.4.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.19") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.17") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.17") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "1kgs7xjhz92kdp09n088g87f6ggck6im76smsax0fnn515000707") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.0 (c (n "gfx-backend-metal") (v "0.5.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.3") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.18") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0gh76cfc7j8jf9c2m34n7m62h2m5aiqvb2m3gr25yvhvbj5g2ikf") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.1 (c (n "gfx-backend-metal") (v "0.5.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.3") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.18") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "1ngfidfj3a5xk05snnc0abixbaynjvhdz8fxmk4azdbmjv12iqfg") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.4.4 (c (n "gfx-backend-metal") (v "0.4.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0fwkiyl672x6qi9y7q7ra6ppy0djk8cyaby7np2z4rdy2zf654mi") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.4.5 (c (n "gfx-backend-metal") (v "0.4.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.1") (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.4") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.16") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0is2p30gvqw22lih69hiri6sazra2iddglwibjxrw4kjk85i7dh5") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.2 (c (n "gfx-backend-metal") (v "0.5.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "1vl7ry0zg3yl2adizqmjr9rpc1r5i5yx81h25km19n2fwyl3qpr0") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.3 (c (n "gfx-backend-metal") (v "0.5.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5.1") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0gyhgp4vpzppnsglgxpxya7w2v59520d1963xvvwz9yql8zbfr3j") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.4 (c (n "gfx-backend-metal") (v "0.5.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.20") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics") (r "^0.19") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5.2") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.18") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "0m42i8pnk59qphqg1ddzv3lcn54a9qd6ycg0qakjbqz9ac71waj1") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.5 (c (n "gfx-backend-metal") (v "0.5.5") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa") (r "^0.22") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5.2") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.19") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "1dp9zkssnhkz62drd1dzdcqjvxy2mp9mzpjj19jk5b2vd3v45zkp") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.6 (c (n "gfx-backend-metal") (v "0.5.6") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5.2") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.2") (d #t) (k 0)))) (h "1rhs2f8aa4mlgy0qd48a3z2ykjkddbn19v2brf26rplln4h4v04j") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.6.0 (c (n "gfx-backend-metal") (v "0.6.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.5") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "108gy82ymwk4gwsrdny47yw90bdgpxdbmkw9g8rvmr8vaxdqqla2") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.6.1 (c (n "gfx-backend-metal") (v "0.6.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.5") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "0d72scsrijlf51kl93kfqqczfj8rqlp3yss85jvl9n3x0fxy9dfk") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.6.2 (c (n "gfx-backend-metal") (v "0.6.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "0rpx7wa6wqrz1sygl3f0738hbp1f2p6q1rn1x8xji2hca7ib3cnn") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.6.3 (c (n "gfx-backend-metal") (v "0.6.3") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.6") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.21") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "1khd7768yipf9f19awd84dfmx2p1a753iggj72nhh41z2y5jg9f9") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.6.4 (c (n "gfx-backend-metal") (v "0.6.4") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.7") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.6") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.22") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "0avzxlslwplkcklrzh2bli9wwxiadz99xm6vhrbx7rqjq5virfk0") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.5.7 (c (n "gfx-backend-metal") (v "0.5.7") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.4") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.5.2") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.20") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.20") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "040bkhw1f94ay8vy9f8vywzbcmq6lsf21dmcfmrbbml0pz4q422y") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.6.5 (c (n "gfx-backend-metal") (v "0.6.5") (d (list (d (n "arrayvec") (r ">=0.5.0, <0.6.0") (d #t) (k 0)) (d (n "auxil") (r ">=0.7.0, <0.8.0") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "block") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "cocoa-foundation") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "copyless") (r ">=0.1.4, <0.2.0") (d #t) (k 0)) (d (n "dispatch") (r ">=0.2.0, <0.3.0") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "hal") (r ">=0.6.0, <0.7.0") (d #t) (k 0) (p "gfx-hal")) (d (n "lazy_static") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "metal") (r ">=0.20.0, <0.21.0") (f (quote ("private"))) (d #t) (k 0)) (d (n "objc") (r ">=0.2.5, <0.3.0") (d #t) (k 0)) (d (n "parking_lot") (r ">=0.11.0, <0.12.0") (d #t) (k 0)) (d (n "range-alloc") (r ">=0.1.0, <0.2.0") (d #t) (k 0)) (d (n "raw-window-handle") (r ">=0.3.0, <0.4.0") (d #t) (k 0)) (d (n "smallvec") (r ">=1.0.0, <2.0.0") (d #t) (k 0)) (d (n "spirv_cross") (r ">=0.22.0, <0.23.0") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r ">=0.3.0, <0.4.0") (d #t) (k 0)))) (h "0cnbqgs8gxxshd6l9wcx799mczpnjn4p3l0i1ngdk5kz43an0g97") (f (quote (("signpost") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.7.0 (c (n "gfx-backend-metal") (v "0.7.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.8") (f (quote ("spirv_cross"))) (d #t) (k 0) (p "gfx-auxil")) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "hal") (r "^0.7") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.21") (f (quote ("private"))) (d #t) (k 0)) (d (n "naga") (r "^0.3") (f (quote ("spv-out" "msl-out"))) (o #t) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("msl"))) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)))) (h "0kpipy7wrazkqccjgfilxmlhkisaybmnjcl9z14yysffdr2lpicd") (f (quote (("signpost") ("naga-parse" "naga/spv-in") ("default") ("auto-capture"))))))

(define-public crate-gfx-backend-metal-0.8.0 (c (n "gfx-backend-metal") (v "0.8.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.8") (f (quote ("spirv_cross"))) (o #t) (d #t) (k 0) (p "gfx-auxil")) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hal") (r "^0.8") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.22") (f (quote ("private"))) (d #t) (k 0)) (d (n "naga") (r "^0.4") (f (quote ("spv-in" "msl-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("msl"))) (o #t) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (o #t) (d #t) (k 0)))) (h "1wrrs3nq82x955d2j3ps8mkgpiiv62vj7y5z9pwvsc20mp9ap875") (f (quote (("signpost") ("pipeline-cache" "tempfile" "serde" "bincode" "naga/serialize" "naga/deserialize" "naga/spv-out") ("default") ("cross" "spirv_cross" "auxil" "naga/spv-out")))) (y #t)))

(define-public crate-gfx-backend-metal-0.8.1 (c (n "gfx-backend-metal") (v "0.8.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.9") (f (quote ("spirv_cross"))) (o #t) (d #t) (k 0) (p "gfx-auxil")) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hal") (r "^0.8") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.22") (f (quote ("private"))) (d #t) (k 0)) (d (n "naga") (r "^0.4") (f (quote ("spv-in" "msl-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("msl"))) (o #t) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (o #t) (d #t) (k 0)))) (h "04dryj806ng71gc2764p4rcna39biqc3zyqwjzg3l1nq8svhka4n") (f (quote (("signpost") ("pipeline-cache" "tempfile" "serde" "bincode" "naga/serialize" "naga/deserialize" "naga/spv-out") ("default") ("cross" "spirv_cross" "auxil" "naga/spv-out"))))))

(define-public crate-gfx-backend-metal-0.8.2 (c (n "gfx-backend-metal") (v "0.8.2") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.9") (f (quote ("spirv_cross"))) (o #t) (d #t) (k 0) (p "gfx-auxil")) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hal") (r "^0.8") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.22") (f (quote ("private"))) (d #t) (k 0)) (d (n "naga") (r "^0.4") (f (quote ("spv-in" "msl-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("msl"))) (o #t) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (o #t) (d #t) (k 0)))) (h "0hgdzcwjibwygjyssc60xpdz45pgw3napgdkmhrn992bajnra21l") (f (quote (("signpost") ("pipeline-cache" "tempfile" "serde" "bincode" "naga/serialize" "naga/deserialize" "naga/spv-out") ("default") ("cross" "spirv_cross" "auxil" "naga/spv-out"))))))

(define-public crate-gfx-backend-metal-0.9.0 (c (n "gfx-backend-metal") (v "0.9.0") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.10") (f (quote ("spirv_cross"))) (o #t) (d #t) (k 0) (p "gfx-auxil")) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1.1") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hal") (r "^0.9") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.23") (f (quote ("private"))) (d #t) (k 0)) (d (n "naga") (r "^0.5") (f (quote ("spv-in" "msl-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("msl"))) (o #t) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (o #t) (d #t) (k 0)))) (h "04y0mkmkll32p7p9jhkwrmkxplkxllbar5pikcm14x72pf8hxhbn") (f (quote (("signpost") ("pipeline-cache" "tempfile" "serde" "bincode" "naga/serialize" "naga/deserialize" "naga/spv-out") ("default") ("cross" "spirv_cross" "auxil" "naga/spv-out"))))))

(define-public crate-gfx-backend-metal-0.9.1 (c (n "gfx-backend-metal") (v "0.9.1") (d (list (d (n "arrayvec") (r "^0.5") (d #t) (k 0)) (d (n "auxil") (r "^0.10") (f (quote ("spirv_cross"))) (o #t) (d #t) (k 0) (p "gfx-auxil")) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "block") (r "^0.1") (d #t) (k 0)) (d (n "cocoa-foundation") (r "^0.1") (d #t) (k 0)) (d (n "copyless") (r "^0.1.4") (d #t) (k 0)) (d (n "core-graphics-types") (r "^0.1.1") (d #t) (k 0)) (d (n "dispatch") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "foreign-types") (r "^0.3") (d #t) (k 0)) (d (n "fxhash") (r "^0.2.1") (d #t) (k 0)) (d (n "hal") (r "^0.9") (d #t) (k 0) (p "gfx-hal")) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metal") (r "^0.23") (f (quote ("private"))) (d #t) (k 0)) (d (n "naga") (r "^0.5") (f (quote ("spv-in" "msl-out"))) (d #t) (k 0)) (d (n "objc") (r "^0.2.5") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "profiling") (r "^1") (k 0)) (d (n "range-alloc") (r "^0.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("serde_derive"))) (o #t) (d #t) (k 0)) (d (n "spirv_cross") (r "^0.23") (f (quote ("msl"))) (o #t) (d #t) (k 0)) (d (n "storage-map") (r "^0.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (o #t) (d #t) (k 0)))) (h "05wmjk63avdbvqvs27pgh1qwafsrm7w56lljmz3992d9w845is0d") (f (quote (("signpost") ("pipeline-cache" "tempfile" "serde" "bincode" "naga/serialize" "naga/deserialize" "naga/spv-out") ("default") ("cross" "spirv_cross" "auxil" "naga/spv-out"))))))

