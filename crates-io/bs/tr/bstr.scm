(define-module (crates-io bs tr bstr) #:use-module (crates-io))

(define-public crate-bstr-0.0.1 (c (n "bstr") (v "0.0.1") (h "168h33xq3z54869h7lmcbsrgia4zlf1zapw8vq725170zak9qa9q")))

(define-public crate-bstr-0.1.0 (c (n "bstr") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1ka83szr84b3xqprs8m75k2l2p635p8b75y0418w3ypzbzd8ahb5") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.1.1 (c (n "bstr") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "12nijsm5p7jk3qlg2yf9ckl47swz6jzr218bclbg6frp0qj6nr77") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.1.2 (c (n "bstr") (v "0.1.2") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0hr11xhhjzgjzgpjpl4fh2xcc34ylx9zdrfs363ra0n50v5070kc") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.1.3 (c (n "bstr") (v "0.1.3") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0dh02yffr88iqlb6fy9kbs1dm8wy0f4byri6j1jh4pglw060jfw5") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.1.4 (c (n "bstr") (v "0.1.4") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0nzi9vqhl56ws8gq39f3aj4qjrr4l3g5lbkkcj8xq1x4cb74wq2r") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.0 (c (n "bstr") (v "0.2.0") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1kc4qqwzq3zw2vf2jbzddz6wsr5v5fax1xn6ykbkvkimg1lvjc2b") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.1 (c (n "bstr") (v "0.2.1") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0prq6yk3da0k5bg2czcgg1i4ynsq1l59xc89ycsv6v7p08p5gh3c") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.2 (c (n "bstr") (v "0.2.2") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0yhbwvpydg0h8xa0gpivb5cxkz5rd2kicvd1a714iflv5wjn41pw") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.3 (c (n "bstr") (v "0.2.3") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1qag8fzy2awgfilhdrjy2ancwq9ljshzrrdjdzmq4bmasy1j1mhk") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.4 (c (n "bstr") (v "0.2.4") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0jvzwp504h3n9as0gyj7w2g7jr8ljc4jly282llxy9ys3ii8h8b9") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.5 (c (n "bstr") (v "0.2.5") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0jzl4piq453riaq083xfcl3la4is89a0501y7qffrhc687kb8lhi") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.6 (c (n "bstr") (v "0.2.6") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0sllnfbigyxy8cagf42dm7gj48wvkgwjr8kir8hyirs0qzqr59p0") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.7 (c (n "bstr") (v "0.2.7") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1plsr948padkqi42m502r67m82n7iyzjmgjx3xn5ck79ny7ggkcl") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.8 (c (n "bstr") (v "0.2.8") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0i82qr3z4vwcdx7gjsjrqy64w1w88i5s7b7ab97hm4mbb1djqv4d") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.9 (c (n "bstr") (v "0.2.9") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0c3hbdi41bw9q8jrnnf5r3xq9373rv6b432p35wzilfr480pbpiy") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.10 (c (n "bstr") (v "0.2.10") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "02wrnhxph0z6jzkp08m7i5257qn6ldmvnxmg0nbzq3d99j0nb2py") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.11 (c (n "bstr") (v "0.2.11") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0j1cki9nmplv99gdwrdlj8z4kf8ncid9b99qpn7xnnha392f2ajh") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.12 (c (n "bstr") (v "0.2.12") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0hazfback6i2k3vhhwyj8h46id3y58zxqh22pz46hj9r1zayd298") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.13 (c (n "bstr") (v "0.2.13") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0cd9gn35hb020r3zccmc2m710wavk2iyqn60j8aqgxqdnzywmb1i") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.14 (c (n "bstr") (v "0.2.14") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^0.8.1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1bwzbln4c0ckf7iwh8cfbgcy72d3vi95iywlm9xszy9kharwcgs7") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.15 (c (n "bstr") (v "0.2.15") (d (list (d (n "lazy_static") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.1.2") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0gca4v6448clsssll3y787jgw542c9mw9phqdi7419g1jfnlf2x4") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/use_std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.16 (c (n "bstr") (v "0.2.16") (d (list (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0y8jy9kcqn1myzxjx7c73rbv4amfw08n936ycqz3glrsc66jqs4h") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-0.2.17 (c (n "bstr") (v "0.2.17") (d (list (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "08rjbhysy6gg27db2h3pnhvr2mlr5vkj797i9625kwg8hgrnjdds") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "memchr/std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode"))))))

(define-public crate-bstr-1.0.0-pre.1 (c (n "bstr") (v "1.0.0-pre.1") (d (list (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1xdifx6i7k563b6r84syamnmwdiigwjrq3jbqd9v9an0bx73d8fc") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "alloc" "memchr/std") ("serde1-nostd" "serde") ("serde1" "std" "serde1-nostd" "serde/std") ("default" "std" "unicode") ("alloc"))))))

(define-public crate-bstr-1.0.0-pre.2 (c (n "bstr") (v "1.0.0-pre.2") (d (list (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1v2mzizd5y6cv7742rb1yx2p7b8ms6w1vjdim1jncqxvsrmknb63") (f (quote (("unicode" "lazy_static" "regex-automata") ("std" "alloc" "memchr/std") ("serde1-std" "std" "serde1-alloc" "serde/std") ("serde1-core" "serde") ("serde1-alloc" "alloc" "serde1-core" "serde/alloc") ("default" "std" "unicode") ("alloc"))))))

(define-public crate-bstr-1.0.0-pre.3 (c (n "bstr") (v "1.0.0-pre.3") (d (list (d (n "lazy_static") (r "^1.2.0") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1q69ysf8p94aqbirvyr89121vqhaxbmh3zaj82wfjn6n5z4zbix2") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:lazy_static" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc"))))))

(define-public crate-bstr-1.0.0 (c (n "bstr") (v "1.0.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1g5z8xfrckd163ph26w351ihf0sswd2g7mipr1acywqrlj9fgbhi") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.0.1 (c (n "bstr") (v "1.0.1") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1pclslal4qsykml6m3n9kaplcv7dwh1mqwmhdrq5ix11y8m8b87w") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.1.0 (c (n "bstr") (v "1.1.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "02vrs6bbw1v2a1kbc2d7vcw3q4k2gs8x6nm6x642jgvv1aqajpml") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.2.0 (c (n "bstr") (v "1.2.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0cp8awr9ypass9zkadainakvv24akj8hjgy6xpyj0i66fa4pgw5p") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.3.0 (c (n "bstr") (v "1.3.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1hdjm0phz8bba7rmh482gdsjz5qvhv154d4p24y2y883nyfb7zaz") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.4.0 (c (n "bstr") (v "1.4.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "02bzi4cgmba496zzalh97wxbdzpg42kijjdc3vgwk3rfrh5jdm63") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.5.0 (c (n "bstr") (v "1.5.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "once_cell") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.1.5") (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1xafaq57fzwa38yjwdzvqlbm8h207sjm585y4kdxjv1znj5ycim2") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:once_cell" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.6.0 (c (n "bstr") (v "1.6.0") (d (list (d (n "memchr") (r "^2.4.0") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.3.0") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "01bvsr3x9n75klbwxym0zf939vzim0plsmy786p0zzzvrj6i9637") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.6.1 (c (n "bstr") (v "1.6.1") (d (list (d (n "memchr") (r "^2.6.1") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.3.0") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "17c9cf96dz2kaq9qhsc2dl9fs4n47sxhm3imlybnigg5fxnc4hl0") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "memchr/alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.6.2 (c (n "bstr") (v "1.6.2") (d (list (d (n "memchr") (r "^2.6.1") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.3.0") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0si6d5zmqmnzv63n3qjb8m5g2ak9hhpzw2jbwrh24wbvj14p6bsc") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "memchr/alloc" "serde?/alloc")))) (r "1.60")))

(define-public crate-bstr-1.7.0 (c (n "bstr") (v "1.7.0") (d (list (d (n "memchr") (r "^2.6.1") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.4.1") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "06gh43qpgdqfsfpykw9y4708y0qclajwc2bbsymkv3yk5pxxg6n7") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "memchr/alloc" "serde?/alloc")))) (r "1.65")))

(define-public crate-bstr-1.8.0 (c (n "bstr") (v "1.8.0") (d (list (d (n "memchr") (r "^2.6.1") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.4.1") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "0313sqdf0a40vhpnrlkf54zhr76rmlyxzhx00sq8822shfl36bsl") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "memchr/alloc" "serde?/alloc")))) (r "1.65")))

(define-public crate-bstr-1.9.0 (c (n "bstr") (v "1.9.0") (d (list (d (n "memchr") (r "^2.7.1") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.4.1") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "1p6hzf3wqwwynv6w4pn17jg21amfafph9kb5sfvf1idlli8h13y4") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "memchr/alloc" "serde?/alloc")))) (r "1.65")))

(define-public crate-bstr-1.9.1 (c (n "bstr") (v "1.9.1") (d (list (d (n "memchr") (r "^2.7.1") (k 0)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "regex-automata") (r "^0.4.1") (f (quote ("dfa-search"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.85") (o #t) (k 0)) (d (n "ucd-parse") (r "^0.1.3") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.2.1") (d #t) (k 2)))) (h "01ipr5rncw3kf4dyc1p2g00njn1df2b0xpviwhb8830iv77wbvq5") (f (quote (("default" "std" "unicode")))) (s 2) (e (quote (("unicode" "dep:regex-automata") ("std" "alloc" "memchr/std" "serde?/std") ("serde" "dep:serde") ("alloc" "memchr/alloc" "serde?/alloc")))) (r "1.65")))

