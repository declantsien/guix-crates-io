(define-module (crates-io bs p- bsp-pathfinding) #:use-module (crates-io))

(define-public crate-bsp-pathfinding-0.1.0 (c (n "bsp-pathfinding") (v "0.1.0") (d (list (d (n "glam") (r "^0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)))) (h "0slkwy93ri5vrhq9d6adyb944pjsq3qpbvjdycirn57y9h7vrc5h") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.1.1 (c (n "bsp-pathfinding") (v "0.1.1") (d (list (d (n "glam") (r "^0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.7.0") (d #t) (k 0)))) (h "0frlh641k7iqfkwrzb9x2cc2hcx06b08v4i39mdbyjhyypvccff6") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.1.2 (c (n "bsp-pathfinding") (v "0.1.2") (d (list (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "0lir27jq4m4ngnl9hzszq5lywrf7hhaqfsi3sgvgd40kbrjby68v") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.1.3 (c (n "bsp-pathfinding") (v "0.1.3") (d (list (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "124ra6a0j272a7fib99bb2hix3vf9gg55kkvdii3vs1xp3736fis") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.1.4 (c (n "bsp-pathfinding") (v "0.1.4") (d (list (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "1d1l8zv2w7qbgg4jgpffp04xgn0mlzdlg2cb43llvcmw76rd8crz") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.1.5 (c (n "bsp-pathfinding") (v "0.1.5") (d (list (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "1vpb59nd2zr9hgr676rhja1yq4ky49fwkw5hfqb8c08iaq74frlb") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.1.6 (c (n "bsp-pathfinding") (v "0.1.6") (d (list (d (n "glam") (r "^0.20.2") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "171s29prhqj83k5w6m6gp9immbqvd7ynndl8vhn0316vbiwhihi4") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.2.0 (c (n "bsp-pathfinding") (v "0.2.0") (d (list (d (n "glam") (r ">=0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "02m6sjcj9arlj57kcjngq8m6a1ssw5j95rb7a1dh0424257qvx1w") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.2.1 (c (n "bsp-pathfinding") (v "0.2.1") (d (list (d (n "glam") (r ">=0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "0br0va2xs5n5zp1jzcy08icdkwcp1cavn6q71jfb9dk3y0gbmb8d") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.3.0 (c (n "bsp-pathfinding") (v "0.3.0") (d (list (d (n "glam") (r ">=0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "0mnj4vzsgfqdwqddrm9j1scn07wpa2h7fjxw22g4m9i2f12bd76k") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.3.1 (c (n "bsp-pathfinding") (v "0.3.1") (d (list (d (n "glam") (r ">=0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "00c793b0p2p33gpicdj1zdm76b3705b1avasddjxkzyr2f09zy28") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

(define-public crate-bsp-pathfinding-0.3.2 (c (n "bsp-pathfinding") (v "0.3.2") (d (list (d (n "glam") (r ">=0.14") (d #t) (k 0)) (d (n "macroquad") (r "^0.3.13") (d #t) (k 2)) (d (n "ordered-float") (r "^2.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rpds") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 2)) (d (n "slotmap") (r "^1.0.6") (d #t) (k 0)) (d (n "smallvec") (r "^1.8.0") (d #t) (k 0)))) (h "1c8y74c8djzd2zr1l9gjzm8i2m62q8b277zass985fhqpkdaq6zb") (f (quote (("serialize" "serde" "glam/serde" "slotmap/serde" "smallvec/serde"))))))

