(define-module (crates-io r3 bl r3bl_rs_utils_core) #:use-module (crates-io))

(define-public crate-r3bl_rs_utils_core-0.7.0 (c (n "r3bl_rs_utils_core") (v "0.7.0") (d (list (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1wcsgzz8d25j69blaxx2m1f4rv4c20c3c9d5hr1d5fqqp43wvgx4")))

(define-public crate-r3bl_rs_utils_core-0.7.1 (c (n "r3bl_rs_utils_core") (v "0.7.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "07xn3qm0f540a2ppzvhyi12cgkbg3ppzkj7h28wnkbxjv7avjv2m")))

(define-public crate-r3bl_rs_utils_core-0.7.2 (c (n "r3bl_rs_utils_core") (v "0.7.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "01xc95nc2bqs4a24f85nracrv1jb513d5aqn0cxmr4y2n3vfm878")))

(define-public crate-r3bl_rs_utils_core-0.7.3 (c (n "r3bl_rs_utils_core") (v "0.7.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0jyknwj5vsvcrvdxbjc6zrjmg9zs21kx4nqpmi7ifkk8mh5kr3q8")))

(define-public crate-r3bl_rs_utils_core-0.7.4 (c (n "r3bl_rs_utils_core") (v "0.7.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1dk7rd4s8fmbbblklr9hm9ihggx5s64zh0lcdrkwygqbkiyjlbby")))

(define-public crate-r3bl_rs_utils_core-0.7.5 (c (n "r3bl_rs_utils_core") (v "0.7.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "16kaqy0rhv59szayf8js9dl744fbwis9fpvg3dm9im92z24nn5d0")))

(define-public crate-r3bl_rs_utils_core-0.7.6 (c (n "r3bl_rs_utils_core") (v "0.7.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1r09d5kh538nmvzia6ihr1sjfc7laflzhph87f8rrf97m5sn831s")))

(define-public crate-r3bl_rs_utils_core-0.7.7 (c (n "r3bl_rs_utils_core") (v "0.7.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0qd93vhh38irpd7bgg9l0cd2hw189syfc43ag9kfgi4g5gj2gzv7")))

(define-public crate-r3bl_rs_utils_core-0.7.8 (c (n "r3bl_rs_utils_core") (v "0.7.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1wzv6sibx2w5i81cisnxhm9kn70h5rmwdmyapvaimyk089dmrb53")))

(define-public crate-r3bl_rs_utils_core-0.7.9 (c (n "r3bl_rs_utils_core") (v "0.7.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0d8r14wfczrnigfzaf1np339nyc5jzq0fvlqdwz4v1359acfkjb4")))

(define-public crate-r3bl_rs_utils_core-0.7.10 (c (n "r3bl_rs_utils_core") (v "0.7.10") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1z7cbafziap41wphak504xx4a9dxvrygyz50bhwhwkvs1w9jkq9d")))

(define-public crate-r3bl_rs_utils_core-0.7.11 (c (n "r3bl_rs_utils_core") (v "0.7.11") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1vll1bfy7h61dvi0v70y9ngpw0ly7iimkrkqy0pw6mjwjgc68vr1")))

(define-public crate-r3bl_rs_utils_core-0.7.12 (c (n "r3bl_rs_utils_core") (v "0.7.12") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)))) (h "0lbbvrxa5wfqlxnzpck40jwvc2676d0cyy8q46pqb2xjiqpwpr07")))

(define-public crate-r3bl_rs_utils_core-0.7.13 (c (n "r3bl_rs_utils_core") (v "0.7.13") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.24.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "paste") (r "^1.0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "19nm99dkq2q9zabpaxbk9b765rk0lm7m1981pxgxvbqfsml91c4h")))

(define-public crate-r3bl_rs_utils_core-0.7.14 (c (n "r3bl_rs_utils_core") (v "0.7.14") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.23") (d #t) (k 0)) (d (n "paste") (r "^1.0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "09mmxkvpkc9cpn74z3lpfhb6fj1kgcb6dv44gnqny6146zbak1pg")))

(define-public crate-r3bl_rs_utils_core-0.8.0 (c (n "r3bl_rs_utils_core") (v "0.8.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.23") (d #t) (k 0)) (d (n "paste") (r "^1.0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0x3czkiw53m5sq4cxbx3r2a3fq768plinlklsa92i3qwwa92vg7y")))

(define-public crate-r3bl_rs_utils_core-0.8.1 (c (n "r3bl_rs_utils_core") (v "0.8.1") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.23") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "time") (r "^0.3.15") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.9.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "1r2xh9vqrza1jawcx2b2pdxmz267sf70z2xbcfm4qmq4cis1gqqn")))

(define-public crate-r3bl_rs_utils_core-0.8.2 (c (n "r3bl_rs_utils_core") (v "0.8.2") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "time") (r "^0.3.16") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "0d1lhkkn86qwc0hw3vlb6cy4310qf35alxq7p0gnbvqjzd78f8px")))

(define-public crate-r3bl_rs_utils_core-0.8.3 (c (n "r3bl_rs_utils_core") (v "0.8.3") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "00sw4c73zazpy2lp72qrb11bpnmmvwlpqinvyw689cagr9r9wiaa")))

(define-public crate-r3bl_rs_utils_core-0.8.4 (c (n "r3bl_rs_utils_core") (v "0.8.4") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.59") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.25") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "1facg6fg4j6vis0zy0wf3c81nlb9dx3qnmilbc6pdipn4civvphd")))

(define-public crate-r3bl_rs_utils_core-0.9.0 (c (n "r3bl_rs_utils_core") (v "0.9.0") (d (list (d (n "ansi-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "crossterm") (r "^0.25.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "paste") (r "^1.0.11") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "strip-ansi-escapes") (r "^0.1.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (d #t) (k 0)) (d (n "time") (r "^0.3.17") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "13plmn79vlazpdcsb5slcvlsf6lbw5c0knrp7lin4k5lg1fqazrw")))

(define-public crate-r3bl_rs_utils_core-0.9.1 (c (n "r3bl_rs_utils_core") (v "0.9.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "bitflags") (r "^1.3.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.23") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.26.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "05q34falbgh1ib7xirgkqrshjh6n747rr00wp32ia94iiq8x3ndf")))

(define-public crate-r3bl_rs_utils_core-0.9.2 (c (n "r3bl_rs_utils_core") (v "0.9.2") (d (list (d (n "ansi_colours") (r "^1.2.1") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "0r0b7d0g64fa2f2286f9n4khch1r1y0jdlbqwrnylfcrjj2rc3ng")))

(define-public crate-r3bl_rs_utils_core-0.9.3 (c (n "r3bl_rs_utils_core") (v "0.9.3") (d (list (d (n "ansi_colours") (r "^1.2.1") (d #t) (k 0)) (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "crossterm") (r "^0.26.1") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.7") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.12") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.0.0") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)))) (h "1l1g34faxin2yjwyqvxxiwnhbybhy1jpjwlpv9asbq7n90sz4596")))

(define-public crate-r3bl_rs_utils_core-0.9.4 (c (n "r3bl_rs_utils_core") (v "0.9.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "r3bl_ansi_color") (r "^0.6.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "13ps11h41y7kc5vw03b79dp3wfq53d78202dy5anpw302xk7z0bv")))

(define-public crate-r3bl_rs_utils_core-0.9.5 (c (n "r3bl_rs_utils_core") (v "0.9.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "r3bl_ansi_color") (r "^0.6.7") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "07dhz1nv3znh1fy6mhf9lhznrvhv30nk0b6qdbsf17kf91i91cw8")))

(define-public crate-r3bl_rs_utils_core-0.9.6 (c (n "r3bl_rs_utils_core") (v "0.9.6") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "r3bl_ansi_color") (r "^0.6.8") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "00qcq7fp5vz6prrnwvwdf20qizv7css1s013rg4p9nlbg798hnr1")))

(define-public crate-r3bl_rs_utils_core-0.9.7 (c (n "r3bl_rs_utils_core") (v "0.9.7") (d (list (d (n "async-trait") (r "^0.1.73") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "r3bl_ansi_color") (r "^0.6.8") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.29") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "1s2cvwyf8pnabjr8dlp4ghjs7vcgmi8h1s4mbdl0w9k3cbpfw5ha")))

(define-public crate-r3bl_rs_utils_core-0.9.8 (c (n "r3bl_rs_utils_core") (v "0.9.8") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "r3bl_ansi_color") (r "^0.6.9") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0976fmsj1m33abb1dch6gf64syhv5npknbb9f7nfalfnql05q2lw")))

(define-public crate-r3bl_rs_utils_core-0.9.9 (c (n "r3bl_rs_utils_core") (v "0.9.9") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "crossterm") (r "^0.27.0") (f (quote ("event-stream"))) (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "is-terminal") (r "^0.4.9") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 0)) (d (n "r3bl_ansi_color") (r "^0.6.9") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "08z1bw4dibhcl4z9pps9qc5iylif08y9rj0gr2sp0smk0pkbcb2p")))

(define-public crate-r3bl_rs_utils_core-0.9.10 (c (n "r3bl_rs_utils_core") (v "0.9.10") (d (list (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6.9") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "1h5fib0jpdmvkvag8plpjmfkcx1cv1s2zy3jqdz8rk6wwqsh3g74")))

(define-public crate-r3bl_rs_utils_core-0.9.11 (c (n "r3bl_rs_utils_core") (v "0.9.11") (d (list (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6.9") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0sdc9zglcf94i96kz91s0nahv4q4dppnn1dimyrlrnx93gdihn5z")))

(define-public crate-r3bl_rs_utils_core-0.9.12 (c (n "r3bl_rs_utils_core") (v "0.9.12") (d (list (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6.9") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "syntect") (r "^5.1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0mdm0wnrws7rwxwqav646ihw1qci85glyfhrqd22fmvzignj05kc")))

(define-public crate-r3bl_rs_utils_core-0.9.13 (c (n "r3bl_rs_utils_core") (v "0.9.13") (d (list (d (n "chrono") (r "^0.4.31") (d #t) (k 0)) (d (n "get-size") (r "^0.1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (f (quote ("std"))) (d #t) (k 0)) (d (n "nom") (r "^7.1.3") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "r3bl_ansi_color") (r "^0.6.9") (d #t) (k 0)) (d (n "r3bl_simple_logger") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.190") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.10.1") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.11") (d #t) (k 0)))) (h "0y6ahjgm1xyfb07mwk5qs1k952myra5705dsigd1dyzyrr0bh0fg")))

