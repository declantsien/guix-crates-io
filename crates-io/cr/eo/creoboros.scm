(define-module (crates-io cr eo creoboros) #:use-module (crates-io))

(define-public crate-creoboros-0.1.0 (c (n "creoboros") (v "0.1.0") (d (list (d (n "async-std") (r "^0.99.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.15") (d #t) (k 0)) (d (n "futures-channel-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "futures-io-preview") (r "= 0.3.0-alpha.18") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-humanize-rs") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)) (d (n "signal-hook") (r "^0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "templar") (r "^0.1") (d #t) (k 0)) (d (n "unstructured") (r "^0.3") (d #t) (k 0)))) (h "1k63f3dh51j412227969vv5hcxjfnjzjd5h90y31cg8rcr38jvhr")))

