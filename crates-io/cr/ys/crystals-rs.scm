(define-module (crates-io cr ys crystals-rs) #:use-module (crates-io))

(define-public crate-crystals-rs-0.0.1 (c (n "crystals-rs") (v "0.0.1") (d (list (d (n "array-init") (r "^2.0.1") (d #t) (k 0)) (d (n "autocfg") (r "^1") (d #t) (k 1)) (d (n "criterion") (r "^0.3.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crunchy") (r "^0.2.2") (f (quote ("limit_64"))) (k 0)) (d (n "hex-literal") (r "^0.3.4") (d #t) (k 2)) (d (n "paste") (r "^1.0.7") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "secrecy") (r "^0.8.0") (k 0)) (d (n "sha3") (r "^0.10.1") (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^2.0.2") (f (quote ("fips202" "keccak" "sha3" "shake"))) (d #t) (k 2)) (d (n "zeroize") (r "^1.5.7") (f (quote ("zeroize_derive" "aarch64"))) (k 0)))) (h "1qf0nwwirvv11cw723c5fiv8qwmx96vs6mpjcx69ajnfih1chv2m") (f (quote (("unstable") ("std" "alloc" "rand/std" "rand/std_rng") ("pub_internals") ("default" "pub_internals") ("alloc" "zeroize/alloc" "secrecy/alloc")))) (r "1.59.0")))

