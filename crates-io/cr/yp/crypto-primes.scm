(define-module (crates-io cr yp crypto-primes) #:use-module (crates-io))

(define-public crate-crypto-primes-0.1.0 (c (n "crypto-primes") (v "0.1.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.0-pre.1") (f (quote ("rand_core"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "1nhivjsmvmizdsbzm3fbv28y0cxyayhh3yd20gzlkclhfm8zqcaq") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "getrandom" "rand_core/getrandom") ("default" "default-rng"))))))

(define-public crate-crypto-primes-0.2.0 (c (n "crypto-primes") (v "0.2.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5") (f (quote ("rand_core"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "12l5chbvf58qq4j1i0g2vj26fhlmwkkn3bmnkw10mynbwiizy6kj") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "getrandom" "rand_core/getrandom") ("default" "default-rng"))))))

(define-public crate-crypto-primes-0.3.0 (c (n "crypto-primes") (v "0.3.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("rand_core"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "04xylcbsc7vb5ppak8r2lslpdlg0svhgl82lp3ylks7k4gs4iv8j") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "getrandom" "rand_core/getrandom") ("default" "default-rng"))))))

(define-public crate-crypto-primes-0.4.0 (c (n "crypto-primes") (v "0.4.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("rand_core"))) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "04r1324pqlklajfvgzkg2hr2kpfnfq8iyr2gi89zrybfnh9pw2nm") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "rand_core/getrandom") ("default" "default-rng"))))))

(define-public crate-crypto-primes-0.4.1 (c (n "crypto-primes") (v "0.4.1") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("rand_core"))) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "0v3ac5d0hbnbbw56nzy4zyaa229rcl5frs67wvq79g4mayh4lhaf") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "rand_core/getrandom") ("default" "default-rng"))))))

(define-public crate-crypto-primes-0.5.0 (c (n "crypto-primes") (v "0.5.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.2") (f (quote ("rand_core"))) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10.39") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "0bsq7227076lynw6m38l4hmnl817hri6121c4jagqv38m2qfx94p") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "rand_core/getrandom") ("default" "default-rng")))) (r "1.65")))

(define-public crate-crypto-primes-0.6.0-pre.0 (c (n "crypto-primes") (v "0.6.0-pre.0") (d (list (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.6.0-pre.7") (f (quote ("rand_core"))) (k 0)) (d (n "crypto-bigint") (r "^0.6.0-pre.7") (f (quote ("alloc"))) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-prime") (r "^0.4.3") (d #t) (k 2)) (d (n "openssl") (r "^0.10.39") (f (quote ("vendored"))) (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (k 0)) (d (n "rug") (r "^1.18") (f (quote ("integer"))) (o #t) (k 0)))) (h "1c6n3hv0kqdficpw0ji649nkddn7hji6rwwmllnqpwafxa117fri") (f (quote (("tests-openssl" "openssl") ("tests-gmp" "rug") ("tests-exhaustive") ("tests-all" "tests-openssl" "tests-gmp" "tests-exhaustive") ("default-rng" "rand_core/getrandom") ("default" "default-rng")))) (r "1.73")))

