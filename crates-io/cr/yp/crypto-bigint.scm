(define-module (crates-io cr yp crypto-bigint) #:use-module (crates-io))

(define-public crate-crypto-bigint-0.0.0 (c (n "crypto-bigint") (v "0.0.0") (h "0y01bp7hf1284hsqwfh5qc93g9vhdshplai062cx08lh9ab4l194") (y #t)))

(define-public crate-crypto-bigint-0.1.0 (c (n "crypto-bigint") (v "0.1.0") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (k 0)))) (h "0s45dm0k0wxly6jw1lzfhv65icwpswadagxlhc8hmgk2mw9fw6mm")))

(define-public crate-crypto-bigint-0.2.0 (c (n "crypto-bigint") (v "0.2.0") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0h9xfnrp4qrkzgrqsk73csgvwdlzwd9wv20bhjxg6axlf9pr4798") (f (quote (("alloc")))) (y #t)))

(define-public crate-crypto-bigint-0.2.1 (c (n "crypto-bigint") (v "0.2.1") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1rfwa24p6xzrpbg8isldrg7vnz16iajr26wimwqb6zr4x65rdjdx") (f (quote (("alloc")))) (y #t)))

(define-public crate-crypto-bigint-0.2.2 (c (n "crypto-bigint") (v "0.2.2") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1x771vq1di14lafz2lx2x4rdg3fk8jf79g2jykjfgyycn673jamk") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc")))) (y #t)))

(define-public crate-crypto-bigint-0.2.3 (c (n "crypto-bigint") (v "0.2.3") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "19f9v3xnbdw71dvzh9j58260qr0xp047c5q7k54z92i46040z489") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc")))) (y #t)))

(define-public crate-crypto-bigint-0.2.4 (c (n "crypto-bigint") (v "0.2.4") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "180qc8jimqy456jz2p7n2r42im34mjbxjckawa7sjd1cl829h86c") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc")))) (y #t)))

(define-public crate-crypto-bigint-0.2.5 (c (n "crypto-bigint") (v "0.2.5") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0zg08f7dnbljlkz8aj9c7c4a9dzlh8g5pqkz1ycdy7cjbmfc2n46") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc"))))))

(define-public crate-crypto-bigint-0.2.6 (c (n "crypto-bigint") (v "0.2.6") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "0vla4f9ivc9mwa7iglnhiw34agx7fnp5wjmmzla1kpqnfc9kk4z4") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc"))))))

(define-public crate-crypto-bigint-0.2.7 (c (n "crypto-bigint") (v "0.2.7") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "0kffdsb8ybz8dl8cl0s1bhcaa8knwgylwrsny0ihslprz2z94glz") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc"))))))

(define-public crate-crypto-bigint-0.2.8 (c (n "crypto-bigint") (v "0.2.8") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "1zi9p7ai47j98qkn2gwrp2nfzqa0rl712bw18ix40nm7w90wmc23") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc")))) (y #t)))

(define-public crate-crypto-bigint-0.2.9 (c (n "crypto-bigint") (v "0.2.9") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "18xd2sig3nrqs42l7ygpmqwywc76fxsy2qgg5kmg25ds0j3fzrsi") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc"))))))

(define-public crate-crypto-bigint-0.2.10 (c (n "crypto-bigint") (v "0.2.10") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "0iczlqrx21mgsc8g4p87npfn0nxmh2gqbz9d5b0p1mf02phpf96i") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc"))))))

(define-public crate-crypto-bigint-0.2.11 (c (n "crypto-bigint") (v "0.2.11") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "00qckh65nzb7s7vd60wylw6alxf9g37xh31lirb1qw0l8fxx6fzq") (f (quote (("rand" "rand_core") ("default" "rand") ("alloc"))))))

(define-public crate-crypto-bigint-0.3.0-pre.1 (c (n "crypto-bigint") (v "0.3.0-pre.1") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r ">=1, <1.5") (o #t) (k 0)))) (h "0v68pzswkg3jn8xdmbdkgzs1ynmkr3zvjh75lvhg03jra7zclx6i") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.56")))

(define-public crate-crypto-bigint-0.3.0 (c (n "crypto-bigint") (v "0.3.0") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1za519v0xmzhw46vsn0j4jbdrxzz6y6dx0j4cshh516v2axcsvj7") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (y #t) (r "1.56")))

(define-public crate-crypto-bigint-0.3.1 (c (n "crypto-bigint") (v "0.3.1") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0as6s0a21fqam26416qhkfdx0z32m8n6g9f133ybf900pwdfhi4q") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (y #t) (r "1.56")))

(define-public crate-crypto-bigint-0.3.2 (c (n "crypto-bigint") (v "0.3.2") (d (list (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "08gx92sj93hk2smqy4nvk8lmpjjjqm7a9ps22q3pxqqxzbas3ih3") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.56")))

(define-public crate-crypto-bigint-0.4.0-pre.0 (c (n "crypto-bigint") (v "0.4.0-pre.0") (d (list (d (n "der") (r "=0.6.0-pre.0") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1cc8kkvq297f8g9brcvh6lk5h7gd08782yb3wa5kkvamf9jgk7ba") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.0-pre.1 (c (n "crypto-bigint") (v "0.4.0-pre.1") (d (list (d (n "der") (r "=0.6.0-pre.4") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1i2znq6dpsfx58b0f8zrkbs450hdk0jhdlaw96vphrk37knrfqmf") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.0 (c (n "crypto-bigint") (v "0.4.0") (d (list (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1081vlgdy1g7raadmw4xjw5xmx3jgf6yfdr2brfjmp1ykwdx48pk") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (y #t) (r "1.57")))

(define-public crate-crypto-bigint-0.4.1 (c (n "crypto-bigint") (v "0.4.1") (d (list (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1qjf70991b4qmxwn7nk3mzajfrs6p532fayx40vh80qc397sfr9w") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.2 (c (n "crypto-bigint") (v "0.4.2") (d (list (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "03jfs5dnbkn88ad9k9kdsva0fjzjcssar1dh4h1kg8f638vlagny") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.3 (c (n "crypto-bigint") (v "0.4.3") (d (list (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0yw86nk7ixlmqk6fnxb9grpw090mkwbx22xj3rqypayy0kxy193q") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.4 (c (n "crypto-bigint") (v "0.4.4") (d (list (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1bkf2d0v07zvks4xl494nyi92b25xbybk7ap1wc70mgx8m0pr6a0") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.5 (c (n "crypto-bigint") (v "0.4.5") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "104sdvcinsp6kimlqiva1pwbwyin1vc6pqwggyf964rgc384zf99") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.6 (c (n "crypto-bigint") (v "0.4.6") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1ig3x9091jlw5rgjk4xn9mbxjslkb1xps3c9kiaak67mw3r2wm46") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.7 (c (n "crypto-bigint") (v "0.4.7") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1d72d684bbkfp378h2pgnp94l8ff503340dcq9xar03fsqqid5mc") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.8 (c (n "crypto-bigint") (v "0.4.8") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "08m1sjfjd362sas96crghaw27jcw2z1h3qzdy1gav7fl2wyl8awz") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.4.9 (c (n "crypto-bigint") (v "0.4.9") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1vqprgj0aj1340w186zyspi58397ih78jsc0iydvhs6zrlilnazg") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.57")))

(define-public crate-crypto-bigint-0.5.0-pre.0 (c (n "crypto-bigint") (v "0.5.0-pre.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "109ip09xfjh4ra7k3yvnip5s5z383jy5smgnq0xdw5dqpv5cmhbg") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.61")))

(define-public crate-crypto-bigint-0.5.0-pre.1 (c (n "crypto-bigint") (v "0.5.0-pre.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1vmr1v6fnpxs80yzkpghzx9fn4ixxsfawmwhjfyq8p5i71galgkm") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.61")))

(define-public crate-crypto-bigint-0.5.0-pre.2 (c (n "crypto-bigint") (v "0.5.0-pre.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1ch7dl6zwg613nzbn3cnws46i7wqr887vnn94cya17igdyr9lzy7") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.61")))

(define-public crate-crypto-bigint-0.5.0-pre.3 (c (n "crypto-bigint") (v "0.5.0-pre.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.6") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.1") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1jbivvc597cc5vwc46836qdbj7mpaj0y2fpyrd5d4jmcsm3wjyn3") (f (quote (("serde" "serdect") ("rand" "rand_core/std") ("default" "rand") ("alloc")))) (r "1.61")))

(define-public crate-crypto-bigint-0.5.0 (c (n "crypto-bigint") (v "0.5.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "16ksy0r9n484hzr5insxcs9ijsyxfwiljbs5gaxcjjv38mchy707") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (s 2) (e (quote (("serde" "dep:serdect")))) (r "1.65")))

(define-public crate-crypto-bigint-0.5.1 (c (n "crypto-bigint") (v "0.5.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1xq811yyccp1nnmxbj8s057x80zr972kms5kmj5m8llfwv23h9bw") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (s 2) (e (quote (("serde" "dep:serdect")))) (r "1.65")))

(define-public crate-crypto-bigint-0.5.2 (c (n "crypto-bigint") (v "0.5.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "05gy7sqkxg65bj1wrgq1pbh8iwn1kmfysvzx1g22p4gx3972yk6g") (f (quote (("rand" "rand_core/std") ("default" "rand") ("alloc")))) (s 2) (e (quote (("serde" "dep:serdect")))) (r "1.65")))

(define-public crate-crypto-bigint-0.5.3 (c (n "crypto-bigint") (v "0.5.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "092140hzdc4wyx472mahc0wxfafmxz5q8f9qzh6g2ma1b67f43vl") (f (quote (("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.65")))

(define-public crate-crypto-bigint-0.5.4 (c (n "crypto-bigint") (v "0.5.4") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "16j73i92xl5j7b8fajmzpiw42fwcj6ilb6rmc10yd9nj2hsmry18") (f (quote (("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.65")))

(define-public crate-crypto-bigint-0.5.5 (c (n "crypto-bigint") (v "0.5.5") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.4") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0xmbdff3g6ii5sbxjxc31xfkv9lrmyril4arh3dzckd4gjsjzj8d") (f (quote (("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.65")))

(define-public crate-crypto-bigint-0.6.0-pre.0 (c (n "crypto-bigint") (v "0.6.0-pre.0") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8") (d #t) (k 2) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0f0nl3zg7sqppagbi2fsqw0z0ykv5zv5vgganycq3pzw1gfb635n") (f (quote (("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.70")))

(define-public crate-crypto-bigint-0.6.0-pre.1 (c (n "crypto-bigint") (v "0.6.0-pre.1") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8") (d #t) (k 2) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1rjmmnqg6i69fgwb73wvq13wb0rv9j2c2fyws526m1jaxhss2k6c") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.70")))

(define-public crate-crypto-bigint-0.6.0-pre.2 (c (n "crypto-bigint") (v "0.6.0-pre.2") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8") (d #t) (k 2) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1qys4qf55d8m4z1qav1qhajyndlv11mmxqnfnfycd6ff48ngjzv2") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.3 (c (n "crypto-bigint") (v "0.6.0-pre.3") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8") (d #t) (k 2) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0mi73dn34l41gvdcfcl9ifcyxppg6a6ms04rc9ajqcymx9kcka73") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.4 (c (n "crypto-bigint") (v "0.6.0-pre.4") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.8") (d #t) (k 2) (p "num-bigint-dig")) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1r14c3hiijq377kxa253sv10ylifgqhlvlg664qd9zl69pv9wx40") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.5 (c (n "crypto-bigint") (v "0.6.0-pre.5") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.5") (f (quote ("num-bigint"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0gg4a96rk7ivab68avksc7abv8h1dmdg48fmm71riyhvn7ijcxsp") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.6 (c (n "crypto-bigint") (v "0.6.0-pre.6") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0c8r6l0p04ylrhls4i85ns7hbsnsfbpdqafcih2jzgdczb6a22gg") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.7 (c (n "crypto-bigint") (v "0.6.0-pre.7") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "generic-array") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1r4w33cnfv8mz184r0rpvplhzrmiwq0b7ah0xar3jmxdp3ps8z3h") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.8 (c (n "crypto-bigint") (v "0.6.0-pre.8") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hybrid-array") (r "=0.2.0-pre.8") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "0vmr04alm6hx4z64vprqxaxiy3fwa14npfm0fbq83n3s2m5g50vz") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.9 (c (n "crypto-bigint") (v "0.6.0-pre.9") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "14nry87p1vhzb2cch1l3n9kqw43m9ri8jz8ycrbv09i27hcgik8w") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.10 (c (n "crypto-bigint") (v "0.6.0-pre.10") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "1idk1fyrxncjnyfmdyq8ss17ynafsl5gp4zvq818zmki0wg9r5qj") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.11 (c (n "crypto-bigint") (v "0.6.0-pre.11") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hybrid-array") (r "^0.2.0-rc.0") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "078gla6s7anmhfjrid9v6bhjasrj0rg6bchpv6licrzq3bvjjv86") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

(define-public crate-crypto-bigint-0.6.0-pre.12 (c (n "crypto-bigint") (v "0.6.0-pre.12") (d (list (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "der") (r "^0.7") (o #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "hybrid-array") (r "^0.2.0-rc.1") (o #t) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 2)) (d (n "num-integer") (r "^0.1") (d #t) (k 2)) (d (n "num-modular") (r "^0.6") (f (quote ("num-bigint" "num-integer" "num-traits"))) (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 2)) (d (n "rand_core") (r "^0.6.4") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (f (quote ("std"))) (d #t) (k 2)) (d (n "rlp") (r "^0.5") (o #t) (k 0)) (d (n "serdect") (r "^0.2") (o #t) (k 0)) (d (n "subtle") (r "^2.5") (k 0)) (d (n "zeroize") (r "^1") (o #t) (k 0)))) (h "04cyk21s2fldslgfrg9qvwgcrz1njfg3prxsycjjpknrmnzdfhqr") (f (quote (("std" "alloc") ("rand" "rand_core/std") ("extra-sizes") ("default" "rand")))) (s 2) (e (quote (("serde" "dep:serdect") ("alloc" "serdect?/alloc")))) (r "1.73")))

