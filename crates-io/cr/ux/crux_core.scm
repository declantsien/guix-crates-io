(define-module (crates-io cr ux crux_core) #:use-module (crates-io))

(define-public crate-crux_core-0.1.0 (c (n "crux_core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bcs") (r "^0.1.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-generate") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.88") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "uniffi") (r "^0.21.0") (d #t) (k 0)) (d (n "uniffi_macros") (r "^0.21.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4" "wasm-bindgen" "js"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)))) (h "0i1cda3p5waw84y1fl61k583ybxcg99nl3i4hxrm4mz2qza8rdsv") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection"))))))

(define-public crate-crux_core-0.1.1 (c (n "crux_core") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bcs") (r "^0.1.4") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-generate") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.88") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "uniffi") (r "^0.21.0") (d #t) (k 0)) (d (n "uniffi_macros") (r "^0.21.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4" "wasm-bindgen" "js"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)))) (h "0q1x1bp9xczw5485xvc5rhyxqbx658p4qv4h78pdhlms2mgbswsk") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection"))))))

(define-public crate-crux_core-0.2.0 (c (n "crux_core") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "bcs") (r "^0.1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.148") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-generate") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "uniffi") (r "^0.21.0") (d #t) (k 0)) (d (n "uniffi_macros") (r "^0.21.0") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4" "wasm-bindgen" "js"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (d #t) (k 0)))) (h "1jk7nbj7ivss5l6rmp5z6mkfq4xsa85kl0yqz55h4shl0xlcagr3") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection"))))))

(define-public crate-crux_core-0.3.0 (c (n "crux_core") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.69") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8") (d #t) (k 2)) (d (n "bcs") (r "^0.1.4") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.6") (d #t) (k 0)) (d (n "crux_macros") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.0") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.93") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4" "wasm-bindgen" "js"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)))) (h "11c4hwwf7vgapljnqyn6sry5pjy1hd87wjrnbzircy6k9kx38apl") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.4.0 (c (n "crux_core") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8") (d #t) (k 2)) (d (n "bcs") (r "^0.1.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_macros") (r "^0.2") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uuid") (r "^1.3.1") (f (quote ("v4" "wasm-bindgen" "js"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (k 0)))) (h "1z4ml79c8lmwycx163c91w49yp540w266b6vc3s7k3k6n0yj1f9n") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.5.0 (c (n "crux_core") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8") (d #t) (k 2)) (d (n "bcs") (r "^0.1.5") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (k 0)))) (h "0kg03984bnmlnmy8lscl7g64yzr1arpg6m6xcgn4fr80cy0dr05s") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.6.0 (c (n "crux_core") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (k 0)))) (h "08grr934f4jwhfafz3znl111sh8zkbmcgy04rzn33zag4lvr6wwx") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.6.1 (c (n "crux_core") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.86") (d #t) (k 0)))) (h "1v4n326wgvak1kajy1riq6ya2z637shzbrn7bkl57hwy2r5w0v88") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.6.2 (c (n "crux_core") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.8") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.3.4") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)))) (h "1dsw12axs5wk0mkc73rc5j8kv76dw7c03h7inrwc73fyjqkabg8z") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.6.3 (c (n "crux_core") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.9") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_http") (r "^0.4") (d #t) (k 2)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "crux_time") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.175") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.175") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.44") (d #t) (k 0)) (d (n "url") (r "^2.4.0") (d #t) (k 2)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.4.1") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)))) (h "1gkmzzrqz7xxg5a60prdmjbgxbh55gqhsc2dibmgma3myjn2k1aq") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.6.4 (c (n "crux_core") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^1.9") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_http") (r "^0.4") (d #t) (k 2)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "crux_time") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.189") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "url") (r "^2.4.1") (d #t) (k 2)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1.5.0") (f (quote ("v4" "serde"))) (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2.87") (d #t) (k 0)))) (h "0hbdkzyaazrw79ynjbhcvnhgnydaslvkffp4f58578rg47kw9xsi") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.6.5 (c (n "crux_core") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_http") (r "^0.4") (d #t) (k 2)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "crux_time") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (k 0)))) (h "1ngw9k769cnd7w3ramahdbdbl5mxx59v6pi22bnm6hva7rz4hn85") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.0 (c (n "crux_core") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "crux_http") (r "^0.4") (d #t) (k 2)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "crux_time") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (k 0)))) (h "11gvk8qxmp8lx4fnpjlx5jrpbgqap21m9mlm9lkhf6fd4rjq3pv2") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.1 (c (n "crux_core") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "crux_http") (r "^0.4") (d #t) (k 2)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "crux_time") (r "^0.1") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4" "wasm-bindgen" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.89") (d #t) (k 0)))) (h "1sk3c5rqns0kh4bfnrqqx1qxb0i8i8ngga51y0zm8709246zjjkk") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.2 (c (n "crux_core") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (d #t) (k 0)))) (h "0dd6jyz8d1likbqvzhgn4w4vyadwjb4y6yr8nxvd6ghkza93sggc") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.3 (c (n "crux_core") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.1") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.11") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.7") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.90") (d #t) (k 0)))) (h "1n2x21byxj1wvgny6ql691r2y6r0igp38vv6m0ic77z24c72wb9d") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.4 (c (n "crux_core") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.2") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.8") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (k 0)))) (h "1kjdj8pg0xb3sf6hmchldvk95rg6vd24vppraaxf42hdim5kfiy1") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.5 (c (n "crux_core") (v "0.7.5") (d (list (d (n "anyhow") (r "^1.0.83") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.9") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.92") (d #t) (k 0)))) (h "1pxrabkxpqjj5lzm9xl5pg8v6sq9ipdk59zlg5z4603bnykm9d9x") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.7.6 (c (n "crux_core") (v "0.7.6") (d (list (d (n "anyhow") (r "^1.0.83") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.9") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "js" "serde"))) (d #t) (k 0)))) (h "19bjc1fhnw79f7v1n33j4xzwsnwg56xxc3bl7vfpwwbsna3fqmzi") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.8.0-rc.0 (c (n "crux_core") (v "0.8.0-rc.0") (d (list (d (n "anyhow") (r "^1.0.83") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.9") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "0wgpgc2d23kbq1d7c0pdvniv8nzjn8cyzrs69hq4zaw9yald7z7m") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.8.0-rc.1 (c (n "crux_core") (v "0.8.0-rc.1") (d (list (d (n "anyhow") (r "^1.0.83") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.12") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.10-rc.1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.60") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "1s3bbqp446qppac5yrk8qf23qi6xa373f4qawqvwvmixhiwyfz47") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.8.0-rc.2 (c (n "crux_core") (v "0.8.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.13") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.10-rc.2") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "05m48cmd5s4x9pzq50yifidys5zqf67ibdpdbpzkdpffh837skk5") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.8.0-rc.3 (c (n "crux_core") (v "0.8.0-rc.3") (d (list (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.13") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.10-rc.3") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "1k4pgp91cq90qlp5y47nzbyb205qi0001npydxfa21vxw2cig4l8") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

(define-public crate-crux_core-0.8.0 (c (n "crux_core") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.86") (d #t) (k 0)) (d (n "assert_fs") (r "^1.0.13") (d #t) (k 2)) (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-channel") (r "^2.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.5.13") (d #t) (k 0)) (d (n "crux_macros") (r "^0.3.10") (d #t) (k 0)) (d (n "erased-serde") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.202") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde-generate") (r "^0.25.1") (o #t) (d #t) (k 0)) (d (n "serde-reflection") (r "^0.3.6") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "slab") (r "^0.4.9") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.61") (d #t) (k 0)) (d (n "url") (r "^2.5.0") (d #t) (k 2)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4" "serde"))) (d #t) (k 2)))) (h "1kj4qm0imrq01973j2d1wjm7x7k3apraf8cjgxx2i5vdg0ipzg1c") (s 2) (e (quote (("typegen" "dep:serde-generate" "dep:serde-reflection")))) (r "1.66")))

