(define-module (crates-io cr an cranelift-codegen) #:use-module (crates-io))

(define-public crate-cranelift-codegen-0.14.0 (c (n "cranelift-codegen") (v "0.14.0") (d (list (d (n "cranelift-entity") (r "^0.14.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.2") (k 0)))) (h "0j3qpd7948pqv511n6j5n28ycwvdma7627zcybz9h2rcipk8zsq1") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.15.0 (c (n "cranelift-codegen") (v "0.15.0") (d (list (d (n "cranelift-entity") (r "^0.15.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "0vr5hh6397cg0882pgj4mrmzjav6vmjsnq7n31xai7jlx05lzpg7") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.16.0 (c (n "cranelift-codegen") (v "0.16.0") (d (list (d (n "cranelift-entity") (r "^0.16.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "1iqgvx4g5w9w26d4p993anizngr4mj3mcdz5ya05g5rm87bav1iv") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.16.1 (c (n "cranelift-codegen") (v "0.16.1") (d (list (d (n "cranelift-entity") (r "^0.16.1") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.8") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "0wbrl72kbgfxsdpr72gnblxknvm4h3dpgpg86jshc95d0lglnhv2") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.17.0-alpha (c (n "cranelift-codegen") (v "0.17.0-alpha") (d (list (d (n "cranelift-entity") (r "^0.17.0-alpha") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "094dszbq9bp7p06v0vbaag279ppqjzvi9h1xff4kqizk80km5cay") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.17.0 (c (n "cranelift-codegen") (v "0.17.0") (d (list (d (n "cranelift-entity") (r "^0.17.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "1sfp71208mficbw748pnwvcz0xlnrp1fprlzviip3fdw7rz4izhg") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.18.1 (c (n "cranelift-codegen") (v "0.18.1") (d (list (d (n "cranelift-codegen-meta") (r "^0.18.1") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.18.1") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "0max6jyi8aaj7ic82z69j1wzympviamjydmkhgada7s1p9icwk0j") (f (quote (("std" "cranelift-entity/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.19.0 (c (n "cranelift-codegen") (v "0.19.0") (d (list (d (n "cranelift-bforest") (r "^0.19.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.19.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.19.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.3") (f (quote ("release_max_level_warn"))) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "1sagvwr1klnl8a28vikzrjyc0gd1ksd9p4xdb99h35shzxql4vg3") (f (quote (("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.20.0 (c (n "cranelift-codegen") (v "0.20.0") (d (list (d (n "cranelift-bforest") (r "^0.20.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.20.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.20.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (f (quote ("release_max_level_warn"))) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "1jmcgk051gab2f93gqq2q1wcjbapk9dzyp6klw91h8p6s7qiix0n") (f (quote (("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.21.0 (c (n "cranelift-codegen") (v "0.21.0") (d (list (d (n "cranelift-bforest") (r "^0.21.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.21.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.21.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (f (quote ("release_max_level_warn"))) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "0k2m4dkd7x8r9zqszffsj4icwmdfr9v0qv0gl4wmr1dfhq2bcgsa") (f (quote (("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.21.1 (c (n "cranelift-codegen") (v "0.21.1") (d (list (d (n "cranelift-bforest") (r "^0.21.1") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.21.1") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.21.1") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (f (quote ("release_max_level_warn"))) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "0wp45m3d2ilj12xcdckgj5dmg6cmp365jwbfhqbb2379gwn2wryr") (f (quote (("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.22.0 (c (n "cranelift-codegen") (v "0.22.0") (d (list (d (n "cranelift-bforest") (r "^0.22.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.22.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.22.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (f (quote ("release_max_level_warn"))) (k 0)) (d (n "target-lexicon") (r "^0.0.3") (k 0)))) (h "0yy2a3cdnih1llsrj8cvxdn9lznah2fk11sn8m9dr8fj38mm0mkb") (f (quote (("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.23.0 (c (n "cranelift-codegen") (v "0.23.0") (d (list (d (n "cranelift-bforest") (r "^0.23.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.23.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.23.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "0dah2c7sd5yblj9qc7myd4w032xbnknslxgarzd6qvk82a1fqds4") (f (quote (("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.24.0 (c (n "cranelift-codegen") (v "0.24.0") (d (list (d (n "cranelift-bforest") (r "^0.24.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.24.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.24.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "1f841h494z4kdj8zxqi1c1xv6y4nv9hnhq64z58imkmw403mglx4") (f (quote (("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.25.0 (c (n "cranelift-codegen") (v "0.25.0") (d (list (d (n "cranelift-bforest") (r "^0.25.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.25.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.25.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "0sya6jf6kl3fbnk1l3agxgpaiq2p948vlsn475khmw3w53xa0bz9") (f (quote (("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.26.0 (c (n "cranelift-codegen") (v "0.26.0") (d (list (d (n "cranelift-bforest") (r "^0.26.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.26.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.26.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.4") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "1sv7s3cbx9xlfmyr0jw3d5sv1p119zh8zv5f0673cp48pl4vixa2") (f (quote (("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.27.0 (c (n "cranelift-codegen") (v "0.27.0") (d (list (d (n "cranelift-bforest") (r "^0.27.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.27.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.27.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "0pl3jgr640k571p03gjk022paxi7hyannx7f7hrkcd4p000mwhbx") (f (quote (("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.28.0 (c (n "cranelift-codegen") (v "0.28.0") (d (list (d (n "cranelift-bforest") (r "^0.28.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.28.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.28.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "0d8crr3wkd72sfl3a75rl67jph26kbbmhrw027xa1z8cjw9f9qjc") (f (quote (("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("default" "std") ("core" "hashmap_core"))))))

(define-public crate-cranelift-codegen-0.29.0 (c (n "cranelift-codegen") (v "0.29.0") (d (list (d (n "cranelift-bforest") (r "^0.29.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.29.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.29.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.2.0") (k 0)))) (h "187lybjn1560hvb3gaa864x9v3bmbviaalsr8wiwirkp0ni1afvc") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("riscv") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.30.0 (c (n "cranelift-codegen") (v "0.30.0") (d (list (d (n "cranelift-bforest") (r "^0.30.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.30.0") (d #t) (k 1)) (d (n "cranelift-entity") (r "^0.30.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.3.0") (k 0)))) (h "1xs3l3as4bgkjk7fxs1ilhsw6waxd8smf4rrvpkggc2vk8acn05b") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std") ("riscv") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.31.0 (c (n "cranelift-codegen") (v "0.31.0") (d (list (d (n "cranelift-bforest") (r "^0.31.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.31.0") (k 1)) (d (n "cranelift-entity") (r "^0.31.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "0nyr66zas47lypvnkzb5wzh0vdbqs07b77q9xapcp97vaqm580xk") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.32.0 (c (n "cranelift-codegen") (v "0.32.0") (d (list (d (n "cranelift-bforest") (r "^0.32.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.32.0") (k 1)) (d (n "cranelift-entity") (r "^0.32.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "152vmn39c608y5gb5bs33anc16rc5cpah79538qimq25v5ga9c21") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.33.0 (c (n "cranelift-codegen") (v "0.33.0") (d (list (d (n "cranelift-bforest") (r "^0.33.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.33.0") (k 1)) (d (n "cranelift-entity") (r "^0.33.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "179ncpikc4dgbpx9x7wvnsra25zzppyg578qifcc0y2smm5sfp8x") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.34.0 (c (n "cranelift-codegen") (v "0.34.0") (d (list (d (n "cranelift-bforest") (r "^0.34.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.34.0") (k 1)) (d (n "cranelift-entity") (r "^0.34.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "1aj57jsyi7sj5z2pdl4v36zn3y6cvyi8kbcbi5idhpaz34zrx3a8") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.35.0 (c (n "cranelift-codegen") (v "0.35.0") (d (list (d (n "cranelift-bforest") (r "^0.35.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.35.0") (k 1)) (d (n "cranelift-entity") (r "^0.35.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "0ccrrzn4mlsk28jspcw29f30i70ycf4570jwipzb4smf7z4s1kjk") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.36.0 (c (n "cranelift-codegen") (v "0.36.0") (d (list (d (n "cranelift-bforest") (r "^0.36.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.36.0") (k 1)) (d (n "cranelift-entity") (r "^0.36.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "18ss9062s49kgc7vrzb8z17y7yfnd3pch3mrfa7k130w8rw468jh") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.37.0 (c (n "cranelift-codegen") (v "0.37.0") (d (list (d (n "cranelift-bforest") (r "^0.37.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.37.0") (k 1)) (d (n "cranelift-entity") (r "^0.37.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "1gzjj6cmf41kjff9l32z33vyw7i113f648n75xpy584n910i7wxh") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.38.0 (c (n "cranelift-codegen") (v "0.38.0") (d (list (d (n "cranelift-bforest") (r "^0.38.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.38.0") (k 1)) (d (n "cranelift-entity") (r "^0.38.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "1p3nk353zcjrslypaf7ldqsrwdm5fdnlgv8fnq2c6yj6g72ldpw6") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.39.0 (c (n "cranelift-codegen") (v "0.39.0") (d (list (d (n "cranelift-bforest") (r "^0.39.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.39.0") (k 1)) (d (n "cranelift-entity") (r "^0.39.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "0k2knrw0rk28jx4c7vm09wkibg9f32r25j361n80d82vhfv9g92a") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.40.0 (c (n "cranelift-codegen") (v "0.40.0") (d (list (d (n "cranelift-bforest") (r "^0.40.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.40.0") (k 1)) (d (n "cranelift-entity") (r "^0.40.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "11vxf2s8pn2l5qprshn2pfbvvqddqnb75ca8dxk0f1mx8iypbcxk") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std" "x86" "arm32" "arm64" "riscv") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32"))))))

(define-public crate-cranelift-codegen-0.41.0 (c (n "cranelift-codegen") (v "0.41.0") (d (list (d (n "cranelift-bforest") (r "^0.41.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.41.0") (k 1)) (d (n "cranelift-entity") (r "^0.41.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.4.0") (k 0)))) (h "0qhhdqdjw5w0ssg705zd8wnw4fssw1q54llpn1lkw6fp6yg4wh9k") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "target-lexicon/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.42.0 (c (n "cranelift-codegen") (v "0.42.0") (d (list (d (n "cranelift-bforest") (r "^0.42.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.42.0") (k 1)) (d (n "cranelift-entity") (r "^0.42.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.0") (d #t) (k 0)))) (h "1j5gd3in0ygv8g38mg3294g2s4fjhrpwlhmf4m35as4dximsn4x8") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.43.0 (c (n "cranelift-codegen") (v "0.43.0") (d (list (d (n "cranelift-bforest") (r "^0.43.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.43.0") (k 1)) (d (n "cranelift-entity") (r "^0.43.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)))) (h "1xghq7lja1mh7mxq3xsjcgav0idna86fmdv09h47kdy1a2k1hffx") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.43.1 (c (n "cranelift-codegen") (v "0.43.1") (d (list (d (n "cranelift-bforest") (r "^0.43.1") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.43.1") (k 1)) (d (n "cranelift-entity") (r "^0.43.1") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)))) (h "170y6ivr6xgimamh9yhjrkf5f6i0lw04xkk8hx3cm1slam2ip5nz") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.44.0 (c (n "cranelift-codegen") (v "0.44.0") (d (list (d (n "cranelift-bforest") (r "^0.44.0") (k 0)) (d (n "cranelift-codegen-meta") (r "^0.44.0") (k 1)) (d (n "cranelift-codegen-shared") (r "^0.44.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.44.0") (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashmap_core") (r "^0.1.9") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)))) (h "11blcad6zckjr8p5z09spyz2hap99zn9za903m5xz58vxhhs5x3g") (f (quote (("x86") ("testing_hooks") ("std" "cranelift-entity/std" "cranelift-bforest/std" "cranelift-codegen-meta/std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashmap_core" "cranelift-codegen-meta/core") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.45.0 (c (n "cranelift-codegen") (v "0.45.0") (d (list (d (n "cranelift-bforest") (r "^0.45.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.45.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.45.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.45.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)))) (h "1jpnlb67mx1ml7k49yqxp8wqwyinh8n06ljafi6kxyrcwjlc56x0") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.46.0 (c (n "cranelift-codegen") (v "0.46.0") (d (list (d (n "cranelift-bforest") (r "^0.46.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.46.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.46.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.46.0") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)))) (h "1ahqkqn8b759kvg0s0d236mn8miw8vgrvnxpry47jx7xpyzbr0vr") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.46.1 (c (n "cranelift-codegen") (v "0.46.1") (d (list (d (n "cranelift-bforest") (r "^0.46.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.46.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.46.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.46.1") (d #t) (k 0)) (d (n "failure") (r "^0.1.1") (f (quote ("derive"))) (k 0)) (d (n "failure_derive") (r "^0.1.1") (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^0.6.10") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)))) (h "1kdd4c82cy8kjzdsgpwpqzqlcjzl4zpjz7qhyyqbq0h3lmfr6m9j") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.47.0 (c (n "cranelift-codegen") (v "0.47.0") (d (list (d (n "cranelift-bforest") (r "^0.47.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.47.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.47.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.47.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1b7kc9spg35w886kfw5rvscm59kzfh5ci0c0b9wg8yz1h70avyr7") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.48.0 (c (n "cranelift-codegen") (v "0.48.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.48.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.48.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.48.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.48.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.8.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0lgz2d900bxqwk3zinlr063m0w5banzhg7bf135nl6zhw6m03am2") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.49.0 (c (n "cranelift-codegen") (v "0.49.0") (d (list (d (n "byteorder") (r "^1.3.2") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.49.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.49.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.49.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.49.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0b6zas9nr6h2wz1gbiqmk3gmlvz2xr0zm0sksgrl3323w5y1rdwc") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.50.0 (c (n "cranelift-codegen") (v "0.50.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.50.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.50.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.50.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.50.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "138qkkfnnfqaz2v8grkbw7h9cjfmgw6qh8dbmgg9hkx9z1prngf6") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.51.0 (c (n "cranelift-codegen") (v "0.51.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.51.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.51.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.51.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.51.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "15g2x1y4msmfvcgkmm44ripx8i8yvnzcmdcibbghdl6y1a2chfzi") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.52.0 (c (n "cranelift-codegen") (v "0.52.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.52.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.52.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.52.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.9") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1qgzccyzdx5kn2n9lkhcg0xfd5n1f88mlbyj129mjhrmg4h9s2s6") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.53.0 (c (n "cranelift-codegen") (v "0.53.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.53.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.53.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.53.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.53.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1q9jn6gcll2pgbjhsbir6v47dac2s8l2jkpb6vv0mnix789ldrka") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.54.0 (c (n "cranelift-codegen") (v "0.54.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.54.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.54.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.54.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.54.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1nmpq6g5f8dw2jq3nmvxcc1sqxsfnz95k44vm5v9y0ljk1kydqzk") (f (quote (("x86") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.55.0 (c (n "cranelift-codegen") (v "0.55.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.55.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.55.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.55.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.55.0") (d #t) (k 0)) (d (n "gimli") (r "^0.19.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1gmllwzfz79n7n5x11z8hh7d689x0v8802vgyqggxl2w5sr3wn48") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks" "unwind") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.56.0 (c (n "cranelift-codegen") (v "0.56.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.56.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.56.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.56.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.56.0") (d #t) (k 0)) (d (n "gimli") (r "^0.19.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0iz6hbh648y3giysrxzq78kh18670m5pjgc05s3v1v18dviv403n") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "basic-blocks" "unwind") ("core" "hashbrown") ("basic-blocks") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.58.0 (c (n "cranelift-codegen") (v "0.58.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.58.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.58.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.58.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.58.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1vkz26arhfwr7l0kczv67d475q3bsi35sih6f3299fbghfaag083") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.59.0 (c (n "cranelift-codegen") (v "0.59.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.59.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.59.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.59.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0bivngwwrfv5ggk1fbm2qk2jvgc2p4dmw3y4d5xcccsadrxgflvq") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.60.0 (c (n "cranelift-codegen") (v "0.60.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.60.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.60.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.60.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.60.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1kgqfwgk36mdsqn004vim867zm9z1k95ir201vc2g1833bql0gch") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.61.0 (c (n "cranelift-codegen") (v "0.61.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.61.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.61.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.61.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.61.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1w3r1b4ykz1c71sry2m3vp3vw1cwgj5zqlh4ilj1sxs74yhxl9qd") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.62.0 (c (n "cranelift-codegen") (v "0.62.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.62.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.62.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.62.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.62.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0aqzhm1n6wczarwfhhf67878mh8smjbglrwvssdz6f5ccz49gmp6") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.63.0 (c (n "cranelift-codegen") (v "0.63.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.63.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.63.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.63.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.63.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "regalloc") (r "^0.0.21") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1q960sdj6lz1dhrb6r5qqqvx1r9zzi84fa46vvk2w1ihzn4v4rni") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("enable-serde" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.64.0 (c (n "cranelift-codegen") (v "0.64.0") (d (list (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.64.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.64.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.64.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.64.0") (d #t) (k 0)) (d (n "gimli") (r "^0.20.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.64.0") (o #t) (d #t) (k 1)) (d (n "peepmatic-runtime") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "1d41wyc3pwy02mp7dq5h2k14mckpfxm1crir7z99a8zc36n7s06r") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("rebuild-peephole-optimizers" "peepmatic") ("enable-serde" "serde") ("enable-peepmatic" "peepmatic-runtime") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "x64" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.65.0 (c (n "cranelift-codegen") (v "0.65.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.65.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.65.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.65.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.65.0") (d #t) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.65.0") (o #t) (d #t) (k 1)) (d (n "peepmatic-runtime") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.26") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0sl26yvj2rapidrk95sfzcq7y3h1pxnbrq4jaawmndy2i2aki3gj") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic") ("enable-serde" "serde") ("enable-peepmatic" "peepmatic-runtime") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "x64" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.66.0 (c (n "cranelift-codegen") (v "0.66.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.66.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.66.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.66.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.66.0") (d #t) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.66.0") (o #t) (d #t) (k 1)) (d (n "peepmatic-runtime") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.27") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "target-lexicon") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)))) (h "0f3gxkmgf164zb3nxkfzpp4p06dvq8xnk4b0a19vcv0p6vzav6wx") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic") ("enable-serde" "serde") ("enable-peepmatic" "peepmatic-runtime") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm32" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.67.0 (c (n "cranelift-codegen") (v "0.67.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.67.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.67.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.67.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.67.0") (d #t) (k 0)) (d (n "gimli") (r "^0.21.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.67.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.67.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.67.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.30") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "souper-ir") (r "^1") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^22.0.0") (o #t) (d #t) (k 0)))) (h "0dp767pxb3cbcywx9wc7b1fa23haji4y951bd0042r078fms42ji") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("enable-serde" "serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.68.0 (c (n "cranelift-codegen") (v "0.68.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.68.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.68.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.68.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.68.0") (d #t) (k 0)) (d (n "gimli") (r "^0.22.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.68.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "souper-ir") (r "^1") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^26.0.1") (o #t) (d #t) (k 0)))) (h "1c9s5n5mk5jg2lqp5z366j9srpmlvdm7y0q7y5vd2v4bc3m3d6by") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("enable-serde" "serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.69.0 (c (n "cranelift-codegen") (v "0.69.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.69.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.69.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.69.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.69.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.69.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.69.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.69.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^29.0.0") (o #t) (d #t) (k 0)))) (h "0q0crdfa7yn8fah3jxac01220wrxswsyg3wal5rwi8rkp2zf8m0s") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("enable-serde" "serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.70.0 (c (n "cranelift-codegen") (v "0.70.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.70.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.70.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.70.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.70.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.70.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.70.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.70.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^32.0.0") (o #t) (d #t) (k 0)))) (h "1f2m3wgymb7j8cilf9hwxazcsx847dls3fnmcl5bv45l48093q4i") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("enable-serde" "serde" "regalloc/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.71.0 (c (n "cranelift-codegen") (v "0.71.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.71.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.71.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.71.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.71.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.71.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^35.0.0") (o #t) (d #t) (k 0)))) (h "06q0ck39bhbzjwgjrss1qfi2sj8a6rc8lq93sg073aqw1xpvjjk5") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.72.0 (c (n "cranelift-codegen") (v "0.72.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.72.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.72.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.72.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.72.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.72.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.72.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.72.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.11") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^35.0.0") (o #t) (d #t) (k 0)))) (h "0yk3af7ci3z207fxi8wr0wk6klwh0fd1xy81hclk15fiz371jmib") (f (quote (("x86") ("x64") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.73.0 (c (n "cranelift-codegen") (v "0.73.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.73.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.73.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.73.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.73.0") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.73.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.73.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.73.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^35.0.0") (o #t) (d #t) (k 0)))) (h "11k65p1qn87scib5p19a6bdm23fz81pf5cka25acj4mcsh62q7zx") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("old-x86-backend") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv")))) (y #t)))

(define-public crate-cranelift-codegen-0.74.0 (c (n "cranelift-codegen") (v "0.74.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.74.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.74.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.74.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.74.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.24.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.74.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.74.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.74.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "wast") (r "^35.0.0") (o #t) (d #t) (k 0)))) (h "0xnj6nz4qdi1sm8ca75kk5n44di4pm4kbj7bwp9f6v7vzwgvzyds") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("old-x86-backend") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv" "s390x"))))))

(define-public crate-cranelift-codegen-0.73.1 (c (n "cranelift-codegen") (v "0.73.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3.2") (k 0)) (d (n "cranelift-bforest") (r "^0.73.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.73.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.73.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.73.1") (d #t) (k 0)) (d (n "gimli") (r "^0.23.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.73.1") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.73.1") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.73.1") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.4") (d #t) (k 0)) (d (n "wast") (r "^35.0.0") (o #t) (d #t) (k 0)))) (h "17nwwhr0v49zzmaqshl7d8cnzgdzdhg8v93y4bh8z5606rs24mlk") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("old-x86-backend") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv"))))))

(define-public crate-cranelift-codegen-0.75.0 (c (n "cranelift-codegen") (v "0.75.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.75.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.75.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.75.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.75.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.24.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.75.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.75.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.75.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "wast") (r "^35.0.0") (o #t) (d #t) (k 0)))) (h "0b2l3jkfnjzx0malpf0m42vc05ywlwl9if7c8zx9sg5zind5zs7b") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("old-x86-backend") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv" "s390x"))))))

(define-public crate-cranelift-codegen-0.76.0 (c (n "cranelift-codegen") (v "0.76.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.76.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.76.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.76.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.76.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.25.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.76.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.76.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.76.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "wast") (r "^36.0.0") (o #t) (d #t) (k 0)))) (h "0x0xkgizj2g8sjjma4rb5bsravk7i2my6ag4v9dxsavms8sl06a8") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("old-x86-backend") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv" "s390x"))))))

(define-public crate-cranelift-codegen-0.77.0 (c (n "cranelift-codegen") (v "0.77.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.77.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.77.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.77.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.77.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.25.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "^0.77.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "^0.77.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "^0.77.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.31") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "wast") (r "^37.0.0") (o #t) (d #t) (k 0)))) (h "18x3jb8nv14gm062spr441fjd5ab1xmlkdvqiqnhdjzxsmz2m3r9") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("old-x86-backend") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "riscv" "s390x"))))))

(define-public crate-cranelift-codegen-0.78.0 (c (n "cranelift-codegen") (v "0.78.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.78.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.78.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.78.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.78.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.25.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "peepmatic") (r "=0.78.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-runtime") (r "=0.78.0") (o #t) (d #t) (k 0)) (d (n "peepmatic-traits") (r "=0.78.0") (o #t) (d #t) (k 0)) (d (n "regalloc") (r "^0.0.32") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)) (d (n "wast") (r "^38.0.0") (o #t) (d #t) (k 0)))) (h "137s7dsq0lqcgbjj3inqs0i6sz3bhv2fmrb1ks8fwbm4bz0n6i7y") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-peephole-optimizers" "peepmatic" "peepmatic-traits" "wast") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde" "cranelift-codegen-shared/enable-serde") ("enable-peepmatic" "peepmatic-runtime" "peepmatic-traits" "serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.79.0 (c (n "cranelift-codegen") (v "0.79.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.79.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.79.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.79.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.79.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.79.0") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.8") (d #t) (k 1)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1vaxlhx5l06dr3n405nqygl4pvvxa8qzrdjz4zr8y3ldqiyccy52") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.79.1 (c (n "cranelift-codegen") (v "0.79.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.79.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.79.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.79.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.79.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.79.1") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1pvjghzd2whlv6j7aqhjxdfyvf34hm0n86sj9dj64w8p85bay7fs") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.80.0 (c (n "cranelift-codegen") (v "0.80.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.80.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.80.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.80.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.80.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.80.0") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0hnnyabj6rjxnxa28nfmckgvb1zkicm2hw9dw5mzzvgph405v7j8") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.81.0 (c (n "cranelift-codegen") (v "0.81.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.81.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.81.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.81.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.81.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.81.0") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0rzacaisbr7viv476qcgk8fl921fb1rsmxnln0csk9wi30k116pc") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.81.1 (c (n "cranelift-codegen") (v "0.81.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.81.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.81.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.81.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.81.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.81.1") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0bzrhar7218nk9j6k9sjj6876rr7spwxh9nw3g0jiqplrdlsy43c") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.80.1 (c (n "cranelift-codegen") (v "0.80.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.80.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.80.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.80.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.80.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.80.1") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.33") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0yml55rm9f18jvnrq1lhj4lqmn9n0sdwr5m96n18yn32md23l99i") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.82.0 (c (n "cranelift-codegen") (v "0.82.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.82.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.82.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.82.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.82.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.82.0") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1x8iy8l8s09danxbyxklpbrcwd13drrl9ddz1miyyvpv4qbl2vdv") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.82.1 (c (n "cranelift-codegen") (v "0.82.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.82.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.82.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.82.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.82.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.82.1") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "02hsg0jlagmwb9imnar17r9jmjfaj4dvxp53d1xk0mh2710bz04b") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.82.2 (c (n "cranelift-codegen") (v "0.82.2") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.82.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.82.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.82.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.82.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.82.2") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0bf4rxar2pcjkn9rpd315kc9pnncx4747yldh01pvbhwqdq7iipg") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.81.2 (c (n "cranelift-codegen") (v "0.81.2") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.81.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.81.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.81.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.81.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.81.2") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1ng64ykixl4jp8cjqqdgf1h74bgklqy2rwv06is8slb2hrszikz9") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("arm32") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.82.3 (c (n "cranelift-codegen") (v "0.82.3") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.82.3") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.82.3") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.82.3") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.82.3") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.82.3") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0fzkf4b8xn9n2fm1f9n7zhhqyqnw2w12nzfhmxh3i8iv593r5w96") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.83.0 (c (n "cranelift-codegen") (v "0.83.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.83.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.83.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.83.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.83.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.83.0") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.9.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc") (r "^0.0.34") (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "171jpnjymdnbn2927lly3y3f8ravgv8qjmglf7wi7wkbybq86p8b") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("regalloc-snapshot" "bincode" "regalloc/enable-serde") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "regalloc/enable-serde" "cranelift-entity/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.84.0 (c (n "cranelift-codegen") (v "0.84.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.84.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.84.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.84.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.84.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.84.0") (o #t) (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^3") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.1.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0gm2n08k4ca1658xx1jibx52wclhsghsc5as8mj8ysirzmq5ya19") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("rebuild-isle" "cranelift-isle" "miette" "cranelift-codegen-meta/rebuild-isle") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("completely-skip-isle-for-ci-deterministic-check") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.85.0 (c (n "cranelift-codegen") (v "0.85.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.85.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.85.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.85.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.85.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.85.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^4.7.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.2.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1i37y5731sq7h6pn0l5qj1rz8x42a9ap39axqixpxxjwd4zw1gcd") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.85.1 (c (n "cranelift-codegen") (v "0.85.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.85.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.85.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.85.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.85.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.85.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^4.7.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.2.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1da6ic4bzzxnx06x89srqivlx9vxa3rdav6j2a7a5923s92ipfip") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.86.0 (c (n "cranelift-codegen") (v "0.86.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.86.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.86.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.86.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.86.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.86.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^4.7.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.0") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1g8hrb8i7inaqc3h354yycn6kll7ifcg2az84aw3gq5m1g7hswas") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.85.2 (c (n "cranelift-codegen") (v "0.85.2") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.85.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.85.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.85.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.85.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.85.2") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^4.7.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.2.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "17fqkinyf3bswkqpjb4v06fxyphmlk251h49ljba0i9lv1b06n9z") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.85.3 (c (n "cranelift-codegen") (v "0.85.3") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.85.3") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.85.3") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.85.3") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.85.3") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.85.3") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^4.7.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.2.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1smv99fbnm2mqzghwllprxy7z680v6dz1f4brln6bgrpgg670hz9") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.86.1 (c (n "cranelift-codegen") (v "0.86.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.86.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.86.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.86.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.86.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.86.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^4.7.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.0") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "14jagk9ghlambscb90475n4jgqnjvrznl0wdbysqrz3yc5gi0za2") (f (quote (("x86") ("unwind" "gimli") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.87.0 (c (n "cranelift-codegen") (v "0.87.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.87.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.87.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.87.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.87.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.87.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0cfwxcnzf9phkxkcij4drqyvwj761qasi44a539il38dkp62lj1b") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.87.1 (c (n "cranelift-codegen") (v "0.87.1") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.87.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.87.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.87.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.87.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.87.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "01nw93wdim6p5rqgvjzhx4v1a064mwgy9ddmnxvxp5mwyyxv90wb") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.88.0 (c (n "cranelift-codegen") (v "0.88.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.88.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.88.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.88.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.88.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.88.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "00asf7jn4dp3lx2a2rv49q0f2ahlghsgc7bkpn3v04d4ax2msbw7") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.88.1 (c (n "cranelift-codegen") (v "0.88.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.88.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.88.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.88.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.88.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.88.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "1bzwlbjlijvfwm84msh2ipn1lrncl00bkmpp47v9gswnmlc21plq") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.89.0 (c (n "cranelift-codegen") (v "0.89.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.89.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.89.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.89.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.89.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.89.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.4.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "1pgrw7wr761njbbpqxya6lgdchiv7f3m0dzkhmmdbvjr5njh1xkh") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.89.1 (c (n "cranelift-codegen") (v "0.89.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.89.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.89.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.89.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.89.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.89.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.4.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "0zkd6gfiazz2lmd29k7c8xz8fdvzlgm4zmj4h9xdz6cbrln5gy5l") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.89.2 (c (n "cranelift-codegen") (v "0.89.2") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.89.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.89.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.89.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.89.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.89.2") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.4.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "0aa6fndp71hjsignfpdrzr6c0wjm1qarvm1kmcaym6fhmgxdih5g") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.88.2 (c (n "cranelift-codegen") (v "0.88.2") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.88.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.88.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.88.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.88.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.88.2") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.6") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.3.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12") (d #t) (k 0)))) (h "0x6gv7jypgnpzq2z6dipb2fvmcyh9skgzhsl2782bp3hhx6dkzhq") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x"))))))

(define-public crate-cranelift-codegen-0.90.0 (c (n "cranelift-codegen") (v "0.90.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.90.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.90.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.90.0") (d #t) (k 0)) (d (n "cranelift-egraph") (r "^0.90.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.90.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.90.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.4.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "1yzjz79y4gs37kbrwyj9d70qmqch1j6mcs0qy53nymrx9hzn4rgk") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.90.1 (c (n "cranelift-codegen") (v "0.90.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.90.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.90.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.90.1") (d #t) (k 0)) (d (n "cranelift-egraph") (r "^0.90.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.90.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.90.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (o #t) (d #t) (k 1)) (d (n "regalloc2") (r "^0.4.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "0ijfrccviczpy7w9ash63pmi8d5dd060k8w89zicfaiws4nysh4v") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "miette" "cranelift-isle/miette-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.91.0 (c (n "cranelift-codegen") (v "0.91.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.91.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.91.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.91.0") (d #t) (k 0)) (d (n "cranelift-egraph") (r "^0.91.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.91.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.91.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.0") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "19wgpfjcvvxnw6j2s5yyh69vxanbpjf47xphvd81w09kkd0p0d77") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.92.0 (c (n "cranelift-codegen") (v "0.92.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.92.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.92.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.92.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.92.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.92.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0qgdq14wzh7klfcq8xrzy68p5iw9ifcc2jw4j6vfz8fcqgrdbq9b") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.93.0 (c (n "cranelift-codegen") (v "0.93.0") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.93.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.93.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.93.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.93.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.93.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0ndgnw2m3f311b8k9ajv05nrxbvfd1ra00mr75phgb4vj5p9yzan") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.91.1 (c (n "cranelift-codegen") (v "0.91.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.91.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.91.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.91.1") (d #t) (k 0)) (d (n "cranelift-egraph") (r "^0.91.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.91.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.91.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.0") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (k 0)))) (h "1p3128qg8b9n8fc0821v55hjcd1my5ngxfnz764a64sr5bnj5c4q") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind") ("core" "hashbrown") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.92.1 (c (n "cranelift-codegen") (v "0.92.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.92.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.92.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.92.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.92.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.92.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1jldddzzq2q9q12h27hl8bpq4m2b6qnjj8snjdrdmmcsmgbihrmk") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.93.1 (c (n "cranelift-codegen") (v "0.93.1") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.93.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.93.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.93.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.93.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.93.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0yva6vrgp4vdrq1a4h2gail111yjrq3q007i66b79pr7d4rzm2cl") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.94.0 (c (n "cranelift-codegen") (v "0.94.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.94.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.94.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.94.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.94.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.94.0") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.6.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0ijxqhhndkwh0mmlr6x6kl7rq8j7ifcvflbw4fg6ybyshny792h3") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.95.0 (c (n "cranelift-codegen") (v "0.95.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.95.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.95.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.95.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.95.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.95.0") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.6.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "00xh05khzfzjn2y4bak7j04hmhv79l18l64kvp1bi6m204f08l4b") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.93.2 (c (n "cranelift-codegen") (v "0.93.2") (d (list (d (n "arrayvec") (r "^0.7") (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.93.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.93.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.93.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.93.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.93.2") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.26.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.5.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0gk2l2xwys8zb9l9075a77gq9rv36bdnj0s2r41n3xdnm6n32d95") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.95.1 (c (n "cranelift-codegen") (v "0.95.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.95.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.95.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.95.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.95.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.95.1") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.6.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "081j3mk4dkwwfhznpc52pvisrc71iy4271y3xsd0w9xjscdc7s66") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.94.1 (c (n "cranelift-codegen") (v "0.94.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.94.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.94.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.94.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.94.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.94.1") (d #t) (k 1)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.6.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "047m1frm0h7y71ivmq1bkfv2r39jih685p4wz30yfnq65vfsj1pd") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.96.0 (c (n "cranelift-codegen") (v "0.96.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.96.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.96.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.96.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.96.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.96.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.96.0") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.8.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1iaj80i4p297mmsdlxmvj484npi0qzx95r7nx2y8wcrdz1sxvvx3") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.96.1 (c (n "cranelift-codegen") (v "0.96.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.96.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.96.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.96.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.96.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.96.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.96.1") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.8.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0fjv5br2kigzb434pd4a5k8mm3h9f5lcgmr9r7rl4bjncdgxlf3v") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.96.2 (c (n "cranelift-codegen") (v "0.96.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.96.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.96.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.96.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.96.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.96.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.96.2") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.8.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1yyzng7bsd6lll8gc80fb6sbsz8sa9iq36c84pkwvn47c4z18dmw") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.96.3 (c (n "cranelift-codegen") (v "0.96.3") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.96.3") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.96.3") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.96.3") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.96.3") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.96.3") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.96.3") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.8.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "03hik7kzb6j3j8w96v1fg1jnrcy0fy8f66van5cbvw6f9b9d97k1") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "trace-log") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.96.4 (c (n "cranelift-codegen") (v "0.96.4") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.96.4") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.96.4") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.96.4") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.96.4") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.96.4") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.96.4") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.8.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "19p0vhrwjskdy1xz9zva89pw46q6i2wdwm1mil25pbpc0jzjgh77") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("experimental_x64") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.97.0 (c (n "cranelift-codegen") (v "0.97.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.97.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.97.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.97.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.97.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.97.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.97.0") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0ns4pn6xcp1al25pxiaqvjc67jp318qvfpgjzrkdyslr6if5bahj") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.97.1 (c (n "cranelift-codegen") (v "0.97.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.97.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.97.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.97.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.97.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.97.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.97.1") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1nf7jq5jragc16lj3jng453axxv7m1z0h4bvr5ypzyjk1yl7pw3v") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.98.0 (c (n "cranelift-codegen") (v "0.98.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.98.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.98.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.98.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.98.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.98.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.98.0") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "103skdxkpnraic7y1hsvm5lxcvpairwjmdlmkjyg9ig64lly2c92") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.98.1 (c (n "cranelift-codegen") (v "0.98.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.98.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.98.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.98.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.98.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.98.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.98.1") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0mwgjma9gakp95hvpx6cnha0842fq5z54fz4vxppdl0s9qiwlz03") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.99.0 (c (n "cranelift-codegen") (v "0.99.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.99.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.99.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.99.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.99.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.99.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.99.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1jqi66kcss073lmb0yrr2vawpb6nb3iw907f5vm08lh87zw16hwf") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.99.1 (c (n "cranelift-codegen") (v "0.99.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.99.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.99.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.99.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.99.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.99.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.99.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0p1p054g8l6yfgjpnmm5i602ifp6frmqg261ifznv6mw34xrx11q") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.97.2 (c (n "cranelift-codegen") (v "0.97.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.97.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.97.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.97.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.97.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.97.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.97.2") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.1") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0ywk6bj9kbszniv1m4cp1cxax4f6mgr5z2ffj7kgmkh0d7lismcm") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.98.2 (c (n "cranelift-codegen") (v "0.98.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.98.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.98.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.98.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.98.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.98.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.98.2") (d #t) (k 1)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1w0lr6rbxk0ix3c0s5k49nykcd06xw1yingfandwxsvhv3fi9m26") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("testing_hooks") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.99.2 (c (n "cranelift-codegen") (v "0.99.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.99.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.99.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.99.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.99.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.99.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.99.2") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.27.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13.2") (f (quote ("raw"))) (d #t) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.94") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "001dkk2h0xwdr7asf804grj0jmjirjsmnn7ws57zy6vrayjb378n") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.100.0 (c (n "cranelift-codegen") (v "0.100.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.100.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.100.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.100.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.100.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.100.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.100.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0f00jn0rlcfdj1zp595qdzbdmkmks2lxhv2p72j5vpf22hrlha2m") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.101.0 (c (n "cranelift-codegen") (v "0.101.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.101.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.101.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.101.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.101.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.101.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.101.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "041zz6shxcnahyvzcqxa90834kw638qzd20ckbsam84rwsj7r8bp") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.101.1 (c (n "cranelift-codegen") (v "0.101.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.101.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.101.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.101.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.101.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.101.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.101.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "15h3gwnr6mwdjhsdyyr68vjrwc05p4x2fnkh4siafvha4awqzjqn") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.100.1 (c (n "cranelift-codegen") (v "0.100.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.100.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.100.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.100.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.100.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.100.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.100.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "1i9xgdif6h136sn0gyk98q4n407hw6anbhqw40ayj8aiq3nk01r1") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.101.2 (c (n "cranelift-codegen") (v "0.101.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.101.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.101.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.101.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.101.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.101.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.101.2") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0ygs8wvhrsq8wp76y6l1b1aj29rzrqzpaqpql3hpvywp1v2jlg24") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.101.3 (c (n "cranelift-codegen") (v "0.101.3") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.101.3") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.101.3") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.101.3") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.101.3") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.101.3") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.101.3") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "171qy6s6ig4x8zfjdd4vijxpcggbpgfk28x5zx67vc90lamq934y") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.101.4 (c (n "cranelift-codegen") (v "0.101.4") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.101.4") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.101.4") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.101.4") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.101.4") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.101.4") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.101.4") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.2") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.3") (f (quote ("std"))) (k 0)))) (h "0a7x9nxwazdjf9iiph2c90z9qmiq14qlxzd89jx47b6xwl88vcgb") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.102.0 (c (n "cranelift-codegen") (v "0.102.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.102.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.102.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.102.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.102.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.102.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.102.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "0mlis6cz4r5iv2xzsgld0s46cy9mwb0m47wkx0bj94cjdc1nqlir") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.102.1 (c (n "cranelift-codegen") (v "0.102.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.102.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.102.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.102.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.102.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.102.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.102.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "0g182vx482swqrrylcjn08c571k8ihl620xqamgn24dz70czd7ra") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.103.0 (c (n "cranelift-codegen") (v "0.103.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.103.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.103.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.103.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.103.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.103.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.103.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "1n00c2g1cpd599hdzyaj54l5fy1c0pdvavgaw96qm71fxw1vjgbb") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.104.0 (c (n "cranelift-codegen") (v "0.104.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.104.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.104.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.104.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.104.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.104.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.104.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "036cn01giqvgm9sw1rjbw84izv9kk7va1q5hf9gpxjnvbcyx1f79") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.104.1 (c (n "cranelift-codegen") (v "0.104.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.104.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.104.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.104.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.104.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.104.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.104.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "1qf0gzsa1qjzmm99dj03gc29hm97z2dndbfj4163wm15piy4dywz") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.105.0 (c (n "cranelift-codegen") (v "0.105.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.105.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.105.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.105.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.105.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.105.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.105.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "02j3xc3pycpy22hf0izgrijsgikzbfg8zgr2lah77v10b5ifdwdg") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.105.1 (c (n "cranelift-codegen") (v "0.105.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.105.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.105.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.105.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.105.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.105.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.105.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "0l4kdr7x53kj9i5h2ah1h56g4a2ir0gk9dkyqhzaa1366axnr720") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.104.2 (c (n "cranelift-codegen") (v "0.104.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.104.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.104.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.104.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.104.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.104.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.104.2") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "1zs2b00rxzlhw222ii5mcw0s84h4ip44aj5h906nrndmirrikx9s") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.105.2 (c (n "cranelift-codegen") (v "0.105.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.105.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.105.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.105.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.105.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.105.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.105.2") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "1q7wdrmfqddl2n26v4pz0v2xvy99d8lk3hqvvqi6vzhv0z32gn0s") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.105.3 (c (n "cranelift-codegen") (v "0.105.3") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.105.3") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.105.3") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.105.3") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.105.3") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.105.3") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.105.3") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "15dxcljx0vbkzxwq76h43wsmkg3m2dzkzrf35a1nwl27i8rs8h7g") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.106.0 (c (n "cranelift-codegen") (v "0.106.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.106.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.106.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.106.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.106.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.106.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.106.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (f (quote ("std"))) (k 0)))) (h "1m486wyzdw3kkvy3ra45zs42sb8ly8x1h9rqay919v1cndnhdd8i") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.106.1 (c (n "cranelift-codegen") (v "0.106.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.106.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.106.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.106.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.106.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.106.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.106.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (f (quote ("std"))) (k 0)))) (h "0x2dkmc2zh3dviz11jp0ylczdz7mzbjd5lds4pa4iyjvpa232zv3") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.105.4 (c (n "cranelift-codegen") (v "0.105.4") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.105.4") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.105.4") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.105.4") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.105.4") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.105.4") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.105.4") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "0v2h368s0qfbpcxzwzf86850sbfkb1dsd7ay7wwgqhdynsmj5fcn") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.106.2 (c (n "cranelift-codegen") (v "0.106.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.106.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.106.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.106.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.106.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.106.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.106.2") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (f (quote ("std"))) (k 0)))) (h "1xqdwwhiavpbmi16k3xamgi8nnpzyris1y9zvcljqgymgynd1xyi") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.104.3 (c (n "cranelift-codegen") (v "0.104.3") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.104.3") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.104.3") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.104.3") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.104.3") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.104.3") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.104.3") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.12") (f (quote ("std"))) (k 0)))) (h "0plnng57gld5sqy0ag1wk270568wfh1lq5ddg0bkl4ijsnzwjvyw") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.107.0 (c (n "cranelift-codegen") (v "0.107.0") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.107.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.107.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.107.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.107.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.107.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.107.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker" "trace-log"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (f (quote ("std"))) (k 0)))) (h "0kdcra516z75lmx87xzjn3r25mjmpfpmdcxc54kkfmmz51dlak1h") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.107.1 (c (n "cranelift-codegen") (v "0.107.1") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.107.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.107.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.107.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.107.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.107.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.107.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker" "trace-log"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (f (quote ("std"))) (k 0)))) (h "1bdnjha4mkwfdlbl27v9949z59vaklmv10z2wqsnmi1dg7d5bfrm") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.107.2 (c (n "cranelift-codegen") (v "0.107.2") (d (list (d (n "anyhow") (r "^1.0.22") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.107.2") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.107.2") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.107.2") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.107.2") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.107.2") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.107.2") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "std" "write"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker" "trace-log"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (f (quote ("std"))) (k 0)))) (h "04wyk64z6x04dsa9g9miyi04gmh6wgliwj9cw06g0wwirpjzvrwy") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "bincode" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.108.0 (c (n "cranelift-codegen") (v "0.108.0") (d (list (d (n "anyhow") (r "^1.0.22") (f (quote ("std"))) (o #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.108.0") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.108.0") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.108.0") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.108.0") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.108.0") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.108.0") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports" "rayon"))) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "write" "std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "postcard") (r "^1.0.8") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker" "trace-log"))) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (d #t) (k 0)))) (h "04ffd44pl2z1w7fl0jmipib75xrmz4hgh2p1cjy6nipg0lbs1c56") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "postcard" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

(define-public crate-cranelift-codegen-0.108.1 (c (n "cranelift-codegen") (v "0.108.1") (d (list (d (n "anyhow") (r "^1.0.22") (f (quote ("std"))) (o #t) (k 0)) (d (n "bumpalo") (r "^3") (d #t) (k 0)) (d (n "capstone") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "cranelift-bforest") (r "^0.108.1") (d #t) (k 0)) (d (n "cranelift-codegen-meta") (r "^0.108.1") (d #t) (k 1)) (d (n "cranelift-codegen-shared") (r "^0.108.1") (d #t) (k 0)) (d (n "cranelift-control") (r "^0.108.1") (d #t) (k 0)) (d (n "cranelift-entity") (r "^0.108.1") (d #t) (k 0)) (d (n "cranelift-isle") (r "=0.108.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5.0") (f (quote ("html_reports" "rayon"))) (k 2)) (d (n "gimli") (r "^0.28.0") (f (quote ("read" "write" "std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (f (quote ("raw"))) (k 0)) (d (n "log") (r "^0.4.8") (k 0)) (d (n "postcard") (r "^1.0.8") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regalloc2") (r "^0.9.3") (f (quote ("checker" "trace-log"))) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "serde_derive") (r "^1.0.188") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "similar") (r "^2.1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6.1") (f (quote ("union"))) (d #t) (k 0)) (d (n "souper-ir") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.13") (d #t) (k 0)))) (h "1m1229l3icvag7gi6457v29rq9lm69p4v46rgx5n8k6ysmkrhqfy") (f (quote (("x86") ("unwind" "gimli") ("trace-log") ("timing") ("std") ("souper-harvest" "souper-ir" "souper-ir/stringify") ("s390x") ("riscv64") ("isle-in-source-tree") ("isle-errors" "cranelift-isle/fancy-errors") ("incremental-cache" "enable-serde" "postcard" "sha2") ("host-arch") ("enable-serde" "serde" "serde_derive" "cranelift-entity/enable-serde" "regalloc2/enable-serde" "smallvec/serde") ("disas" "anyhow" "capstone") ("default" "std" "unwind" "host-arch" "timing") ("core") ("arm64") ("all-arch" "x86" "arm64" "s390x" "riscv64"))))))

