(define-module (crates-io ts xl tsxlib) #:use-module (crates-io))

(define-public crate-tsxlib-0.1.0 (c (n "tsxlib") (v "0.1.0") (d (list (d (n "bincode") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "chrono") (r ">=0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r ">=1.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0") (d #t) (k 0)) (d (n "parquet") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "seahash") (r ">=4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0") (o #t) (d #t) (k 0)))) (h "1m5cq6iacfb7wfbwck2jp7yzf79vpw3c4d8k870ar7nn6jhmpbgk") (f (quote (("parq" "parquet") ("json" "serde_json") ("hash_precompare" "bincode" "seahash") ("default"))))))

(define-public crate-tsxlib-0.1.1 (c (n "tsxlib") (v "0.1.1") (d (list (d (n "bincode") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "chrono") (r ">=0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r ">=1.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0") (d #t) (k 0)) (d (n "parquet") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "seahash") (r ">=4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0") (o #t) (d #t) (k 0)))) (h "0770417m38c837wxmrzv3n0r6n7p2dijazvnjpa7jy2s6wkrgrnp") (f (quote (("parq" "parquet") ("json" "serde_json") ("hash_precompare" "bincode" "seahash") ("default"))))))

(define-public crate-tsxlib-0.1.2 (c (n "tsxlib") (v "0.1.2") (d (list (d (n "bincode") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "chrono") (r ">=0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r ">=1.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0") (d #t) (k 0)) (d (n "parquet") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "seahash") (r ">=4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0") (o #t) (d #t) (k 0)))) (h "0hrjhcj0cd6wqvrrlh4lhahn4hmqjrdr1zhvlj457kas4gmcw3cx") (f (quote (("parq" "parquet") ("json" "serde_json") ("hash_precompare" "bincode" "seahash") ("default"))))))

(define-public crate-tsxlib-0.1.3 (c (n "tsxlib") (v "0.1.3") (d (list (d (n "bincode") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "chrono") (r ">=0.4.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "csv") (r ">=1.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.9.0") (d #t) (k 0)) (d (n "parquet") (r ">=1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 2)) (d (n "rayon") (r "^1.5.0") (d #t) (k 2)) (d (n "seahash") (r ">=4.0.0") (o #t) (d #t) (k 0)) (d (n "serde") (r ">=1.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0") (o #t) (d #t) (k 0)))) (h "11ypfiz0ka22f0yk6f4k46qblv8hvwxp8f4lqi1zki7pdll4d185") (f (quote (("parq" "parquet") ("json" "serde_json") ("hash_precompare" "bincode" "seahash") ("default"))))))

