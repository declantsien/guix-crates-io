(define-module (crates-io ts yn tsyncp) #:use-module (crates-io))

(define-public crate-tsyncp-0.1.3 (c (n "tsyncp") (v "0.1.3") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0yrs56pcnwc6wzv2rf7hqb50m1s7s8fnkayzhl1ak2valksh31sq") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("default" "json" "protobuf" "rkyv")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.1.4 (c (n "tsyncp") (v "0.1.4") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0z4qz97bq1hf83p4sjwvh8yrlnz3ldg1ya076k2dqgbi7l6ajs5p") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.1.5 (c (n "tsyncp") (v "0.1.5") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "19ndn9rqhg44jazf08zv6bprfg4da86x0vlanwamj27kqjvxf8fx") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.1.6 (c (n "tsyncp") (v "0.1.6") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1nj2c8glhj14my80ihlkr36gf2szg2y64rb3h6qpzrd7wp0cifn1") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.1.7 (c (n "tsyncp") (v "0.1.7") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0fpj0q2b46rhmi1cpqpjr65a0c51krf00ch6m87gn62b8drxwchq") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.0 (c (n "tsyncp") (v "0.2.0") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "11m1hv8s699idsl8g67sl5psh882pp1yab1vg3vfw6q2ggg5g86i") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.1 (c (n "tsyncp") (v "0.2.1") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0bpwcbmx6dlxpvd54wgy6azr6gcn11qkr1940csyjn2qhr7n0sjx") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.2 (c (n "tsyncp") (v "0.2.2") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "10fyghiwcqwgydh9g39w0vfg96306wxxnblcrn6x96fi76fy1wik") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.3 (c (n "tsyncp") (v "0.2.3") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1p0l3vsbh6z7lmrfvnczv6xf87dvc55algd9qhk5cs7zv6g1rym8") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.4 (c (n "tsyncp") (v "0.2.4") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0wlwngqs7npiwf862c5xc8rxfpmbwqabwk7smrms0qcml64spxxp") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.5 (c (n "tsyncp") (v "0.2.5") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1c4n9cgrs9lb0cvx3ynkpg4apsjpqxya5s9jq5g85pr18s3lvnpb") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.2.6 (c (n "tsyncp") (v "0.2.6") (d (list (d (n "bytecheck") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rkyv") (r "^0.7") (f (quote ("validation"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "0gxswallfygmv5c9sbg2dibdsyzmrn08vz33nwbr31gfx2x5js2v") (f (quote (("protobuf" "prost/std") ("json" "serde" "serde_json") ("full" "json" "protobuf" "rkyv") ("default" "full")))) (s 2) (e (quote (("rkyv" "dep:rkyv" "bytecheck"))))))

(define-public crate-tsyncp-0.3.0 (c (n "tsyncp") (v "0.3.0") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "fake") (r "^2.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std"))) (o #t) (k 0)) (d (n "prost") (r "^0.10") (f (quote ("std" "prost-derive"))) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "snafu") (r "^0.7") (f (quote ("default" "futures" "backtraces-impl-backtrace-crate"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "time" "net" "macros" "io-util" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "net" "macros" "rt-multi-thread" "time"))) (d #t) (k 2)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "115wv2jww756hb5j85l0v87yp6y3cmsrhrszlwriyhyql36m9iv2") (f (quote (("json" "serde" "serde_json") ("full" "json" "prost" "bincode") ("default" "full")))) (s 2) (e (quote (("prost" "dep:prost" "prost/std") ("bincode" "serde" "dep:bincode"))))))

