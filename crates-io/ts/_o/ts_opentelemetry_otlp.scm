(define-module (crates-io ts _o ts_opentelemetry_otlp) #:use-module (crates-io))

(define-public crate-ts_opentelemetry_otlp-0.13.0-beta.1 (c (n "ts_opentelemetry_otlp") (v "0.13.0-beta.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "grpcio") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.18") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio") (r "^1.0") (f (quote ("sync" "rt"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("net"))) (d #t) (k 2)) (d (n "tonic") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "ts_opentelemetry_api") (r "^0.20.0-beta.1") (k 0)) (d (n "ts_opentelemetry_http") (r "^0.9.0-beta.1") (o #t) (d #t) (k 0)) (d (n "ts_opentelemetry_proto") (r "^0.3.0-beta.1") (k 0)) (d (n "ts_opentelemetry_sdk") (r "^0.20.0-beta.1") (k 0)) (d (n "ts_opentelemetry_semantic_conventions") (r "^0.12.0-beta.1") (d #t) (k 0)))) (h "115pgz7zbg04d0wpabhcmi09jvhvf4xh8bya6rvv78biriaya3dx") (f (quote (("trace" "ts_opentelemetry_api/trace" "ts_opentelemetry_sdk/trace" "ts_opentelemetry_proto/traces") ("tls-roots" "tls" "tonic/tls-roots") ("tls" "tonic/tls") ("surf-client" "surf" "ts_opentelemetry_http/surf") ("serialize" "serde") ("reqwest-rustls" "reqwest" "reqwest/rustls-tls-native-roots") ("reqwest-client" "reqwest" "ts_opentelemetry_http/reqwest") ("reqwest-blocking-client" "reqwest/blocking" "ts_opentelemetry_http/reqwest") ("openssl-vendored" "grpcio/openssl-vendored") ("openssl" "grpcio/openssl") ("metrics" "ts_opentelemetry_api/metrics" "ts_opentelemetry_sdk/metrics" "ts_opentelemetry_proto/metrics" "grpc-tonic") ("logs" "ts_opentelemetry_api/logs" "ts_opentelemetry_sdk/logs" "ts_opentelemetry_proto/logs") ("integration-testing" "tonic" "prost" "tokio/full" "trace") ("http-proto" "prost" "ts_opentelemetry_http" "ts_opentelemetry_proto/gen-tonic-messages" "http" "trace" "metrics") ("grpc-tonic" "tonic" "prost" "http" "tokio" "ts_opentelemetry_proto/gen-tonic") ("grpc-sys" "grpcio" "ts_opentelemetry_proto/gen-protoc" "protobuf") ("default" "grpc-tonic" "trace")))) (r "1.60")))

