(define-module (crates-io ts _o ts_opentelemetry_sdk) #:use-module (crates-io))

(define-public crate-ts_opentelemetry_sdk-0.20.0-beta.1 (c (n "ts_opentelemetry_sdk") (v "0.20.0-beta.1") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.17") (f (quote ("std" "sink" "async-await-macro"))) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pprof") (r "^0.11.1") (f (quote ("flamegraph" "criterion"))) (d #t) (k 2)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "regex") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ts_opentelemetry_api") (r "^0.20.0-beta.1") (d #t) (k 0)) (d (n "ts_opentelemetry_http") (r "^0.9.0-beta.1") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0ikg036mnnp26285csa80cd87bj7phhagcfklm581fpfw049ssxj") (f (quote (("trace" "ts_opentelemetry_api/trace" "crossbeam-channel" "rand" "async-trait" "percent-encoding") ("testing" "ts_opentelemetry_api/testing" "trace" "metrics" "logs" "rt-async-std" "rt-tokio" "rt-tokio-current-thread" "tokio/macros" "tokio/rt-multi-thread") ("rt-tokio-current-thread" "tokio" "tokio-stream") ("rt-tokio" "tokio" "tokio-stream") ("rt-async-std" "async-std") ("metrics" "ts_opentelemetry_api/metrics" "regex" "async-trait") ("logs" "ts_opentelemetry_api/logs" "crossbeam-channel" "async-trait" "serde_json") ("jaeger_remote_sampler" "trace" "ts_opentelemetry_http" "http" "serde" "serde_json" "url") ("default" "trace")))) (r "1.60")))

