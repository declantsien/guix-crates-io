(define-module (crates-io rv #{64}# rv64emu) #:use-module (crates-io))

(define-public crate-rv64emu-0.1.0 (c (n "rv64emu") (v "0.1.0") (d (list (d (n "bitfield-struct") (r "^0.5.3") (d #t) (k 0)) (d (n "capstone") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (f (quote ("alloc"))) (k 0)) (d (n "elf") (r "^0.7.2") (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "hashlink") (r "^0.8.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "sdl2") (r "^0.35") (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^4.1.0") (d #t) (k 2)))) (h "05x9fgfjribp5mlmifr9w6gibklqzcwc7n3j2mqb9h0nnb0l6g62") (f (quote (("support_am") ("std" "alloc") ("default" "std") ("alloc")))) (y #t) (s 2) (e (quote (("rv_debug_trace" "dep:capstone" "dep:crossbeam-channel" "std") ("device_sdl2" "dep:sdl2" "support_am" "std"))))))

(define-public crate-rv64emu-0.1.1 (c (n "rv64emu") (v "0.1.1") (d (list (d (n "bitfield-struct") (r "^0.5.3") (d #t) (k 0)) (d (n "capstone") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1.4") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.7") (o #t) (d #t) (k 0)) (d (n "crossbeam-queue") (r "^0.3.8") (f (quote ("alloc"))) (k 0)) (d (n "elf") (r "^0.7.2") (k 0)) (d (n "enum_dispatch") (r "^0.3.11") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14") (d #t) (k 0)) (d (n "hashlink") (r "^0.8.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "sdl2") (r "^0.35") (o #t) (d #t) (k 0)) (d (n "simple_logger") (r "^4.1.0") (d #t) (k 2)))) (h "0d3b0w2qzrw4czldvxzdjfhm0jg20fbrd88m19ccw9sliff1llx7") (f (quote (("support_am") ("std" "alloc") ("default" "std") ("alloc")))) (s 2) (e (quote (("rv_debug_trace" "dep:capstone" "dep:crossbeam-channel" "std") ("device_sdl2" "dep:sdl2" "support_am" "std"))))))

