(define-module (crates-io ps -s ps-signalling) #:use-module (crates-io))

(define-public crate-ps-signalling-0.1.0 (c (n "ps-signalling") (v "0.1.0") (d (list (d (n "clap") (r "^4.3.11") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colog") (r "^1.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "paste") (r "^1.0.13") (d #t) (k 0)) (d (n "protobuf") (r "^3") (d #t) (k 0)) (d (n "protobuf-codegen") (r "^3") (d #t) (k 1)) (d (n "protobuf-json-mapping") (r "^3.2.0") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.0") (d #t) (k 1)) (d (n "quote") (r "^1.0.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1.28") (f (quote ("macros" "sync" "rt-multi-thread"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "warp") (r "^0.3") (f (quote ("tls"))) (d #t) (k 0)))) (h "1w8ddnhp13k7zmmpk45csl5vvxva7gn4394sfrc6zmj92rgrrpya")))

