(define-module (crates-io ps sh pssh-box) #:use-module (crates-io))

(define-public crate-pssh-box-0.1.0 (c (n "pssh-box") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.24") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hxdmp") (r "^0.2.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (f (quote ("prost-derive"))) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize" "overlapped-lists" "serde-types"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.112") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.15") (d #t) (k 0)) (d (n "serde_with") (r "^3.5.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.32") (f (quote ("derive"))) (d #t) (k 0)))) (h "0a92vnpkiil4ygs79b7vv486qqkq9lfzpkb8rgpak0q36jb00agk")))

(define-public crate-pssh-box-0.1.1 (c (n "pssh-box") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.24") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hxdmp") (r "^0.2.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (f (quote ("prost-derive"))) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize" "overlapped-lists" "serde-types"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.15") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.32") (f (quote ("derive"))) (d #t) (k 0)))) (h "16s0m8cwfsm6a5n9xrh65raghpa1nmx7ak8r260dcfmw0pcd7fi7")))

(define-public crate-pssh-box-0.1.2 (c (n "pssh-box") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.24") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hxdmp") (r "^0.2.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (f (quote ("prost-derive"))) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "protobuf-src") (r "^1.1.0") (o #t) (d #t) (k 1)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize" "overlapped-lists" "serde-types"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.15") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.0") (f (quote ("base64"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "zerocopy") (r "^0.7.32") (f (quote ("derive"))) (d #t) (k 0)))) (h "1ii8c7nv8hffcg59myxkcqq0d2nyr5w9kkill9qkk1v7n0wbq7sd") (f (quote (("default" "vendored-protoc")))) (s 2) (e (quote (("vendored-protoc" "dep:protobuf-src"))))))

(define-public crate-pssh-box-0.1.3 (c (n "pssh-box") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.3.24") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hxdmp") (r "^0.2.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (f (quote ("prost-derive"))) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "protobuf-src") (r "^1.1.0") (o #t) (d #t) (k 1)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize" "overlapped-lists" "serde-types"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.113") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.15") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "time"))) (d #t) (k 2)) (d (n "zerocopy") (r "^0.7.32") (f (quote ("derive"))) (d #t) (k 0)))) (h "0l7aihvqyz19pm4n4pzjd4aizjfsnjjc59gpv9kn9vgv80dr2vm9") (f (quote (("default" "vendored-protoc")))) (s 2) (e (quote (("vendored-protoc" "dep:protobuf-src"))))))

(define-public crate-pssh-box-0.1.4 (c (n "pssh-box") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "=4.3.24") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hxdmp") (r "^0.2.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (f (quote ("prost-derive"))) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "protobuf-src") (r "^1.1.0") (o #t) (d #t) (k 1)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize" "overlapped-lists" "serde-types"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.15") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "time"))) (d #t) (k 2)) (d (n "zerocopy") (r "^0.7.32") (f (quote ("derive"))) (d #t) (k 0)))) (h "0h9phm21ilwwkg9k1abgnmvnjmai3yzsmqggipa9cw8yzvcdpa0h") (f (quote (("default" "vendored-protoc")))) (s 2) (e (quote (("vendored-protoc" "dep:protobuf-src"))))))

(define-public crate-pssh-box-0.1.5 (c (n "pssh-box") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.80") (d #t) (k 0)) (d (n "base64") (r "^0.21.7") (d #t) (k 0)) (d (n "bstr") (r "^1.9.1") (d #t) (k 0)) (d (n "byteorder") (r "^1.5.0") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "=4.3.24") (f (quote ("cargo" "unicode" "wrap_help"))) (d #t) (k 2)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "hxdmp") (r "^0.2.1") (d #t) (k 0)) (d (n "num_enum") (r "^0.7.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "prost") (r "^0.12.3") (f (quote ("prost-derive"))) (d #t) (k 0)) (d (n "prost-build") (r "^0.12") (d #t) (k 1)) (d (n "prost-types") (r "^0.12.3") (d #t) (k 0)) (d (n "protobuf-src") (r "^1.1.0") (o #t) (d #t) (k 1)) (d (n "quick-xml") (r "^0.31.0") (f (quote ("serialize" "overlapped-lists" "serde-types"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.24") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-xml-rs") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "serde_path_to_error") (r "^0.1.15") (d #t) (k 0)) (d (n "serde_with") (r "^3.6.1") (f (quote ("base64"))) (d #t) (k 0)) (d (n "test-log") (r "^0.2.15") (d #t) (k 2)) (d (n "tokio") (r "^1.36.0") (f (quote ("rt-multi-thread" "time" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "time"))) (d #t) (k 2)) (d (n "zerocopy") (r "^0.7.32") (f (quote ("derive"))) (d #t) (k 0)))) (h "12br8lr2pnsw7gkwqsdms20jznigdrh5sdix38n0153svzb283wd") (f (quote (("default" "vendored-protoc")))) (s 2) (e (quote (("vendored-protoc" "dep:protobuf-src"))))))

