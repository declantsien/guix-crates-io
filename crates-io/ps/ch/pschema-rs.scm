(define-module (crates-io ps ch pschema-rs) #:use-module (crates-io))

(define-public crate-pschema-rs-0.0.1 (c (n "pschema-rs") (v "0.0.1") (d (list (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.1") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.1") (f (quote ("bundled"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "mimalloc") (r "^0.1.37") (t "cfg(target_env = \"msvc\")") (k 0)) (d (n "polars") (r "^0.29.0") (f (quote ("lazy" "is_in" "performant" "dtype-u8" "parquet" "chunked_ids"))) (d #t) (k 0)) (d (n "pregel-rs") (r "^0.0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "wikidata") (r "^0.3.0") (d #t) (k 0)) (d (n "wikidata-rs") (r "^0.0.1") (d #t) (k 0)))) (h "00wzl2y057i1m8w962jdq4ndi1px7sacj36kip6wbh4rffshndrw")))

(define-public crate-pschema-rs-0.0.2 (c (n "pschema-rs") (v "0.0.2") (d (list (d (n "bimap") (r "^0.6.3") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.1") (d #t) (k 0)) (d (n "duckdb") (r "^0.7.1") (f (quote ("bundled"))) (d #t) (k 2)) (d (n "jemallocator") (r "^0.5.0") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "mimalloc") (r "^0.1.37") (t "cfg(target_env = \"msvc\")") (k 0)) (d (n "polars") (r "^0.29.0") (f (quote ("lazy" "is_in" "performant" "dtype-u8" "parquet" "chunked_ids" "list_eval"))) (d #t) (k 0)) (d (n "pregel-rs") (r "^0.0.9") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24") (d #t) (k 0)) (d (n "wikidata") (r "^0.3.0") (d #t) (k 0)) (d (n "wikidata-rs") (r "^0.0.1") (d #t) (k 0)))) (h "0hb3n70y0ffl5znwvp5xivnpzzw56x386y5vgcgvy456w1q65g2x")))

