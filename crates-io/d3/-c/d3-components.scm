(define-module (crates-io d3 -c d3-components) #:use-module (crates-io))

(define-public crate-d3-components-0.1.0 (c (n "d3-components") (v "0.1.0") (d (list (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "config") (r "^0.10") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "d3-core") (r "^0.1.1") (d #t) (k 0)) (d (n "d3-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "0r5yzwxxg3nay99lx2c113pnqm2llnj5ha0qpgr506r8988ydm1s")))

(define-public crate-d3-components-0.1.2 (c (n "d3-components") (v "0.1.2") (d (list (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "config") (r "^0.10") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "d3-core") (r "^0.1.2") (d #t) (k 0)) (d (n "d3-derive") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp"))) (d #t) (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 2)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "18s8kkgsr4v8rawza4592kjlam2n1j8ckd0ygzvw8rnkscp1kkr6")))

(define-public crate-d3-components-0.1.3 (c (n "d3-components") (v "0.1.3") (d (list (d (n "atomic_refcell") (r "^0.1") (d #t) (k 0)) (d (n "config") (r "^0.10") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8") (d #t) (k 0)) (d (n "d3-core") (r "^0.1.3") (d #t) (k 0)) (d (n "d3-derive") (r "^0.1.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mio") (r "^0.7") (f (quote ("os-poll" "tcp" "udp"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "ringbuf") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 2)) (d (n "smart-default") (r "^0.6") (d #t) (k 0)) (d (n "super-slab") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (k 0)))) (h "043c37klppmmlkhp53w4kbsmb8npaapi3x8s73ssbdv4qx0wbkjv")))

