(define-module (crates-io d3 xs d3xs) #:use-module (crates-io))

(define-public crate-d3xs-0.1.0 (c (n "d3xs") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 0)) (d (n "clap") (r "^4.3.19") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "css-minify") (r "^0.3.1") (d #t) (k 1)) (d (n "d3xs-protocol") (r "^0.1.0") (f (quote ("ipc"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.28") (d #t) (k 0)) (d (n "handlebars") (r "^4.3.7") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 1)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "minify-js") (r "^0.5.6") (d #t) (k 1)) (d (n "serde") (r "^1.0.174") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.103") (d #t) (k 0)) (d (n "sha2") (r "^0.10.7") (d #t) (k 1)) (d (n "tokio") (r "^1.29.1") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)) (d (n "toml") (r "^0.8") (d #t) (k 0)) (d (n "warp") (r "^0.3.5") (d #t) (k 0)))) (h "156z8k72jckjxppqj17lijijkafxsqlx2v0f9a7v3a2s3a889vb5")))

