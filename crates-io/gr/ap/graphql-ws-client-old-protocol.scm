(define-module (crates-io gr ap graphql-ws-client-old-protocol) #:use-module (crates-io))

(define-public crate-graphql-ws-client-old-protocol-0.6.0 (c (n "graphql-ws-client-old-protocol") (v "0.6.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^5") (d #t) (k 2)) (d (n "async-tungstenite") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.23") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1dfy1vi7cd1966dgl3hsz34z1s8klxd9k9xk82v8cizm6r27i4hy") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "uuid/js" "no-logging" "pharos" "pin-project-lite"))))))

