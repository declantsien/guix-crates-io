(define-module (crates-io gr ap graphembed) #:use-module (crates-io))

(define-public crate-graphembed-0.0.1 (c (n "graphembed") (v "0.0.1") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.4") (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "bson") (r "^2.2") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "katexit") (r "^0.1.0") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "17avfdy5p4alcz0w0p1kqypdqqr9qsnhfzbs3vbipg68js6bg7ml") (f (quote (("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

(define-public crate-graphembed-0.0.2 (c (n "graphembed") (v "0.0.2") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.4") (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "bson") (r "^2.2") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "katexit") (r "^0.1.0") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "0rxp4vxab7inya169qcx2w3z36g169klq1azxdksvz0sdqjkqfci") (f (quote (("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

(define-public crate-graphembed-0.0.3 (c (n "graphembed") (v "0.0.3") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.4") (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "bson") (r "^2.2") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "katexit") (r "^0.1.0") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "1p3rk5x65advqni6pqqy8031icg1fagda2m743z3ac45kl06s137") (f (quote (("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

(define-public crate-graphembed-0.0.4 (c (n "graphembed") (v "0.0.4") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.4") (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "bson") (r "^2.2") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "katexit") (r "^0.1.0") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "14c1bx3mga7iqjlws17nrwlzxmid38g90gxn6q6chzaz015xpr47") (f (quote (("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

(define-public crate-graphembed-0.0.5 (c (n "graphembed") (v "0.0.5") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.4") (d #t) (k 0)) (d (n "anyhow") (r "<=1.0.48") (d #t) (k 0)) (d (n "bson") (r "^2.2") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "katexit") (r "^0.1.0") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.14") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "13dfcwqrmlpay4nbk9rvv3sw1wj2a977vnxfsnh9arnkxf9znnrb") (f (quote (("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

(define-public crate-graphembed-0.0.6 (c (n "graphembed") (v "0.0.6") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "bson") (r "^2.2") (d #t) (k 0)) (d (n "clap") (r "^3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "indexmap") (r "^1.8") (d #t) (k 0)) (d (n "katexit") (r "^0.1.0") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.15") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1.6") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "0la37bnqkcnajz2fsl252kgj11axwz386132issa0q5978pdncrj") (f (quote (("openblas-system" "ndarray/blas" "ndarray-linalg/openblas-system" "annembed/openblas-system") ("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

(define-public crate-graphembed-0.0.7 (c (n "graphembed") (v "0.0.7") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "annembed") (r "^0.0.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "atomic") (r "^0.5.1") (d #t) (k 0)) (d (n "bson") (r "^2.6") (d #t) (k 0)) (d (n "clap") (r "^4.2") (d #t) (k 0)) (d (n "cpu-time") (r "^1.0") (d #t) (k 0)) (d (n "csv") (r "^1.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "float-ord") (r "^0.3") (d #t) (k 0)) (d (n "hdrhistogram") (r "^7.5") (d #t) (k 0)) (d (n "hnsw_rs") (r "^0.1.19") (f (quote ("simdeez_f"))) (d #t) (k 0)) (d (n "indexmap") (r "^1.9") (d #t) (k 0)) (d (n "indxvec") (r "^1.4") (d #t) (k 0)) (d (n "katexit") (r "^0.1") (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapacke") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "ndarray") (r "^0.15") (f (quote ("rayon" "serde"))) (d #t) (k 0)) (d (n "ndarray-linalg") (r "^0.16") (k 0)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13") (d #t) (k 0)) (d (n "openblas-src") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.4") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (d #t) (k 0)) (d (n "probminhash") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 0)) (d (n "rand_xoshiro") (r "^0.6") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "sprs") (r "^0.11") (d #t) (k 0)))) (h "1jkmyg1w8dymrycmba25y3c731yxx87r8mgqxz00a2yzbg8y1i2f") (f (quote (("openblas-system" "ndarray/blas" "ndarray-linalg/openblas-system" "annembed/openblas-system") ("openblas-static" "ndarray/blas" "ndarray-linalg/openblas-static" "annembed/openblas-static") ("intel-mkl-static" "ndarray/blas" "ndarray-linalg/intel-mkl-static" "annembed/intel-mkl-static") ("default"))))))

