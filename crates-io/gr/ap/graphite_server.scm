(define-module (crates-io gr ap graphite_server) #:use-module (crates-io))

(define-public crate-graphite_server-0.1.0 (c (n "graphite_server") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bevy_ecs") (r "^0.7.0") (d #t) (k 0)) (d (n "bytemuck") (r "^1.10.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "graphite_binary") (r "^0.1.0") (d #t) (k 0)) (d (n "graphite_command") (r "^0.1.0") (d #t) (k 0)) (d (n "graphite_mc_constants") (r "^0.1.0") (d #t) (k 0)) (d (n "graphite_mc_constants") (r "^0.1.0") (d #t) (k 2)) (d (n "graphite_mc_protocol") (r "^0.1.0") (d #t) (k 0)) (d (n "graphite_net") (r "^0.1.0") (d #t) (k 0)) (d (n "graphite_sticky") (r "^0.1.0") (d #t) (k 0)) (d (n "graphite_text_component") (r "^0.1.0") (d #t) (k 0)) (d (n "heapless") (r "^0.7.15") (d #t) (k 0)) (d (n "io-uring") (r "^0.5.2") (f (quote ("unstable"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "parry3d") (r "^0.9.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.8") (d #t) (k 0)) (d (n "proptest") (r "^1.0.0") (d #t) (k 2)) (d (n "queues") (r "^1.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "readonly") (r "^0.2.1") (d #t) (k 0)) (d (n "slab") (r "^0.4.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "14m7j8bgyzi7frbkai9i1rckrd5bbq7p7d28sjwx1qx1nvb81d4b")))

