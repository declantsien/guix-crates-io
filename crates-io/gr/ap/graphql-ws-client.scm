(define-module (crates-io gr ap graphql-ws-client) #:use-module (crates-io))

(define-public crate-graphql-ws-client-0.1.0 (c (n "graphql-ws-client") (v "0.1.0") (d (list (d (n "async-tungstenite") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "async_executors") (r "^0.4") (d #t) (k 0)) (d (n "cynic") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0c5wf5nd1b3vmxmqbiv3w0xpw7nb4pbnnlxzgvmfv6fmmw2340i3") (f (quote (("default" "async-tungstenite" "cynic"))))))

(define-public crate-graphql-ws-client-0.2.0 (c (n "graphql-ws-client") (v "0.2.0") (d (list (d (n "async-tungstenite") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1dznhp0k6zg5vxi7vzkjrm47whzjzka8vkj08ll9w18wbzlx2k8f") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic"))))))

(define-public crate-graphql-ws-client-0.3.0 (c (n "graphql-ws-client") (v "0.3.0") (d (list (d (n "async-tungstenite") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1v2468xa0ic7p7jypcrb2hxzjk6q0i0dcy7ynsrm6cgjwy3k6rhs") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "uuid/js" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.4.0 (c (n "graphql-ws-client") (v "0.4.0") (d (list (d (n "async-tungstenite") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^2.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1yh0sn5zwbdnp755q8glnn66nia55f7bjm24v8hqw27xlq0wfsja") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "uuid/js" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.5.0 (c (n "graphql-ws-client") (v "0.5.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^5") (d #t) (k 2)) (d (n "async-tungstenite") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.22") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "014nqph1zrhqzbyyrjz73nb0m4qjfkr05wrxlmjxaq725mycgmh9") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "uuid/js" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.6.0 (c (n "graphql-ws-client") (v "0.6.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^5") (d #t) (k 2)) (d (n "async-tungstenite") (r "^0.23") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.23") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1sm7iaq66ali9dh7x8r4d5zk1agq7ghc0kdg1c7xl11jv5j301n0") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "uuid/js" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.7.0 (c (n "graphql-ws-client") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^5") (d #t) (k 2)) (d (n "async-tungstenite") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.24") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "14ifa84x6518a3ds599f67slyspdjswca6bv039yp1xgcy05a320") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "uuid/js" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.8.0-alpha.1 (c (n "graphql-ws-client") (v "0.8.0-alpha.1") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^5") (d #t) (k 2)) (d (n "async-tungstenite") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.24") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 2)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1bgcl6k3lsqihimima9spcxdsz7sf6lfwr3yq591a1g0isralqv5") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.8.0-alpha.2 (c (n "graphql-ws-client") (v "0.8.0-alpha.2") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^5.0.10") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^5") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.24") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.24") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.6") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1bzm7187qy2bh3npq1rl6d0br7b99bfasfl963i6mmm4iwp2cg0a") (f (quote (("no-logging") ("default" "async-tungstenite") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite"))))))

(define-public crate-graphql-ws-client-0.8.0-rc.1 (c (n "graphql-ws-client") (v "0.8.0-rc.1") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.1") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (o #t) (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "axum-macros") (r "^0.4") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0awsp308wajwqak17481iavklc8pibcs19dysyq2280zz0m6xsx9") (f (quote (("no-logging") ("default") ("client-graphql-client" "async-tungstenite" "graphql_client") ("client-cynic" "async-tungstenite" "cynic")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite")))) (r "1.69")))

(define-public crate-graphql-ws-client-0.8.0-rc.2 (c (n "graphql-ws-client") (v "0.8.0-rc.2") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.1") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "axum-macros") (r "^0.4") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "tungstenite") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "17x8nf8kfxn93gfk35ia47v6x3nvcxz0fcj9y9kfgm8vspbpxs35") (f (quote (("no-logging") ("default") ("client-graphql-client" "graphql_client") ("client-cynic" "cynic") ("async-tungstenite" "tungstenite")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite")))) (r "1.69")))

(define-public crate-graphql-ws-client-0.8.0 (c (n "graphql-ws-client") (v "0.8.0") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.1") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "axum-macros") (r "^0.4") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "tungstenite") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "0ak2f6c0ykqsrq1f973y4nxgwckjxniff9nnri0k2pbn6nwqaic5") (f (quote (("no-logging") ("default") ("client-graphql-client" "graphql_client") ("client-cynic" "cynic") ("async-tungstenite" "tungstenite")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite")))) (r "1.69")))

(define-public crate-graphql-ws-client-0.8.1 (c (n "graphql-ws-client") (v "0.8.1") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.1") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "axum-macros") (r "^0.4") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "tungstenite") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "1jj6yvnn11x8vifabfcvfzy6sdxxaqdzl11zj29i9jqkjg8ns4p3") (f (quote (("no-logging") ("default") ("client-graphql-client" "graphql_client") ("client-cynic" "cynic") ("async-tungstenite" "tungstenite")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite")))) (r "1.69")))

(define-public crate-graphql-ws-client-0.8.2 (c (n "graphql-ws-client") (v "0.8.2") (d (list (d (n "assert_matches") (r "^1.5") (d #t) (k 2)) (d (n "async-graphql") (r "^7.0.1") (d #t) (k 2)) (d (n "async-graphql-axum") (r "^7") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-tungstenite") (r "^0.25") (f (quote ("tokio-runtime"))) (d #t) (k 2)) (d (n "axum") (r "^0.7") (d #t) (k 2)) (d (n "axum-macros") (r "^0.4") (d #t) (k 2)) (d (n "cynic") (r "^3") (o #t) (d #t) (k 0)) (d (n "cynic") (r "^3") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "graphql_client") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "insta") (r "^1.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pharos") (r "^0.5.2") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (f (quote ("sync"))) (d #t) (k 2)) (d (n "tungstenite") (r "^0.21") (o #t) (d #t) (k 0)) (d (n "ws_stream_wasm") (r "^0.7") (o #t) (d #t) (k 0)))) (h "15wsdybk8mj1zf37z5ickd7441g4vd1c8fvsg5aimli40qqh4y6v") (f (quote (("no-logging") ("default") ("client-graphql-client" "graphql_client") ("client-cynic" "cynic") ("async-tungstenite" "tungstenite")))) (s 2) (e (quote (("ws_stream_wasm" "dep:ws_stream_wasm" "no-logging" "pharos" "pin-project-lite")))) (r "1.69")))

