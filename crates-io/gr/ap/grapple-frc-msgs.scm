(define-module (crates-io gr ap grapple-frc-msgs) #:use-module (crates-io))

(define-public crate-grapple-frc-msgs-2024.0.0 (c (n "grapple-frc-msgs") (v "2024.0.0") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0g56y01xcrlh2qvp4zkbxyx36dizgw4zpxm0k22gxm7igfrpmrbf") (f (quote (("std" "binmarshal/std" "anyhow/std") ("default" "std" "serde" "schema")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.0.1 (c (n "grapple-frc-msgs") (v "2024.0.1") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1b6992xlxgk3585vv2qrpx2kcjmggh5ibapswfplcj3v6d8p854z") (f (quote (("std" "binmarshal/std" "anyhow/std") ("default" "std" "serde" "schema")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.0.2 (c (n "grapple-frc-msgs") (v "2024.0.2") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0zbz5f98v7a3jkcj73r32zpi5m1r7xpskr3wkcn9yg780xvzf9mi") (f (quote (("std" "binmarshal/std" "anyhow/std") ("default" "std" "serde" "schema")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.0.3 (c (n "grapple-frc-msgs") (v "2024.0.3") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1dawcl18ylskllnxrwr3pybnymyj2hjhcpqsxb4mvyk3aw2c3s83") (f (quote (("std" "binmarshal/std" "anyhow/std") ("default" "std" "serde" "schema")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.0.4 (c (n "grapple-frc-msgs") (v "2024.0.4") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1qkh9qvhjdjbr8fzfvpzwwij3wylb736l3q5yw7sda0ksk46zrr7") (f (quote (("std" "binmarshal/std" "anyhow/std") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("default" "std" "serde" "schema")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.0.5 (c (n "grapple-frc-msgs") (v "2024.0.5") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "01cd1x2v497lhlws2kacxksg96796jzhc16in4ga0bjkqxdjbc4n") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.0.6 (c (n "grapple-frc-msgs") (v "2024.0.6") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0wih0wgx6yid66ihyxwychvbwvhg8xdkkvwd1xpkjy5g5qqa0wvq") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.1.0 (c (n "grapple-frc-msgs") (v "2024.1.0") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^0.2.0") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "07czb4ys9z1nwqnvgsfbpilwdg6lb8r08dxwrii7wag694k57wj2") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.2.0 (c (n "grapple-frc-msgs") (v "2024.2.0") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.0.2") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "12w2zpqsvsw05p9gkfs0b6v596riz0yyjsm0ab1p4ppgv4kk64ix") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.2.1 (c (n "grapple-frc-msgs") (v "2024.2.1") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.0.2") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0ay88yairds2wc788mg25vd6nkhh3791gfdgg9xa2fl1w5x2rmsy") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.2.2 (c (n "grapple-frc-msgs") (v "2024.2.2") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.0.2") (f (quote ("anyhow"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1qikvvz2dgdiki2b6lb1c8xv3civl8j01xy32rirf6ld7sxrzj7i") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.3.0 (c (n "grapple-frc-msgs") (v "2024.3.0") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1rss2xg1fkc40vf7hyc59idsrf6b0yn7cmxvl2fh2an113zaznac") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.3.1 (c (n "grapple-frc-msgs") (v "2024.3.1") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0vhknqfl03pfykqr2nfsdr0hlsw9libhvi0xdnn4481r2c5w5iqi") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema"))))))

(define-public crate-grapple-frc-msgs-2024.3.2 (c (n "grapple-frc-msgs") (v "2024.3.2") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1hss9dpd4gp0ic818invbjba685i78jlvcpkdm7a6pcs8248kw2v") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.3.3 (c (n "grapple-frc-msgs") (v "2024.3.3") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0xnzn2s315h4saxlxil1fdz7wdaphjqx4jnxnn68wssj4a5lq07r") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.3.4 (c (n "grapple-frc-msgs") (v "2024.3.4") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0f1xx2mx7nfanl413mdxcdmizdqqipghikzzqvi6f8mnmi9m2f42") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.3.5 (c (n "grapple-frc-msgs") (v "2024.3.5") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1h1js1s3g59szvhjzp3xplskqyvsm8hdyn5wfb08lnpyxz4whm9s") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.3.6 (c (n "grapple-frc-msgs") (v "2024.3.6") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0h66ylzd3656v1v0v4b0lixkg94w8s2vhk17p05k4gmmbxwp0lsc") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.3.7 (c (n "grapple-frc-msgs") (v "2024.3.7") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1gq02a8xhh7y21ys6c1nsw2058rhfizkp104r5xviji26n3y5w0d") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_powerful_panda") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan" "grapple_powerful_panda")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.3.8 (c (n "grapple-frc-msgs") (v "2024.3.8") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1j7akzbj25kxmcn4mi8z1iwbhp5qg3s3nq1n80i76kf1vh6zqq3s") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_powerful_panda") ("grapple_lasercan") ("default" "std" "serde" "schema" "ni" "grapple_lasercan" "grapple_powerful_panda")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.4.0 (c (n "grapple-frc-msgs") (v "2024.4.0") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "0hkv5j0dmg50qbsmqd4bw08mbwcn560qn2mc5qi59a7q9salacrh") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_mitocandria") ("grapple_lasercan") ("grapple_flexican") ("default" "std" "serde" "schema" "ni" "grapple_lasercan" "grapple_mitocandria" "grapple_flexican")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

(define-public crate-grapple-frc-msgs-2024.4.1 (c (n "grapple-frc-msgs") (v "2024.4.1") (d (list (d (n "anyhow") (r "^1.0.76") (k 0)) (d (n "binmarshal") (r "^1.1.0") (f (quote ("anyhow"))) (k 0)) (d (n "bounded-static") (r "^0.7.0") (f (quote ("alloc" "collections" "derive"))) (k 0)) (d (n "pyo3") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.2") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.3") (d #t) (k 0)))) (h "1jv5wc5liyrgm9mwdcgxc2q6pz64dhx8vsn6g0n3pyg6z3bzxavl") (f (quote (("std" "binmarshal/std" "anyhow/std") ("ni") ("lasercan_nop_patch" "binmarshal/lasercan_nop_patch") ("grapple_mitocandria") ("grapple_lasercan") ("grapple_flexican") ("default" "std" "serde" "schema" "ni" "grapple_lasercan" "grapple_mitocandria" "grapple_flexican")))) (s 2) (e (quote (("serde" "dep:serde" "binmarshal/serde" "smallvec/serde") ("schema" "dep:schemars" "binmarshal/schema") ("pyo3" "dep:pyo3"))))))

