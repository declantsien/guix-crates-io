(define-module (crates-io gr ap graphsync) #:use-module (crates-io))

(define-public crate-graphsync-0.1.0 (c (n "graphsync") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "async-std") (r "^1.12.0") (f (quote ("attributes" "unstable"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.18") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async_futures" "async_std"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "ipld_traversal") (r "^0.1.0") (k 0)) (d (n "libipld") (r "^0.13.1") (f (quote ("serde-codec"))) (d #t) (k 0)) (d (n "libp2p") (r "^0.46.1") (f (quote ("wasm-ext"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bytes") (r "^0.12") (d #t) (k 0) (p "cs_serde_bytes")) (d (n "serde_ipld_dagcbor") (r "^0.2.2") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_tuple") (r "^0.5") (d #t) (k 0)) (d (n "smallvec") (r "^1.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0ak4i3sw4b4gh98r4znhh3y1kc419khccfjcrmy8170xrb9vizgr")))

