(define-module (crates-io gr am grammalecte_client) #:use-module (crates-io))

(define-public crate-grammalecte_client-0.1.0 (c (n "grammalecte_client") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mktemp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "port_scanner") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "zip") (r "^0.6.3") (o #t) (d #t) (k 0)))) (h "03xfb0zms60fyr6mr5mh1gnmz8lwv02rm6yd5jkr0j92jxgav6cv") (f (quote (("embedded-server" "zip" "mktemp" "rand" "port_scanner"))))))

(define-public crate-grammalecte_client-0.1.1 (c (n "grammalecte_client") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mktemp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "port_scanner") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "zip") (r "^0.6.3") (o #t) (d #t) (k 0)))) (h "1qqgnyx7ckkrp1smpkvbpyprs6r4bsmmnyhg5wcalcaqk8q7kvjb") (f (quote (("embedded-server" "zip" "mktemp" "rand" "port_scanner"))))))

(define-public crate-grammalecte_client-0.1.2 (c (n "grammalecte_client") (v "0.1.2") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mktemp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "port_scanner") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "zip") (r "^0.6.3") (o #t) (d #t) (k 0)))) (h "1jgxn0z8j5d55vifnhx8vv01qsx1r8s3h0km9kpll5nwnfxq4xhs") (f (quote (("embedded-server" "zip" "mktemp" "rand" "port_scanner"))))))

(define-public crate-grammalecte_client-0.1.3 (c (n "grammalecte_client") (v "0.1.3") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mktemp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "port_scanner") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "zip") (r "^0.6.3") (o #t) (d #t) (k 0)))) (h "1sz070fshdch6m5w19j0y23q0n1q3aqlwbnkwlar1mi9wfrkaqj5") (f (quote (("embedded-server" "zip" "mktemp" "rand" "port_scanner"))))))

(define-public crate-grammalecte_client-0.1.4 (c (n "grammalecte_client") (v "0.1.4") (d (list (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mktemp") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "port_scanner") (r "^0.1.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tokio") (r "^1.28.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "zip") (r "^0.6.3") (o #t) (d #t) (k 0)))) (h "1ljza8znqlg9rcd4pakhp8fky38fxiy9ahkdss4v1l83abl2d6m5") (f (quote (("embedded-server" "zip" "mktemp" "rand" "port_scanner"))))))

