(define-module (crates-io gr am gramatika-macro) #:use-module (crates-io))

(define-public crate-gramatika-macro-0.1.0 (c (n "gramatika-macro") (v "0.1.0") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1n20a74ya5wfn12ha7fmr9w1y1p0jqxpf93maip9cixnysbpird0")))

(define-public crate-gramatika-macro-0.1.1 (c (n "gramatika-macro") (v "0.1.1") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "0mv78igrmh4jh3zz5il3928v7ffkh3p182n2yn4532gmk4x1w6zn")))

(define-public crate-gramatika-macro-0.2.0 (c (n "gramatika-macro") (v "0.2.0") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "08linhcnd8k45ccvifsdb3p9jcwn6my3bxxw4p3bcc3v2jllj7g8")))

(define-public crate-gramatika-macro-0.3.0 (c (n "gramatika-macro") (v "0.3.0") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1glnz287bs16yaf67x1vyd6j0zpa0kg8w4imx73v093vsf69wh1y")))

(define-public crate-gramatika-macro-0.3.1 (c (n "gramatika-macro") (v "0.3.1") (d (list (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1kyi4mlszdws8nma1h528jzxdr3vbyzpqpmzvl5g2hfc2qwgp4ba")))

(define-public crate-gramatika-macro-0.4.0 (c (n "gramatika-macro") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1pfs57bwf484mzr787mzqai9300kvbjj2w6gswpgik7x24l2670l")))

(define-public crate-gramatika-macro-0.4.1 (c (n "gramatika-macro") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "0xx7aadmvrh5zaikn53g5la11xqkaa6nsqxd159k4phhyg9cickw")))

(define-public crate-gramatika-macro-0.4.2 (c (n "gramatika-macro") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1xcfxdrkdxav1jzdy0ba4ngh95rh2m8in68lg4mmx992i1p5l2k4")))

(define-public crate-gramatika-macro-0.4.3 (c (n "gramatika-macro") (v "0.4.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1zpzfpgzwkm7rsk40g49n1j2scj99d8q3ghsk6z2gh9y4mpb8xyz")))

(define-public crate-gramatika-macro-0.5.0 (c (n "gramatika-macro") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "05asbp11s599px9hyzdwb3s80i4z6dh1r30sdq9zi7grr1zhl25f")))

(define-public crate-gramatika-macro-0.5.1 (c (n "gramatika-macro") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "009kmclf52d1dzscf3x6k73pxl10jxr3q56bdq88fx52xcy2whv7")))

(define-public crate-gramatika-macro-0.6.0 (c (n "gramatika-macro") (v "0.6.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arcstr") (r "^1.1") (d #t) (k 0)) (d (n "convert_case") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "regex-automata") (r "^0.1") (d #t) (k 0)) (d (n "syn") (r "^1.0") (f (quote ("full" "extra-traits"))) (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (f (quote ("diff"))) (d #t) (k 2)))) (h "1i64zl2dgkjwyc9crfirvcaidnr3bnfaxx83cv33hwiq5ddcslar")))

