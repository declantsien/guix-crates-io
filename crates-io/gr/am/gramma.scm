(define-module (crates-io gr am gramma) #:use-module (crates-io))

(define-public crate-gramma-0.1.0 (c (n "gramma") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h0sjayb2yzb1gbicp6461b87q7chwsywb6xkq83hd0ga1x5rr8x") (y #t)))

(define-public crate-gramma-0.1.1 (c (n "gramma") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "regex") (r "^1.4") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nrnrf16ndf5m6ixb2dlcx23imix782559v2kx7x050amjcibqqx") (y #t)))

(define-public crate-gramma-0.2.0 (c (n "gramma") (v "0.2.0") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("critical-section"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "085ql2cfplna9v7w4jyc8aqkvqgfqp8phylazs0pw475xs6lh01w") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.1 (c (n "gramma") (v "0.2.1") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("critical-section"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "10h8f7zirx52zdq34jqbs9fzdqfy3d543xjqq4pws1y4pxzalz8p") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.2 (c (n "gramma") (v "0.2.2") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("critical-section"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "1yw9681mh0vh434qii56svm1q8m7a2z18ghg5f5vky2amp8blqq8") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.3 (c (n "gramma") (v "0.2.3") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("critical-section"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "1dsd712snr4i29gzkiqjqjnqvlk20j79s75p0y9h5q50aawjg73f") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.4 (c (n "gramma") (v "0.2.4") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("critical-section"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "1s5srhnvk0ap5lgghip9l8xgj5rqdnmd74pmwys06pgs8xql72yn") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.5 (c (n "gramma") (v "0.2.5") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "15zw611kb6d8nplzb0s6dmb7j4hww7l7z5s99niszdl044q531ph") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.6 (c (n "gramma") (v "0.2.6") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "15xapx3nm9qcvynfr1rcmbj54lk12x5fp2gwlwk4hq1yh3rm71v2") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.7 (c (n "gramma") (v "0.2.7") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "0lbkcrjycdfvi6k93h4w8cqgl6qhx0rfvqgx2g7x77sq0xwdr3si") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.8 (c (n "gramma") (v "0.2.8") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "0i1rzfll6pqynbspwwk2w29ck3mbmxrf62aig6bg48kfsmyqpsfj") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.9 (c (n "gramma") (v "0.2.9") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "0k2l38dkznx8hc7bzm5dr63cnnjbds4qmzrxnspdgh55vbvg7kdy") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.10 (c (n "gramma") (v "0.2.10") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (k 0)))) (h "18rkq1aqdhkqi1vzi8rf8251fnnsa9av965gi4k1f60k8lijl8qi") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std"))))))

(define-public crate-gramma-0.2.11 (c (n "gramma") (v "0.2.11") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "05m7nlx7gsh45b8kwrsn7q9cncjkxz3pmxd18j676jxyny4rm5iy") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.12 (c (n "gramma") (v "0.2.12") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "0xpfd8sp7bvz3h7gq3qz2vf628qirhkbv4ihfmylr3qssj3n0c79") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.13 (c (n "gramma") (v "0.2.13") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "1lggypgydcchcw2ng384jj742fl75gs75drc7hf8d3v2b785z34s") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.14 (c (n "gramma") (v "0.2.14") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "1klfmc0n8mghr1bqw7vjigv1fd5fkh1x2s7p1dqd91zd3rgzmnlr") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.15 (c (n "gramma") (v "0.2.15") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "1fp6db1dxkvsh8cdgkdxv9qypnxl380q3my0nkw1k4xphkfnsm1j") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.16 (c (n "gramma") (v "0.2.16") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "0wnyc3yhpj6kzww3nh6lnp339460hwiq2fmarcbbl6483jnk0h4y") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.17 (c (n "gramma") (v "0.2.17") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "0npy0dyw8c46w3ggwfrvpwwq1vbfrrmwnfdbz5b2lzc3fvr7xzdl") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.18 (c (n "gramma") (v "0.2.18") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "07ishghh93nq90mjarzd9dxy7c87avzngzdwb1rchg1n1m51y590") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.19 (c (n "gramma") (v "0.2.19") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "16h39gscfmi9w2cl79fbyql2qkq2ffd49bgpr6m3k7yd1lwrnw1a") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.20 (c (n "gramma") (v "0.2.20") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "0f4da9gwkvsnpmp3lxs5dc2j6zyzk11hlvj6xl4rl81mzh12hlw4") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.21 (c (n "gramma") (v "0.2.21") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "0mci0ffyn5lfzvy4di89147n2slpr6rn63cm2ww9kaha5n3lwlpi") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.22 (c (n "gramma") (v "0.2.22") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "1dh7byhv2pki3j6zqvarm8w6n4fwf6kc3l3xkfqpifbgxyiii827") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.23 (c (n "gramma") (v "0.2.23") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "119hwi6ng7vrrpckpw2di9iyqxwzl3svwysnlydy93m8w0vmg4qd") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

(define-public crate-gramma-0.2.24 (c (n "gramma") (v "0.2.24") (d (list (d (n "either") (r "^1.9.0") (k 0)) (d (n "once_cell") (r "^1.19.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "regex") (r "^1.10.3") (f (quote ("perf" "unicode"))) (o #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (f (quote ("const_generics" "union"))) (k 0)))) (h "0sd833ghfjjhlgqql0ixigsvl0inzdza51m4i5y4rcrzlm4h9186") (f (quote (("std" "regex/std" "once_cell/std") ("default" "std" "regex")))) (s 2) (e (quote (("regex" "dep:regex" "dep:once_cell"))))))

