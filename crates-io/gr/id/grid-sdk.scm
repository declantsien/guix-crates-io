(define-module (crates-io gr id grid-sdk) #:use-module (crates-io))

(define-public crate-grid-sdk-0.1.0 (c (n "grid-sdk") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "protobuf") (r "^2") (d #t) (k 0)) (d (n "protoc-rust") (r "^2") (d #t) (k 1)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sawtooth-sdk") (r "^0.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1ha182amxg76wdrisxpp3fr6q0p84wizhirh0mrzcivb3a32ljpm")))

(define-public crate-grid-sdk-0.1.1 (c (n "grid-sdk") (v "0.1.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "10bb4r5jajlll4sw7lql3n3pqxykj3km5iqd9khbb8zbif153kdx") (f (quote (("track-and-trace") ("stable" "pike" "schema" "product" "location") ("sqlite" "diesel/sqlite" "diesel_migrations") ("schema" "pike") ("sawtooth-compat" "sabre-sdk" "sawtooth-sdk") ("product" "pike" "schema") ("postgres" "diesel/postgres" "diesel_migrations") ("pike") ("location" "pike" "schema") ("grid_db" "sawtooth-compat") ("experimental" "stable" "database" "track-and-trace") ("default") ("database" "stable" "grid_db" "postgres" "sqlite"))))))

(define-public crate-grid-sdk-0.1.3 (c (n "grid-sdk") (v "0.1.3") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^0.1") (d #t) (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 1)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1pr0xrz2w0rfgbzzd6n62kaxfyqlcx726nqmgaaij6f8b3r5cha6") (f (quote (("track-and-trace") ("stable" "pike" "schema" "product" "location" "database") ("sqlite" "diesel/sqlite" "diesel_migrations") ("schema" "pike") ("sawtooth-compat" "sabre-sdk" "sawtooth-sdk") ("product" "pike" "schema") ("postgres" "diesel/postgres" "diesel_migrations") ("pike") ("location" "pike" "schema") ("grid_db" "sawtooth-compat") ("experimental" "stable" "track-and-trace") ("default") ("database" "grid_db" "postgres" "sqlite"))))))

(define-public crate-grid-sdk-0.2.1 (c (n "grid-sdk") (v "0.2.1") (d (list (d (n "actix-web") (r "^3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1wddpa5lhrxdp7vavx4jdd4858psa8pfv46yib4lg79p02alczhn") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "location" "pike" "postgres" "product" "product-gdsn" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("sawtooth-compat" "sabre-sdk" "sawtooth-sdk") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike-rest-api" "pike" "serde_json" "rest-api-resources") ("pike" "cfg-if") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "client" "client-reqwest" "pike-rest-api" "purchase-order" "rest-api-resources" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-purchase-order" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-purchase-order" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "sawtooth-compat" "track-and-trace" "workflow") ("default") ("client-reqwest" "client" "reqwest") ("client") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

(define-public crate-grid-sdk-0.2.2 (c (n "grid-sdk") (v "0.2.2") (d (list (d (n "actix-web") (r "^3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0h91qjr0c6f2sqk7j49zifgk6hqzj7i8mvy0l1x8m4xh7j5pjpp7") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "location" "pike" "postgres" "product" "product-gdsn" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("sawtooth-compat" "sabre-sdk" "sawtooth-sdk") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike-rest-api" "pike" "serde_json" "rest-api-resources") ("pike" "cfg-if") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "client" "client-reqwest" "pike-rest-api" "purchase-order" "rest-api-resources" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-purchase-order" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-purchase-order" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "sawtooth-compat" "track-and-trace" "workflow") ("default") ("client-reqwest" "client" "reqwest") ("client") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

(define-public crate-grid-sdk-0.2.3 (c (n "grid-sdk") (v "0.2.3") (d (list (d (n "actix-web") (r "^3") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load" "jwt"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "057nxg9zxww2cmbgsr70gb1820lls0yxx5sbd2hlmfvz3sppaflk") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "location" "pike" "postgres" "product" "product-gdsn" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("sawtooth-compat" "sabre-sdk" "sawtooth-sdk") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike-rest-api" "pike" "serde_json" "rest-api-resources") ("pike" "cfg-if") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "client" "client-reqwest" "pike-rest-api" "purchase-order" "rest-api-resources" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-purchase-order" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-purchase-order" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "sawtooth-compat" "track-and-trace" "workflow") ("default") ("client-reqwest" "client" "reqwest") ("client") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

(define-public crate-grid-sdk-0.3.1 (c (n "grid-sdk") (v "0.3.1") (d (list (d (n "actix-web") (r "^3") (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load" "jwt"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1as8m20yhaikjazdmid662s6x9i1wh82flc0zz47m6zd32a5s3mw") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "client" "client-reqwest" "data-validation" "location" "pike" "postgres" "product" "product-gdsn" "purchase-order" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-purchase-order" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-purchase-order" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite" "workflow") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order" "pike" "regex") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike" "cfg-if" "workflow") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "track-and-trace") ("default") ("data-validation" "libc" "quick-xml" "reqwest") ("client-reqwest" "client" "reqwest") ("client" "log") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

(define-public crate-grid-sdk-0.3.2 (c (n "grid-sdk") (v "0.3.2") (d (list (d (n "actix-web") (r "^3") (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load" "jwt"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "15gsxi9vhb4c04cpdrpcggqwjpn2v3184g3c416kygk9ajs06gbj") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "client" "client-reqwest" "data-validation" "location" "pike" "postgres" "product" "product-gdsn" "purchase-order" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-purchase-order" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-purchase-order" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite" "workflow") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order" "pike" "regex") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike" "cfg-if" "workflow") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "track-and-trace") ("default") ("data-validation" "libc" "quick-xml" "reqwest") ("client-reqwest" "client" "reqwest") ("client" "log") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

(define-public crate-grid-sdk-0.3.3 (c (n "grid-sdk") (v "0.3.3") (d (list (d (n "actix-web") (r "^3") (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load" "jwt"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1qma8y928g9ghbh6pb9pmqcvglsni21bkjk8m1q997qnr2b1sw4w") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "client" "client-reqwest" "data-validation" "location" "pike" "postgres" "product" "product-gdsn" "purchase-order" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-purchase-order" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-purchase-order" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite" "workflow") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order" "pike" "regex") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike" "cfg-if" "workflow") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "track-and-trace") ("default") ("data-validation" "libc" "quick-xml" "reqwest") ("client-reqwest" "client" "reqwest") ("client" "log") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

(define-public crate-grid-sdk-0.3.4 (c (n "grid-sdk") (v "0.3.4") (d (list (d (n "actix-web") (r "^3") (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load" "jwt"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "0mwxsmrp4w2w804pl0f2prsn4pgy2r53jnjbg6nl37x0iamjv07k") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "client" "client-reqwest" "data-validation" "location" "pike" "postgres" "product" "product-gdsn" "purchase-order" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-purchase-order" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-purchase-order" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite" "workflow") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order" "pike" "regex") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike" "cfg-if" "workflow") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "track-and-trace") ("default") ("data-validation" "libc" "quick-xml" "reqwest") ("client-reqwest" "client" "reqwest") ("client" "log") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url")))) (y #t)))

(define-public crate-grid-sdk-0.3.5 (c (n "grid-sdk") (v "0.3.5") (d (list (d (n "actix-web") (r "^3") (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "cylinder") (r "^0.2.2") (f (quote ("key-load" "jwt"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "diesel") (r "^1.0") (f (quote ("chrono" "r2d2" "serde_json"))) (o #t) (d #t) (k 0)) (d (n "diesel_migrations") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 1)) (d (n "libc") (r "^0.2.94") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "protobuf") (r "^2.19") (d #t) (k 0)) (d (n "protoc-rust") (r "^2.14") (d #t) (k 1)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.10.1") (f (quote ("blocking" "json"))) (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rust-crypto-wasm") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "sabre-sdk") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "sawtooth-sdk") (r "^0.4") (f (quote ("transact-compat"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("macros"))) (d #t) (k 2)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (k 0)))) (h "1j6q5kv5xl03n3fcpqddjhnz0sjvcx5bb68bxx28hncy6bf604l3") (f (quote (("workflow") ("track-and-trace" "base64") ("stable" "default" "backend" "backend-sawtooth" "backend-splinter" "client" "client-reqwest" "data-validation" "location" "pike" "postgres" "product" "product-gdsn" "purchase-order" "rest-api" "rest-api-endpoint-agent" "rest-api-endpoint-batches" "rest-api-endpoint-location" "rest-api-endpoint-organization" "rest-api-endpoint-product" "rest-api-endpoint-purchase-order" "rest-api-endpoint-role" "rest-api-endpoint-schema" "rest-api-resources" "rest-api-resources-agent" "rest-api-resources-batches" "rest-api-resources-location" "rest-api-resources-organization" "rest-api-resources-product" "rest-api-resources-purchase-order" "rest-api-resources-role" "rest-api-resources-schema" "schema" "sqlite" "workflow") ("sqlite" "chrono" "diesel/sqlite" "diesel_migrations" "log") ("schema" "pike") ("rest-api-resources-track-and-trace" "rest-api-resources" "track-and-trace") ("rest-api-resources-submit" "batch-store" "cylinder" "rest-api-resources" "sabre-sdk") ("rest-api-resources-schema" "rest-api-resources" "schema") ("rest-api-resources-role" "pike" "rest-api-resources") ("rest-api-resources-purchase-order" "purchase-order" "rest-api-resources") ("rest-api-resources-product" "product" "rest-api-resources") ("rest-api-resources-organization" "pike" "rest-api-resources") ("rest-api-resources-location" "location" "rest-api-resources") ("rest-api-resources-batches" "backend" "rest-api-resources") ("rest-api-resources-agent" "pike" "rest-api-resources" "serde_json") ("rest-api-resources" "rest-api") ("rest-api-endpoint-submit" "batch-store" "rest-api-resources-submit") ("rest-api-endpoint-schema" "rest-api-resources-schema" "schema") ("rest-api-endpoint-role" "pike" "rest-api-resources-role") ("rest-api-endpoint-record" "rest-api-resources-track-and-trace" "track-and-trace") ("rest-api-endpoint-purchase-order" "purchase-order" "rest-api-resources-purchase-order") ("rest-api-endpoint-product" "product" "rest-api-resources-product") ("rest-api-endpoint-organization" "pike" "rest-api-resources-organization") ("rest-api-endpoint-location" "location" "rest-api-resources-location") ("rest-api-endpoint-batches" "backend" "rest-api-resources-batches") ("rest-api-endpoint-agent" "pike" "rest-api-resources-agent") ("rest-api-actix-web-3-run" "rest-api-endpoint-submit") ("rest-api-actix-web-3" "actix-web" "backend" "futures" "futures-util" "rest-api" "rest-api-resources" "url") ("rest-api") ("purchase-order" "pike" "regex") ("product-gdsn" "libc" "quick-xml" "reqwest") ("product" "pike" "schema") ("postgres" "chrono" "diesel/postgres" "diesel_migrations" "log") ("pike" "cfg-if" "workflow") ("location" "pike" "schema") ("experimental" "stable" "batch-processor" "batch-store" "rest-api-actix-web-3" "rest-api-actix-web-3-run" "rest-api-endpoint-record" "rest-api-endpoint-submit" "rest-api-resources-submit" "rest-api-resources-track-and-trace" "track-and-trace") ("default") ("data-validation" "libc" "quick-xml" "reqwest") ("client-reqwest" "client" "reqwest") ("client" "log") ("batch-store" "chrono") ("batch-processor" "batch-store" "backend" "log" "reqwest" "uuid") ("backend-splinter" "backend" "reqwest") ("backend-sawtooth" "backend" "uuid") ("backend" "base64" "futures" "url"))))))

