(define-module (crates-io gr id griddle) #:use-module (crates-io))

(define-public crate-griddle-0.1.0 (c (n "griddle") (v "0.1.0") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")))) (h "19i8f8b0d6flkrs9dafp0rvwjjaw8svy7f2y1l5m33r3hryklcsi") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.1.1 (c (n "griddle") (v "0.1.1") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")))) (h "189p7dcyihqrqqrhyfixli2q2j9bwxxnv06ipfcrn30zskg4m3y0") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.0 (c (n "griddle") (v "0.2.0") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")))) (h "1csycqg6rh9h1614c8q54x3xv5w68hlgmh4vrw0mp6sj7m3aa6rg") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.1 (c (n "griddle") (v "0.2.1") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")))) (h "0i1d08s8lwzmaadffblvybh68dfrmyzz6y6h454bj9iyvsivzn3n") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.2 (c (n "griddle") (v "0.2.2") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0q47maflf1vbicn4kb392pa00ymdykp95vlr1z49wxb42ri90p40") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.3 (c (n "griddle") (v "0.2.3") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0mylaxp729z1cl597nsfys1c0znyawm46b61l86rmqamxh96c1az") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.4 (c (n "griddle") (v "0.2.4") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0x1kpp5nqxbzajik8wngczgc3r8hh936al5l2sj0244vrpcg53h7") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.5 (c (n "griddle") (v "0.2.5") (d (list (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "030b5pf6fjrpb4i1871bys9g0sfh5khybxgkz2050qqx04m9qc14") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.6 (c (n "griddle") (v "0.2.6") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0rw89k90zmx4j8h3nwyw0glpb0addslqcs4bjgfgbv9qlaimlf9x") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.7 (c (n "griddle") (v "0.2.7") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1w1y0yzv7k2z8kjad5fn4yhv967nhylnp22f3smqycx1g9kn1dqm") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.8 (c (n "griddle") (v "0.2.8") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1amq1myrbcfmp8wb6i68h358l4xf0mf3amjq20bqhljivyafyib8") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.2.9 (c (n "griddle") (v "0.2.9") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "=1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1ypw4b347q21dc9j1p4h10hnaq1dlj7jgzzxgx56vvmz5dhshhwx") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.3.0 (c (n "griddle") (v "0.3.0") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8.1") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "^1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1c5al9dlrdwaxnngjnqm4qrcqsvs0bggylzdpprghy3s8l2g0rw0") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.3.1 (c (n "griddle") (v "0.3.1") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8.1") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "^1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "04rld4xr3iw3ld70rmzw3nrrlv9iw3246sprb3l0zzlqjv347kxp") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.3.2 (c (n "griddle") (v "0.3.2") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.8.1") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "rustc-hash") (r "^1.0") (d #t) (k 2)) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0ngwd6skiccvipbsqcmyhay48y66xmsyyixd5wm85k97i1129zai") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "hashbrown/ahash-compile-time-rng") ("ahash" "hashbrown/ahash"))))))

(define-public crate-griddle-0.4.0 (c (n "griddle") (v "0.4.0") (d (list (d (n "ahash_") (r "^0.6.1") (o #t) (k 0) (p "ahash")) (d (n "fnv") (r "^1.0.7") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1a53jvcqcm1qribf3zyj49bc2syqwhh1dp5irfk77334b6pkz44v") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "ahash_/compile-time-rng") ("ahash" "ahash_" "hashbrown/ahash"))))))

(define-public crate-griddle-0.4.1 (c (n "griddle") (v "0.4.1") (d (list (d (n "ahash_") (r "^0.6.1") (o #t) (k 0) (p "ahash")) (d (n "fnv") (r "^1.0.7") (d #t) (k 2)) (d (n "hashbrown") (r "^0.9.1") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^0.9") (k 2)) (d (n "rand") (r "^0.7.3") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0m04cv8v6fhjmgbv2irghfljm5gbmqa3jh0l71g08nyhqp81fsp4") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "ahash_/compile-time-rng") ("ahash" "ahash_" "hashbrown/ahash"))))))

(define-public crate-griddle-0.5.0 (c (n "griddle") (v "0.5.0") (d (list (d (n "ahash_") (r "^0.7.0") (o #t) (k 0) (p "ahash")) (d (n "fnv") (r "^1.0.7") (d #t) (k 2)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "1jli1fh7l6wm55asy49szh7b34psn6bpdn9wvm0gf5xwkhsgb5mv") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "ahash_/compile-time-rng") ("ahash" "ahash_" "hashbrown/ahash"))))))

(define-public crate-griddle-0.5.1 (c (n "griddle") (v "0.5.1") (d (list (d (n "ahash_") (r "^0.7.0") (o #t) (k 0) (p "ahash")) (d (n "fnv") (r "^1.0.7") (d #t) (k 2)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0pvcnc8jwckhzv626ss3a9aps5gdkms1pbg2zlvg30zqp296qg1w") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "ahash_/compile-time-rng") ("ahash" "ahash_" "hashbrown/ahash"))))))

(define-public crate-griddle-0.5.2 (c (n "griddle") (v "0.5.2") (d (list (d (n "ahash_") (r "^0.7.0") (o #t) (k 0) (p "ahash")) (d (n "fnv") (r "^1.0.7") (d #t) (k 2)) (d (n "hashbrown") (r "^0.11.2") (f (quote ("raw"))) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1") (k 2)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 2)) (d (n "rayon_") (r "^1.0") (o #t) (d #t) (k 0) (p "rayon")) (d (n "rayon_") (r "^1.0") (d #t) (k 2) (p "rayon")) (d (n "serde_") (r "^1.0.25") (o #t) (k 0) (p "serde")) (d (n "serde_test") (r "^1.0") (d #t) (k 2)))) (h "0qv3ynh0dzfjqz3wxz8yfkda1jxz8jam9mhjrlbv328v34i1vf3b") (f (quote (("serde" "serde_" "hashbrown/serde") ("rayon" "rayon_" "hashbrown/rayon") ("raw") ("inline-more" "hashbrown/inline-more") ("default" "ahash" "inline-more") ("ahash-compile-time-rng" "ahash_/compile-time-rng") ("ahash" "ahash_" "hashbrown/ahash"))))))

