(define-module (crates-io gr ad gradients) #:use-module (crates-io))

(define-public crate-gradients-0.1.0 (c (n "gradients") (v "0.1.0") (d (list (d (n "custos") (r "^0.1.4") (k 0)) (d (n "custos-math") (r "^0.1.0") (k 0)) (d (n "gradients-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)))) (h "0i1dr7d2p1xnhz96ycvb38yabm0mwl3fywzfg6qa8x980rhj0i25") (f (quote (("opencl" "custos/opencl" "custos-math/opencl") ("default" "opencl" "cuda") ("cuda" "custos/cuda" "custos-math/cuda")))) (y #t)))

(define-public crate-gradients-0.1.1 (c (n "gradients") (v "0.1.1") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "custos") (r "^0.1.4") (k 0)) (d (n "custos-math") (r "^0.1.1") (k 0)) (d (n "gradients-derive") (r "^0.1.1") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)))) (h "1c2jycj7nlcdsl0ssfbg8pj71i07l2gmf3sxk6n8rppy13fh8zwv") (f (quote (("opencl" "custos/opencl" "custos-math/opencl") ("default" "opencl") ("cuda" "custos/cuda" "custos-math/cuda"))))))

(define-public crate-gradients-0.2.0 (c (n "gradients") (v "0.2.0") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "custos") (r "^0.4.4") (k 0)) (d (n "custos-math") (r "^0.4.4") (k 0)) (d (n "gradients-derive") (r "^0.2.0") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)))) (h "1rh9lqysl68gj58q2z1p07j0l3a6ifg4023608kh46x216dnv8gn") (f (quote (("opencl" "custos/opencl" "custos-math/opencl") ("default" "opencl" "cuda") ("cuda" "custos/cuda" "custos-math/cuda"))))))

(define-public crate-gradients-0.3.0 (c (n "gradients") (v "0.3.0") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "custos") (r "^0.4.4") (k 0)) (d (n "custos-math") (r "^0.4.4") (k 0)) (d (n "gradients-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)))) (h "0m20lmgd1vkar2wsl577fa9gq85mnaxl4favqh82cx9w2514d28l") (f (quote (("opencl" "custos/opencl" "custos-math/opencl") ("default" "opencl") ("cuda" "custos/cuda" "custos-math/cuda")))) (y #t)))

(define-public crate-gradients-0.3.1 (c (n "gradients") (v "0.3.1") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "custos") (r "^0.4.4") (k 0)) (d (n "custos-math") (r "^0.4.4") (k 0)) (d (n "gradients-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)))) (h "10ifi9mlh5m4qjpm09j3ll1gjg07fvmnp3j6widr3wyhlv8rvvw4") (f (quote (("opencl" "custos/opencl" "custos-math/opencl") ("default" "opencl") ("cuda" "custos/cuda" "custos-math/cuda"))))))

(define-public crate-gradients-0.3.3 (c (n "gradients") (v "0.3.3") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "custos") (r "=0.4.6") (k 0)) (d (n "custos-math") (r "=0.4.6") (k 0)) (d (n "gradients-derive") (r "=0.3.3") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)))) (h "1b5cwa0a8whlfm9i0675cwbxnr3dkcmichl80mjfp3sh8dd73n9r") (f (quote (("realloc" "custos/realloc" "custos-math/realloc") ("opencl" "custos/opencl" "custos-math/opencl") ("default" "opencl" "cuda") ("cuda" "custos/cuda" "custos-math/cuda")))) (y #t)))

(define-public crate-gradients-0.3.4 (c (n "gradients") (v "0.3.4") (d (list (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "custos") (r "=0.5.0") (k 0)) (d (n "custos-math") (r "=0.5.0") (k 0)) (d (n "gradients-derive") (r "=0.3.4") (d #t) (k 0)) (d (n "graplot") (r "^0.1.20") (d #t) (k 2)) (d (n "purpur") (r "^0.1.0") (d #t) (k 0)))) (h "134flvd68bkdhiw2z06hk6awh0q3wbfimp8d07hg5pkjzv5fawhp") (f (quote (("realloc" "custos/realloc" "custos-math/realloc") ("opt-cache" "custos/opt-cache") ("opencl" "custos/opencl" "custos-math/opencl") ("default" "cuda" "opencl") ("cuda" "custos/cuda" "custos-math/cuda"))))))

