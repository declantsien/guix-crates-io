(define-module (crates-io gr ov grovedb) #:use-module (crates-io))

(define-public crate-grovedb-1.0.0-rc.1 (c (n "grovedb") (v "1.0.0-rc.1") (d (list (d (n "bincode") (r "^1.3.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "grovedb-costs") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "grovedb-merk") (r "^1.0.0-rc.1") (o #t) (k 0)) (d (n "grovedb-path") (r "^1.0.0-rc.1") (d #t) (k 0)) (d (n "grovedb-storage") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "grovedb-visualize") (r "^1.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.2") (o #t) (d #t) (k 0)) (d (n "integer-encoding") (r "^3.0.4") (o #t) (d #t) (k 0)) (d (n "intmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (o #t) (d #t) (k 0)) (d (n "nohash-hasher") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "serde") (r "^1.0.149") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (o #t) (d #t) (k 0)))) (h "0jblpccjvxq1w823a8v22dv3pskvhkx8c5c90ddlc5z23mwval14") (f (quote (("verify" "grovedb-merk/verify" "grovedb-costs" "thiserror" "serde/derive" "bincode" "integer-encoding") ("full" "grovedb-merk/full" "thiserror" "tempfile" "bincode" "serde/derive" "grovedb-storage/rocksdb_storage" "grovedb-visualize" "hex" "itertools" "integer-encoding" "grovedb-costs" "nohash-hasher" "indexmap" "intmap") ("estimated_costs" "full") ("default" "full"))))))

