(define-module (crates-io ma y_ may_minihttp) #:use-module (crates-io))

(define-public crate-may_minihttp-0.1.0 (c (n "may_minihttp") (v "0.1.0") (d (list (d (n "atoi") (r "^2") (d #t) (k 2)) (d (n "buf-min") (r "^0.7") (f (quote ("bytes"))) (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "httpdate") (r "^1") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_off"))) (d #t) (k 2)) (d (n "may") (r "^0.3") (k 0)) (d (n "mimalloc") (r "^0.1") (k 2)) (d (n "nanorand") (r "^0.7") (f (quote ("std" "wyrand"))) (k 2)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.1") (d #t) (k 2)) (d (n "yarte") (r "^0.15") (f (quote ("bytes-buf" "json"))) (d #t) (k 2)))) (h "1clv3pk861gc5yargp2fldy2cj77qw7dw56yc1b3sdd23705cg34") (f (quote (("default" "may/default"))))))

(define-public crate-may_minihttp-0.1.1 (c (n "may_minihttp") (v "0.1.1") (d (list (d (n "atoi") (r "^2") (d #t) (k 2)) (d (n "buf-min") (r "^0.7") (f (quote ("bytes"))) (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "httpdate") (r "^1") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_off"))) (d #t) (k 2)) (d (n "may") (r "^0.3") (k 0)) (d (n "mimalloc") (r "^0.1") (k 2)) (d (n "nanorand") (r "^0.7") (f (quote ("std" "wyrand"))) (k 2)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.1") (d #t) (k 2)) (d (n "yarte") (r "^0.15") (f (quote ("bytes-buf" "json"))) (d #t) (k 2)))) (h "0c7x77l4zalj0aqa5nga75rwc627zaza64992jflm8bpwkmz1xfi") (f (quote (("default" "may/default"))))))

(define-public crate-may_minihttp-0.1.2 (c (n "may_minihttp") (v "0.1.2") (d (list (d (n "atoi") (r "^2") (d #t) (k 2)) (d (n "buf-min") (r "^0.7") (f (quote ("bytes"))) (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "httpdate") (r "^1") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_off"))) (d #t) (k 2)) (d (n "may") (r "^0.3") (k 0)) (d (n "mimalloc") (r "^0.1") (k 2)) (d (n "nanorand") (r "^0.7") (f (quote ("std" "wyrand"))) (k 2)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.1") (d #t) (k 2)) (d (n "yarte") (r "^0.15") (f (quote ("bytes-buf" "json"))) (d #t) (k 2)))) (h "14v9mfgp4hfr4fdxa7rd0pks6drbsrdln02i6mlcgsyb1bab1w65") (f (quote (("default" "may/default"))))))

(define-public crate-may_minihttp-0.1.3 (c (n "may_minihttp") (v "0.1.3") (d (list (d (n "atoi") (r "^2") (d #t) (k 2)) (d (n "buf-min") (r "^0.7") (f (quote ("bytes"))) (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "httpdate") (r "^1") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_off"))) (d #t) (k 2)) (d (n "may") (r "^0.3") (k 0)) (d (n "mimalloc") (r "^0.1") (k 2)) (d (n "nanorand") (r "^0.7") (f (quote ("std" "wyrand"))) (k 2)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.1") (d #t) (k 2)) (d (n "yarte") (r "^0.15") (f (quote ("bytes-buf" "json"))) (d #t) (k 2)))) (h "171311m4581bm8pmgkm4nvij9hx370kg7hfwcwpqh24yxpsy0lsn") (f (quote (("default" "may/default"))))))

(define-public crate-may_minihttp-0.1.4 (c (n "may_minihttp") (v "0.1.4") (d (list (d (n "atoi") (r "^2") (d #t) (k 2)) (d (n "buf-min") (r "^0.7") (f (quote ("bytes"))) (d #t) (k 2)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "httparse") (r "^1") (d #t) (k 0)) (d (n "httpdate") (r "^1") (d #t) (k 0)) (d (n "itoa") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_off"))) (d #t) (k 2)) (d (n "may") (r "^0.3") (k 0)) (d (n "mimalloc") (r "^0.1") (k 2)) (d (n "nanorand") (r "^0.7") (f (quote ("std" "wyrand"))) (k 2)) (d (n "num_cpus") (r "^1.0") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "smallvec") (r "^1.1") (d #t) (k 2)) (d (n "yarte") (r "^0.15") (f (quote ("bytes-buf" "json"))) (d #t) (k 2)))) (h "12sjgrz3z37x6rnfs60dc465srw9lgb01fzx3pgfk93y9bg8wpdc") (f (quote (("default" "may/default"))))))

