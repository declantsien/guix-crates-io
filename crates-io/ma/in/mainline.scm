(define-module (crates-io ma in mainline) #:use-module (crates-io))

(define-public crate-mainline-4.0.0 (c (n "mainline") (v "4.0.0") (d (list (d (n "anyhow") (r "^1.0.52") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 2)) (d (n "crc") (r "^1.8.1") (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.19") (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "lru") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.3") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.133") (d #t) (k 0)) (d (n "simple_logger") (r "^1.16.0") (f (quote ("colors"))) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "net" "time" "macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.15.0") (f (quote ("rt-multi-thread" "net" "time" "macros" "sync" "signal"))) (d #t) (k 2)) (d (n "warp") (r "^0.3.2") (d #t) (k 2)))) (h "0cd60kgb3dgf6l0374cxycyp4vwzvcnvlxhb07hhlcaca29bdg06") (y #t)))

(define-public crate-mainline-0.1.0 (c (n "mainline") (v "0.1.0") (h "1gbg4kaqspphs521cxsw98jfl7nk01i08ajpdxfk861x4z0qdk0s")))

(define-public crate-mainline-0.2.0 (c (n "mainline") (v "0.2.0") (d (list (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "06m39mgmy8gms2aybkvbvdh0609fagp0dq96wi0yffpbfnb3q8v0")))

(define-public crate-mainline-0.3.0 (c (n "mainline") (v "0.3.0") (d (list (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "00a3721m5j4ylz2abjx5h23pr9kd7h0sgikywynl1jnwjp2f903b") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-0.4.0 (c (n "mainline") (v "0.4.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1fbh18flvpkv0w6n14mccrywxcnyf66xma50ahl28ncci2hjjj2b") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-0.4.1 (c (n "mainline") (v "0.4.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "063acp3x70c3wmahiv1in8byrskgihpmgrlcdnwn6z9lc37gh4qv") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-0.4.2 (c (n "mainline") (v "0.4.2") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "18mwb4y0v0k6rfn37gqjxgqb7zc3q34pwg9p9jlgjdjngzx816dk") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-0.5.0 (c (n "mainline") (v "0.5.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "063gfyxdr50995rgwxlsxzcbd9ijaydlpwciahimq90qnywx971y") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-0.6.0 (c (n "mainline") (v "0.6.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1fns0pkl4ibd3f4ys1qdbil6m55akr80mp8clwrbrkr8knlvsqb8") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-0.6.1 (c (n "mainline") (v "0.6.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "1dj49fblhfl8zadd244ypb9sywy0m2d6737bb0c808ca529yqbqc") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.0.0 (c (n "mainline") (v "1.0.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "06vdqh6fz0ngkizi0z9cnssna3fjv54y1znm31mfjf9x8w7miizj") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.0.1 (c (n "mainline") (v "1.0.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)))) (h "12wzikyz1w8fw9jvlssnzj7nvaxrwc33fcklkws2yvcdbx9rmp8z") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.1.0 (c (n "mainline") (v "1.1.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1hvz9ypg8iycfwv24p2nspcidl2i9nap09m25m2qqsbh6g0jv51v") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.2.0 (c (n "mainline") (v "1.2.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "116namc5l120wm5ys0slhb8d784y8akm3fzscyca523hnqjs7hcq") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.2.1 (c (n "mainline") (v "1.2.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "0v41y7f7yn1c9svzlb1sp9a5h87fm119sdbw3g3f3ff862z09mxx") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.3.0 (c (n "mainline") (v "1.3.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "11qmchwyc2s0s6wkn7q36wqamlgyy4mnsfw80b0hxbzm9k285kxd") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.3.1 (c (n "mainline") (v "1.3.1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1azxz16pclx0lmrlw0hq99q46r7glqazw7ajrqx9f9b3353n83ap") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.4.0 (c (n "mainline") (v "1.4.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1jhqw46xzdffqaz00myczc67x740si8h19zsq3rqbfaydw9xhywh") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-1.5.0 (c (n "mainline") (v "1.5.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (f (quote ("select" "eventual-fairness"))) (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1fk63qpbjv8aanxg2m0yc2wd5iiw732c6rpjsbdjb46cwdb9dv6r") (f (quote (("default" "async") ("async" "flume/async"))))))

(define-public crate-mainline-2.0.0-rc1 (c (n "mainline") (v "2.0.0-rc1") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "050h05lxjwqmfcmip2x6v5d7kxglxyv4wf1d18zk6nld7f1n6gi4") (f (quote (("default") ("async" "flume/async"))))))

(define-public crate-mainline-2.0.0 (c (n "mainline") (v "2.0.0") (d (list (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "clap") (r "^4.4.8") (f (quote ("derive"))) (d #t) (k 2)) (d (n "crc") (r "^3.0.1") (d #t) (k 0)) (d (n "ed25519-dalek") (r "^2.1.0") (d #t) (k 0)) (d (n "flume") (r "^0.11.0") (k 0)) (d (n "futures") (r "^0.3.29") (d #t) (k 2)) (d (n "lru") (r "^0.12.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_bencode") (r "^0.2.4") (d #t) (k 0)) (d (n "serde_bytes") (r "^0.11.5") (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "00ng8gqr9k07zgs9yxb2s0arvf0hcggwbyxrh5bgw1lld4kszn10") (f (quote (("default") ("async" "flume/async"))))))

