(define-module (crates-io ma gr magrathea) #:use-module (crates-io))

(define-public crate-magrathea-0.0.1 (c (n "magrathea") (v "0.0.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "kludgine") (r "^0.0.1") (o #t) (d #t) (k 0)) (d (n "palette") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 0)) (d (n "sorted-vec") (r "^0.4") (d #t) (k 0)) (d (n "spade") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ngy3j5mizjv7drpn7xgd7gf1631brx0980r14hvjca2p355yhig") (f (quote (("editor" "kludgine" "cli") ("default") ("cli" "structopt" "hex"))))))

(define-public crate-magrathea-0.0.2 (c (n "magrathea") (v "0.0.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "kludgine") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "palette") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.5") (d #t) (k 0)) (d (n "spade") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0nkwl9mv0i5jnhmd2b979778frvzv14sgj2ry5a0p78h0rcczksr") (f (quote (("serialization" "palette/serializing" "uuid/serde") ("editor" "kludgine" "cli") ("default") ("cli" "structopt" "hex"))))))

(define-public crate-magrathea-0.0.3 (c (n "magrathea") (v "0.0.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "euclid") (r "^0.22") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "kludgine") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "noise") (r "^0.7") (d #t) (k 0)) (d (n "palette") (r "^0.5") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("small_rng"))) (d #t) (k 0)) (d (n "sorted-vec") (r "^0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0196rl4373d64i6j1agay26syphg2h9924nfzz26gdhb8zg0qq1a") (f (quote (("serialization" "palette/serializing") ("editor" "kludgine" "cli") ("default") ("cli" "structopt" "hex"))))))

