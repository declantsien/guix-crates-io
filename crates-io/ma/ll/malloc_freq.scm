(define-module (crates-io ma ll malloc_freq) #:use-module (crates-io))

(define-public crate-malloc_freq-0.1.0-alpha.2 (c (n "malloc_freq") (v "0.1.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "args") (r "^2.2") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (f (quote ("serialize-serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "175525wv6aj79f4a2nhf5482m9bqfraaqp1xcndszkj6kii5dh0j")))

(define-public crate-malloc_freq-0.1.0 (c (n "malloc_freq") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "args") (r "^2.2") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (f (quote ("serialize-serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "1dr0jhbik310dg6gxdh2wff1wdx2y9z4hsv20wbaw3g8k2v9nj3d")))

(define-public crate-malloc_freq-0.1.1 (c (n "malloc_freq") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "args") (r "^2.2") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (f (quote ("serialize-serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "0z33ixbgymy5c044s1dgkffk1dr89pcfl68k1kk82d5qwdd2z8xm")))

(define-public crate-malloc_freq-0.1.2 (c (n "malloc_freq") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "args") (r "^2.2") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (f (quote ("serialize-serde"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (d #t) (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "glob") (r "^0.3") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "num-format") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8") (d #t) (k 0)))) (h "1b5p3059hf94zx2yivcc9ymqid739zjqbcddbbyjg5ky9jm2jzf6")))

