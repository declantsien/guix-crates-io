(define-module (crates-io ma pl maplibre) #:use-module (crates-io))

(define-public crate-maplibre-0.0.1 (c (n "maplibre") (v "0.0.1") (d (list (d (n "bytemuck") (r "^1.2.0") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "geo") (r "^0.19") (d #t) (k 0)) (d (n "geo-types") (r "^0.7") (f (quote ("use-rstar_0_9"))) (d #t) (k 0)) (d (n "geozero") (r "^0.8.0") (f (quote ("with-geo"))) (d #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17") (d #t) (k 0)) (d (n "ndk-glue") (r "^0.5.0") (d #t) (t "cfg(target_os = \"android\")") (k 0)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (t "cfg(target_os = \"android\")") (k 0)) (d (n "reqwest-middleware") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "reqwest-middleware-cache") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "rstar") (r "^0.9") (d #t) (k 0)) (d (n "tile-grid") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "time"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-tracy") (r "^0.8") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tracing-wasm") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracy-client") (r "^0.12.7") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Headers" "WorkerGlobalScope" "Request" "RequestInit" "RequestMode" "Response" "ErrorEvent" "DedicatedWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12") (d #t) (k 0)) (d (n "winit") (r "^0.26") (k 0)) (d (n "winit") (r "^0.26") (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.26") (f (quote ("x11" "wayland"))) (t "cfg(target_os = \"linux\")") (k 0)))) (h "19gcxsk8sm0mxnz69rq4bsnlvh6a00zsy5f5hdb9hixmy8qv2s4l") (f (quote (("web-webgl" "wgpu/webgl") ("enable-tracing" "tracing-subscriber" "tracing-tracy" "tracy-client" "tracing-wasm") ("default")))) (y #t)))

(define-public crate-maplibre-0.0.2 (c (n "maplibre") (v "0.0.2") (d (list (d (n "bytemuck") (r "^1.2.0") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.0") (d #t) (k 0)) (d (n "cgmath") (r "^0.18") (d #t) (k 0)) (d (n "cint") (r "^0.2") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "console_log") (r "^0.2") (f (quote ("color"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "csscolorparser") (r "^0.5") (f (quote ("serde" "cint"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "geo") (r "^0.19") (d #t) (k 0)) (d (n "geo-types") (r "^0.7") (f (quote ("use-rstar_0_9"))) (d #t) (k 0)) (d (n "geozero") (r "^0.9.4") (f (quote ("with-mvt" "with-geo"))) (k 0)) (d (n "include_dir") (r "^0.7.2") (d #t) (k 0)) (d (n "instant") (r "^0.1") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lyon") (r "^0.17") (d #t) (k 0)) (d (n "maplibre-build-tools") (r "^0.1.0") (d #t) (k 1)) (d (n "prost") (r "^0.10.1") (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "gzip"))) (t "cfg(target_os = \"android\")") (k 0)) (d (n "reqwest-middleware") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "reqwest-middleware-cache") (r "^0.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "rstar") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tile-grid") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "time"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-tracy") (r "^0.8") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "tracing-wasm") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "tracy-client") (r "^0.12.7") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3") (f (quote ("Window" "Headers" "WorkerGlobalScope" "Request" "RequestInit" "RequestMode" "Response" "ErrorEvent" "DedicatedWorkerGlobalScope"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wgpu") (r "^0.12") (d #t) (k 0)) (d (n "winit") (r "^0.26") (k 0)) (d (n "winit") (r "^0.26") (t "cfg(target_os = \"android\")") (k 0)) (d (n "winit") (r "^0.26") (f (quote ("x11" "wayland"))) (t "cfg(target_os = \"linux\")") (k 0)))) (h "01v2q4db9cq8nf93rksn84h9qp4w91xmzxs8c9j72g1rmr4c4928") (f (quote (("web-webgl" "wgpu/webgl") ("enable-tracing" "tracing-subscriber" "tracing-tracy" "tracy-client" "tracing-wasm") ("default")))) (y #t)))

(define-public crate-maplibre-0.0.3 (c (n "maplibre") (v "0.0.3") (d (list (d (n "async-trait") (r "^0.1.57") (d #t) (k 0)) (d (n "bytemuck") (r "^1.12.1") (d #t) (k 0)) (d (n "bytemuck_derive") (r "^1.2.1") (d #t) (k 0)) (d (n "cgmath") (r "^0.18.0") (d #t) (k 0)) (d (n "cint") (r "^0.3.1") (d #t) (k 0)) (d (n "csscolorparser") (r "^0.6.2") (f (quote ("serde" "cint"))) (d #t) (k 0)) (d (n "downcast-rs") (r "^1.2.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "geo") (r "^0.23.1") (d #t) (k 0)) (d (n "geo-types") (r "^0.7.6") (f (quote ("use-rstar_0_9"))) (d #t) (k 0)) (d (n "geozero") (r "^0.9.7") (f (quote ("with-mvt" "with-geo"))) (k 0)) (d (n "image") (r "^0.24") (f (quote ("jpeg" "webp" "png"))) (o #t) (k 0)) (d (n "include_dir") (r "^0.7.2") (d #t) (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "lyon") (r "^1.0.0") (d #t) (k 0)) (d (n "maplibre-build-tools") (r "^0.0.3") (d #t) (k 1)) (d (n "png") (r "^0.17.5") (o #t) (d #t) (k 0)) (d (n "raw-window-handle") (r "^0.5.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "gzip"))) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("rustls-tls" "gzip"))) (t "cfg(target_os = \"android\")") (k 0)) (d (n "reqwest-middleware") (r "^0.1.6") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "reqwest-middleware-cache") (r "^0.1.1") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "rstar") (r "^0.9.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "smallvec") (r "^1.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tile-grid") (r "^0.3.0") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "time"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "tokio-util") (r "^0.7.1") (f (quote ("rt"))) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "tracing") (r "^0.1.36") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.15") (o #t) (d #t) (k 0)) (d (n "tracing-tracy") (r "^0.10") (o #t) (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\", target_os = \"linux\", target_os = \"android\", target_os = \"windows\"))") (k 0)) (d (n "wgpu") (r "^0.14.0") (d #t) (k 0)))) (h "0mm9c72lj2vz4wdfm3l83z8ijwd9944imdr284cr4fq2brdxsqb8") (f (quote (("web-webgl" "wgpu/webgl") ("trace" "tracing-subscriber" "tracing-tracy") ("thread-safe-futures") ("raster" "image") ("headless" "png") ("embed-static-tiles" "maplibre-build-tools/sqlite") ("default" "raster")))) (r "1.65")))

