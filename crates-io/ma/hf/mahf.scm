(define-module (crates-io ma hf mahf) #:use-module (crates-io))

(define-public crate-mahf-0.1.0 (c (n "mahf") (v "0.1.0") (d (list (d (n "better_any") (r "^0.2.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.0") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.2") (d #t) (k 0)) (d (n "contracts") (r "^0.6.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derivative") (r "^2.2.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.17") (f (quote ("deref" "deref_mut" "add" "mul" "not"))) (d #t) (k 0)) (d (n "dyn-clone") (r "^1.0.11") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3.25") (d #t) (k 0)) (d (n "eyre") (r "^0.6.8") (d #t) (k 0)) (d (n "float_eq") (r "^1.0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.17.4") (f (quote ("rayon"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "ron") (r "^0.8.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-case") (r "^3.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "trait-set") (r "^0.3.0") (d #t) (k 0)))) (h "04fwh0qqvw3g9sjsjl08zwjygk6s0cpkgczxcwlhbcdg7hzvs4jx")))

