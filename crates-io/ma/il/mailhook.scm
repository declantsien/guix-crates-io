(define-module (crates-io ma il mailhook) #:use-module (crates-io))

(define-public crate-mailhook-0.1.0 (c (n "mailhook") (v "0.1.0") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "envport") (r "^0.1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.4") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.1") (d #t) (k 0)))) (h "05fs9g1gww1kbmr4jhbgbnpnvijzp7s4r8lrqmj5pfw11xz5b6kk")))

(define-public crate-mailhook-0.1.1 (c (n "mailhook") (v "0.1.1") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "0nn95268bn4nhrpg07gj5nhr7ppiv28hxxhhbvndhwbj2jdh70cl")))

(define-public crate-mailhook-0.1.2 (c (n "mailhook") (v "0.1.2") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "146hjlf5660mj0n1vjr3r4babqyqbxvrl0hxx6k6mrbk5rvy12rv")))

(define-public crate-mailhook-0.1.3 (c (n "mailhook") (v "0.1.3") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "088jcvnyfbl3y7fbl5l10g8565mcgl9ri074p7hp65mji741z8wy")))

(define-public crate-mailhook-0.1.4 (c (n "mailhook") (v "0.1.4") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "01i7fs0qg683zip14wqnvnya1vld93fasmh3d1x0zldcpilxrh59")))

(define-public crate-mailhook-0.1.5 (c (n "mailhook") (v "0.1.5") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "0vh1s6i36b3qbrj2ziyld61983i3jwcz93wisl2prfyrb529cvm1")))

(define-public crate-mailhook-0.1.6 (c (n "mailhook") (v "0.1.6") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "0p6mlks4nphvgj8wrqmxpvalw25s9wmckhji2767lcwan0nwsjhn")))

(define-public crate-mailhook-0.1.7 (c (n "mailhook") (v "0.1.7") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "158jz88i2bqmpxr0pbn2lndpwj4gfcya9lc3vps32i2hvrysbic9")))

(define-public crate-mailhook-0.1.8 (c (n "mailhook") (v "0.1.8") (d (list (d (n "aerr") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tracing"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "genv") (r "^0.1.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "loginit") (r "^0.1.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sonic-rs") (r "^0.2.5") (d #t) (k 0)) (d (n "static_init") (r "^1.0.3") (f (quote ("lock_statistics" "parking_lot" "parking_lot_core"))) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt" "rt-multi-thread" "time" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "wxpush") (r "^0.1.4") (d #t) (k 0)))) (h "1rirc674xpxp1s9imd42a4jn2haga2fgrbqzax7rvg7n8cc175j2")))

