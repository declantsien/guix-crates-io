(define-module (crates-io ma tc matchina) #:use-module (crates-io))

(define-public crate-matchina-0.1.3 (c (n "matchina") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.4.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "compact_str") (r "^0.7.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "core_affinity") (r "^0.8.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5.8") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.32.0") (d #t) (k 0)) (d (n "serde") (r "~1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "~1.0") (d #t) (k 0)) (d (n "tap") (r "^1.0.1") (d #t) (k 2)) (d (n "thiserror") (r "~1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (f (quote ("parking_lot"))) (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "json" "parking_lot"))) (d #t) (k 0)))) (h "0ggy2gwcfddzkk3wjs17f0kan9fhvmcsyjnzlzc331k80xsdmsbl") (r "1.77.0")))

