(define-module (crates-io ma so masonry) #:use-module (crates-io))

(define-public crate-masonry-0.1.0 (c (n "masonry") (v "0.1.0") (h "19ligggrdpf3aksqn9yxpa8fm0r35p27rfflxp46h4gjpn5fgzbf")))

(define-public crate-masonry-0.1.1 (c (n "masonry") (v "0.1.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "druid-shell") (r "^0.8.0") (k 0)) (d (n "float-cmp") (r "^0.8.0") (f (quote ("std"))) (k 2)) (d (n "fluent-bundle") (r "^0.15.1") (d #t) (k 0)) (d (n "fluent-langneg") (r "^0.13.0") (d #t) (k 0)) (d (n "fluent-syntax") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "open") (r "^1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 2)) (d (n "reqwest") (r "^0.11.5") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tempfile") (r "=3.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("fmt" "ansi"))) (k 0)) (d (n "tracing-wasm") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "usvg") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0kzy5inksw68w3s3g5l74n5wi0q1jcnc1w3gjarr3pzq4z77nsdh") (f (quote (("x11" "druid-shell/x11") ("webp" "druid-shell/webp") ("tiff" "druid-shell/tiff") ("tga" "druid-shell/tga") ("svg" "usvg") ("serde_deps" "im/serde" "druid-shell/serde") ("pnm" "druid-shell/pnm") ("png" "druid-shell/image_png") ("jpeg_rayon" "druid-shell/jpeg_rayon") ("jpeg" "druid-shell/jpeg") ("image-all" "svg" "png" "jpeg" "jpeg_rayon" "gif" "bmp" "ico" "tiff" "webp" "pnm" "dds" "tga" "farbfeld" "dxt" "hdr") ("ico" "druid-shell/ico") ("hdr" "druid-shell/hdr") ("gtk" "druid-shell/gtk") ("gif" "druid-shell/gif") ("farbfeld" "druid-shell/farbfeld") ("dxt" "druid-shell/dxt") ("default" "gtk" "png" "jpeg") ("dds" "druid-shell/dds") ("bmp" "druid-shell/bmp")))) (r "1.65")))

(define-public crate-masonry-0.1.2 (c (n "masonry") (v "0.1.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "chrono") (r "^0.4.19") (o #t) (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "druid-shell") (r "^0.8.0") (k 0)) (d (n "float-cmp") (r "^0.8.0") (f (quote ("std"))) (k 2)) (d (n "fluent-bundle") (r "^0.15.1") (d #t) (k 0)) (d (n "fluent-langneg") (r "^0.13.0") (d #t) (k 0)) (d (n "fluent-syntax") (r "^0.11.0") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "im") (r "^15.0.0") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.0") (d #t) (k 0)) (d (n "insta") (r "^1.8.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.6") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "open") (r "^1.6") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "pulldown-cmark") (r "^0.8") (k 2)) (d (n "reqwest") (r "^0.11.5") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.133") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.74") (d #t) (k 0)) (d (n "smallvec") (r "^1.6.1") (d #t) (k 0)) (d (n "tempfile") (r "=3.1.0") (d #t) (k 2)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2.15") (f (quote ("fmt" "ansi"))) (k 0)) (d (n "tracing-wasm") (r "^0.2.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "unic-langid") (r "^0.9.0") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6.0") (d #t) (k 0)) (d (n "usvg") (r "^0.14.1") (o #t) (d #t) (k 0)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "0xnygpbh3b9bm4hkfg86ia7aqylbf6wyprphkbj75gn16pvkp9mk") (f (quote (("x11" "druid-shell/x11") ("webp" "druid-shell/webp") ("tiff" "druid-shell/tiff") ("tga" "druid-shell/tga") ("svg" "usvg") ("serde_deps" "im/serde" "druid-shell/serde") ("pnm" "druid-shell/pnm") ("png" "druid-shell/image_png") ("jpeg_rayon" "druid-shell/jpeg_rayon") ("jpeg" "druid-shell/jpeg") ("image-all" "svg" "png" "jpeg" "jpeg_rayon" "gif" "bmp" "ico" "tiff" "webp" "pnm" "dds" "tga" "farbfeld" "dxt" "hdr") ("ico" "druid-shell/ico") ("hdr" "druid-shell/hdr") ("gtk" "druid-shell/gtk") ("gif" "druid-shell/gif") ("farbfeld" "druid-shell/farbfeld") ("dxt" "druid-shell/dxt") ("default" "gtk" "png" "jpeg") ("dds" "druid-shell/dds") ("bmp" "druid-shell/bmp")))) (r "1.65")))

(define-public crate-masonry-0.2.0 (c (n "masonry") (v "0.2.0") (d (list (d (n "accesskit") (r "^0.14.0") (d #t) (k 0)) (d (n "accesskit_winit") (r "^0.20.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "float-cmp") (r "^0.9.0") (f (quote ("std"))) (k 2)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "futures-intrusive") (r "^0.5.0") (d #t) (k 0)) (d (n "image") (r "^0.25.1") (k 0)) (d (n "image") (r "^0.25.1") (f (quote ("png"))) (k 2)) (d (n "insta") (r "^1.38.0") (d #t) (k 2)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen"))) (d #t) (k 0)) (d (n "kurbo") (r "^0.11.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "parley") (r "^0.1.0") (d #t) (k 0)) (d (n "pollster") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.200") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.116") (d #t) (k 0)) (d (n "smallvec") (r "^1.13.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.10.1") (d #t) (k 2)) (d (n "time") (r "^0.3.36") (f (quote ("macros" "formatting"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "time"))) (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.11.0") (d #t) (k 0)) (d (n "vello") (r "^0.1.0") (d #t) (k 0)) (d (n "wgpu") (r "^0.19.4") (d #t) (k 0)) (d (n "winit") (r "^0.30.0") (d #t) (k 0)) (d (n "xi-unicode") (r "^0.3.0") (d #t) (k 0)))) (h "1kwrp98mvsjc1ps65lbbyk938lmdzi5zmziwfni4c0cqj4ks8pzq")))

