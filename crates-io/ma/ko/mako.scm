(define-module (crates-io ma ko mako) #:use-module (crates-io))

(define-public crate-mako-0.1.0 (c (n "mako") (v "0.1.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "pyo3") (r "^0.13.2") (f (quote ("extension-module" "abi3-py36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.3") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0ab1d8mim600n63grp6l91inkpqc486fk150njibr9iv36ld85y0") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.2.0 (c (n "mako") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "pyo3") (r "^0.13.2") (f (quote ("extension-module" "abi3-py36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0ka7gkpq91aw344lbgg3ycg7x162jqlycmxkzn4s5icykhzpfz2h") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.2.1 (c (n "mako") (v "0.2.1") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "pyo3") (r "^0.13.2") (f (quote ("extension-module" "abi3-py36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0w051yqsp5waz0g6r15a9n6q2djnc9afp2hmivm37y2mqvaz6gyy") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.2.2 (c (n "mako") (v "0.2.2") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "pyo3") (r "^0.13.2") (f (quote ("extension-module" "abi3-py36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0wssvm3sqql4gwpx147gaawqw0fwrki3is3y7s19hjjy6nm27jnw") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.2.3 (c (n "mako") (v "0.2.3") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "pyo3") (r "^0.13.2") (f (quote ("extension-module" "abi3-py36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "1i9psp9fjzyxr7lhfvwf649ca2cy0y3wz8pviik1cm0pz7nmv318") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.2.4 (c (n "mako") (v "0.2.4") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "pyo3") (r "^0.13.2") (f (quote ("extension-module" "abi3-py36"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0xmcf2yqghvk68209kla1c842xwcfz4n98si6nzbz165irmxf882") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.2.5 (c (n "mako") (v "0.2.5") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0swdx8gmkyfcwgkcda9fk7cbmsv3nvgl89nnc6phxfc37pabifb1") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

(define-public crate-mako-0.3.0 (c (n "mako") (v "0.3.0") (d (list (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "derive_builder") (r "^0.9") (d #t) (k 0)) (d (n "esaxx-rs") (r "^0.1") (d #t) (k 0)) (d (n "indicatif") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lentrait") (r "^0.2.3") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "multiqueue") (r "^0.3.2") (d #t) (k 0)) (d (n "onig") (r "^6.0") (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rayon-cond") (r "^0.2.0") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "spm_precompiled") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.1") (d #t) (k 2)) (d (n "thread-control") (r "^0.1.2") (d #t) (k 0)) (d (n "unicode-normalization-alignments") (r "^0.1") (d #t) (k 0)) (d (n "unicode-segmentation") (r "^1.6") (d #t) (k 0)) (d (n "unicode_categories") (r "^0.1") (d #t) (k 0)))) (h "0b9x1r0bik7jid7pkqvm4r03n4vljws4345dwbpgmfin8784ijdi") (f (quote (("progressbar" "indicatif") ("default" "progressbar"))))))

