(define-module (crates-io ma s- mas-http) #:use-module (crates-io))

(define-public crate-mas-http-0.7.0 (c (n "mas-http") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.29") (d #t) (k 0)) (d (n "headers") (r "^0.3.9") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (f (quote ("http1" "http2"))) (o #t) (k 0)) (d (n "mas-tower") (r "=0.7.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "rustls") (r "^0.21.9") (o #t) (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.6.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("sync" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("util"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("cors"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (k 0)) (d (n "webpki-roots") (r "^0.25.3") (o #t) (d #t) (k 0)))) (h "063q1gkbzv1ky3kixiffdyxylz8cbgh1b582z1rmxh1b39r4hsfs") (s 2) (e (quote (("webpki-roots" "dep:webpki-roots") ("native-roots" "dep:rustls-native-certs") ("client" "dep:rustls" "hyper/tcp" "dep:hyper-rustls" "dep:tokio" "tower/limit" "tower-http/timeout" "tower-http/follow-redirect" "tower-http/set-header") ("axum" "dep:axum"))))))

(define-public crate-mas-http-0.8.0 (c (n "mas-http") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.79") (d #t) (k 2)) (d (n "axum") (r "^0.6.20") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "headers") (r "^0.3.9") (d #t) (k 0)) (d (n "http") (r "^0.2.11") (d #t) (k 0)) (d (n "http-body") (r "^0.4.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.25.0") (f (quote ("http1" "http2"))) (o #t) (k 0)) (d (n "mas-tower") (r "=0.8.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.112") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("sync" "parking_lot"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("util"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("cors"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22.0") (k 0)) (d (n "webpki-roots") (r "^0.26.0") (o #t) (d #t) (k 0)))) (h "0g3bj1fi47g1gcf609532aimzczrhgxj4134rd7hsyy4y7d4ya51") (s 2) (e (quote (("webpki-roots" "dep:webpki-roots") ("native-roots" "dep:rustls-native-certs") ("client" "dep:rustls" "hyper/tcp" "dep:hyper-rustls" "dep:tokio" "tower/limit" "tower-http/timeout" "tower-http/follow-redirect" "tower-http/set-header") ("axum" "dep:axum"))))))

(define-public crate-mas-http-0.9.0 (c (n "mas-http") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.81") (d #t) (k 2)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "headers") (r "^0.3.9") (d #t) (k 0)) (d (n "http") (r "^0.2.12") (d #t) (k 0)) (d (n "http-body") (r "^0.4.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("client" "http1" "http2" "stream" "runtime"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.25.0") (f (quote ("http1" "http2"))) (o #t) (k 0)) (d (n "mas-tower") (r "=0.9.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.22.0") (f (quote ("trace" "metrics"))) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.14.0") (d #t) (k 0)) (d (n "rustls") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "rustls-platform-verifier") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "serde_urlencoded") (r "^0.7.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("macros" "rt"))) (d #t) (k 2)) (d (n "tower") (r "^0.4.13") (f (quote ("util"))) (d #t) (k 0)) (d (n "tower-http") (r "^0.4.4") (f (quote ("cors"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.23.0") (k 0)))) (h "1wcmqjpd44wp7ip3yrlzhh6sx54zshrmhmfcm8hm8xgarcwr0f6v") (s 2) (e (quote (("client" "dep:mas-tower" "dep:rustls" "hyper/tcp" "dep:hyper-rustls" "dep:rustls-platform-verifier" "tower/limit" "tower-http/timeout" "tower-http/follow-redirect" "tower-http/set-header"))))))

