(define-module (crates-io ma na manas_http) #:use-module (crates-io))

(define-public crate-manas_http-0.1.0 (c (n "manas_http") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (o #t) (d #t) (k 0)) (d (n "async-convert") (r "^1.0.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "capped_stream") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("std"))) (o #t) (k 0)) (d (n "claims") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "claims") (r "^0.7.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "dyn_problem") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "ecow") (r "^0.1.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "gdp_rs") (r "^0.1.1") (d #t) (k 0)) (d (n "headers") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "http-api-problem") (r "^0.57.0") (f (quote ("api-error" "hyper"))) (o #t) (d #t) (k 0)) (d (n "http_uri") (r "^1.0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "iri-string") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "rdf_dynsyn") (r "^0.3.1") (f (quote ("async"))) (o #t) (d #t) (k 0)) (d (n "rdf_utils") (r "^0.3.1") (f (quote ("compat-ecow"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.30.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.169") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (o #t) (d #t) (k 0)) (d (n "sophia_api") (r "^0.8.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("util"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "typed_record") (r "^0.1.1") (f (quote ("ext-anymap"))) (o #t) (d #t) (k 0)) (d (n "unicase") (r "^2.6.0") (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "vec1") (r "^1.10.1") (f (quote ("smallvec-v1" "smallvec-v1-write"))) (o #t) (d #t) (k 0)))) (h "0kyypdvajd5mlqbd5z75hqzj3dzci6kwc9cjjzj1p4zz1z4539l2") (s 2) (e (quote (("typed-headers" "dep:headers" "dep:http" "dep:mime" "dep:mime_guess" "dep:rust_decimal" "dep:smallvec" "dep:chrono" "dep:vec1" "dep:itertools" "dep:either") ("test-utils" "dep:rstest" "dep:claims") ("service" "dep:tower" "dep:futures" "dep:dyn-clone" "dep:http" "dep:hyper" "dep:http-api-problem" "typed-headers") ("serde" "dep:serde" "iri-string/serde") ("representation" "typed-headers" "dep:typed_record" "dep:hyper") ("impl-representation" "representation" "dep:either" "dep:bytes" "dep:futures" "dep:anyhow" "dep:rdf_utils" "dep:dyn_problem" "dep:async-stream" "dep:rdf_dynsyn" "dep:if_chain" "dep:tokio" "dep:tokio-util" "dep:tower" "dep:dyn-clone" "http_uri/sophia" "dep:sophia_api" "dep:async-once-cell" "dep:capped_stream") ("conditional_req" "dep:if_chain" "dep:headers" "dep:http"))))))

(define-public crate-manas_http-0.1.1 (c (n "manas_http") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.71") (o #t) (d #t) (k 0)) (d (n "async-convert") (r "^1.0.0") (d #t) (k 0)) (d (n "async-once-cell") (r "^0.5.3") (o #t) (d #t) (k 0)) (d (n "async-stream") (r "^0.3.5") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "capped_stream") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("std"))) (o #t) (k 0)) (d (n "claims") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "claims") (r "^0.7.1") (d #t) (k 2)) (d (n "dyn-clone") (r "^1.0.14") (o #t) (d #t) (k 0)) (d (n "dyn_problem") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "ecow") (r "^0.1.2") (d #t) (k 0)) (d (n "either") (r "^1.8.1") (o #t) (d #t) (k 0)) (d (n "frunk_core") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (o #t) (d #t) (k 0)) (d (n "gdp_rs") (r "^0.1.1") (d #t) (k 0)) (d (n "headers") (r "^0.3.8") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (o #t) (d #t) (k 0)) (d (n "http-api-problem") (r "^0.57.0") (f (quote ("api-error" "hyper"))) (o #t) (d #t) (k 0)) (d (n "http_uri") (r "^1.0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (f (quote ("stream"))) (o #t) (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "iri-string") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (o #t) (d #t) (k 0)) (d (n "mime_guess") (r "^2.0.4") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.3.0") (d #t) (k 0)) (d (n "rdf_dynsyn") (r "^0.3.1") (f (quote ("async"))) (o #t) (d #t) (k 0)) (d (n "rdf_utils") (r "^0.3.1") (f (quote ("compat-ecow"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.9.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "rust_decimal") (r "^1.30.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.169") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11.0") (o #t) (d #t) (k 0)) (d (n "sophia_api") (r "^0.8.0-alpha.1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt" "io-util"))) (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.8") (f (quote ("io-util"))) (o #t) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("util"))) (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "typed_record") (r "^0.1.1") (f (quote ("ext-anymap"))) (o #t) (d #t) (k 0)) (d (n "unicase") (r "^2.6.0") (d #t) (k 0)) (d (n "uriparse") (r "^0.6.4") (d #t) (k 0)) (d (n "vec1") (r "^1.10.1") (f (quote ("smallvec-v1" "smallvec-v1-write"))) (o #t) (d #t) (k 0)))) (h "0d2m637vnqjmvwn4xddbfiz2dki55272acbhipziyrmfz8pynbba") (s 2) (e (quote (("typed-headers" "dep:headers" "dep:http" "dep:mime" "dep:mime_guess" "dep:rust_decimal" "dep:smallvec" "dep:chrono" "dep:vec1" "dep:itertools" "dep:either") ("test-utils" "dep:rstest" "dep:claims") ("service" "dep:tower" "dep:futures" "dep:dyn-clone" "dep:http" "dep:hyper" "dep:http-api-problem" "typed-headers") ("serde" "dep:serde" "iri-string/serde") ("representation" "typed-headers" "dep:typed_record" "dep:hyper") ("impl-representation" "representation" "dep:either" "dep:bytes" "dep:futures" "dep:anyhow" "dep:rdf_utils" "dep:dyn_problem" "dep:async-stream" "dep:rdf_dynsyn" "dep:if_chain" "dep:tokio" "dep:tokio-util" "dep:tower" "dep:dyn-clone" "http_uri/sophia" "dep:sophia_api" "dep:async-once-cell" "dep:capped_stream") ("conditional_req" "dep:if_chain" "dep:headers" "dep:http"))))))

