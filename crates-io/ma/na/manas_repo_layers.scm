(define-module (crates-io ma na manas_repo_layers) #:use-module (crates-io))

(define-public crate-manas_repo_layers-0.1.0 (c (n "manas_repo_layers") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "async-convert") (r "^1.0.0") (d #t) (k 0)) (d (n "capped_stream") (r "^0.1.1") (d #t) (k 0)) (d (n "dyn_problem") (r "^0.1.1") (f (quote ("alias-future"))) (d #t) (k 0)) (d (n "frunk_core") (r "^0.4.2") (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "headers") (r "^0.3.8") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.27") (d #t) (k 0)) (d (n "if_chain") (r "^1.0.2") (d #t) (k 0)) (d (n "manas_http") (r "^0.1.1") (f (quote ("representation" "impl-representation" "conditional_req"))) (d #t) (k 0)) (d (n "manas_repo") (r "^0.1.0") (d #t) (k 0)) (d (n "manas_space") (r "^0.1.0") (d #t) (k 0)) (d (n "mime") (r "^0.3.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "rdf_dynsyn") (r "^0.3.1") (f (quote ("async"))) (d #t) (k 0)) (d (n "rdf_utils") (r "^0.3.1") (d #t) (k 0)) (d (n "rdf_vocabularies") (r "^0.2.0") (f (quote ("ns-rdf" "ns-stat" "ns-dcterms" "ns-ldp" "ns-solid" "ns-xsd"))) (o #t) (d #t) (k 0)) (d (n "sophia_api") (r "^0.8.0-alpha.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tokio") (r "^1.29.1") (f (quote ("rt"))) (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (f (quote ("util"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "typed_record") (r "^0.1.1") (f (quote ("ext-anymap"))) (d #t) (k 0)))) (h "13yd6w70qzdqzsbc7qngbj25cd60pskxqp4fl873rkirzx67cc4a") (f (quote (("patching" "rdf_utils/solid-insert-delete-patch") ("dconneging")))) (s 2) (e (quote (("validating" "dep:rdf_vocabularies"))))))

