(define-module (crates-io ma na manas_access_control) #:use-module (crates-io))

(define-public crate-manas_access_control-0.1.0 (c (n "manas_access_control") (v "0.1.0") (d (list (d (n "acp") (r "^0.1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0.4") (d #t) (k 0)) (d (n "dyn_problem") (r "^0.1.1") (f (quote ("alias-future" "ext-typed-record"))) (d #t) (k 0)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "ghost") (r "^0.1.13") (d #t) (k 0)) (d (n "http_uri") (r "^1.0.1") (f (quote ("invariants" "sophia"))) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "manas_authentication") (r "^0.1.0") (f (quote ("creds-context"))) (d #t) (k 0)) (d (n "manas_http") (r "^0.1.1") (f (quote ("typed-headers"))) (d #t) (k 0)) (d (n "manas_repo") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "manas_space") (r "^0.1.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.14") (d #t) (k 0)) (d (n "rdf_utils") (r "^0.3.1") (d #t) (k 0)) (d (n "rdf_vocabularies") (r "^0.2.0") (f (quote ("ns-acp" "ns-acl" "ns-foaf" "ns-rdf"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.185") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sophia_api") (r "^0.8.0-alpha.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.43") (d #t) (k 0)) (d (n "tower") (r "^0.4.13") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("attributes"))) (d #t) (k 0)) (d (n "typed_record") (r "^0.1.1") (f (quote ("ext-anymap" "ext-http"))) (d #t) (k 0)) (d (n "unwrap-infallible") (r "^0.1.5") (d #t) (k 0)) (d (n "vec1") (r "^1.10.1") (f (quote ("serde"))) (d #t) (k 0)))) (h "1j53cxv78dnwj3j3jv40hijf7vm4dcmyv2s8whry6sq0g0dk5r23") (f (quote (("impl-pdp-wac" "acp/engine") ("impl-pdp-acp" "acp/engine")))) (s 2) (e (quote (("impl-layered-repo" "dep:manas_repo"))))))

