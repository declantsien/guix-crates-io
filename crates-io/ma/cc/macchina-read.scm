(define-module (crates-io ma cc macchina-read) #:use-module (crates-io))

(define-public crate-macchina-read-0.1.0 (c (n "macchina-read") (v "0.1.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "sysctl") (r "^0.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "0q3cvkgfk1klx8jnrg0gwai5mxqcbib4rni2ldq3qcr8gnmayavd") (y #t)))

(define-public crate-macchina-read-0.1.1 (c (n "macchina-read") (v "0.1.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"netbsd\"))") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "objc-foundation") (r "^0.1.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "os-release") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"netbsd\"))") (k 0)) (d (n "sysctl") (r "^0.4.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)))) (h "0ifx0847pnrdxnjzh7sv642kkdmf7vp1a2gkqdbwx2p0l0zf2r1n") (y #t)))

(define-public crate-macchina-read-0.1.2 (c (n "macchina-read") (v "0.1.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"netbsd\"))") (k 0)) (d (n "os-release") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"netbsd\"))") (k 0)) (d (n "sysctl") (r "^0.4.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"linux\"))") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winreg") (r "^0.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0d8r9c12mn9n85vx1jm02fbb2lhnaq5bc2qw4l7gnydmmpajz4dp") (y #t)))

(define-public crate-macchina-read-0.1.3 (c (n "macchina-read") (v "0.1.3") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.88") (d #t) (k 0)) (d (n "local_ipaddress") (r "^0.1.3") (d #t) (k 0)) (d (n "mach") (r "^0.3.2") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (t "cfg(target_os = \"netbsd\")") (k 0)) (d (n "os-release") (r "^0.1") (d #t) (t "cfg(any(target_os = \"linux\", target_os = \"netbsd\"))") (k 0)) (d (n "regex") (r "^1.4.5") (d #t) (t "cfg(target_os = \"netbsd\")") (k 0)) (d (n "sqlite") (r "^0.25.3") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "sysctl") (r "^0.4.0") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"linux\"))") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "windows") (r "^0.4.0") (d #t) (t "cfg(target_os = \"windows\")") (k 1)) (d (n "winreg") (r "^0.8.0") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "15a0bc9dp6w2krgnn1v2qh4pwifa1650l5w5nwpi2nvkird045va") (y #t)))

