(define-module (crates-io ma cc macchina) #:use-module (crates-io))

(define-public crate-macchina-0.1.3 (c (n "macchina") (v "0.1.3") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "05sagldyhvbq4szqadkqqfkhp0w1x3c6mm4jlgsh390nnc164hih")))

(define-public crate-macchina-0.1.4 (c (n "macchina") (v "0.1.4") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0gykxvdrvm2za76paacamkn707wiy73ziw1r4pg88na1rk7rcmgq")))

(define-public crate-macchina-0.1.5 (c (n "macchina") (v "0.1.5") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1xgamjyaxgajgx929zx7irypgvni8kmfxfpsqbx28hg2rj81w55w")))

(define-public crate-macchina-0.1.6 (c (n "macchina") (v "0.1.6") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0lnnh4clbriyf2qqxbckpbmq9vwlnqx5553gvkaz2zpsqr50da2m")))

(define-public crate-macchina-0.1.7 (c (n "macchina") (v "0.1.7") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1239bf5jgvgn8ycccn4b6bj400dhr5zr6y3wkph4ixkjlycsabwr")))

(define-public crate-macchina-0.1.8 (c (n "macchina") (v "0.1.8") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0mzdzpsw8sixs3wdwn5zbqiqmrajd924dxkwcy4209wmv71c2mwz")))

(define-public crate-macchina-0.1.9 (c (n "macchina") (v "0.1.9") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "058c6z211xsxyjsmlsphkpd99h12zvdkwi8bfh0nbc0zvddrhv2g")))

(define-public crate-macchina-0.2.0 (c (n "macchina") (v "0.2.0") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "13wp47mwwfh0x0g78r7awsrlvx2xnyy2rpvbpc88p3fq6n4hwyc1")))

(define-public crate-macchina-0.2.1 (c (n "macchina") (v "0.2.1") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "01vjskgy246rqffmnd0w4k28sfy13qay3yhqqxs95iacafxink4f")))

(define-public crate-macchina-0.2.2 (c (n "macchina") (v "0.2.2") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "059f72aas3g20wvmf29dm514izr3zfgsc4mz8mqj1qyasad69zdq")))

(define-public crate-macchina-0.2.3 (c (n "macchina") (v "0.2.3") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "14428w5rkdsf2kppz48b13sfk2qr4g0p2glvrq58axcbk4yc8sqy")))

(define-public crate-macchina-0.2.4 (c (n "macchina") (v "0.2.4") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0qcrjmrymr2875k4sisfrakff1s8ki7kz9aii5xhw74zkhwrafv8")))

(define-public crate-macchina-0.2.6 (c (n "macchina") (v "0.2.6") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0vhdsg2k57x8acsqsz5q57xwqdndmvx9lp7l9h5c32317g8rfp2p")))

(define-public crate-macchina-0.2.7 (c (n "macchina") (v "0.2.7") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0xgpnjdmfijdpzh88ifsaxqzqsxphm6jlchspw01nwvnx6hn98kx")))

(define-public crate-macchina-0.3.0 (c (n "macchina") (v "0.3.0") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0z2cf4lbaiccldxaf79jmswxaxjhw4xcmpc22xdzhy7v6yqlzhsb")))

(define-public crate-macchina-0.3.1 (c (n "macchina") (v "0.3.1") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1vwpy58ny9k4vq4vsk18xiqjjp5fq8aadagj7zr2ykq4ndfpyj5j")))

(define-public crate-macchina-0.3.2 (c (n "macchina") (v "0.3.2") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1dblchbzmbbrsrd4qjjyfbg0cmvyfacqzxfqmryp0xps52h1flxz")))

(define-public crate-macchina-0.3.3 (c (n "macchina") (v "0.3.3") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.19.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "06dfzi3cssw9bibpk1xjic3ijqxn36r4szkfqsjvcq4d8q21lygv")))

(define-public crate-macchina-0.3.4 (c (n "macchina") (v "0.3.4") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "03a5n4qrghppq22hbf3h6lic85bakwdw3d4c8ygznnvzr0323nk6")))

(define-public crate-macchina-0.3.5 (c (n "macchina") (v "0.3.5") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0h2dm01y3cvqwg117cnv9avkb1h0nyhprdrvbczmk8ij9l6x6fqy")))

(define-public crate-macchina-0.3.6 (c (n "macchina") (v "0.3.6") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1m4cs377bhaqpsdqbwq0s58375w8fbnh2hq46jn0b8cmx4z4ybs0")))

(define-public crate-macchina-0.3.7 (c (n "macchina") (v "0.3.7") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0h5637nij1n21kmfbg5zygvkbvln3qqqygh4naxpjf1wz1gp9qwf")))

(define-public crate-macchina-0.3.8 (c (n "macchina") (v "0.3.8") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1z2gajzzps33cq4kf923c9r0zfnhb3ksihyyv32rvpn890rykj3k")))

(define-public crate-macchina-0.3.9 (c (n "macchina") (v "0.3.9") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "07zrl2v7xd94n7jfll3rwxv3sihp5ai0pbq4rnjqqbxba8m1bslw")))

(define-public crate-macchina-0.4.0 (c (n "macchina") (v "0.4.0") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0r1v2sm6z4lm94nyjz6cg0rr2dzwd56wxrxc6nijv6vcf2rld23k")))

(define-public crate-macchina-0.4.1 (c (n "macchina") (v "0.4.1") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "091b29mq1qzf6anz22jy9snngvsck86y5yn3n92l2ff689wr4wkn")))

(define-public crate-macchina-0.4.2 (c (n "macchina") (v "0.4.2") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1ngdn6xkdr6hm3rkn2521rp29n9v3dgf84l005dr5gz6csxk0azx")))

(define-public crate-macchina-0.4.3 (c (n "macchina") (v "0.4.3") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "03gdrpcziz52xlfladrnwi604kljk7z50qayxaddp0hwgrycy1kd")))

(define-public crate-macchina-0.4.4 (c (n "macchina") (v "0.4.4") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0w0cvsvhrp29q85zb1r9kn5kw8vii8xky9x83gnmr1jd1ynlf8p3")))

(define-public crate-macchina-0.4.5 (c (n "macchina") (v "0.4.5") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0b8gwdk00l6w6dmlvpfz1fnjijd99nqc1vj4jmy4dmg2cl0s0bri")))

(define-public crate-macchina-0.4.6 (c (n "macchina") (v "0.4.6") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0bgb1ximip3zgzd4k74vj177srr1vhvw2kvw6jiqxncqmcdp0jjh")))

(define-public crate-macchina-0.4.7 (c (n "macchina") (v "0.4.7") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1mwpqrv27py4ywhrdx250d4g0rbiamgr80qqya3fhdkvah0kd0w9")))

(define-public crate-macchina-0.4.8 (c (n "macchina") (v "0.4.8") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1g1srxvaxc3s8raxbb15zdh5dm48721q7xkax5xzz0sdm4h5zmsc")))

(define-public crate-macchina-0.4.9 (c (n "macchina") (v "0.4.9") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0ng9dhjyzlqx4bw4fnqlvbrq4x0194rdh4lkp595a6r1p49q0ix1")))

(define-public crate-macchina-0.5.0 (c (n "macchina") (v "0.5.0") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0pg826w66mh4i450a53j56k1vrc6246djvn6j63n6cq30xjdnawk")))

(define-public crate-macchina-0.5.1 (c (n "macchina") (v "0.5.1") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1sg728dnbcsg6yq2cibmrrbwijacm3x6krg0qmymarg9ayaxbasf")))

(define-public crate-macchina-0.5.2 (c (n "macchina") (v "0.5.2") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1jjprqy0y2d62b2qh0pir5qwq3j3wiadxqacvziclrds95q7na1v")))

(define-public crate-macchina-0.5.3 (c (n "macchina") (v "0.5.3") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0crxwmdx4ax492qsb2wc1c8xb6svwpbyz5aamslkwjb88mxl4qm9")))

(define-public crate-macchina-0.5.4 (c (n "macchina") (v "0.5.4") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "18z1fxjaihfcr2ms4ab287saywp7wj1qslxfczpnk2zs5y7354a1")))

(define-public crate-macchina-0.5.5 (c (n "macchina") (v "0.5.5") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0i3d07lab7pha0jhi1zppd3idgws1pd9lf4m6m84jw0qalw56bnr")))

(define-public crate-macchina-0.5.6 (c (n "macchina") (v "0.5.6") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1mbiwycxb8xbm3qvbylikrdcybnlpyhkzdwki632hh8jbqa526mw")))

(define-public crate-macchina-0.5.7 (c (n "macchina") (v "0.5.7") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "nix") (r "^0.20.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "1vbf3mllfs04vqdl79v3nhl2l75sc5ay9afh6sk9c3p9kmaa57nw")))

(define-public crate-macchina-0.5.8 (c (n "macchina") (v "0.5.8") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "macchina-read") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0m5cr41rq9f0f0lmk3jd75npzv6l6h1pkjgjdk97x0x1i7d49cm1")))

(define-public crate-macchina-0.5.9 (c (n "macchina") (v "0.5.9") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "macchina-read") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)))) (h "0sbzgygxpynxgxm625n7w8lbsvn7pd5wp4y9za457l51rc433w3z")))

(define-public crate-macchina-0.6.0 (c (n "macchina") (v "0.6.0") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "macchina-read") (r "^0.1.1") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)))) (h "0b7r611s4hncgcnib5kxxq34g52v3j6jj2hr09ba6i22wf22854y")))

(define-public crate-macchina-0.6.1 (c (n "macchina") (v "0.6.1") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.1.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "09cfnf788kc4fsvj8c7s75dciibyxd8ycj6pn2g13qnhlx35a2ix")))

(define-public crate-macchina-0.6.2 (c (n "macchina") (v "0.6.2") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.1.3") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1wvf5c1ij1lbhl1jl604g1vkd6hvbk2mhm3jcndx4m7wv0xfbihg")))

(define-public crate-macchina-0.6.3 (c (n "macchina") (v "0.6.3") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.1.7") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1rdyshqqn1sr8a1f7hlnvyk5jbwcncqp5kqz3gn8fzp5pyxfpgyg")))

(define-public crate-macchina-0.6.4 (c (n "macchina") (v "0.6.4") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.1.8") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0prii9dna7pl5s6lp12qq71wwjdjpzcw1gl9dkhwk9nn5f0ksqc4")))

(define-public crate-macchina-0.6.5 (c (n "macchina") (v "0.6.5") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.1.9") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1ca73481j94a5gvpm068a352j7mnlxn06b11bfc6s1yf9v6avs19")))

(define-public crate-macchina-0.6.6 (c (n "macchina") (v "0.6.6") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.13.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "1n65hp9ssbiilnm3is587j4rkzs4356ljka3pw4lz9v51lhd2bf1")))

(define-public crate-macchina-0.6.7 (c (n "macchina") (v "0.6.7") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0ibyl6jvvzsl6cfqplnad70h674dwh1ragmqa38vrj8lwl8vm6wd") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.6.8 (c (n "macchina") (v "0.6.8") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "0jcxc35s3zrl5fjh42w553bywaq5z1yrcr6pw686v5b9nj823a4k") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.6.9 (c (n "macchina") (v "0.6.9") (d (list (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (d #t) (t "cfg(not(target_env = \"msvc\"))") (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)))) (h "07lc0aap513i6ch8glchq4hlc20ga6mfq3gd0l8wl5w6399rkpn3") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.7.0 (c (n "macchina") (v "0.7.0") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.5") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.5") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "1ka9i55yqslw7b6g1f4q61k3bx62zv9qzfs8prrbw2lnvhik6sjh") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.7.1 (c (n "macchina") (v "0.7.1") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.7") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.7") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "1zvbgr2zb58paqby6sws35fa91l863glh5d9134q7gpynaj8a00g") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.7.2 (c (n "macchina") (v "0.7.2") (d (list (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.9") (d #t) (k 0)) (d (n "libmacchina") (r "^0.2.9") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "0z2095gwqkirhz9dhkp5805mqfsbz7fa459yvn0i836jhaxadncd") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.7.3 (c (n "macchina") (v "0.7.3") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.1") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.1") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "0cij3cpmlqywgnjfl7qa3zih5xg66979kry5fsahjns9l7n706dm") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.7.4 (c (n "macchina") (v "0.7.4") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.3") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.3") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "1s7xsxbpsx1grxdmvj87jscn6a1i6jbmw63ym3ligckpa3cd9qi9") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.8.0 (c (n "macchina") (v "0.8.0") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.3") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.3") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "06l2xfy9wsacs1capqkifqgmf50ndx4dhj6xglmh1pmzq1s5mlm7") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.8.1 (c (n "macchina") (v "0.8.1") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.6") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.6") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "1mi6fdy2vp587gszw34ck55v0qc6pbjbybm76id9vfvchll16mcs") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.8.2 (c (n "macchina") (v "0.8.2") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.6") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.6") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "0nmpmy1m6374c7699srr28xhg9w69hkla42931ldkycp7h1mp8lh") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.8.21 (c (n "macchina") (v "0.8.21") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.6") (d #t) (k 0)) (d (n "libmacchina") (r "^0.3.6") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "0ivy62q5hqsc6sn5qpg17h28dd824rn4c7rmnhaqrjl92brng9rk") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.9.0 (c (n "macchina") (v "0.9.0") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.4.8") (d #t) (k 0)) (d (n "libmacchina") (r "^0.4.8") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "1pfn5j769h034p52jm4idrx7kmvf24hhlljnf0lgs8zkqyflg46w") (f (quote (("xserver" "libmacchina/xserver") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.9.1 (c (n "macchina") (v "0.9.1") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.4.8") (d #t) (k 0)) (d (n "libmacchina") (r "^0.4.8") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "0nh4f75y5dq9nmrig3qqm8r3nimaj2q72xbpv6syamkwyw14gc7g") (f (quote (("xserver" "libmacchina/xserver") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-0.9.2 (c (n "macchina") (v "0.9.2") (d (list (d (n "ansi-to-tui") (r "^0.1.8") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 1)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 1)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.4.10") (d #t) (k 0)) (d (n "libmacchina") (r "^0.4.10") (d #t) (k 1)) (d (n "rand") (r "^0.8.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 1)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 1)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 1)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 1)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 1)) (d (n "tui") (r "^0.14.0") (f (quote ("crossterm"))) (k 0)) (d (n "tui") (r "^0.14.0") (k 1)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 1)))) (h "1casjy4cbi0s5masbz2rmifdfh59bjn187k4966pfrc1ax2kd1jj") (f (quote (("xserver" "libmacchina/xserver") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.0.0 (c (n "macchina") (v "1.0.0") (d (list (d (n "ansi-to-tui") (r "^0.3.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.15.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (d #t) (k 1)))) (h "007ybf5f9y1vbfsw2jcf9amp1gh72v8yy6h7af4vnagaz2bnw7ba") (f (quote (("xserver" "libmacchina/xserver") ("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.0 (c (n "macchina") (v "1.1.0") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (d #t) (k 1)))) (h "1l0l7jkkxj92czpqs5pdxjj6csz20wp3vysr7xqbr0dh4c5wnb0q") (f (quote (("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.1 (c (n "macchina") (v "1.1.1") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (d #t) (k 1)))) (h "0g8366xk33vlq0j2q5miamhcw0iy4hl1c3zjlqwbnd81zny3p2hg") (f (quote (("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.2 (c (n "macchina") (v "1.1.2") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (d #t) (k 1)))) (h "1rn976308vsinfhp7qajswjbjvirv2dbq5s2blf67pg4gn0vyrr4") (f (quote (("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.3 (c (n "macchina") (v "1.1.3") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^1.0.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (d #t) (k 1)))) (h "0324qynz7l7vh1cm6lr9ydsha69c8nl0b71yrijnn4bczmcfkxn0") (f (quote (("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.4 (c (n "macchina") (v "1.1.4") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^3.0.2") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^1.0.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.67") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1bslppfdkfcm275pykh54g0wiqpvnxf8d0g05maf1n87iljqpscr") (f (quote (("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.5 (c (n "macchina") (v "1.1.5") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "google_speech") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^2.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1qxisj191x7746p0321p8r05s1dxxc9jl6s5s6wsfkxxjcivwgvn") (f (quote (("tts" "google_speech") ("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.6 (c (n "macchina") (v "1.1.6") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^2.1.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0havyzjvfkz0c32kxy8qa0g8an4dk97fwyvzk4z8b9jvli4fz2cw") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.7 (c (n "macchina") (v "1.1.7") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^2.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1bsdhpbsaa89m0cwgm5bzggm8d0yv3zwkfsy21mgrsh7h3lmzzr1") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-1.1.8 (c (n "macchina") (v "1.1.8") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^2.1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "171g35ddivgvx95x4zq9jbblg2gks2rwr5vd4w18dxqm23agpfqz") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-2.0.0 (c (n "macchina") (v "2.0.0") (d (list (d (n "ansi-to-tui") (r "^0.4.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^2.1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.15") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0rk2aalzqxnvmv3p8ifd58zm5mm7514c731m3k29h9iz7dvqal2c") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-3.0.0 (c (n "macchina") (v "3.0.0") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1bwjim3j9p8zlihqywlzw10516kxlpqxxr80zm8s33wny0577mih") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-4.0.0 (c (n "macchina") (v "4.0.0") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0j6ixb0kx658zlnf35dv4mcl520yvms9lwfsd30vim8dz531dh4m") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-4.0.1 (c (n "macchina") (v "4.0.1") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1dbk208i5jibqp48dwq0bw8vg1z7r8b6ga66sm649808mrrgk5xl") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-5.0.0 (c (n "macchina") (v "5.0.0") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1x7sy626hj3b4bsa2r3m265p47qgvqwlyd01fkw2l132iagbg7wg") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-5.0.1 (c (n "macchina") (v "5.0.1") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.3.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1casl64p8nixpqkh31bmyhb47s8wzqq5g1qssrafs3hkh40m2nfa") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-5.0.2 (c (n "macchina") (v "5.0.2") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.4.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.8") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1dxxx8kpak2n8cpa2karbqk93610z4w3ijq0c2a4ga54ixz8c55z") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-5.0.3 (c (n "macchina") (v "5.0.3") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.4.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "17asxm6rlgxqrvri53047p6vv5w7n3048cqpfxc25rh5h59rchri") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-5.0.4 (c (n "macchina") (v "5.0.4") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^5.1.16") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1946yfy2qmqc6k511daz9pwg9kgmv0iqdlxjp8yhz9wzhxir07hq") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-5.0.5 (c (n "macchina") (v "5.0.5") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^3.8.6") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^5.1.17") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1a2lycdspcdm5pm9v1pnlv09ygznpmyppms03ij99y9v8fqlhqbf") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.0 (c (n "macchina") (v "6.0.0") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^4.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1nianb4i4rs2pfhyspz20f55dksmd270wcn351xll7ns68n0lb4r") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.1 (c (n "macchina") (v "6.0.1") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^4.0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "10qcg7h39k1vh72q87ma1xq1r3akh7cavjxgg6h5v5r8sgmpgh3i") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.2 (c (n "macchina") (v "6.0.2") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.0.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "187ibz86szpn1nmsmsannh7bhnic3jlbnspdb03336agq715pqav") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.3 (c (n "macchina") (v "6.0.3") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.0.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1v6zkricyh5zcqfgvzg77529gvd2zlgx46ycf7f8908l3mhkbsjr") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.4 (c (n "macchina") (v "6.0.4") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.0.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "13g7axb4c0vjx6hnbyszvzdv577arx0vsn119x7c4rjbldynja3r") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.5 (c (n "macchina") (v "6.0.5") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.0.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1lhbzg6xqwwwxq9kgpn7jsdfy6wnw5jw3k10aqwk6s4lf8jkm4bm") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.0.6 (c (n "macchina") (v "6.0.6") (d (list (d (n "ansi-to-tui") (r "^0.4.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "color-to-tui") (r "^0.1.3") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.1.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.132") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.73") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.25") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "toml") (r "^0.5.8") (d #t) (k 0)) (d (n "tui") (r "^0.16.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)) (d (n "vergen") (r "^6.0.0") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1i2rf2d10d9gx5nrimh03srgcw04xi3lcgg1w36crlzcwvshdj6f") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.0 (c (n "macchina") (v "6.1.0") (d (list (d (n "ansi-to-tui") (r "^1.0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.2.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "18l13zyvv4h0nqrb0nhzjigisd2baxyf177bsd237kxaaskjwqyx") (f (quote (("openwrt" "libmacchina/openwrt")))) (y #t)))

(define-public crate-macchina-6.1.1 (c (n "macchina") (v "6.1.1") (d (list (d (n "ansi-to-tui") (r "^1.0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.2.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1lppfd58ai91f8jmbcs1xxadd7vzxv1gqbb6f72df4qmsw58aii5") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.2 (c (n "macchina") (v "6.1.2") (d (list (d (n "ansi-to-tui") (r "^1.0.1") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.2.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "192wgil53b6rw3pf40sdgj00xckddrh1ys2mvh24pk6363pzard6") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.3 (c (n "macchina") (v "6.1.3") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.2.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.18.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0lgdpx1hsm2lsn4d140ib7h06fj5nnps80i7pbvwi2bbzvlwfn82") (f (quote (("openwrt" "libmacchina/openwrt")))) (y #t)))

(define-public crate-macchina-6.1.4 (c (n "macchina") (v "6.1.4") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.3.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1ldcka19xn41nldr6l6gfbmz4h0hyvarh8kqwj696xldlr60gg3r") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.5 (c (n "macchina") (v "6.1.5") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.3.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "1vysvzy1m7q9phfwmznv298qjzf0570dvrvk378bfl1sp3fqiqbf") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.6 (c (n "macchina") (v "6.1.6") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.21") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.3.0") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "shellexpand") (r "^2.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.35") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0q6f86hl7i2l0hdiyfdx7nv2ypx4pk5c57ycdrmmwpbw9hpy3ndl") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.7 (c (n "macchina") (v "6.1.7") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.3.5") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "toml") (r "^0.5.10") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "0hxv9s2z3ci9z5ca6p40zaiiidxkzn077gd7hkkz9sbj0bgr38wl") (f (quote (("openwrt" "libmacchina/openwrt"))))))

(define-public crate-macchina-6.1.8 (c (n "macchina") (v "6.1.8") (d (list (d (n "ansi-to-tui") (r "^2.0.0") (d #t) (k 0)) (d (n "atty") (r "^0.2.14") (d #t) (k 0)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("derive"))) (d #t) (k 0)) (d (n "color-to-tui") (r "^0.2.0") (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libmacchina") (r "^6.3.5") (f (quote ("version"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "shellexpand") (r "^3.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "toml") (r "^0.5.10") (d #t) (k 0)) (d (n "tui") (r "^0.19.0") (f (quote ("crossterm"))) (k 0)) (d (n "unicode-width") (r "^0.1.10") (d #t) (k 0)) (d (n "vergen") (r "^7.4.2") (f (quote ("build" "cargo" "git" "rustc"))) (k 1)))) (h "044bygdazv8l1d5sf7pxn2xp26pmnx2b65122qzb37m1ylb1ksg6") (f (quote (("openwrt" "libmacchina/openwrt"))))))

