(define-module (crates-io ma th mathjax) #:use-module (crates-io))

(define-public crate-mathjax-0.1.0 (c (n "mathjax") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "headless_chrome") (r "^1.0.5") (f (quote ("fetch"))) (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "node-semver") (r "^2.1.0") (d #t) (k 0)) (d (n "resvg") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zip-extract") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "11h0366aifrl7yhiblsf4d54k83lvv718kbkg6jpchfkrxbmixw3") (f (quote (("default" "auto") ("auto" "node" "browser")))) (s 2) (e (quote (("node" "dep:tempfile" "dep:zip-extract") ("image" "dep:resvg" "dep:image") ("browser" "dep:headless_chrome" "dep:anyhow"))))))

(define-public crate-mathjax-0.1.1 (c (n "mathjax") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "headless_chrome") (r "^1.0.5") (f (quote ("fetch"))) (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (o #t) (d #t) (k 0)) (d (n "node-semver") (r "^2.1.0") (d #t) (k 0)) (d (n "resvg") (r "^0.33.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.5.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "zip-extract") (r "^0.1.2") (o #t) (d #t) (k 0)))) (h "1288iam7apyx3d7mk8gw1h74kmfxna4nwv2jblrykbi868v1cn4d") (f (quote (("default" "auto" "image") ("auto" "node" "browser")))) (s 2) (e (quote (("node" "dep:tempfile" "dep:zip-extract") ("image" "dep:resvg" "dep:image") ("browser" "dep:headless_chrome" "dep:anyhow"))))))

