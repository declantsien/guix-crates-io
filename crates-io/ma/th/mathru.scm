(define-module (crates-io ma th mathru) #:use-module (crates-io))

(define-public crate-mathru-0.0.1 (c (n "mathru") (v "0.0.1") (d (list (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "13jv069gxj40a44afv123c3q2rkk8ax53cm4y5r019qcgbz5qnhd")))

(define-public crate-mathru-0.0.2 (c (n "mathru") (v "0.0.2") (d (list (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "05w5f904xpnmgx918yfmhwdsjnr6j21msnr3f4gg97p9xrc24sfn")))

(define-public crate-mathru-0.0.3 (c (n "mathru") (v "0.0.3") (d (list (d (n "rand") (r "^0.5") (d #t) (k 0)))) (h "1ragdw211v9q71hzk01d5ly5kpz61klhm4w7njji23p1nrsdzpsv")))

(define-public crate-mathru-0.0.4 (c (n "mathru") (v "0.0.4") (d (list (d (n "rand") (r "^0.6") (d #t) (k 0)))) (h "0i8avylhvlz9kxmn1p20nhhp8fvf1j8g865riywf30f8fp0pyhwf")))

(define-public crate-mathru-0.0.5 (c (n "mathru") (v "0.0.5") (d (list (d (n "rand") (r "^0.6") (d #t) (k 0)))) (h "02629p39m5cp17dq0ax5crv1ym1w62aivbb0c38f9lrha8qpkp6g")))

(define-public crate-mathru-0.1.0 (c (n "mathru") (v "0.1.0") (d (list (d (n "rand") (r "^0.6") (d #t) (k 0)))) (h "0raxd2dj849dl0vx97lg80ygpdzsyaxshasx6q0z9wwkg70nc1ia")))

(define-public crate-mathru-0.1.1 (c (n "mathru") (v "0.1.1") (d (list (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1my6f86yd27r7jnc9nfwn5y42x1paxkf0lplsqzcwngw0f4drgzx")))

(define-public crate-mathru-0.1.2 (c (n "mathru") (v "0.1.2") (d (list (d (n "blas") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "openblas-src") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "177rgw1zvhnn88b37821y00vlc8ija1fixmg5cq0gr9m6r33dplq") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "openblas-src"))))))

(define-public crate-mathru-0.1.3 (c (n "mathru") (v "0.1.3") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.2") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "18ax0a39x57pv1nfl12dy68ycckv2619jbarnsv8nqnwgzy1wdzr") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.1.4 (c (n "mathru") (v "0.1.4") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.2") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "02jf3gpxzbcxdjk6m4zsmj9zrwxvfy79q23xxf6b81xyldna9lp7") (f (quote (("native") ("default" "blaslapack") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.1.5 (c (n "mathru") (v "0.1.5") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.2") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.2") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1lvq4nihxhd2417x7zn6ch15fsmhv4ww54waf2sk2bmbf10gkzbq") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.2.0 (c (n "mathru") (v "0.2.0") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1ar5fbnrdbs7bk8lzxads25yiaq7vxx32im33sba0x7857hi3r8w") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.2.1 (c (n "mathru") (v "0.2.1") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1js4zkm9z4yrvr4k4vca5vxb0l0dw99nnr5lv63pniqly62kwmh8") (f (quote (("native") ("default" "blaslapack") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.3.0 (c (n "mathru") (v "0.3.0") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "04h78clmr629y5wyyl0ldqp3281xmfldnld5dni1irkggj30hx9w") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.3.1 (c (n "mathru") (v "0.3.1") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.3") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "18dd1xwmbybc0dbzrmdy5sdyrkqz65cdyqpxrxlhx7pl3846qkww") (f (quote (("native") ("default" "blaslapack") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.4.0 (c (n "mathru") (v "0.4.0") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.4.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.4.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0dj1yzpj01jyh4i2q63ynzk2jvkpfxbb524d0zqlmgnlxh7gmf35") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.5.0 (c (n "mathru") (v "0.5.0") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.4.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.4.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "01x8a850lqmvml318bs4iz5hfyyfhrjph4a4r2sg8i6gyzh5n62q") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.0 (c (n "mathru") (v "0.6.0") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.4.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.4.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "136whxjqmgdb9im429vl4d0r5l4nxmbrfx6c97nqw52l3m9zvi9v") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.1 (c (n "mathru") (v "0.6.1") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1wnil4niv0x903ygrvm24j73sdmcv3vpq2zmm1wn730j8dpl0nmc") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.2 (c (n "mathru") (v "0.6.2") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1n7zbyx9xycqpp9qm9rq6axkj4vcikb9ng8mwiy1bylaf7wndlw7") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.3 (c (n "mathru") (v "0.6.3") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "16f4g3m8gww796ycnf7ax9qgki9jg1ww2dbqscihvnsmz1kmmab0") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.4 (c (n "mathru") (v "0.6.4") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0m6r1k56a5nz00h2qr5y1v2gdn0xb3d9bm3wkxi1fwn4dhgg4wdy") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.5 (c (n "mathru") (v "0.6.5") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1g14cwfbw6655gsmnk8sgnb247hgwygw54zc5q5a2fqxnx5n0fi5") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.6 (c (n "mathru") (v "0.6.6") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.12") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1dpbzn2sq98kvdjc8niq9iar2i0xcwd40wgd61zyzyfwd8r6kyfp") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.7 (c (n "mathru") (v "0.6.7") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.12") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "19sn0vgjsg3j8xij7fzzzw9v9wxn7vb4b52ym5gds6kys4h5zrcg") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.8 (c (n "mathru") (v "0.6.8") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.5.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.19.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.12") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0cmzqhqc8z4smc4aywsfrkcy90lrnfrvajri6rarpnbr37nnbjbi") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.9 (c (n "mathru") (v "0.6.9") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6.1") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6.0") (f (quote ("openblas"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.12") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1crxhb12xc1acnf0cvwgl21zpy9zgbd0rj2inag06xxrk61mxn67") (f (quote (("native") ("default" "native") ("blaslapack" "lapack" "blas" "lapack-src" "blas-src"))))))

(define-public crate-mathru-0.6.10 (c (n "mathru") (v "0.6.10") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.12") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0xnpnvlbi7ad54rmcdrvi9qcvkwnwmaawvycwp1jqa6zznblsn5p") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.7.0 (c (n "mathru") (v "0.7.0") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.15") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0621aplqgfjyb21ix3q8r8gqh8pz0jhbb7qa9ridrcpg6x02v42w") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.7.1 (c (n "mathru") (v "0.7.1") (d (list (d (n "approx") (r "^0.3.2") (d #t) (k 2)) (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.21.0") (d #t) (k 2)) (d (n "plotters") (r "^0.2.15") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1gc966ssgjxx43dwfiqn1fafqb8dw7va5069v8vkrch4xrbf5vz0") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.7.2 (c (n "mathru") (v "0.7.2") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1zxsgjq860plximr976bnsqrvsw08vsj18g92lqlfhd8yxmwlrp5") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.7.3 (c (n "mathru") (v "0.7.3") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.22") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0ic98b5b77hrqvp9shb0b8h9ps7xp1ac664zxx28lwzhcvqxfvwy") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.7.4 (c (n "mathru") (v "0.7.4") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1p8w98vfixavcpdnlyya97v6wdvqksmvmvvcb9ijcw2chqlmpb9s") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.8.0 (c (n "mathru") (v "0.8.0") (d (list (d (n "blas") (r ">=0.20.0, <0.21.0") (o #t) (d #t) (k 0)) (d (n "blas-src") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "lapack") (r ">=0.16.0, <0.17.0") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r ">=0.6.0, <0.7.0") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r ">=0.23.0, <0.24.0") (d #t) (k 2)) (d (n "plotters") (r ">=0.3.0, <0.4.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.0, <0.8.0") (d #t) (k 0)) (d (n "serde") (r ">=1.0.0, <2.0.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.0, <2.0.0") (d #t) (k 2)))) (h "0mvnikv1n495yqvra5a08zk52fi2r2g0rif9qcwzqlmy1mlq957x") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.8.1 (c (n "mathru") (v "0.8.1") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1kh9jrqsscbf0snvygwcibmm3a23dgsknz773wi34dyhyiy81xxv") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.8.2 (c (n "mathru") (v "0.8.2") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "08gbbmp17lg5p7xngw5vgrjirakdhjvs5nb2386bl347w5m89hnm") (f (quote (("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.8.3 (c (n "mathru") (v "0.8.3") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "00c3bz7djriaiqffcrfzxkz0di2rjlrbx42s7r6zcsz3y4bvww6i") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.8.4 (c (n "mathru") (v "0.8.4") (d (list (d (n "blas") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.23") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0zydbpk6slfsjq31b2zgcn3gyk1gwq71ghfdgm8mdrr55c68wvzd") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas" "blaslapack") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib" "blaslapack") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl" "blaslapack") ("default" "native") ("blaslapack") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate" "blaslapack"))))))

(define-public crate-mathru-0.9.0 (c (n "mathru") (v "0.9.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1qckqaz1ipq970dm5l9j24h8dmwm3aak7krymvnr4i688zgyn5f2") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.9.1 (c (n "mathru") (v "0.9.1") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1p4149wfwznxh9lx5xlnsbmb5lsz79c2rxpdgnpbfxgyplzizhf4") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.10.0 (c (n "mathru") (v "0.10.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0j7cc90ar8yvr6ydd678h8wcibx75r353japa3ydf5rgvrp93gln") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.10.1 (c (n "mathru") (v "0.10.1") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "096rxdap2k9m6q7l0ilvhf2r1r62830wn14hlavy9fg4wrbb883j") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.11.0 (c (n "mathru") (v "0.11.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29.0") (d #t) (k 2)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "17bzg305a2j0v5gx61d7zc1gxik0qcg4a3bcf1ahzd6gv28ady63") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.11.1 (c (n "mathru") (v "0.11.1") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0kn53sffpvycf31fm0vfbvhh7qpz7k4jqispp3sp4vxbrir25daf") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.11.2 (c (n "mathru") (v "0.11.2") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "15dm5br4yq3h6i3n6697jzaiwk3fgali58f9wvk9m2xnih65p3bh") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.11.3 (c (n "mathru") (v "0.11.3") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1r6d0c1rpsg55a3p948m6dfdk4kvrvjccgzl13yyyv4mr0qzqh4i") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.12.0 (c (n "mathru") (v "0.12.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0a9c4pi0jl9zdb0j0d69sh2xf138qlqa1hqk9r57mxwalzplxg6j") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.13.0 (c (n "mathru") (v "0.13.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1v4v97vf54cjf4iwlnf7i92wal7b0rb8slngh7anm6jcis9vyhls") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.14.0 (c (n "mathru") (v "0.14.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.3.2") (f (quote ("cgemm"))) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0391g53d8dp46f61jby69yv0l23qggb1rdx79y6992xsxnq4xx7r") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate")))) (r "1.64")))

(define-public crate-mathru-0.15.0 (c (n "mathru") (v "0.15.0") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.3.7") (f (quote ("cgemm"))) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1r08mjrhkxka3hh6am7wng08n2a01jipz6hfkk79516z3452x9as") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.15.1 (c (n "mathru") (v "0.15.1") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.3.7") (f (quote ("cgemm" "threading"))) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0c75ipcy6f8wliz1dv3d961bsf31lg20y9am2hi4al38ad2qmzfi") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.15.2 (c (n "mathru") (v "0.15.2") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.3.7") (f (quote ("cgemm" "threading"))) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0k2zb4gmd2pshm7lx86sz5x8vnbp6vcd058qplgqf67a9k3dw0ds") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

(define-public crate-mathru-0.15.3 (c (n "mathru") (v "0.15.3") (d (list (d (n "blas") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "blas-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blas-sys") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "lapack") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "lapack-src") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "lapack-sys") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.3.7") (f (quote ("cgemm" "threading"))) (d #t) (k 0)) (d (n "mint") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "plotters") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1a2i42x6q2i2x504lplgrmkfq28lmr4ggrcsihf17pvfwp4jzbvd") (f (quote (("serde-serialize" "serde") ("openblas" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/openblas" "blas-src/openblas") ("netlib" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/netlib" "blas-src/netlib") ("native") ("intel-mkl" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/intel-mkl" "blas-src/intel-mkl") ("default" "native") ("convert-mint" "mint") ("accelerate" "lapack" "blas" "lapack-sys" "blas-sys" "lapack-src/accelerate" "blas-src/accelerate"))))))

