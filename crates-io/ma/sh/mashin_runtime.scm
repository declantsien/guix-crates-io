(define-module (crates-io ma sh mashin_runtime) #:use-module (crates-io))

(define-public crate-mashin_runtime-0.1.0 (c (n "mashin_runtime") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "deno_ast") (r "=0.25.0") (f (quote ("transpiling" "transpiling"))) (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.0") (d #t) (k 0)) (d (n "mashin_ffi") (r "^0.1.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking" "json" "rustls-tls" "rustls-tls-native-roots" "rustls-tls-webpki-roots"))) (k 0)) (d (n "rkv") (r "^0.18.4") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)))) (h "0b3p582clyhddv9632l4gnf3z8nlc9g40ibrivg67cfrdfvyrhf2")))

(define-public crate-mashin_runtime-0.1.1 (c (n "mashin_runtime") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "deno_ast") (r "=0.25.0") (f (quote ("transpiling" "transpiling"))) (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "dlopen") (r "^0.1.8") (d #t) (k 0)) (d (n "encoding_rs") (r "=0.8.31") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking" "json" "rustls-tls" "rustls-tls-native-roots" "rustls-tls-webpki-roots"))) (k 0)) (d (n "ring") (r "=0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("errhandlingapi" "minwindef" "ntdef" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1z20n5fgk9nnkppd9kj4wvdsbha8gsmrx4z7aknbj9pr871019m9")))

(define-public crate-mashin_runtime-0.1.2 (c (n "mashin_runtime") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "deno_ast") (r "=0.25.0") (f (quote ("transpiling" "transpiling"))) (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "dlopen") (r "^0.1.8") (d #t) (k 0)) (d (n "encoding_rs") (r "=0.8.31") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking" "json" "rustls-tls" "rustls-tls-native-roots" "rustls-tls-webpki-roots"))) (k 0)) (d (n "ring") (r "=0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("errhandlingapi" "minwindef" "ntdef" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0h6xryl403c3wichwc49jfzfkvpaqp3g9br4pdgxjrxp6iwd63zs")))

(define-public crate-mashin_runtime-0.1.3 (c (n "mashin_runtime") (v "0.1.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "deno_ast") (r "=0.25.0") (f (quote ("transpiling" "transpiling"))) (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "dlopen") (r "^0.1.8") (d #t) (k 0)) (d (n "encoding_rs") (r "=0.8.31") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking" "json" "rustls-tls" "rustls-tls-native-roots" "rustls-tls-webpki-roots"))) (k 0)) (d (n "ring") (r "=0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("errhandlingapi" "minwindef" "ntdef" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1hr3yzx79z4d4mzl0k71nq5fnnymav4w3wvsblr532mspwnw90hs")))

(define-public crate-mashin_runtime-0.1.4 (c (n "mashin_runtime") (v "0.1.4") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "deno_ast") (r "=0.25.0") (f (quote ("transpiling" "transpiling"))) (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "dlopen") (r "^0.1.8") (d #t) (k 0)) (d (n "encoding_rs") (r "=0.8.31") (d #t) (k 0)) (d (n "libc") (r "^0.2.126") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.3") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.15") (f (quote ("blocking" "json" "rustls-tls" "rustls-tls-native-roots" "rustls-tls-webpki-roots"))) (k 0)) (d (n "ring") (r "=0.16.20") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("errhandlingapi" "minwindef" "ntdef" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0f4wlhgnpl8wx9d0j2l2lc56r5p0cvkbyycms94hxizjrjq42l1n")))

(define-public crate-mashin_runtime-0.1.5 (c (n "mashin_runtime") (v "0.1.5") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "dlopen") (r "^0.1.8") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0.149") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("errhandlingapi" "minwindef" "ntdef" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "01fn17wzihk5m036gj90h3w63n4638j9nb7jnzqvf4j1yzks9bdx")))

(define-public crate-mashin_runtime-0.1.6 (c (n "mashin_runtime") (v "0.1.6") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "deno_console") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_core") (r "=0.177.0") (d #t) (k 0)) (d (n "deno_fetch") (r "=0.119.0") (d #t) (k 0)) (d (n "deno_url") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_web") (r "=0.126.0") (d #t) (k 0)) (d (n "deno_webidl") (r "=0.95.0") (d #t) (k 0)) (d (n "deno_websocket") (r "=0.100.0") (d #t) (k 0)) (d (n "dlopen") (r "^0.1.8") (d #t) (k 0)) (d (n "libffi") (r "^3.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "mashin_core") (r "^0.1.6") (d #t) (k 0)) (d (n "serde") (r "^1.0.160") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde-value") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "=1.25.0") (f (quote ("full" "fs" "rt-multi-thread"))) (d #t) (k 0)) (d (n "winapi") (r "=0.3.9") (f (quote ("errhandlingapi" "minwindef" "ntdef" "winbase" "winnt"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1yj3075az1bwqqiyrqlrm4qhm9si9105qy22f1arq82drds30k89")))

