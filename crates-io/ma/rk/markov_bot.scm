(define-module (crates-io ma rk markov_bot) #:use-module (crates-io))

(define-public crate-markov_bot-1.0.2 (c (n "markov_bot") (v "1.0.2") (d (list (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "dashmap") (r "^4.0.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 0)) (d (n "markov_strings") (r "^0.1.4") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serenity") (r "^0.10.9") (f (quote ("cache" "client" "gateway" "rustls_backend" "model" "framework" "standard_framework" "unstable_discord_api"))) (k 0)) (d (n "strum") (r "^0.21.0") (d #t) (k 0)) (d (n "strum_macros") (r "^0.21") (d #t) (k 0)) (d (n "tokio") (r "^1.8.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 0)))) (h "1j0apsf7vb624vwbh2m7j82cg04ivgqj04i9lx3ray6zaf0mjyqh")))

(define-public crate-markov_bot-1.0.4 (c (n "markov_bot") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0.58") (d #t) (k 0)) (d (n "crossbeam") (r "^0.8.1") (d #t) (k 0)) (d (n "dashmap") (r "^5.3.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 0)) (d (n "markov_strings") (r "^0.1.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "regex") (r "^1.6.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.140") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (d #t) (k 0)) (d (n "serenity") (r "^0.11.4") (f (quote ("cache" "client" "gateway" "rustls_backend" "model" "unstable_discord_api" "voice"))) (k 0)) (d (n "songbird") (r "^0.3.0") (f (quote ("builtin-queue" "serenity" "yt-dlp"))) (d #t) (k 0)) (d (n "strum") (r "^0.24.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.24.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("macros" "rt-multi-thread" "signal"))) (d #t) (k 0)))) (h "024d1r3kbya84gc9skglc8sjxrp2sfh9vczk38a6lsq5387pv8kj")))

