(define-module (crates-io ma rk markdown) #:use-module (crates-io))

(define-public crate-markdown-0.0.1 (c (n "markdown") (v "0.0.1") (d (list (d (n "regex") (r "^0.1.10") (d #t) (k 0)) (d (n "regex_macros") (r "^0.1.5") (d #t) (k 0)))) (h "1bzh8kni2iap58zxg0i39s861c8qrfa54al5cjmjhr0ikd9sjhhb")))

(define-public crate-markdown-0.1.0 (c (n "markdown") (v "0.1.0") (d (list (d (n "difference") (r "^0.4") (d #t) (k 0)) (d (n "pipeline") (r "^0.5.0") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)))) (h "0025mw6cr1ss0vsdjrz9pxcsmzzklhzi64abcrnljrcx85rg1pfn")))

(define-public crate-markdown-0.1.1 (c (n "markdown") (v "0.1.1") (d (list (d (n "difference") (r "^0.4") (d #t) (k 0)) (d (n "pipeline") (r "^0.5.0") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)))) (h "1v9b38370irbnrz63dykb86cn0yyxq1mfyid14cdb0kmmlrmvzbh")))

(define-public crate-markdown-0.2.0 (c (n "markdown") (v "0.2.0") (d (list (d (n "clippy") (r "^0") (o #t) (d #t) (k 0)) (d (n "difference") (r "^0.4") (d #t) (k 2)) (d (n "pipeline") (r "^0.5.0") (d #t) (k 0)) (d (n "regex") (r "^0.1.41") (d #t) (k 0)))) (h "0rk51dvpf6jbmx6c5h4hfks9sqscr2dqj7km0nxvxk0xm9jfidxx") (f (quote (("unstable") ("default"))))))

(define-public crate-markdown-0.3.0 (c (n "markdown") (v "0.3.0") (d (list (d (n "difference") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pipeline") (r "^0.5") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1pgcck3zmj02r4z6cn5g8p5jkrw0xv2ywazpjlk136sj3mmanfpg") (f (quote (("unstable") ("default"))))))

(define-public crate-markdown-1.0.0-alpha.1 (c (n "markdown") (v "1.0.0-alpha.1") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (d #t) (k 1)) (d (n "swc_common") (r "^0.29") (d #t) (k 2)) (d (n "swc_ecma_ast") (r "^0.94") (d #t) (k 2)) (d (n "swc_ecma_codegen") (r "^0.127") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122") (d #t) (k 2)) (d (n "swc_ecma_transforms_react") (r "^0.155") (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.80") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 1)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0s9vbbiahjicfn9z5r8xlqlfmqqbyknxgrh126yb7pwmb5iyw49f") (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.2 (c (n "markdown") (v "1.0.0-alpha.2") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (d #t) (k 1)) (d (n "swc_common") (r "^0.29") (d #t) (k 2)) (d (n "swc_ecma_ast") (r "^0.94") (d #t) (k 2)) (d (n "swc_ecma_codegen") (r "^0.127") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122") (d #t) (k 2)) (d (n "swc_ecma_transforms_react") (r "^0.155") (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.80") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 1)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0gfgjf7isn6r1vilvizl6hp8nz6n8nvgmgcbzjfkbhdxrv124ip3") (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.3 (c (n "markdown") (v "1.0.0-alpha.3") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (d #t) (k 1)) (d (n "swc_common") (r "^0.29") (d #t) (k 2)) (d (n "swc_ecma_ast") (r "^0.94") (d #t) (k 2)) (d (n "swc_ecma_codegen") (r "^0.127") (d #t) (k 2)) (d (n "swc_ecma_parser") (r "^0.122") (d #t) (k 2)) (d (n "swc_ecma_transforms_react") (r "^0.155") (d #t) (k 2)) (d (n "swc_ecma_visit") (r "^0.80") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 1)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0ig265ibxz4y0ryziy53m99acb3zrfsbx10plx9kd48ra5qg9m4s") (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.4 (c (n "markdown") (v "1.0.0-alpha.4") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "reqwest") (r "^0.11") (d #t) (k 1)) (d (n "swc_core") (r "^0.43.30") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 1)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "1nawhabjya44a7rw7rf38zhjgcbc2a3kwhrpailwxw8vsj9yq6vg") (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.5 (c (n "markdown") (v "1.0.0-alpha.5") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "swc_core") (r "^0.48.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "14giv88fbqdwmm38vnkq9hbkihr92l4snc9ivbxlpjx9nxkqnnp1") (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.6 (c (n "markdown") (v "1.0.0-alpha.6") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.59.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0rh25pzmryv91gfml8hmqnsdaw94183s20r8qdc8bz22krp4ym9g") (f (quote (("default" "json")))) (s 2) (e (quote (("json" "dep:serde" "dep:serde_json")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.7 (c (n "markdown") (v "1.0.0-alpha.7") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.59.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "1sqlsy62hzv5qz5v59dw3q5iwpm5gsqa0hjclzm00pp9fz34kplq") (f (quote (("default")))) (s 2) (e (quote (("log" "dep:log") ("json" "dep:serde" "dep:serde_json")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.8 (c (n "markdown") (v "1.0.0-alpha.8") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.75.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "10p51qgnyvrx2vmkhi6p214mc1zl2byys45wsrwxjcb27zq0dp4h") (f (quote (("default")))) (s 2) (e (quote (("log" "dep:log") ("json" "dep:serde" "dep:serde_json")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.9 (c (n "markdown") (v "1.0.0-alpha.9") (d (list (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.75.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0v5nskcbhrq9iz5r7ias45412fxvvd2cw6i08664dbyq3phxli8w") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.10 (c (n "markdown") (v "1.0.0-alpha.10") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.78.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "107wx805np8h5b70f1f41jsy5d5dav45i71818wv0lc4nv1rigdi") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.11 (c (n "markdown") (v "1.0.0-alpha.11") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.78.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0ki2n722xrz9n2f7g8kfkiwgygwk1mgrd0ixqis3a7nvgjg3hmzm") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.12 (c (n "markdown") (v "1.0.0-alpha.12") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.79.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "03v8a1mdqsl5g3xxbh13ly6ix789jrn49pwwyqkv16r6np3kggh8") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.13 (c (n "markdown") (v "1.0.0-alpha.13") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.83.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "04p58aqjigas18i8yvim9mnfi9vyi4hc7nkgilf3kccvjsccxscj") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.14 (c (n "markdown") (v "1.0.0-alpha.14") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.83.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "1gfw0dja3lkzk7jgvhnwb7g5iqv2sjdbrzvkqi9a1d52qppip9fj") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.15 (c (n "markdown") (v "1.0.0-alpha.15") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.85.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "0nm1qdhjdj6xp64iyq2i0b0kw85dpkr6fxwmrjnak616jll0v77z") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.16 (c (n "markdown") (v "1.0.0-alpha.16") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.86.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "02552cap7m9sm7h8p85i5blfhh2y8xcyhqywss29pn60x0jh03sv") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

(define-public crate-markdown-1.0.0-alpha.17 (c (n "markdown") (v "1.0.0-alpha.17") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "swc_core") (r "^0.90.0") (f (quote ("ecma_ast" "ecma_visit" "ecma_parser" "common"))) (d #t) (k 2)) (d (n "unicode-id") (r "^0.3") (f (quote ("no_std"))) (d #t) (k 0)))) (h "1mm50nb93hhmy8grsb676z81lvvwlciiy864wl6gh8ff41i7vqi1") (f (quote (("json" "serde") ("default")))) (s 2) (e (quote (("serde" "dep:serde") ("log" "dep:log")))) (r "1.56")))

