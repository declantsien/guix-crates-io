(define-module (crates-io ma ca macaw) #:use-module (crates-io))

(define-public crate-macaw-0.10.6 (c (n "macaw") (v "0.10.6") (d (list (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.16") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "spirv-std") (r "^0.4.0-alpha.10") (f (quote ("glam"))) (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)))) (h "0ls7fpyw98qd8lvb3rc4vkrrnypmaynzsxygmqkvp9r99xdzv5mh") (f (quote (("with_serde" "serde" "glam/serde") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.11.0 (c (n "macaw") (v "0.11.0") (d (list (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.17") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "spirv-std") (r "^0.4.0-alpha.11") (f (quote ("glam"))) (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)))) (h "1niivyal2q9h6brl386jkndmn0csm25a2rymr7ligj0z3ll0z1af") (f (quote (("with_serde" "serde" "glam/serde") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.11.1 (c (n "macaw") (v "0.11.1") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.17") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "spirv-std") (r "^0.4.0-alpha.11") (f (quote ("glam"))) (d #t) (t "cfg(target_arch = \"spirv\")") (k 0)))) (h "0m7c1cvsy7iijrfm6nj0qdh40ng6ysvy6lpy4m4dvxhi0brvixch") (f (quote (("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.11.2 (c (n "macaw") (v "0.11.2") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.17") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)))) (h "1c75nax4h2bj6ig0hll24qqn3iira4mdfc66kbng7syzyi6n0q45") (f (quote (("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.12.0 (c (n "macaw") (v "0.12.0") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.18") (k 0)) (d (n "glam") (r "^0.18") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1yf3l426jih3rqipwrs6mvsh5f8kryan5a6zqahid078s0yyd07s") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.13.0 (c (n "macaw") (v "0.13.0") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.18") (k 0)) (d (n "glam") (r "^0.18") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1ga5iqfsn2ysb6z4zs5m13da9hi6mwdbc9kcciqgr51gjivgxc4v") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.14.0 (c (n "macaw") (v "0.14.0") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.18") (k 0)) (d (n "glam") (r "^0.18") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1yr73ilds4igbbgx8jp0v315c3gv0fgz7qh88ws32qf9hjj7vih5") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.14.1 (c (n "macaw") (v "0.14.1") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.18") (k 0)) (d (n "glam") (r "^0.18") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0m2h7qznflgwfmd8mxclrchk31kmpzywica49ri56ajaq8hq9vic") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.15.0 (c (n "macaw") (v "0.15.0") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.18") (k 0)) (d (n "glam") (r "^0.18") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0f924z5j26z5y49nhlfrmvm8kcqzxk77z2bqakf1gj1rrr755sln") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std"))))))

(define-public crate-macaw-0.16.0 (c (n "macaw") (v "0.16.0") (d (list (d (n "bytemuck") (r "^1.7") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.20") (k 0)) (d (n "glam") (r "^0.20") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "1dj5cm09n6pwxqin753drm28c2s9vfynfwqga8xv9zwsz8d5zj62") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std")))) (r "1.56")))

(define-public crate-macaw-0.17.0 (c (n "macaw") (v "0.17.0") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "glam") (r "^0.20") (k 0)) (d (n "glam") (r "^0.20") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.0") (o #t) (d #t) (k 0)))) (h "0wrfs0pmc94qyf136rb9a99nimr8vx7wg1k710q61xsrlm7dk0bp") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std")))) (r "1.56")))

(define-public crate-macaw-0.17.1 (c (n "macaw") (v "0.17.1") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.20") (k 0)) (d (n "glam") (r "^0.20") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.2") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.1.1") (d #t) (k 2)))) (h "1fialyc2m5jw16pg77xwyab4wry0ishm92131apisrlmq4xkc9my") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std")))) (r "1.62")))

(define-public crate-macaw-0.17.2 (c (n "macaw") (v "0.17.2") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.20") (k 0)) (d (n "glam") (r "^0.20") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.2") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.1.1") (d #t) (k 2)))) (h "08y69l3qdf6wiz8brladjgf4jydf897s4jgb6dmhxllh35w0hzpg") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std")))) (r "1.62")))

(define-public crate-macaw-0.18.0 (c (n "macaw") (v "0.18.0") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.5") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.2.0") (d #t) (k 2)))) (h "0lp2y4fp57c8n9i4rx3aj3f0jz7a08l7zpya9413mg7iinq6cplg") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std")))) (r "1.66.0")))

(define-public crate-macaw-0.18.1 (c (n "macaw") (v "0.18.1") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.5") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.2.0") (d #t) (k 2)))) (h "1xwc930dsh42cjxq71hr6ashmaf2j57sgcn525kjfzabv6bls7zd") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

(define-public crate-macaw-0.18.2 (c (n "macaw") (v "0.18.2") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.5") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.2.0") (d #t) (k 2)))) (h "1fp0v7mhy83hmfkzl84b735jyl653zr7cm78jb7l9xqqk2rg2dav") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

(define-public crate-macaw-0.18.3 (c (n "macaw") (v "0.18.3") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.5") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.2.0") (d #t) (k 2)))) (h "1rhpkm1vk11s94dshgpv868z6ha6awbbpr2mp6bd2vziinhxmr4j") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

(define-public crate-macaw-0.18.4 (c (n "macaw") (v "0.18.4") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8.5") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.2.0") (d #t) (k 2)))) (h "1jp030s451pb5hw60xjwj7n5d8lyinw6fzl9y6wi7n75031pxqdn") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

(define-public crate-macaw-0.18.6 (c (n "macaw") (v "0.18.6") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.3.0") (d #t) (k 2)))) (h "1yrdfqcpkd17pbgb515l3k2nzd54n1z45zdpmy831rd70zgvzzdq") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

(define-public crate-macaw-0.19.0 (c (n "macaw") (v "0.19.0") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.22") (k 0)) (d (n "glam") (r "^0.22") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.3.0") (d #t) (k 2)))) (h "125km5fmxa5dmmn0v33mlkskqpi1fxy1qsdbd5h4c6l09yy9xwg4") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

(define-public crate-macaw-0.19.1 (c (n "macaw") (v "0.19.1") (d (list (d (n "bytemuck") (r "^1.9") (o #t) (d #t) (k 0)) (d (n "glam") (r "^0.25") (k 0)) (d (n "glam") (r "^0.25") (f (quote ("scalar-math"))) (t "cfg(miri)") (k 0)) (d (n "num-traits") (r "^0.2.14") (f (quote ("libm"))) (t "cfg(target_arch = \"spirv\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "speedy") (r "^0.8") (f (quote ("glam"))) (o #t) (d #t) (k 0)) (d (n "tiny-bench") (r "^0.3.0") (d #t) (k 2)))) (h "086zdgi4im1l9vzwfw1y69s2kpnm4cvff5a3rzg1r6pgz5p5sj3q") (f (quote (("with_speedy" "speedy") ("with_serde" "serde" "glam/serde") ("with_bytemuck" "bytemuck" "glam/bytemuck") ("std" "glam/std") ("libm" "glam/libm") ("default" "std") ("debug_assert" "glam/debug-glam-assert") ("assert" "glam/glam-assert"))))))

