(define-module (crates-io ma ri marine-runtime) #:use-module (crates-io))

(define-public crate-marine-runtime-0.5.0 (c (n "marine-runtime") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "^0.17.0") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "^0.17.0") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "18gixlvcfzvyzqg0ssfxday0nw1zvpvq11qjl63vyma5fa02awmq")))

(define-public crate-marine-runtime-0.5.1 (c (n "marine-runtime") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.3") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.4") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.3") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "^0.17.0") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "^0.17.0") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0nqinafkyawyqyr36sbjhgsyzy3kxdjvy6bl2k61f9kw0yjr5mpl")))

(define-public crate-marine-runtime-0.6.0 (c (n "marine-runtime") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.3") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.4") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.4") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "^0.17.0") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "^0.17.0") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1aggsp146ajn5m5acp5d3lmarkim3fg7zzikcisk6nyklkx3j771")))

(define-public crate-marine-runtime-0.6.1 (c (n "marine-runtime") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.3") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.4") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.4") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "^0.17.0") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "^0.17.0") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1kwnx94b6jmxhqncpnsxxhg05fi4f61gqiy6l8djpjz5and5dd94")))

(define-public crate-marine-runtime-0.7.0 (c (n "marine-runtime") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.3") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.4") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.4") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "=1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1gn31f1gpb5cvf2p1hdx9649ipdj4js4dvf39wqyx8d3c9qhyyxj")))

(define-public crate-marine-runtime-0.7.1 (c (n "marine-runtime") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.3") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.4") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.4") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.2") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1yakl5bs7p5k3xzmwvq5g2gaydd7c3gkvplnb1rd37vm5vr4c891")))

(define-public crate-marine-runtime-0.7.2 (c (n "marine-runtime") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.6") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.8") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.6") (d #t) (k 0)) (d (n "marine-utils") (r "^0.2.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.41.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.12.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.2") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1cjk69cf8lzjsyx4pm8ryc9c8nq1apmh7qs1n4hl77f5jk9n4clq")))

(define-public crate-marine-runtime-0.8.0 (c (n "marine-runtime") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.6") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.8") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.6") (d #t) (k 0)) (d (n "marine-utils") (r "^0.3.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.2") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1amvcscmzyd99fj8xia11q9kwshm2lmki91lydjsva04gyvda6dy")))

(define-public crate-marine-runtime-0.8.1 (c (n "marine-runtime") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.6") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.8") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.6") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.2") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0lkg63fw2pvcvgmkv769kpy7bjqz1w3gk0v7nn0n6hg31p39nvxh")))

(define-public crate-marine-runtime-0.9.0 (c (n "marine-runtime") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.6") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.8") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.6") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.2") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0y3jlw0safbq8pdmc9nxgassa9a23fpjimmi8sfa5pxq3a2a9vpr")))

(define-public crate-marine-runtime-0.10.0 (c (n "marine-runtime") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.5.6") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.6.8") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.1.6") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.20.2") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1n9qqyb5by5x9mz9h1i886a76jcj5wa749sw9ly956l0vs0jvq63")))

(define-public crate-marine-runtime-0.11.0 (c (n "marine-runtime") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.2.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.1.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.21.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0kcpx4a4qv0ra0q56yyjg3vvcs32yn93ypnn585ywg0xm7plrf44")))

(define-public crate-marine-runtime-0.12.0 (c (n "marine-runtime") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.3.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.22.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0281jqf8n54v1vw39457ip76c6s09xkr38yi2gw2xcsdvq07iv97")))

(define-public crate-marine-runtime-0.13.0 (c (n "marine-runtime") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.3.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.8.0") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.22.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1lw9zafcc7fghk7x34f6ry7fi7q084wjvqminf31sp0aawaaf591")))

(define-public crate-marine-runtime-0.14.0 (c (n "marine-runtime") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.8.0") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.9.0") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.0") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1d21xi09pv418zmm0gvabinqbbpxf9wp78xbnzhrf54jqrzny3nk")))

(define-public crate-marine-runtime-0.14.1 (c (n "marine-runtime") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.9.1") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "05xrkvy02gdwm4gydsvw3kin2pz7nqdi6lw51vphj3paa0ahzv7v")))

(define-public crate-marine-runtime-0.14.2 (c (n "marine-runtime") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.9.1") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0darzzma9hdyncy095zgdyhl484qfzc89mvrr5w0qxyfnwf3csnk")))

(define-public crate-marine-runtime-0.14.3 (c (n "marine-runtime") (v "0.14.3") (d (list (d (n "anyhow") (r "^1.0.31") (d #t) (k 0)) (d (n "boolinator") (r "^2.4.0") (d #t) (k 0)) (d (n "bytes") (r "^0.5.4") (d #t) (k 2)) (d (n "bytesize") (r "^1.1.0") (d #t) (k 0)) (d (n "it-lilo") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-it-generator") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-it-interfaces") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-it-parser") (r "^0.9.1") (d #t) (k 0)) (d (n "marine-min-it-version") (r "^0.1.0") (d #t) (k 0)) (d (n "marine-module-info-parser") (r "^0.2.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "multimap") (r "^0.8.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.7.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "parity-wasm") (r "^0.42.2") (d #t) (k 0)) (d (n "paste") (r "^1.0.5") (d #t) (k 0)) (d (n "pwasm-utils") (r "^0.18.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 2)) (d (n "semver") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.24") (d #t) (k 0)) (d (n "tokio") (r "^0.2.20") (f (quote ("blocking" "macros"))) (d #t) (k 2)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "01bg2ybfw428s57lwkzwxyrq49nyjc5dvk664jqhp8pz7zfk2pwr")))

(define-public crate-marine-runtime-0.17.1 (c (n "marine-runtime") (v "0.17.1") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cmd_lib") (r "^0.7.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-core") (r "^0.15.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.6.15") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.6.15") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0cbns03qv0xyscx5213fa2xhaj1x6am9iv3sxgmjn71f3drw6q6k") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.17.2 (c (n "marine-runtime") (v "0.17.2") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cmd_lib") (r "^0.7.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-core") (r "^0.15.1") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.6.15") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.6.15") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0280d6q4mk3p0si1k59v1nqssdyjkz7q2znfv1il68ds96z7wkmh") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.18.0 (c (n "marine-runtime") (v "0.18.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cmd_lib") (r "^0.7.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-core") (r "^0.16.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1gayzrha2lrb73qqwfpbsc0gk7l1mxfp1dlxbxc0xihszmhkv3v3") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.18.1 (c (n "marine-runtime") (v "0.18.1") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cmd_lib") (r "^0.7.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-core") (r "^0.16.1") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1whphshgp46k1ffbq3p6v7wck2pbl7301gjwj9nc5v4kr350xvfp") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.19.0 (c (n "marine-runtime") (v "0.19.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cmd_lib") (r "^0.7.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-core") (r "^0.16.1") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "150jgf614j5zb5wswhmay4vkzzv30fag3xzb535pcsnbinsywz0g") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.20.0 (c (n "marine-runtime") (v "0.20.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "cmd_lib") (r "^0.7.8") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "marine-core") (r "^0.16.1") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.0") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.118") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.118") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.53") (d #t) (k 0)) (d (n "serde_with") (r "^1.11.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.23") (d #t) (k 0)) (d (n "toml") (r "^0.5.6") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0xg0a222pjilzbh78q68hipcja71fd6psjsxbk7vaz2fyys07w94") (f (quote (("raw-module-api")))) (y #t)))

(define-public crate-marine-runtime-0.21.0 (c (n "marine-runtime") (v "0.21.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.16.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.4.2") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0zrwshs9ghbkixn8dk3qwh83idf78y5vdph9lixx9i2yw7b4j4xf") (f (quote (("raw-module-api")))) (y #t)))

(define-public crate-marine-runtime-0.22.0 (c (n "marine-runtime") (v "0.22.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.17.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.23.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1la59xmvfp3jjz33zv8564fgy3c6cqr154fs864827zn6ff043nw") (f (quote (("raw-module-api")))) (y #t)))

(define-public crate-marine-runtime-0.23.0 (c (n "marine-runtime") (v "0.23.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.18.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.24.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "17kr7gcm1fbk1pk0pp9hm8b630v15xd2jbvxp8g6m52z9l7inggc") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.23.1 (c (n "marine-runtime") (v "0.23.1") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.18.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.144") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.144") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.85") (d #t) (k 0)) (d (n "serde_with") (r "^2.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.34") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.24.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "0pb2q26g31bg69h54wh3pv9519z83wj59p2pixslybg1f5s7xxck") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.23.2 (c (n "marine-runtime") (v "0.23.2") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.18.1") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.6.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.24.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "131aassyd7f0fl0198n7idnqdaq2kx8xajbs6iw0lyfkjvic34pd") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.24.0 (c (n "marine-runtime") (v "0.24.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.19.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.6.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.24.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1hdayzrjk17dllm1ifr8h4rkzwqjnfnwkss8p387irycvkljcdxs") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.24.1 (c (n "marine-runtime") (v "0.24.1") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.19.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.6.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.24.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "170v86v2f3ql0z1p23m1caxw872215zmblpfp7sb9lk8bfzn4ljl") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.25.0 (c (n "marine-runtime") (v "0.25.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.3.5") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.19.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.6.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-core") (r "=0.17.1") (f (quote ("dynamicfunc-fat-closures"))) (d #t) (k 0) (p "wasmer-runtime-core-fl")) (d (n "wasmer-it") (r "^0.24.1") (d #t) (k 0) (p "wasmer-interface-types-fl")) (d (n "wasmer-runtime") (r "=0.17.1") (d #t) (k 0) (p "wasmer-runtime-fl")) (d (n "wasmer-wasi") (r "^0.17.1") (d #t) (k 0) (p "wasmer-wasi-fl")))) (h "1dr359yy80vp3ip6jsy1kpfnaqjz3p4i4b9jwv3grg592wc4263w") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.26.0 (c (n "marine-runtime") (v "0.26.0") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.20.0") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1wb8b8x2ck5yrmw8wdgvmcyzqwhhmb9ydi12ac2qmnyv84y5dwh7") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.26.1 (c (n "marine-runtime") (v "0.26.1") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.20.1") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.2.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "18kx4dzlmsi5sjx5z0byfbwg6cgdpczx79i7dg9903470bv0dk5y") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.26.2 (c (n "marine-runtime") (v "0.26.2") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.20.2") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.2.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "19vnw1k2prk542czl3qbaphaqrp5hcm66qkxmbfk86f2dxjq4s9f") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.26.3 (c (n "marine-runtime") (v "0.26.3") (d (list (d (n "bytesize") (r "^1.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.3") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "marine-core") (r "^0.20.3") (d #t) (k 0)) (d (n "marine-module-interface") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.2.1") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.2.2") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "0bl3j7glsg7hj6cdi3f8nks88f6vv0m9ad1vdig0szl47sahiizi") (f (quote (("raw-module-api"))))))

(define-public crate-marine-runtime-0.27.0 (c (n "marine-runtime") (v "0.27.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "marine-core") (r "^0.21.0") (k 0)) (d (n "marine-module-interface") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1a9p15lrl05ghbhrnmzgwg1909wdlnhikbw1ynn98xhhg47c9nim") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.28.0 (c (n "marine-runtime") (v "0.28.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "marine-core") (r "^0.22.0") (k 0)) (d (n "marine-module-interface") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.7.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "0lb19nzd0ynd3cj8yr7rxba1zsj5vc5gbc7cbprpj1lgxsd46gbw") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.29.0 (c (n "marine-runtime") (v "0.29.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "marine-core") (r "^0.23.0") (k 0)) (d (n "marine-module-interface") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.8.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.8.1") (f (quote ("logger"))) (d #t) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "04qc79r5rk64dyi5zbwg00h8r6bbypac8hs4kxmbkvwsm18sbhc1") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.30.0 (c (n "marine-runtime") (v "0.30.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.4.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.19") (d #t) (k 0)) (d (n "marine-core") (r "^0.24.0") (k 0)) (d (n "marine-module-interface") (r "^0.7.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.3.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.89") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.26.1") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1f08r9a264bzwfj6js4h2gswzhp41p6d8gx8dzq9brbg4s25abzy") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.31.0 (c (n "marine-runtime") (v "0.31.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.25.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1d7y7pw2ykvrfs1zmcq7n54wly5zcz89myiq7vpk4dd6098yjg26") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.32.0 (c (n "marine-runtime") (v "0.32.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.26.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.5.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1zrvdfypq2f6djp17m7wwx3fwkz89l948vqiq1jcnh5z0a26am22") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.32.1 (c (n "marine-runtime") (v "0.32.1") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.26.1") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "06nwlgwary6b8z17v5zxbz6zdczhf2v8sxiz2fgq71hm1fdm76jc") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.32.2 (c (n "marine-runtime") (v "0.32.2") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.26.2") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.10.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "05qn1ivxvci4gi93224f0cfmrfmps951gw6azkfrvc99ni5618fm") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.33.0 (c (n "marine-runtime") (v "0.33.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.27.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.12.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.12.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "old_sdk_call_parameters") (r "^0.10.3") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "0cwqyjk8dpq1z6d2aarscmx8i168rnngdqka5larlg8lnl9albgf") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.34.0 (c (n "marine-runtime") (v "0.34.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.28.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.13.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.13.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "marine_call_parameters_v0") (r "=0.10.3") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v1") (r "=0.12.0") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "0m32spp8cjnjnfkw54ra31sxr5m66hvq29yz19wm7j0d7mq6hv72") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.35.0 (c (n "marine-runtime") (v "0.35.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.29.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "marine_call_parameters_v0") (r "=0.10.3") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v1") (r "=0.12.0") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v2") (r "=0.13.0") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "0ljz2izyiad534dk7fmxki3y0ms5zgi1zqqi2851fxp92dy9qnbc") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.36.0 (c (n "marine-runtime") (v "0.36.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.30.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "marine_call_parameters_v0") (r "=0.10.3") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v1") (r "=0.12.0") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v2") (r "=0.13.0") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "0pb5wa60c0aln8knjrjranqpm7clzs7q36pkvvbcplvf0vw2ir00") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.36.1 (c (n "marine-runtime") (v "0.36.1") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.30.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "marine_call_parameters_v0") (r "=0.10.3") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v1") (r "=0.12.0") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v2") (r "=0.13.0") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1by69gdz2fg7m74inlvhmgp0951kgbidhc2cl6vw3j595xblnljb") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.36.2 (c (n "marine-runtime") (v "0.36.2") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.5.1") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.4.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.30.0") (k 0)) (d (n "marine-module-interface") (r "^0.8.1") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.6.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "marine_call_parameters_v0") (r "=0.10.3") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v1") (r "=0.12.0") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v2") (r "=0.13.0") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.27.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "10akvk1y694bdnc8s9z4c51ra7q7n2jy2dfzni6s5ww4g17bxfzv") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

(define-public crate-marine-runtime-0.37.0 (c (n "marine-runtime") (v "0.37.0") (d (list (d (n "bytesize") (r "^1.2.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "it-json-serde") (r "^0.6.0") (d #t) (k 0)) (d (n "it-memory-traits") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "marine-core") (r "^0.31.0") (k 0)) (d (n "marine-module-interface") (r "^0.9.0") (d #t) (k 0)) (d (n "marine-rs-sdk") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-rs-sdk-main") (r "^0.14.0") (f (quote ("logger"))) (k 0)) (d (n "marine-utils") (r "^0.5.1") (d #t) (k 0)) (d (n "marine-wasm-backend-traits") (r "^0.7.0") (d #t) (k 0)) (d (n "marine-wasmtime-backend") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "marine_call_parameters_v0") (r "=0.10.3") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v1") (r "=0.12.0") (k 0) (p "marine-call-parameters")) (d (n "marine_call_parameters_v2") (r "=0.13.0") (k 0) (p "marine-call-parameters")) (d (n "once_cell") (r "^1.16.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "safe-transmute") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.147") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.147") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.107") (d #t) (k 0)) (d (n "serde_with") (r "^2.1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.50") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("rt" "macros"))) (d #t) (k 2)) (d (n "toml") (r "^0.5.9") (d #t) (k 0)) (d (n "wasmer-it") (r "^0.28.0") (d #t) (k 0) (p "wasmer-interface-types-fl")))) (h "1v7jf63i3axvzfans25cwnlssq63hh7i1ma102j9vxs3vf2rbf1i") (f (quote (("raw-module-api") ("default" "marine-core/default" "marine-wasmtime-backend"))))))

