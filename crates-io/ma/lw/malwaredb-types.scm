(define-module (crates-io ma lw malwaredb-types) #:use-module (crates-io))

(define-public crate-malwaredb-types-0.0.1 (c (n "malwaredb-types") (v "0.0.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.26") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.3") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.5") (k 0)) (d (n "pdf") (r "^0.8.1") (f (quote ("cache"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "0vzsph5j5956sdf1qcvwbinsi4srfz1ccnvgq985nd519skjn7wy") (f (quote (("pef") ("pdf") ("macho") ("default" "elf" "macho" "office" "pe32" "pdf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("office" "dep:zip") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.2 (c (n "malwaredb-types") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.4") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.5") (k 0)) (d (n "pdf") (r "^0.8.1") (f (quote ("cache"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.37") (k 0)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "160j7kgwjb0i9mczhph0v4nhf8pc7qhgrsyjzyjn2va10xcbqchq") (f (quote (("pef") ("pdf") ("macho") ("default" "elf" "macho" "office" "pe32" "pdf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("office" "dep:zip") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.3 (c (n "malwaredb-types") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.4") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.8.1") (f (quote ("cache"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "0hpk6mpvmqcja71hxb9kms95gpf50scdbj9s5q38ff8yslm5x5n7") (f (quote (("rtf") ("pef") ("pdf") ("office95") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("officexml" "dep:zip") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.4 (c (n "malwaredb-types") (v "0.0.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.4") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.9.0") (f (quote ("cache"))) (o #t) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "macro-diagnostics"))) (o #t) (k 0)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "0dpnfia4ymld5dnr1p42h4jxja1r1hca4fq549c000zs40l0ngag") (f (quote (("rtf") ("pef") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (y #t) (s 2) (e (quote (("pe32" "dep:flagset") ("pdf" "dep:pdf") ("officexml" "dep:zip") ("office95" "dep:uuid") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.5 (c (n "malwaredb-types") (v "0.0.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.4") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.9.0") (f (quote ("cache"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4" "macro-diagnostics"))) (o #t) (k 0)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "0rzs1cs2hnxibf0ii1a3xxzh10rw9yzk06x4n4iq556ji8kz9fwm") (f (quote (("rtf") ("pef") ("pdf") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("officexml" "dep:zip") ("office95" "dep:uuid") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.6 (c (n "malwaredb-types") (v "0.0.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.4") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.9.0") (f (quote ("cache"))) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("v4" "macro-diagnostics"))) (o #t) (k 0)) (d (n "zip") (r "^0.6.6") (o #t) (d #t) (k 0)))) (h "1lrqq6swjpv51lyp2p7r3sn33qlm9wpwr74kn521wmpkpymg203y") (f (quote (("rtf") ("pef") ("pdf") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("officexml" "dep:zip") ("office95" "dep:uuid") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.7 (c (n "malwaredb-types") (v "0.0.7") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.4") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.9.0") (f (quote ("cache"))) (o #t) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "uuid") (r "^1.7") (f (quote ("v4" "macro-diagnostics"))) (o #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("aes-crypto" "deflate"))) (o #t) (k 0)))) (h "0cn057ziwk7bg4rhn2zsrijjf45aiif5fwkdr7klylxcrf514dnb") (f (quote (("rtf") ("pef") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("pdf" "dep:pdf") ("officexml" "dep:zip") ("office95" "dep:uuid") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.8 (c (n "malwaredb-types") (v "0.0.8") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.35") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.5") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.9.0") (f (quote ("cache"))) (o #t) (k 0)) (d (n "rstest") (r "^0.18.2") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v4" "macro-diagnostics"))) (o #t) (k 0)) (d (n "zip") (r "^0.6.6") (f (quote ("aes-crypto" "deflate"))) (o #t) (k 0)))) (h "12nnbhs7wnpgi5gim9hxkzdlsafjxnflsgaa9cwy0v4yw9ik20hk") (f (quote (("rtf") ("pef") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("pdf" "dep:pdf") ("officexml" "dep:zip") ("office95" "dep:uuid") ("elf" "dep:flagset"))))))

(define-public crate-malwaredb-types-0.0.9 (c (n "malwaredb-types") (v "0.0.9") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4.38") (f (quote ("clock" "serde"))) (k 0)) (d (n "flagset") (r "^0.4.5") (o #t) (k 0)) (d (n "fuzzyhash") (r "^0.2.2") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc" "std"))) (k 0)) (d (n "md-5") (r "^0.10.6") (k 0)) (d (n "pdf") (r "^0.9.0") (f (quote ("cache"))) (o #t) (k 0)) (d (n "rstest") (r "^0.19.0") (k 2)) (d (n "tracing") (r "^0.1.40") (k 0)) (d (n "uuid") (r "^1.8") (f (quote ("v4" "macro-diagnostics"))) (o #t) (k 0)) (d (n "zip") (r "^1.1.2") (f (quote ("aes-crypto" "deflate"))) (o #t) (k 0)))) (h "1l94rpil447zwiw0js6hmw56cyrybj7a3mcbg1fv3xvg5wmv6jzx") (f (quote (("rtf") ("pef") ("macho") ("default" "elf" "macho" "office95" "officexml" "pe32" "pdf" "rtf")))) (s 2) (e (quote (("pe32" "dep:flagset") ("pdf" "dep:pdf") ("officexml" "dep:zip") ("office95" "dep:uuid") ("elf" "dep:flagset"))))))

