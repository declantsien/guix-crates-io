(define-module (crates-io ma la malachite-float) #:use-module (crates-io))

(define-public crate-malachite-float-0.4.0 (c (n "malachite-float") (v "0.4.0") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.0") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.0") (f (quote ("float_helpers"))) (d #t) (k 0)) (d (n "malachite-q") (r "^0.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1m3wbbafvdhhz3my9w2cnxkfa5d272xk6ybw6pad7xc4z86bd0a0") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.1 (c (n "malachite-float") (v "0.4.1") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.1") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.1") (f (quote ("float_helpers"))) (d #t) (k 0)) (d (n "malachite-q") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1s8bpnminncxclxcijbqmd3sji3rdhagj4agbcnqy2a7m60kvq7j") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.2 (c (n "malachite-float") (v "0.4.2") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.2") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.2") (f (quote ("float_helpers"))) (d #t) (k 0)) (d (n "malachite-q") (r "^0.4.2") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1q7w1ps2y3f3vibi1jjii3mnmllcab519hm3xbvjq26kq3j897ch") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.3 (c (n "malachite-float") (v "0.4.3") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.3") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.3") (f (quote ("float_helpers"))) (d #t) (k 0)) (d (n "malachite-q") (r "^0.4.3") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0lvhr56856fxfzjp8lj18m40ywncmjdd1xly6jgmqn82mfplvqma") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.4 (c (n "malachite-float") (v "0.4.4") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.4") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.4") (f (quote ("float_helpers"))) (d #t) (k 0)) (d (n "malachite-q") (r "^0.4.4") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "09826k0cmsz0w4z8p5jjpj5ykkkf3wq23ii9ij65ky94wg5in776") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.5 (c (n "malachite-float") (v "0.4.5") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.5") (k 0)) (d (n "malachite-nz") (r "^0.4.5") (f (quote ("float_helpers"))) (k 0)) (d (n "malachite-q") (r "^0.4.5") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1zlmp1lld96zg1xripvqnf8d8fkyg2qgjzn86zxig2br0phf08fx") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde" "malachite-q/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs" "malachite-q/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.6 (c (n "malachite-float") (v "0.4.6") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.6") (k 0)) (d (n "malachite-nz") (r "^0.4.6") (f (quote ("float_helpers"))) (k 0)) (d (n "malachite-q") (r "^0.4.6") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0adh2vgcrbpjfd6ynpcc350vxgkxxhpq9havj3yx1l560pwis2l9") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde" "malachite-q/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs" "malachite-q/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.7 (c (n "malachite-float") (v "0.4.7") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.7") (k 0)) (d (n "malachite-nz") (r "^0.4.7") (f (quote ("float_helpers"))) (k 0)) (d (n "malachite-q") (r "^0.4.7") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "09hzczrirjx68bz4mxsqsqjg2962w5g786n106kn2ip0r718nxz0") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde" "malachite-q/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs" "malachite-q/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.8 (c (n "malachite-float") (v "0.4.8") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.8") (k 0)) (d (n "malachite-nz") (r "^0.4.8") (f (quote ("float_helpers"))) (k 0)) (d (n "malachite-q") (r "^0.4.8") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1jhr6a1917sd09gj2xz9g9h1xwfrwyv7xjkqwc51agyr34wb0ryq") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde" "malachite-q/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs" "malachite-q/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-float-0.4.9 (c (n "malachite-float") (v "0.4.9") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.9") (k 0)) (d (n "malachite-nz") (r "^0.4.9") (f (quote ("float_helpers"))) (k 0)) (d (n "malachite-q") (r "^0.4.9") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("float" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1ns0m959l5zpqkxb6czcxfizzbvmjdbnkrm9q38bg2fzm5i0hw99") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "malachite-q/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random" "malachite-q/random") ("enable_serde" "serde" "malachite-nz/enable_serde" "malachite-q/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs" "malachite-q/32_bit_limbs")))) (r "1.61.0")))

