(define-module (crates-io ma la malachite-q) #:use-module (crates-io))

(define-public crate-malachite-q-0.2.1 (c (n "malachite-q") (v "0.2.1") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.2.1") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "001l6wh4qycjd6x0a4258s705gp9d14pkrcynq5da7gy16kz433z") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.2.2 (c (n "malachite-q") (v "0.2.2") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.2.2") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "0av1k8wpxgba90hmvqgzpvi41jp83k2hx2529msmhzsjj04mlpjn") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.2.3 (c (n "malachite-q") (v "0.2.3") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.2.3") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.2.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "1r5z9mrk42n0a2y0sgrkni0vlb7y3i48i4jqmg1pal5n02w34bfi") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.2.4 (c (n "malachite-q") (v "0.2.4") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.2.4") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.2.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "0rbqn0zm9k9b2jy0fs5l4jin9ssm593xdlmhpz1334l5p6v0mbxm") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.2.5 (c (n "malachite-q") (v "0.2.5") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.2.5") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.2.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "1imkkp3kj8ams2sag441avg7sd8h2s4q7gc4vgy4fb2ljxzfp706") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.2.6 (c (n "malachite-q") (v "0.2.6") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.2.6") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.2.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "1lj3sgz4r4a716qgb4ndpsj6lv3gs741kvacah1fdn6prnnyljyl") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.3.0 (c (n "malachite-q") (v "0.3.0") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.3.0") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.3.0") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "1knrgc4mf9w28yn6f75jiv3prbw9w4hg4i63x7cj8lxrwz2dal4q") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.3.1 (c (n "malachite-q") (v "0.3.1") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.3.1") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.3.1") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "197drr5s58dfv2s7ds62imrr0srhhwc2hajsrfdal88dlaqsbm28") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.3.2 (c (n "malachite-q") (v "0.3.2") (d (list (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.3.2") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.3.2") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.16.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.32") (o #t) (d #t) (k 0)))) (h "0q03hm0ij45qlwjfhg4v4nlxvi3j844l742cb4b50jqksm0yam9p") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.0 (c (n "malachite-q") (v "0.4.0") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.0") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.0") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "17y67j4ml3ckz5iwl65335ad071bldlslnbj4kmz8qz40y6kp7cf") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.1 (c (n "malachite-q") (v "0.4.1") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.1") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.1") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0nfd4kylnvnq25dq25jkhmc3kgjdydngysbb4c44wcc2q9ran7jg") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.2 (c (n "malachite-q") (v "0.4.2") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.2") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.2") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0vfzzh9fprqbbwawdrkcxsv3c25fdlyagpyppcj619gh6s3psxln") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "serde" "serde_json" "num" "rug") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.3 (c (n "malachite-q") (v "0.4.3") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.3") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.3") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1pjkf9v2ikdhv78hkxyddj8dq2xlpr1x56jvzfh3yjsn6v84rxkd") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.4 (c (n "malachite-q") (v "0.4.4") (d (list (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "malachite-base") (r "^0.4.4") (d #t) (k 0)) (d (n "malachite-nz") (r "^0.4.4") (d #t) (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1d8c8i6cxsr08kzfxbv2xsxzhfjz2xhy5bifhg6nlbi92r0dpkx1") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.5 (c (n "malachite-q") (v "0.4.5") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.5") (k 0)) (d (n "malachite-nz") (r "^0.4.5") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0fsx2yvrkh0zbgg0m2azm4x67knahz1cy34rjljmhssg275dza9k") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.6 (c (n "malachite-q") (v "0.4.6") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.6") (k 0)) (d (n "malachite-nz") (r "^0.4.6") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1wqkxf0z158dhffb5gf9366qfyj980wcl833fliqjak8ah6ylxwa") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.7 (c (n "malachite-q") (v "0.4.7") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.7") (k 0)) (d (n "malachite-nz") (r "^0.4.7") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0sl0mldvrpvqngwb8bcjipgb1l5yxsb8dd30h36f3dybks3srl0a") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.8 (c (n "malachite-q") (v "0.4.8") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.8") (k 0)) (d (n "malachite-nz") (r "^0.4.8") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "16m5wzvrclr0ca5bdvrg9953ykzkv5y7b1zhcss7ji53c7a8izw6") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.9 (c (n "malachite-q") (v "0.4.9") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.9") (k 0)) (d (n "malachite-nz") (r "^0.4.9") (k 0)) (d (n "num") (r "^0.4.1") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.21.0") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "0hv9qn20vzkkxj6485gh6ag1w04vrxg73blg39dbj17pmm93c2jf") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.10 (c (n "malachite-q") (v "0.4.10") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.10") (k 0)) (d (n "malachite-nz") (r "^0.4.10") (k 0)) (d (n "num") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.24.1") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1whx1r62nl6myl54p9jw40bsyz15kaxj842yiwy27a532ci65shb") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.11 (c (n "malachite-q") (v "0.4.11") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.11") (k 0)) (d (n "malachite-nz") (r "^0.4.11") (k 0)) (d (n "num") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.24.1") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1p4qbak5diia4cq8psigy2br1p68lwzbv80mwwq0fvqrr4w701nf") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

(define-public crate-malachite-q-0.4.12 (c (n "malachite-q") (v "0.4.12") (d (list (d (n "itertools") (r "^0.11.0") (f (quote ("use_alloc"))) (k 0)) (d (n "malachite-base") (r "^0.4.12") (k 0)) (d (n "malachite-nz") (r "^0.4.12") (k 0)) (d (n "num") (r "^0.4.3") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rug") (r "^1.24.1") (f (quote ("rational" "serde"))) (o #t) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0.105") (o #t) (d #t) (k 0)))) (h "1apyglwbq2wjz0sy3mx200mp3z0bxh7x3y1mhgi37m224bczmlsb") (f (quote (("test_build" "malachite-base/test_build" "malachite-nz/test_build" "random" "serde" "serde_json" "num" "rug") ("random" "malachite-base/random" "malachite-nz/random") ("enable_serde" "serde" "malachite-nz/enable_serde") ("bin_build" "test_build") ("32_bit_limbs" "malachite-nz/32_bit_limbs")))) (r "1.61.0")))

