(define-module (crates-io ma tt matterdb) #:use-module (crates-io))

(define-public crate-matterdb-1.0.0 (c (n "matterdb") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "matterdb-derive") (r "^1.0.0") (d #t) (k 2)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.17.0") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.15") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0a3znnhm5qh3534ynvp4j9xk48x5vxnyfkn9xnsqmsav45md5cnf") (f (quote (("yolo") ("with-serde") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy"))))))

(define-public crate-matterdb-1.0.1 (c (n "matterdb") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "matterdb-derive") (r "^1.0.0") (d #t) (k 2)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.17.0") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.15") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "089zwhd82vgpw2dnncg1vby4mifqg35xqfrfaz6z5fk2bq1ds9qq") (f (quote (("yolo") ("with-serde") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy"))))))

(define-public crate-matterdb-1.1.2 (c (n "matterdb") (v "1.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "enum-primitive-derive") (r "^0.2") (d #t) (k 0)) (d (n "hex") (r "^0.4.0") (d #t) (k 2)) (d (n "leb128") (r "^0.2") (d #t) (k 0)) (d (n "matterdb-derive") (r "^1.0.0") (d #t) (k 2)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "protobuf") (r "^2.17.0") (f (quote ("with-serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.15") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "15jc0yw6ggc8g2r8hg4f25jah6lxnai4ld30mqcbv56zgscq93s6") (f (quote (("yolo") ("with-serde") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy"))))))

(define-public crate-matterdb-1.2.0 (c (n "matterdb") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_matches") (r "^1.3") (d #t) (k 2)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chrono") (r "^0.4.6") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "crossbeam") (r "^0.8.0") (d #t) (k 0)) (d (n "matterdb-derive") (r "^1.0.0") (d #t) (k 2)) (d (n "modifier") (r "^0.1") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 2)) (d (n "rocksdb") (r "^0.15") (k 0)) (d (n "rust_decimal") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^2.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0r4wc5rbl17mjp38a6fgqlavlmgh6857dfijpgfpvyxqn1h9dvz7") (f (quote (("with-serde") ("rocksdb_zstd" "rocksdb/zstd") ("rocksdb_zlib" "rocksdb/zlib") ("rocksdb_snappy" "rocksdb/snappy") ("rocksdb_lz4" "rocksdb/lz4") ("rocksdb_bzip2" "rocksdb/bzip2") ("long_benchmarks") ("default" "rocksdb_snappy"))))))

