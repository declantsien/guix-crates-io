(define-module (crates-io ma tr matrix-sdk-common) #:use-module (crates-io))

(define-public crate-matrix-sdk-common-0.1.0 (c (n "matrix-sdk-common") (v "0.1.0") (d (list (d (n "futures-locks") (r "^0.5.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.4") (f (quote ("wasm-bindgen" "now"))) (d #t) (k 0)) (d (n "js_int") (r "^0.1.5") (d #t) (k 0)) (d (n "ruma-api") (r "^0.16.1") (d #t) (k 0)) (d (n "ruma-client-api") (r "^0.9.0") (d #t) (k 0)) (d (n "ruma-events") (r "^0.21.2") (d #t) (k 0)) (d (n "ruma-identifiers") (r "^0.16.1") (d #t) (k 0)) (d (n "tokio") (r "^0.2.21") (f (quote ("sync" "time" "fs"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0xhg6y0462zfnyl050lxvm1s3any5ynlwhxz2hdzix3s6m5r8k7q")))

(define-public crate-matrix-sdk-common-0.2.0 (c (n "matrix-sdk-common") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1.42") (d #t) (k 0)) (d (n "futures-locks") (r "^0.6.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.9") (f (quote ("wasm-bindgen" "now"))) (d #t) (k 0)) (d (n "ruma") (r "^0.0.2") (f (quote ("client-api" "unstable-pre-spec"))) (d #t) (k 0)) (d (n "tokio") (r "^0.2.24") (f (quote ("sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "serde"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.1") (f (quote ("v4" "wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1s10b23wcd739ykdagi766h3hfmcsnfz2kvlrxrhf3r9dgc6zrnh") (f (quote (("unstable-synapse-quirks" "ruma/unstable-synapse-quirks"))))))

(define-public crate-matrix-sdk-common-0.3.0 (c (n "matrix-sdk-common") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures-locks") (r "^0.6.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.9") (f (quote ("wasm-bindgen" "now"))) (d #t) (k 0)) (d (n "ruma") (r "^0.2.0") (f (quote ("client-api-c"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "tokio") (r "^1.7.1") (f (quote ("rt" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.24") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0f5dpnvy4qmfqw2x4pdk035laf4zcmdmr1sjrwp9dkim5kamnnaz")))

(define-public crate-matrix-sdk-common-0.4.0 (c (n "matrix-sdk-common") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures-locks") (r "^0.6.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.9") (f (quote ("wasm-bindgen" "now"))) (d #t) (k 0)) (d (n "ruma") (r "^0.4.0") (f (quote ("client-api-c"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "tokio") (r "^1.7.1") (f (quote ("rt" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.24") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "06c5qz4pc8h3l1yall4z33bklz1w4iv3k78wgyjp5py4i80i18fn")))

(define-public crate-matrix-sdk-common-0.4.1 (c (n "matrix-sdk-common") (v "0.4.1") (d (list (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "futures") (r "^0.3.15") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures-locks") (r "^0.6.0") (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.9") (f (quote ("now"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "instant") (r "^0.1.9") (f (quote ("wasm-bindgen" "now"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ruma") (r "^0.4.0") (f (quote ("client-api-c"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "tokio") (r "^1.7.1") (f (quote ("rt" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "serde"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4" "wasm-bindgen"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.24") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "199f6wc69flm501dgzicnisw114s9kixihx24yw7x882bp509h1i")))

(define-public crate-matrix-sdk-common-0.5.0 (c (n "matrix-sdk-common") (v "0.5.0") (d (list (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("channel"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("now"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "instant") (r "^0.1.12") (f (quote ("wasm-bindgen" "inaccurate"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "ruma") (r "^0.6.2") (f (quote ("client-api-c"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("rt" "sync"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1bnbka51hcaksfh009gzcg69kfav0vc7r1hf9kp2sp5iwm4sza2j") (r "1.60")))

(define-public crate-matrix-sdk-common-0.6.0 (c (n "matrix-sdk-common") (v "0.6.0") (d (list (d (n "async-lock") (r "^2.5.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "futures-core") (r "^0.3.21") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (f (quote ("channel"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "matrix-sdk-test") (r "^0.6.0") (d #t) (k 2)) (d (n "ruma") (r "^0.7.0") (f (quote ("client-api-c"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("rt" "sync" "time"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.30") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.30") (d #t) (k 2)) (d (n "wasm-timer") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1wcm0q1s5fl2klnpdwr7vpnqn1vnhavnv8k1bqwgkp697is6lnmq") (f (quote (("js" "instant/wasm-bindgen" "instant/inaccurate" "wasm-bindgen-futures")))) (r "1.60")))

(define-public crate-matrix-sdk-common-0.7.0 (c (n "matrix-sdk-common") (v "0.7.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.60") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.28") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.26") (f (quote ("alloc" "channel"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-timers") (r "^0.3.0") (f (quote ("futures"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "instant") (r "^0.1.12") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.64") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "matrix-sdk-test") (r "^0.7.0") (d #t) (k 2)) (d (n "proptest") (r "^1.4.0") (f (quote ("std"))) (k 2)) (d (n "ruma") (r "^0.9.3") (f (quote ("client-api-c" "compat-upload-signatures" "compat-user-id" "compat-arbitrary-length-ids" "unstable-msc3401"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.151") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.30.0") (f (quote ("sync" "rt" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (f (quote ("std"))) (k 0)) (d (n "tracing-subscriber") (r "^0.3.14") (f (quote ("fmt" "ansi"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.84") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.60") (f (quote ("console"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "17wwy8fzgw58ph26sv3h0v5sq69ga9jjbzic8aicdxmnd9i5ldmv") (f (quote (("js" "instant/wasm-bindgen" "wasm-bindgen-futures")))) (r "1.70")))

