(define-module (crates-io ma ke make_pluralrules) #:use-module (crates-io))

(define-public crate-make_pluralrules-0.2.0 (c (n "make_pluralrules") (v "0.2.0") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0dw1zqnhgdghaya1ivzd8zjz5ilx54bdnnipisgn3blyg6wmqs4d")))

(define-public crate-make_pluralrules-0.3.0 (c (n "make_pluralrules") (v "0.3.0") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1dbzn002jb8l2788rb6bsl168x5smny38h8g2a9wi0dzz15654qk")))

(define-public crate-make_pluralrules-0.3.1 (c (n "make_pluralrules") (v "0.3.1") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "08ydjx87m7jw1jgcahwh89ya5jh57874hpbldpala14vyl8l8jdp")))

(define-public crate-make_pluralrules-0.3.2 (c (n "make_pluralrules") (v "0.3.2") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0wklawp4p97qqwjjny8p8cbq7lhyqv5chjf74kzjj9nlwhbskxvx")))

(define-public crate-make_pluralrules-0.3.3 (c (n "make_pluralrules") (v "0.3.3") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1hbjpq7vpvrg333j73h9xdqn1k7bhz4a1x74d6gi5g998i8mmn9n")))

(define-public crate-make_pluralrules-0.4.0 (c (n "make_pluralrules") (v "0.4.0") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0.0") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.7.22") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "1023jlhcrq6pfavbd47xrkln6pvwkhslkd8byzj7n6v0l4cjxmds")))

(define-public crate-make_pluralrules-0.4.1 (c (n "make_pluralrules") (v "0.4.1") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.7.23") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "0j9qbsbjhm6y3vlh41gwc7dshgdl0bl00ba6bvifjmfx47mphzid")))

(define-public crate-make_pluralrules-0.4.2 (c (n "make_pluralrules") (v "0.4.2") (d (list (d (n "clap") (r "^2.32") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^1.0") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.7.24") (d #t) (k 0)) (d (n "proc-macro2") (r "^0.4") (d #t) (k 0)) (d (n "quote") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)))) (h "09akgx3qgvnbw2y5i9jsgm2shhbnhld9m10ijwyph7nrj94s4mba")))

(define-public crate-make_pluralrules-0.5.0 (c (n "make_pluralrules") (v "0.5.0") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "cldr_pluralrules_parser") (r "^2.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0") (d #t) (k 0)) (d (n "quote") (r "^1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "unic-langid") (r "^0.7.1") (d #t) (k 0)))) (h "10ly0z3zwj9pmjls91y9cpkfzf1idnsnk2wk2f4h5lcm612f5i3g")))

