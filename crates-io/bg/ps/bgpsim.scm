(define-module (crates-io bg ps bgpsim) #:use-module (crates-io))

(define-public crate-bgpsim-0.17.2 (c (n "bgpsim") (v "0.17.2") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bgpsim-macros") (r "^0.11.0") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "geoutils") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "include-flate") (r "^0.2") (f (quote ("stable"))) (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "prefix-trie") (r "^0.3.0") (f (quote ("serde" "ipnet"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "priority-queue") (r "^1.2.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xmltree") (r "^0.10") (o #t) (d #t) (k 0)))) (h "08p8gqwjqycl8v534iq9ch76v6n4sqy6zvnahagw581rm1n4y65g") (s 2) (e (quote (("topology_zoo" "dep:xmltree" "dep:geoutils" "dep:include-flate") ("rand_queue" "rand" "dep:rand_distr" "dep:priority-queue" "dep:geoutils") ("rand" "dep:rand") ("export" "dep:bimap"))))))

(define-public crate-bgpsim-0.17.3 (c (n "bgpsim") (v "0.17.3") (d (list (d (n "approx") (r "^0.5.1") (d #t) (k 2)) (d (n "bgpsim-macros") (r "^0.11.0") (d #t) (k 0)) (d (n "bimap") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "generic-tests") (r "^0.1.2") (d #t) (k 2)) (d (n "geoutils") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "include-flate") (r "^0.2") (f (quote ("stable"))) (o #t) (d #t) (k 0)) (d (n "ipnet") (r "^2.5.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^3.0.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("serde-1"))) (d #t) (k 0)) (d (n "prefix-trie") (r "^0.3.0") (f (quote ("serde" "ipnet"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "priority-queue") (r "^1.2.2") (f (quote ("serde"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rand_distr") (r "^0.4.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "xmltree") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1di6lgr4jy8zhyjwbfx5jj21hsi83vw88mdn0yi2wha93i8rq1vz") (s 2) (e (quote (("topology_zoo" "dep:xmltree" "dep:geoutils" "dep:include-flate") ("rand_queue" "rand" "dep:rand_distr" "dep:priority-queue" "dep:geoutils") ("rand" "dep:rand") ("export" "dep:bimap"))))))

