(define-module (crates-io px r_ pxr_sys) #:use-module (crates-io))

(define-public crate-pxr_sys-0.1.0 (c (n "pxr_sys") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 1)) (d (n "autocxx") (r "^0.26") (d #t) (k 0)) (d (n "autocxx-build") (r "^0.26") (d #t) (k 1)) (d (n "built_different") (r "^0.1") (d #t) (k 1)) (d (n "cpp") (r "^0.5") (d #t) (k 0)) (d (n "cpp_build") (r "^0.5") (d #t) (k 1)) (d (n "cxx") (r "^1.0") (f (quote ("std" "c++17"))) (k 0)) (d (n "cxx-build") (r "^1.0") (d #t) (k 1)) (d (n "derive_builder") (r "^0.12") (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (d #t) (k 0)) (d (n "half") (r "^2") (d #t) (k 0)) (d (n "moveit") (r "^0.6") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "pxr_build") (r "^0.1.0") (d #t) (k 1)) (d (n "python-config-rs") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "semver") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "14633090ahkd31bgwjfs44kbmdyk7x1zn41x9vz897kv5wwn1qch") (f (quote (("vendored") ("use_cxx11_abi") ("usd_imaging") ("ptex") ("prman") ("openvdb") ("openimageio") ("opencolorio") ("monolithic_lib") ("materialx") ("link_python" "python-config-rs") ("hdf5") ("embree") ("draco") ("default" "vendored" "alembic" "draco" "link_python" "materialx" "openvdb" "usd_imaging") ("alembic")))) (l "usd") (r "1.70")))

(define-public crate-pxr_sys-0.1.1 (c (n "pxr_sys") (v "0.1.1") (d (list (d (n "autocxx") (r "^0.26") (d #t) (k 0)) (d (n "autocxx-build") (r "^0.26") (d #t) (k 1)) (d (n "built_different") (r "^0.1") (d #t) (k 1)) (d (n "cpp") (r "^0.5") (d #t) (k 0)) (d (n "cpp_build") (r "^0.5") (d #t) (k 1)) (d (n "cxx") (r "^1.0") (f (quote ("std" "c++17"))) (k 0)) (d (n "half") (r "^2") (d #t) (k 0)) (d (n "pxr_build") (r "^0.1.1") (d #t) (k 1)) (d (n "python-config-rs") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "141hv04gdr2n3z5pf4pdyfmlnjv7fpn0jkrh99cb5hf94npadca3") (f (quote (("vendored") ("use_cxx11_abi") ("usd_imaging") ("ptex") ("prman") ("openvdb") ("openimageio") ("opencolorio") ("monolithic_lib") ("materialx") ("link_python" "python-config-rs") ("hdf5") ("embree") ("draco") ("default" "vendored" "alembic" "draco" "link_python" "materialx" "openvdb" "usd_imaging") ("alembic")))) (l "usd") (r "1.70")))

(define-public crate-pxr_sys-0.1.2 (c (n "pxr_sys") (v "0.1.2") (d (list (d (n "autocxx") (r "^0.26") (d #t) (k 0)) (d (n "autocxx-build") (r "^0.26") (d #t) (k 1)) (d (n "built_different") (r "^0.1") (d #t) (k 1)) (d (n "cpp") (r "^0.5") (d #t) (k 0)) (d (n "cpp_build") (r "^0.5") (d #t) (k 1)) (d (n "cxx") (r "^1.0") (f (quote ("std" "c++17"))) (k 0)) (d (n "half") (r "^2") (d #t) (k 0)) (d (n "pxr_build") (r "^0.1.2") (d #t) (k 1)) (d (n "python-config-rs") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "0cnairnih45qs2m2p084kr79nj16qgd5vydrrr55k8kdihw0xm32") (f (quote (("vendored") ("use_cxx11_abi") ("usd_imaging") ("ptex") ("prman") ("openvdb") ("openimageio") ("opencolorio") ("monolithic_lib") ("materialx") ("link_python" "python-config-rs") ("hdf5") ("embree") ("draco") ("default" "vendored" "alembic" "draco" "link_python" "materialx" "openvdb" "usd_imaging") ("alembic")))) (l "usd") (r "1.70")))

(define-public crate-pxr_sys-0.2.0 (c (n "pxr_sys") (v "0.2.0") (d (list (d (n "autocxx") (r "^0.26") (d #t) (k 0)) (d (n "autocxx-build") (r "^0.26") (d #t) (k 1)) (d (n "built_different") (r "^0.1") (d #t) (k 1)) (d (n "cpp") (r "^0.5") (d #t) (k 0)) (d (n "cpp_build") (r "^0.5") (d #t) (k 1)) (d (n "cxx") (r "^1.0") (f (quote ("std" "c++17"))) (k 0)) (d (n "half") (r "^2") (d #t) (k 0)) (d (n "pxr_build") (r "^0.2.0") (d #t) (k 1)) (d (n "python-config-rs") (r "^0.1") (o #t) (d #t) (k 1)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 1)))) (h "0ia80kpdrgwxvq607s8c7fnfvwxjxhmj0jsj3q5d9w7l6bc92667") (f (quote (("vendored") ("use_cxx11_abi") ("usd_imaging") ("ptex") ("prman") ("openvdb") ("openimageio") ("opencolorio") ("monolithic_lib") ("materialx") ("link_python" "python-config-rs") ("hdf5") ("embree") ("draco") ("default" "vendored" "alembic" "draco" "link_python" "materialx" "openvdb" "usd_imaging") ("alembic")))) (l "usd") (r "1.70")))

