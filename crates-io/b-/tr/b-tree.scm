(define-module (crates-io b- tr b-tree) #:use-module (crates-io))

(define-public crate-b-tree-0.1.0 (c (n "b-tree") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "collate") (r "^0.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "freqfs") (r "^0.8") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.4") (d #t) (k 0)))) (h "1p4g1q3brv0kzgxmp5gp53nqi2mg6mg8680aqmj7sf3gifx2grg0") (f (quote (("stream" "async-trait" "collate/stream" "destream" "freqfs/stream") ("logging" "log" "freqfs/logging") ("all" "logging" "stream"))))))

(define-public crate-b-tree-0.2.0 (c (n "b-tree") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "collate") (r "^0.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "freqfs") (r "~0.8.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.4") (d #t) (k 0)))) (h "0s9s59z95dcdapfgdf5dimk85hra32wrsav0jmlrbcgcxzgvxb8l") (f (quote (("stream" "async-trait" "collate/stream" "destream" "freqfs/stream") ("logging" "log" "freqfs/logging") ("all" "logging" "stream"))))))

(define-public crate-b-tree-0.2.1 (c (n "b-tree") (v "0.2.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "collate") (r "^0.3") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "freqfs") (r "~0.8.2") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.15") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "tokio") (r "^1.32") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.4") (d #t) (k 0)))) (h "1kc4vc9m7x0xdr9dxqd1dgyghcc784xapj2vf9vrf0g9lgz10lrc") (f (quote (("stream" "async-trait" "collate/stream" "destream" "freqfs/stream") ("logging" "log" "freqfs/logging") ("all" "logging" "stream"))))))

(define-public crate-b-tree-0.3.0 (c (n "b-tree") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "collate") (r "^0.4") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "freqfs") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tokio") (r "^1.33") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.5") (d #t) (k 0)))) (h "1zqvkwpn64jb4kanf7gz9ncw4a88gva39nyhcr00qr5hxn31rzlx") (f (quote (("stream" "async-trait" "collate/stream" "destream" "freqfs/stream") ("logging" "log" "freqfs/logging") ("all" "logging" "stream"))))))

(define-public crate-b-tree-0.3.1 (c (n "b-tree") (v "0.3.1") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "collate") (r "^0.4") (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "freqfs") (r "^0.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("release_max_level_info"))) (o #t) (d #t) (k 0)) (d (n "num_cpus") (r "^1.16") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.6") (d #t) (k 0)))) (h "04awx5znm1hbgws60fwv8diysqq90n73dqjhjkdcsrvc5n8j281d") (f (quote (("stream" "async-trait" "collate/stream" "destream" "freqfs/stream") ("logging" "log" "freqfs/logging") ("all" "logging" "stream"))))))

