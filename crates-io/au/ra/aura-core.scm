(define-module (crates-io au ra aura-core) #:use-module (crates-io))

(define-public crate-aura-core-0.1.0 (c (n "aura-core") (v "0.1.0") (d (list (d (n "alpm") (r "^2.2") (d #t) (k 0)) (d (n "alpm-utils") (r "^2.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty") (r "^0.8") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.2") (f (quote ("rayon"))) (d #t) (k 0)))) (h "1akdbvc1hpsqhcj8cjgsys8chwwc2qf29xvawlpxq680axr15l3c")))

(define-public crate-aura-core-0.1.1 (c (n "aura-core") (v "0.1.1") (d (list (d (n "alpm") (r "^2.2") (d #t) (k 0)) (d (n "alpm-utils") (r "^2.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty") (r "^0.8") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.3") (f (quote ("rayon"))) (d #t) (k 0)))) (h "1djvgw7i50dk9gwrv3g5pbfv0cc8z7lpvxqag516hk0d1zk70fbj")))

(define-public crate-aura-core-0.1.2 (c (n "aura-core") (v "0.1.2") (d (list (d (n "alpm") (r "^2.2") (d #t) (k 0)) (d (n "alpm-utils") (r "^2.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty") (r "^0.8") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.3") (f (quote ("rayon"))) (d #t) (k 0)))) (h "0yfnh2n1ca9775yarysf83ky1kcv2lsw97s732hkr1f0a66xq1cd")))

(define-public crate-aura-core-0.1.3 (c (n "aura-core") (v "0.1.3") (d (list (d (n "alpm") (r "^2.2") (d #t) (k 0)) (d (n "alpm-utils") (r "^2.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty") (r "^0.8") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.3") (f (quote ("rayon"))) (d #t) (k 0)))) (h "1ivawsbwjfwp0y9d7bqfj8dmxx1961szd8405bchgkfq88pyiqin")))

(define-public crate-aura-core-0.2.0 (c (n "aura-core") (v "0.2.0") (d (list (d (n "alpm") (r "^2.2") (d #t) (k 0)) (d (n "alpm-utils") (r "^2.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty-collections") (r "^0.1.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "rayon") (r "^1.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.4") (f (quote ("rayon"))) (d #t) (k 0)))) (h "13ksm9b20lqni2rph2y29rp5r6ra2ail9yw8nbinil8kbi6di2i0")))

(define-public crate-aura-core-0.3.0 (c (n "aura-core") (v "0.3.0") (d (list (d (n "alpm") (r "^3.0") (d #t) (k 0)) (d (n "alpm-utils") (r "^3.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty-collections") (r "^0.1.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "r2d2-alpm") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.4") (f (quote ("rayon"))) (d #t) (k 0)))) (h "1srqy910si5b3dvp6q8hycl6m2b4d5r1g15wir17npv8c1c5lxrz")))

(define-public crate-aura-core-0.4.0 (c (n "aura-core") (v "0.4.0") (d (list (d (n "alpm") (r "^3.0") (d #t) (k 0)) (d (n "alpm-utils") (r "^3.0") (d #t) (k 0)) (d (n "disown") (r "^1.0") (d #t) (k 0)) (d (n "from_variants") (r "^1.0") (d #t) (k 0)) (d (n "itertools") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nonempty-collections") (r "^0.1.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (k 0)) (d (n "r2d2") (r "^0.8") (d #t) (k 0)) (d (n "r2d2-alpm") (r "^0.2") (d #t) (k 0)) (d (n "rayon") (r "^1.8") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "srcinfo") (r "^1.1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde" "local-offset"))) (d #t) (k 0)) (d (n "validated") (r "^0.4") (f (quote ("rayon"))) (d #t) (k 0)))) (h "10k6pqc2amc8z89k9qaaj412bax4i2mcbzf02a9ws887czb63gz5")))

