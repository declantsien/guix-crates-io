(define-module (crates-io au di audio-bicycle) #:use-module (crates-io))

(define-public crate-audio-bicycle-0.1.0 (c (n "audio-bicycle") (v "0.1.0") (d (list (d (n "arrayvec") (r "^0.7.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.64") (d #t) (k 0)) (d (n "binrw") (r "^0.11.1") (d #t) (k 0)) (d (n "clap") (r "^4.1.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "directories") (r "^4.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.26") (d #t) (k 0)) (d (n "libpulse-binding") (r "^2.27.1") (d #t) (k 0)) (d (n "libpulse-simple-binding") (r "^2.27.1") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 0)) (d (n "tokio") (r "^1.25.0") (f (quote ("rt-multi-thread" "macros" "sync" "io-std" "io-util" "net"))) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.7") (f (quote ("compat" "io" "io-util"))) (d #t) (k 0)) (d (n "toml") (r "^0.7.2") (d #t) (k 0)))) (h "0qcwai0c2233ri1m3gd912fk8hgcbpk5difvyz6b1a1nyzb0fxi6")))

