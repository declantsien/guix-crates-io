(define-module (crates-io au di audio-processor-file) #:use-module (crates-io))

(define-public crate-audio-processor-file-1.0.0-alpha.1 (c (n "audio-processor-file") (v "1.0.0-alpha.1") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.1") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.4.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0pvgq2x693s7kqkfijypana1jpsbd6iywxk6khf8m3mvd0y25svw")))

(define-public crate-audio-processor-file-1.0.0-alpha.2 (c (n "audio-processor-file") (v "1.0.0-alpha.2") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.2") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.4.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "11p9fahzz828hw3b009hcik32j6zchabzp3qz46yzgmy9cihsykm")))

(define-public crate-audio-processor-file-1.0.0-alpha.3 (c (n "audio-processor-file") (v "1.0.0-alpha.3") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.3") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.4.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.4.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1749fg6rzp9sic82n2q2449mm03bfda1b5v6dgbaz666bx3rrqhb")))

(define-public crate-audio-processor-file-1.0.0-alpha.4 (c (n "audio-processor-file") (v "1.0.0-alpha.4") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.4") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.1") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.0") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "03qd92q9ga1adjqrd4zsgv2cxq4flsn368xk7sfkmsr87q6j52gw")))

(define-public crate-audio-processor-file-1.0.0-alpha.5 (c (n "audio-processor-file") (v "1.0.0-alpha.5") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.5") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.2") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.0") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1ylmks4ga2nm6zfklpqslqnf47c1gay5zl0kvpkmklmg2qkwwij5")))

(define-public crate-audio-processor-file-1.0.0-alpha.6 (c (n "audio-processor-file") (v "1.0.0-alpha.6") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.6") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.3") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.0") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1byyg87kc21hsdkd1c8a38a9w7gvi5zy50amsn4xkg2g8znd9i5f")))

(define-public crate-audio-processor-file-1.0.0-alpha.7 (c (n "audio-processor-file") (v "1.0.0-alpha.7") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.6") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.4") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.0") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "17qsg5s77jb58lndgi5jii8h3ldh1q5zyzqj1a7qh2hlhd3j2mgn")))

(define-public crate-audio-processor-file-1.0.0-alpha.8 (c (n "audio-processor-file") (v "1.0.0-alpha.8") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.7") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.5") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.7") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.0") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "15sg53binla10lccc4nfmwv80kaw0fy6aqfqscrzaznlzckkpyxl")))

(define-public crate-audio-processor-file-1.0.0-alpha.9 (c (n "audio-processor-file") (v "1.0.0-alpha.9") (d (list (d (n "audio-garbage-collector") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.0.0-alpha.8") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.0.0-alpha.8") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.0.0-alpha.6") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.0.0-alpha.8") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.0") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.0") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0ny0fp46lq5kswlsk6y70grc62fz635mx2xfpbnzw1j365zh3ilf")))

(define-public crate-audio-processor-file-1.1.0 (c (n "audio-processor-file") (v "1.1.0") (d (list (d (n "audio-garbage-collector") (r "^1.1.0") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.1.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^1.1.0") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.1.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.1.0") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "0vwzvs1n4zswk5vaynv5ggfddl2rz07akrr41kpm1h4dbmpbkqcy")))

(define-public crate-audio-processor-file-1.2.0 (c (n "audio-processor-file") (v "1.2.0") (d (list (d (n "audio-garbage-collector") (r "^1.1.0") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.2.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^2.1.0") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.2.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.2.0") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "0scvj22qp1wg9r6sghppw9ibaww8ncli9bv7dkm9c9mj686376wx")))

(define-public crate-audio-processor-file-1.3.0 (c (n "audio-processor-file") (v "1.3.0") (d (list (d (n "audio-garbage-collector") (r "^1.1.0") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^1.3.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^2.2.0") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.3.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.3.0") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "0psf30nf1j9i3wnxwgybly2c6y6pcac26fj4nampgs4f1qgj45lw")))

(define-public crate-audio-processor-file-2.3.0 (c (n "audio-processor-file") (v "2.3.0") (d (list (d (n "audio-garbage-collector") (r "^1.1.1") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^2.3.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^3.2.0") (d #t) (k 0)) (d (n "augmented-audio-metrics") (r "^1.5.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.4.0") (d #t) (k 0)) (d (n "cpal") (r "^0.14.0") (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "1w0w8yyzfjfylrcbf8jxbwmg2x9w0b7c15amlp1hh6hbyk0fwj5v")))

(define-public crate-audio-processor-file-3.0.0 (c (n "audio-processor-file") (v "3.0.0") (d (list (d (n "audio-garbage-collector") (r "^1.2.0") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^2.4.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^4.0.0") (k 0)) (d (n "augmented-audio-metrics") (r "^1.6.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.5.0") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("oboe-shared-stdcxx"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rubato") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "1gyxzs1wqglayjxhp2q58zmazmzy86yv9s5dr7bqifvlq6s163c0") (f (quote (("default" "rubato")))) (s 2) (e (quote (("samplerate" "dep:samplerate" "dep:augmented-convert-sample-rate") ("rubato" "dep:rubato"))))))

(define-public crate-audio-processor-file-3.1.0 (c (n "audio-processor-file") (v "3.1.0") (d (list (d (n "audio-garbage-collector") (r "^1.2.0") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^2.5.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^4.1.0") (k 0)) (d (n "augmented-audio-metrics") (r "^1.7.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.6.0") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("oboe-shared-stdcxx"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rubato") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "01f4wn9jilm7x4c1xr7xbw7b56yyarjjvx3yxnmx46cgly7cgli2") (f (quote (("default" "rubato")))) (s 2) (e (quote (("samplerate" "dep:samplerate" "dep:augmented-convert-sample-rate") ("rubato" "dep:rubato"))))))

(define-public crate-audio-processor-file-3.2.0 (c (n "audio-processor-file") (v "3.2.0") (d (list (d (n "audio-garbage-collector") (r "^1.2.0") (d #t) (k 0)) (d (n "audio-processor-testing-helpers") (r "^2.6.0") (d #t) (k 2)) (d (n "audio-processor-traits") (r "^4.2.0") (k 0)) (d (n "augmented-audio-metrics") (r "^1.8.0") (d #t) (k 0)) (d (n "augmented-convert-sample-rate") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "cpal") (r "^0.15.2") (f (quote ("oboe-shared-stdcxx"))) (d #t) (k 0)) (d (n "hound") (r "^3.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rubato") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "samplerate") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "symphonia") (r "^0.5.1") (f (quote ("mp3" "wav" "flac" "isomp4" "aac"))) (d #t) (k 0)) (d (n "symphonia-bundle-mp3") (r "^0.5.1") (d #t) (k 0)) (d (n "symphonia-format-wav") (r "^0.5.1") (d #t) (k 0)) (d (n "tempdir") (r "^0.3.7") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "wisual-logger") (r "^0.1.4") (d #t) (k 2)))) (h "1i9l7p2zpmawhn73587k2dcpyrg8h6ba6g4gg53abl2nkfdh21jm") (f (quote (("default" "rubato")))) (s 2) (e (quote (("samplerate" "dep:samplerate" "dep:augmented-convert-sample-rate") ("rubato" "dep:rubato"))))))

