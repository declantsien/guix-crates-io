(define-module (crates-io au gm augmented_baseview) #:use-module (crates-io))

(define-public crate-augmented_baseview-0.1.0 (c (n "augmented_baseview") (v "0.1.0") (d (list (d (n "cocoa") (r "^0.24.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "keyboard-types") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.22.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "rtrb") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "winuser" "windef" "minwindef" "guiddef" "combaseapi" "wingdi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.18") (f (quote ("xlib" "xcursor"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xcb") (r "^0.9") (f (quote ("thread" "xlib_xcb" "dri2"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xcb-util") (r "^0.3") (f (quote ("icccm"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1brw1i21f55mc6pim6zj0230ygdy7lvcdzcch1flr09kzdy59z8x") (f (quote (("opengl" "uuid" "x11/glx") ("default"))))))

(define-public crate-augmented_baseview-0.1.1 (c (n "augmented_baseview") (v "0.1.1") (d (list (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "keyboard-types") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "rtrb") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "winuser" "windef" "minwindef" "guiddef" "combaseapi" "wingdi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.21") (f (quote ("xlib" "xcursor"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xcb") (r "^1.2") (f (quote ("xlib_xcb" "dri2"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xcb-util") (r "^0.4") (f (quote ("icccm"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1p9pivbvvq7w0jdc3lmy4phgsj8mz8f95w906h9hmx41h5342wyr") (f (quote (("opengl" "uuid" "x11/glx") ("default"))))))

(define-public crate-augmented_baseview-0.1.2 (c (n "augmented_baseview") (v "0.1.2") (d (list (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "keyboard-types") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "rtrb") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "winuser" "windef" "minwindef" "guiddef" "combaseapi" "wingdi" "errhandlingapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)) (d (n "x11") (r "^2.21") (f (quote ("xlib" "xcursor"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xcb") (r "^0.9") (f (quote ("xlib_xcb" "dri2"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "xcb-util") (r "^0.3") (f (quote ("icccm"))) (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0qf3a8j90p94rjrhx51c0gahqr0b5j74zg8hh6jzksd2874npa9b") (f (quote (("opengl" "uuid" "x11/glx") ("default"))))))

(define-public crate-augmented_baseview-0.1.3 (c (n "augmented_baseview") (v "0.1.3") (d (list (d (n "cocoa") (r "^0.24.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "core-foundation") (r "^0.9.1") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "keyboard-types") (r "^0.6.1") (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "nix") (r "^0.26") (d #t) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "objc") (r "^0.2.7") (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "raw-window-handle") (r "^0.4.3") (d #t) (k 0)) (d (n "rtrb") (r "^0.2") (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (t "cfg(target_os=\"macos\")") (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (o #t) (d #t) (t "cfg(target_os=\"windows\")") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("libloaderapi" "winuser" "windef" "minwindef" "guiddef" "combaseapi" "wingdi" "errhandlingapi"))) (d #t) (t "cfg(target_os=\"windows\")") (k 0)) (d (n "x11") (r "^2.21") (f (quote ("xlib" "xcursor"))) (d #t) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "xcb") (r "^1.3.0") (f (quote ("xlib_xcb" "dri2"))) (d #t) (t "cfg(target_os=\"linux\")") (k 0)) (d (n "xcb-util") (r "^0.3") (f (quote ("icccm"))) (d #t) (t "cfg(target_os=\"linux\")") (k 0)))) (h "1klhhvz6npxg9rs8w224aig9vjfd3yrjp0zwfd60icd6qqfnr6km") (f (quote (("opengl" "uuid" "x11/glx") ("default"))))))

