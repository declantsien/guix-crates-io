(define-module (crates-io au to autocxx-bindgen) #:use-module (crates-io))

(define-public crate-autocxx-bindgen-0.56.0 (c (n "autocxx-bindgen") (v "0.56.0") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "139ayp28k0smm62cdx5rijlizxlx7gr752j78k04fgil0ihhmcm6") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.56.1 (c (n "autocxx-bindgen") (v "0.56.1") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "1bphn75y8r7izff83gdiwyrb7722cn4hzg8ygdvb8yrwfgk1hg52") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.57.0 (c (n "autocxx-bindgen") (v "0.57.0") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "0jdx79233mgfgan6zjf3n5255grw4vccipxaksg6f4gv44rlc3az") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.57.1 (c (n "autocxx-bindgen") (v "0.57.1") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 0)) (d (n "shlex") (r "^0.1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "1l2h9a8d7jvringi919si18k94pppvjd7zxc7x3j1w66df3wjfbv") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.57.2 (c (n "autocxx-bindgen") (v "0.57.2") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "1b7zv83gfa7ziqjd6zsanzs0v9fk2vnw0xifs6gsc22fviq7kihb") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.57.3 (c (n "autocxx-bindgen") (v "0.57.3") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "0g70zk76l79fs2fyywm4q5icr9jz8fa407yndvkfbb5vr5h779f5") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.58.0 (c (n "autocxx-bindgen") (v "0.58.0") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "109aj0lgc07vdcmr1n5jr2bins6s0dscmx4v2mjngf7xn99vdrjb") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.58.1 (c (n "autocxx-bindgen") (v "0.58.1") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "1dkgddwaa24d6i6q167kgz33c3nia5ycsrlq796037n4qysap9qr") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.58.2 (c (n "autocxx-bindgen") (v "0.58.2") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "0hp1s7q0c1cn7bk7bhjwq34hv4inr8nnaaq3adsmxhfhi8iqsw1c") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.58.3 (c (n "autocxx-bindgen") (v "0.58.3") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "1pd7m02x9l5zqszrnz463xw5zhdfiaqi62icx108x43rl2jg8296") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.58.4 (c (n "autocxx-bindgen") (v "0.58.4") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "09mlqsfr3xb96ygs0x1c968dkb07mmyknczj1nkppn1bmb7056qv") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.58.5 (c (n "autocxx-bindgen") (v "0.58.5") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.4") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^3.0") (o #t) (k 0)))) (h "0khs18wzas664zn5xq6ac561q2d3dh8jxhi6clyyvinb9y4jijrl") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.1 (c (n "autocxx-bindgen") (v "0.59.1") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.5") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "1xs6wxy5r8p7vvb578gc0bqdyl9zr0vms2956iganl41bwi6l2h9") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.2 (c (n "autocxx-bindgen") (v "0.59.2") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.5") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0x20gijcc1x9fipszb40isbljid4aj328m12mkzmrkpj8gkz98qh") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.3 (c (n "autocxx-bindgen") (v "0.59.3") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.5") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "1v6lypfak5nyd45m2xvjjlz0z6ixyqlzppxzk24cvn3447wvyhxc") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.4 (c (n "autocxx-bindgen") (v "0.59.4") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "11i0izg652zhr9vsl2hnbfn54mdw7yz1fpar74avrdf3vq0c4zdv") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.5 (c (n "autocxx-bindgen") (v "0.59.5") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0jvp4g58v0cx69bwsv6px9a6b3h7rkx08y7l8gf725q00xyyaw5i") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.6 (c (n "autocxx-bindgen") (v "0.59.6") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "013z8vxn34zbzzx5wyb89mfswf1wbc2qdsfgb3cx33d0nya6rxik") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.7 (c (n "autocxx-bindgen") (v "0.59.7") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "00jv6198wfxjq9vziqx3rlbn8cacg8z9zb9kwg11812vzsnzql2g") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.8 (c (n "autocxx-bindgen") (v "0.59.8") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0dmd7p27iip7dglz0hriszf3w7bii3jsfxjhba89r58r3vmw8xb4") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.9 (c (n "autocxx-bindgen") (v "0.59.9") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "01pj5pbxg9kjbvz793zwz2q8ynzn779hq6wmksz879mac0cg2mvp") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.10 (c (n "autocxx-bindgen") (v "0.59.10") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "1fsi67ckq502n3pvgvrcmsxk7vskis68j534ib5w7h1p1c09svkc") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.11 (c (n "autocxx-bindgen") (v "0.59.11") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "1iwlzai2m6bplz9w4kkr4xq6i6kbxy3mlw9qx3iidch3abx5l78w") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.12 (c (n "autocxx-bindgen") (v "0.59.12") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0d9anc20iwr5mki9hg7jmx2i56hm9xixncr9l9kfwqfy3qx9ijvc") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.13 (c (n "autocxx-bindgen") (v "0.59.13") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "04151fly5smg27zi4ryxvp7f04zncda0x6ggfa00c8cynwg3qq3f") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.14 (c (n "autocxx-bindgen") (v "0.59.14") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "05klcpwcdl34bzxgsscqf4fncxlbv8idcr2ld2g4vzqiynkzvd7l") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.15 (c (n "autocxx-bindgen") (v "0.59.15") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0xb1ilh19nsmygzs2pnyaszl0j08af42kix7r7a2pr48ghx9wj4c") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.16 (c (n "autocxx-bindgen") (v "0.59.16") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0yay0n3cm49896v7p94p3l1670qhvd7mlmgq4a1ik3zq9ghj6ms3") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.59.17 (c (n "autocxx-bindgen") (v "0.59.17") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^2") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0hi05vdaddz1rrvlrvwa6v291xkp3civsqdzn4imsf4dsdns5agr") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_libclang_4") ("testing_only_libclang_3_9") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.60.1 (c (n "autocxx-bindgen") (v "0.60.1") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "079wzwx2isgs9szy68asph3lnak5hi1jzpjk6bx96cn82p2c1jhj") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.60.3 (c (n "autocxx-bindgen") (v "0.60.3") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "clap") (r "^3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "diff") (r "^0.1") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.0") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "which") (r "^4.2.5") (o #t) (k 0)))) (h "0ygqra5jff3nv51wypxi16a9rprxis9qkvsfw91sr34h8kxgw60v") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "env_logger" "log") ("default" "logging" "clap" "runtime" "which-rustfmt"))))))

(define-public crate-autocxx-bindgen-0.62.0 (c (n "autocxx-bindgen") (v "0.62.0") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1.0.99") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "0y5lhyr48irmavviaw4zwzjvzj7j7k8g410f5isyqa77nwpn4y46") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "log") ("default" "logging" "runtime" "which-rustfmt")))) (r "1.57.0")))

(define-public crate-autocxx-bindgen-0.62.1 (c (n "autocxx-bindgen") (v "0.62.1") (d (list (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^1.0.99") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "080asixrm72dm4agz5fhd786q1592dmv0swhwvrh4b3csxqidwci") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_extra_assertions") ("testing_only_docs") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "log") ("default" "logging" "runtime" "which-rustfmt")))) (r "1.57.0")))

(define-public crate-autocxx-bindgen-0.65.1 (c (n "autocxx-bindgen") (v "0.65.1") (d (list (d (n "annotate-snippets") (r "^0.9.1") (f (quote ("color"))) (o #t) (d #t) (k 0)) (d (n "bitflags") (r "^1.0.3") (d #t) (k 0)) (d (n "cexpr") (r "^0.6") (d #t) (k 0)) (d (n "clang-sys") (r "^1") (f (quote ("clang_6_0"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "lazycell") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "peeking_take_while") (r "^0.1.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.2.0") (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (k 0)) (d (n "quote") (r "^1") (k 0)) (d (n "regex") (r "^1.5") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "shlex") (r "^1") (d #t) (k 0)) (d (n "syn") (r "^2.0") (f (quote ("full" "extra-traits" "visit-mut"))) (d #t) (k 0)) (d (n "which") (r "^4.2.1") (o #t) (k 0)))) (h "1aip6apan9ilmw52bm2lx8nmy6fiv1rpfdjp47hq59c3vnwbg7vc") (f (quote (("which-rustfmt" "which") ("testing_only_libclang_9") ("testing_only_libclang_5") ("testing_only_extra_assertions") ("static" "clang-sys/static") ("runtime" "clang-sys/runtime") ("logging" "log") ("experimental" "annotate-snippets") ("default" "logging" "runtime" "which-rustfmt") ("__cli")))) (r "1.60.0")))

