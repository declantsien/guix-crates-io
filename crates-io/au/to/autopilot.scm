(define-module (crates-io au to autopilot) #:use-module (crates-io))

(define-public crate-autopilot-0.1.0 (c (n "autopilot") (v "0.1.0") (d (list (d (n "cocoa") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "19rqksm2lwfh6wmz1hlgywaqf1ni5arrzb921iflly15n356f5l4")))

(define-public crate-autopilot-0.1.1 (c (n "autopilot") (v "0.1.1") (d (list (d (n "cocoa") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.5.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.13.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0crxhyqfsb2kgn228z4q1aa3kv3dgaiqxh9kawl2s53h2xbhsgv0")))

(define-public crate-autopilot-0.1.2 (c (n "autopilot") (v "0.1.2") (d (list (d (n "cocoa") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1a5r0apnk1ficpjq9qajhbx1llkkk0pm5pffgvdjm553km3mbbc2")))

(define-public crate-autopilot-0.1.3 (c (n "autopilot") (v "0.1.3") (d (list (d (n "cocoa") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1avz3mqm63b7vm4dk8shk7f6fjnaykqq3d3hv31xl9k5lfrqsyhd")))

(define-public crate-autopilot-0.1.4 (c (n "autopilot") (v "0.1.4") (d (list (d (n "cocoa") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0zkh4gf8347iby4rdsmxawfb3pch2bn3skhw824pa7gn192wwc9b")))

(define-public crate-autopilot-0.1.5 (c (n "autopilot") (v "0.1.5") (d (list (d (n "cocoa") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1hd3d6j5f4xhf5vrqii8ajvimfywjhrd3c7jbg6nhdvzg0bpqc91")))

(define-public crate-autopilot-0.1.6 (c (n "autopilot") (v "0.1.6") (d (list (d (n "cocoa") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.14.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.17.5") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1cnvksr536wlngk0a3h6iw1xfv4gf7m0g0r6yy190ym7dmda2rmi")))

(define-public crate-autopilot-0.1.7 (c (n "autopilot") (v "0.1.7") (d (list (d (n "cocoa") (r "^0.18.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0kmpl8gkaigsg2vjw9il0nkmrgr53j753dv44rhwrypyfzy1qdig")))

(define-public crate-autopilot-0.1.8 (c (n "autopilot") (v "0.1.8") (d (list (d (n "cocoa") (r "^0.18.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.19") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1h64nfq6jiwng6sha3ws0g8gppfsadnhjx47vnvbq24aij1b84x5")))

(define-public crate-autopilot-0.1.9 (c (n "autopilot") (v "0.1.9") (d (list (d (n "cocoa") (r "^0.18.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.15.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.20") (d #t) (k 0)) (d (n "libc") (r "^0.2.40") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.11") (d #t) (k 1)) (d (n "quickcheck") (r "^0.6.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "scopeguard") (r "^0.3.3") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "09qqmbf5pyrqmfpx20nwcnl3jmj4s95p7sddzvww0qnsgkcw3f3s")))

(define-public crate-autopilot-0.2.0 (c (n "autopilot") (v "0.2.0") (d (list (d (n "cocoa") (r "^0.18.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.2") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.21.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.14") (d #t) (k 1)) (d (n "quickcheck") (r "^0.8.2") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "02495a1ngwr2clsp3rmcgmqwkhsr0xxr9sjq8nf2rdi21vb8bir4")))

(define-public crate-autopilot-0.2.1 (c (n "autopilot") (v "0.2.1") (d (list (d (n "cocoa") (r "^0.18.1") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.2") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.21.1") (d #t) (k 0)) (d (n "libc") (r "^0.2.54") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.14") (d #t) (k 1)) (d (n "quickcheck") (r "^0.8.2") (d #t) (k 2)) (d (n "rand") (r "^0.6.5") (d #t) (k 0)) (d (n "scopeguard") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0wx1f6frf5y3a2l3b4ha165hdzlpifjj4ci8f9cln21yny2cwq2y")))

(define-public crate-autopilot-0.2.2 (c (n "autopilot") (v "0.2.2") (d (list (d (n "cocoa") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.2") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.22.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.16") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "scopeguard") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1yrvf0ky48l523p7zrpk6d2hvh7vkrs4pgrrzpw5q2azh8jpg4zy")))

(define-public crate-autopilot-0.3.0 (c (n "autopilot") (v "0.3.0") (d (list (d (n "cocoa") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.2") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.22.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.16") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "scopeguard") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "1yijgn793lynv7ajbdnsxlq4pczbgfp92h5ki4sn7m6r5xbrl2hh")))

(define-public crate-autopilot-0.3.1 (c (n "autopilot") (v "0.3.1") (d (list (d (n "cocoa") (r "^0.19.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.6.4") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.17.2") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.22.2") (d #t) (k 0)) (d (n "libc") (r "^0.2.62") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.16") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.0") (d #t) (k 2)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "scopeguard") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "081r5y328kvinhl13ak4qihj71zp0gvvrw1nrczvzykbrnyc714g")))

(define-public crate-autopilot-0.4.0 (c (n "autopilot") (v "0.4.0") (d (list (d (n "cocoa") (r "^0.20.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-foundation") (r "^0.7.0") (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "core-graphics") (r "^0.19.0") (f (quote ("highsierra"))) (d #t) (t "cfg(target_os = \"macos\")") (k 0)) (d (n "image") (r "^0.22.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.66") (d #t) (k 0)) (d (n "pkg-config") (r "^0.3.17") (d #t) (k 1)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "scopeguard") (r "^1.0.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (f (quote ("libloaderapi" "minwindef" "winbase" "winuser"))) (d #t) (t "cfg(windows)") (k 0)) (d (n "x11") (r "^2.18.1") (d #t) (t "cfg(target_os = \"linux\")") (k 0)))) (h "0n4mk2y69p0n0a8b64n68qhbwg0sckkfgk4v84ahplqcklsx0brs")))

