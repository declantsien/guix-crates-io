(define-module (crates-io au to automotive) #:use-module (crates-io))

(define-public crate-automotive-0.1.0 (c (n "automotive") (v "0.1.0") (h "1pch9h8gvkmmkyk2sdq6888z5k2a54xb90qvfbnc0fj00x3anhgy")))

(define-public crate-automotive-0.1.1 (c (n "automotive") (v "0.1.1") (h "16j95vai520jihsc96ns8qbrgzljxxl3nlwp0xwn5yifzp8541j0")))

(define-public crate-automotive-0.1.2 (c (n "automotive") (v "0.1.2") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "socketcan") (r "^3.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "12j85xwffwqbyy6i3drf5k2zij2ilnb6viqvy6lglchb7an40gzb")))

(define-public crate-automotive-0.1.3 (c (n "automotive") (v "0.1.3") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "socketcan") (r "^3.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "05w7vnn4sa4qjkmd8504kr1wb4237m8ql779hp8g2xiqwzg7ynki")))

(define-public crate-automotive-0.1.4 (c (n "automotive") (v "0.1.4") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-core") (r "^0.3.30") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.30") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "socketcan") (r "^3.3.0") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)))) (h "1mkg669p8sql9x6c29bwqrq94v9pdi6vj8ami0bcjp8qf3rqhx1k")))

(define-public crate-automotive-0.2.0 (c (n "automotive") (v "0.2.0") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.154") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "socket2") (r "^0.5.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1flgydq6fqfgdzz6cr5cj9ldp7gbpl88x7k0dfghzwf3g9nlqmhi") (f (quote (("test_vcan") ("test_socketcan") ("test_panda") ("all")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-automotive-0.2.1 (c (n "automotive") (v "0.2.1") (d (list (d (n "async-stream") (r "^0.3.5") (d #t) (k 0)) (d (n "bstr") (r "^1.9.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "libc") (r "^0.2.154") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "rusb") (r "^0.9") (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^3.0.0") (d #t) (k 2)) (d (n "socket2") (r "^0.5.7") (d #t) (t "cfg(target_os = \"linux\")") (k 0)) (d (n "strum") (r "^0.26") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1.14") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)))) (h "1b5xrm2jv4rwl8cr9jkdilvh70l4chil4b216fjhr6yqdlil271h") (f (quote (("test_vcan") ("test_socketcan") ("test_panda") ("all")))) (s 2) (e (quote (("serde" "dep:serde"))))))

