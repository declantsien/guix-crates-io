(define-module (crates-io au to autocorrect) #:use-module (crates-io))

(define-public crate-autocorrect-0.1.0 (c (n "autocorrect") (v "0.1.0") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1mpzihg54q38qn21adzqbvdyhv0rayr2z608k5afnfn430115yf2")))

(define-public crate-autocorrect-0.1.1 (c (n "autocorrect") (v "0.1.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1ymrry34gmxx1p07rysyjfjnbjfi5k7krhxncy1478r21ccjlbrl")))

(define-public crate-autocorrect-0.2.0 (c (n "autocorrect") (v "0.2.0") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1c2p9565w74yzw1bgs94n4bf7vgmwpqsa9mypdhbg0hkyzgginly")))

(define-public crate-autocorrect-0.2.1 (c (n "autocorrect") (v "0.2.1") (d (list (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1yk80mnjagjl7krf1p5mwm9fqijfhs4gv98h3kdl0lw47bbfwigp")))

(define-public crate-autocorrect-0.3.0 (c (n "autocorrect") (v "0.3.0") (d (list (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "15l04dkvmixvcrrs7gfk4rj42dffj2migybdl4vpwjlzszsr1zcw")))

(define-public crate-autocorrect-0.3.1 (c (n "autocorrect") (v "0.3.1") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "0vrr7v5zcakb0dwq5gkwg4m4iwyhqgw904nhinxdvn32ddkrb9gz") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.4.0 (c (n "autocorrect") (v "0.4.0") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "0vrvs30099i3rr0fri00bv484p8il4wh8il6xpyk9n0mwxg39qxd") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.4.1 (c (n "autocorrect") (v "0.4.1") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1d8hpakxs16ivv0s9c5bbzx0nc8hc9hwk75bg7vbvbcpq40j99qd") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.4.2 (c (n "autocorrect") (v "0.4.2") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "1k50m1rafcy28a4v2p3pyzy7hi3x99wkzck0h14dzqmxxgkp1flk") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.4.3 (c (n "autocorrect") (v "0.4.3") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "0rj0pc8i480g4p27gfnl042alr5c4pxwx6wf7585hzskl0hrmwg7") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.8.1 (c (n "autocorrect") (v "0.8.1") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "1zlc50j9dzwh39kkri6qw5840zhf6dg79fgxqrqxk532cc285khk") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.8.0 (c (n "autocorrect") (v "0.8.0") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "1qniqvq4lpyf4z1d6sa5yv70m4j3j4rfn8cs5fwyswmia6rmdizp") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-0.7.0 (c (n "autocorrect") (v "0.7.0") (d (list (d (n "clap") (r "^2.33") (o #t) (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "html5ever") (r "^0.25.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "markup5ever") (r "^0.10.0") (d #t) (k 0)) (d (n "markup5ever_rcdom") (r "^0.1.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)))) (h "0kgpy2gv5mc6p9ydxkvdjg0qn7ab4xbv3c51ydcbyavby49w1va2") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-1.0.0 (c (n "autocorrect") (v "1.0.0") (d (list (d (n "assert-json-diff") (r "^2.0.1") (d #t) (k 0)) (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "glob") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "0gvvis3l3hh6grmkwdq2pk28w4k4fr0ys57wkx45gj1bwnvcbq60") (f (quote (("bin" "clap" "glob"))))))

(define-public crate-autocorrect-1.1.5 (c (n "autocorrect") (v "1.1.5") (d (list (d (n "clap") (r "^2.33.0") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (o #t) (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.5") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)) (d (n "walkdir") (r "^2.3.2") (o #t) (d #t) (k 0)))) (h "04z9dxxcx8i09gsm4qmd0yb2hyz1lc1zbxq9lnm1fg09dx5xjcvl") (f (quote (("bin" "clap" "walkdir" "ignore" "colored"))))))

(define-public crate-autocorrect-1.3.4 (c (n "autocorrect") (v "1.3.4") (d (list (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "1a7c0avgl5m011sm8200ba849b7apai1p1k5cz1wr39scjj7y3mf")))

(define-public crate-autocorrect-1.3.5 (c (n "autocorrect") (v "1.3.5") (d (list (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.59") (d #t) (k 0)))) (h "1n7rc5bwakf2q88pmrnwgk9y9ap0qd36asnpzsnkrnw4knana0rv") (y #t)))

(define-public crate-autocorrect-1.4.0 (c (n "autocorrect") (v "1.4.0") (d (list (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "06jgc20v1bvjyb380d089fc3qzfdib3f3mhpmhdz9sc2a3icv51a")))

(define-public crate-autocorrect-1.4.1 (c (n "autocorrect") (v "1.4.1") (d (list (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "1x8irqrcchjaipjxz9mg47dl22y7lm9hy5ikdfh5wan6mchrw749")))

(define-public crate-autocorrect-1.4.2 (c (n "autocorrect") (v "1.4.2") (d (list (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0pd49ifk179790sjf7zdq18imqlwl1kascs33q20bjnamsnspi8v")))

(define-public crate-autocorrect-1.4.4 (c (n "autocorrect") (v "1.4.4") (d (list (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0k3jp9vlzaayx56v8vzm63a809wqfi5fmb5xvkackbc8j85hrs80")))

(define-public crate-autocorrect-1.5.0 (c (n "autocorrect") (v "1.5.0") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "1qv0krva8zsyfjl4qdlqia5hly2svk3z7anjl53x2wkrb35a1fjc") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.1 (c (n "autocorrect") (v "1.5.1") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "154w4jqy8bz1sc8hwmkmc1apcwzk33aicmavzijqbgx6q85yml4v") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.2 (c (n "autocorrect") (v "1.5.2") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "01zspznnf44hl3b651p7g15xlhvlrzfpykdiky6cb5jfl0dhrj76") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.6 (c (n "autocorrect") (v "1.5.6") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0c0m68vl0xipja9rzk5qxnfa9xyp4yirs2zg90ra6h2m6wis20rh") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.10 (c (n "autocorrect") (v "1.5.10") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "063md2m382r1s7z6xd81wqgwwkh643w7919a7xr01537wcr7afy7") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.11 (c (n "autocorrect") (v "1.5.11") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "1g274hj7q3mmvbzrk6h1ylx6wc8q0hcn93gx32rgxlrihfik2sss") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.12 (c (n "autocorrect") (v "1.5.12") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "1lmqwpks17mj7aqac3w8mvi766hicc3qx46jy3rg9sz0cdz1h82a") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.5.13 (c (n "autocorrect") (v "1.5.13") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0gdi6vrblz7njvr8p7lljx56nhcnknnr0lwwdfxq9mf9v0bq61is") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.6.0 (c (n "autocorrect") (v "1.6.0") (d (list (d (n "autocorrect-derive") (r "^0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.75") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0fq9pqsqc566ydmp0ybknmiwl5ahwr2hvcpwkp3a537d74dgq72l") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.6.1 (c (n "autocorrect") (v "1.6.1") (d (list (d (n "autocorrect-derive") (r ">=0.1.0") (d #t) (k 0)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)))) (h "18m17s9zlblaz0q43hpk1xi21di3dfczh19ihv40vdaxx17bi26q") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.7.1 (c (n "autocorrect") (v "1.7.1") (d (list (d (n "autocorrect-derive") (r ">=0.1.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_any") (r "^0.5.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)))) (h "1hl11hm41gk2nr9nvbdvcs0a3660ma7r69ls1ihqhdadd4x98wfs") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.7.2 (c (n "autocorrect") (v "1.7.2") (d (list (d (n "autocorrect-derive") (r ">=0.1.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.1.3") (d #t) (k 0)) (d (n "pest_derive") (r "^2.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1.0.127") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_any") (r "^0.5.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)))) (h "1w6jx4rfk0schv8imvdjb72bfi7l6phjaqkmnk9891jbnvmh5h7f") (f (quote (("bench"))))))

(define-public crate-autocorrect-1.10.7 (c (n "autocorrect") (v "1.10.7") (d (list (d (n "autocorrect-derive") (r ">=0.1.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "difference") (r "^2.0") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.3.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1kcs8kq0zpm6sny6pkv11p2zidv1qs7z3vp5q19knw7afxjf0w5x") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.1.1 (c (n "autocorrect") (v "2.1.1") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "13fiq8ln2ljajhghr0yi1h4c1z7wlmmkdrhwwkl6wpbjdj4wh26m") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.2.0 (c (n "autocorrect") (v "2.2.0") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0y2idmjrhpv9nc4zwc1qh9vh5myj81jzifblxqvxw6d66imi9w67") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.3.0 (c (n "autocorrect") (v "2.3.0") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "09vji98rs13ggwr4xsvhlgf5zp0c6lpwx08mczphn1g268vpfhin") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.3.1 (c (n "autocorrect") (v "2.3.1") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0cd5wmdmnncydd333zd4y3ixiiacymxav92yci6lzvaiqvybfw2i") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.3.2 (c (n "autocorrect") (v "2.3.2") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0s75ryqlhw13gcv7qg0n4f6psi6697nl9jvifs35ryqwqq2gsknk") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.4.0 (c (n "autocorrect") (v "2.4.0") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "02ssaqvl5fy6nnqqshsjxnb8hvaqgzdlv9m4a466a0zfjwhl3bzl") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.4.1 (c (n "autocorrect") (v "2.4.1") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "155cq4d76izdf0rfgd0pdrz691wdw9g5r0cl4x5wbb3aj0ghad6q") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.0 (c (n "autocorrect") (v "2.5.0") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "01wv5zzri625fd1f5l7hzin7xnjldi0yvl1986jr610s0kmdx40k") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.1 (c (n "autocorrect") (v "2.5.1") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "179wrw541k3hw1m4bhkdfl36qwfdl1276z260pv5dfjcmcvd4fzd") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.2 (c (n "autocorrect") (v "2.5.2") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "07kjhvldn7w9s067lnm2vzqry5qlg1lxcrzzhqm3sa9mzr4mrpzr") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.3 (c (n "autocorrect") (v "2.5.3") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1vvdf4gbrwyvbzbf43lppif2af07kmrwl3cc3rp0v5jrajp115ba") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.4 (c (n "autocorrect") (v "2.5.4") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1z70899syzgw5kakkcz1sipcgx8bhfx3c358imznkfw51pmphyi7") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.5 (c (n "autocorrect") (v "2.5.5") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "bencher") (r "^0.1.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.4.0") (d #t) (k 0)) (d (n "pest_derive") (r "^2.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0czx5rb7vlpv2q16lq311mfw57wf7s3vvwv1gzrvic31b8dcvf7c") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.6 (c (n "autocorrect") (v "2.5.6") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.5.2") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0kygkq10i5n49dxvbhbqg7pqs1dpxp0dx9njb3w250hhdlir546l") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.7 (c (n "autocorrect") (v "2.5.7") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.5.2") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1c461jh35r99vf8gsai2i63b7s2pmp6afwpghg29skbp1yqbi8zd") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.5.8 (c (n "autocorrect") (v "2.5.8") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.5.2") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0q3p97s1lg9rphrn5xrmbysp2w6nq5m64rsz88mc5h5nqyc50dqs") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.6.0 (c (n "autocorrect") (v "2.6.0") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.5.2") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "14nbfb443ba04nlnbp42ncxmdmfzaq3n1h813r7phmysid736a0w") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.6.1 (c (n "autocorrect") (v "2.6.1") (d (list (d (n "autocorrect-derive") (r ">=0.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.5.2") (d #t) (k 0)) (d (n "pest_derive") (r "^2.5.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0pif6yghmqawix1pifikmk0dzzpsj90ads38x7krkcdbdrn6drhb") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.8.0 (c (n "autocorrect") (v "2.8.0") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0lcbfz5hb8g1vyj0gjqdbkjqnhcn5kbn42yzrmd35hkzn7797fgn") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.8.3 (c (n "autocorrect") (v "2.8.3") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1dlximn2lydiixva32m986jymqyh3mq3h1cw9h9d1irs08p0966w") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.8.4 (c (n "autocorrect") (v "2.8.4") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1pkckxawcgm8qzrx12v4w76ai5y1j943sczqfgps92lh1bigjivp") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.8.5 (c (n "autocorrect") (v "2.8.5") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "06mdswa21wmpiqfhd4yam2ixls76ama8wkai7r9qmy5b8g127apj") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.9.0 (c (n "autocorrect") (v "2.9.0") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0jdx5r4fa4dqhm8g1a1mg3gny4wmbswcndjlxcp7fzcrr7dyf9ml") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.9.1 (c (n "autocorrect") (v "2.9.1") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0xxn8g4j8i491i3yrgswcm5vxzvz9r1vgxmh3lrw2ik8waicsyk1") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.9.3 (c (n "autocorrect") (v "2.9.3") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "15zsnhm145ml0c3q87npgd3jn0i23rk3nzwzf08rrvps22ws4sh2") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.9.4 (c (n "autocorrect") (v "2.9.4") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "0xkwq4p2my4s89nhdjyrb8zqh0ak8mjj0jgc50bzysvzh0vzi8zb") (f (quote (("bench"))))))

(define-public crate-autocorrect-2.10.0 (c (n "autocorrect") (v "2.10.0") (d (list (d (n "autocorrect-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "diff") (r "^0.1.13") (d #t) (k 0)) (d (n "ignore") (r "^0.4") (d #t) (k 0)) (d (n "indoc") (r "^1.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3") (d #t) (k 0)) (d (n "pest") (r "^2.6.1") (d #t) (k 0)) (d (n "pest_derive") (r "^2.6.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.9") (d #t) (k 0)))) (h "1caf04517i4i5hjgxrak4xhr2d0ypncyklg2zmdq4hn5rs6khwxf") (f (quote (("bench"))))))

