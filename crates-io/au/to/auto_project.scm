(define-module (crates-io au to auto_project) #:use-module (crates-io))

(define-public crate-auto_project-0.1.0 (c (n "auto_project") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "console") (r "^0.15") (d #t) (k 0)) (d (n "directories") (r "^5") (d #t) (k 0)) (d (n "human-panic") (r "^1") (d #t) (k 0)) (d (n "ico") (r "^0.3.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 0)) (d (n "resvg") (r "^0.36") (d #t) (k 0)) (d (n "rust-embed") (r "^8") (f (quote ("interpolate-folder-path"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tiny-skia") (r "^0.11") (d #t) (k 0)) (d (n "toml") (r "^0.8.0") (d #t) (k 0)) (d (n "usvg") (r "^0.36.0") (d #t) (k 0)) (d (n "which") (r "^5") (d #t) (k 0)) (d (n "windows") (r "^0.52") (f (quote ("Win32_Foundation" "Win32_System_SystemInformation" "Win32_System_Com" "Win32_System_Com_StructuredStorage" "Win32_System_Threading" "Win32_System_LibraryLoader" "Win32_Storage_FileSystem" "Win32_Storage_EnhancedStorage" "Win32_System_Pipes" "Win32_System_Registry" "Win32_Security" "Win32_Networking_WinSock" "Win32_Graphics_Dwm" "Win32_Graphics_Gdi" "Win32_UI_HiDpi" "Win32_UI_Controls" "Win32_UI_Shell" "Win32_UI_Shell_PropertiesSystem" "Win32_UI_WindowsAndMessaging" "Win32_UI_Controls_Dialogs" "Win32_Networking_WinInet" "Foundation" "Foundation_Collections" "Data_Xml_Dom" "UI_Notifications" "Win32_System_Variant" "UI_ViewManagement"))) (d #t) (t "cfg(target_os=\"windows\")") (k 0)))) (h "15qs7hzi7lia233vxzj3r4fwsygccid7mvd3j3ywk98lz5nm5mdl")))

