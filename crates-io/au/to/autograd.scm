(define-module (crates-io au to autograd) #:use-module (crates-io))

(define-public crate-autograd-0.1.0 (c (n "autograd") (v "0.1.0") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)))) (h "11w7zk5lrzbzlyvdxglxk63c34dwv29lpd7a3jnmlblcm1z5kwsf")))

(define-public crate-autograd-0.4.0 (c (n "autograd") (v "0.4.0") (d (list (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)))) (h "15c2n16xfsm63knfh68zr69ikyqfzaw3xvnykqf8w7lfizps8d87")))

(define-public crate-autograd-0.4.2 (c (n "autograd") (v "0.4.2") (d (list (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)))) (h "1v3pzabjvrpjfdmjghgzfm2753s0lvvqvagd5jgzc2gzf9f7f3r8")))

(define-public crate-autograd-0.4.5 (c (n "autograd") (v "0.4.5") (d (list (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "1gn5696wi7par0m55vcqkz49gdxrqqd9xzrsjj7w7aq8gmapsn46")))

(define-public crate-autograd-0.4.6 (c (n "autograd") (v "0.4.6") (d (list (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "1qmb623j2ddwfwzlz99ryaj9rprvj06cg4852d1xy48mmfdip43l")))

(define-public crate-autograd-0.4.7 (c (n "autograd") (v "0.4.7") (d (list (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "1sfs3hw3ch95lc0mxh264c9lvknrdi4kvp1vzh7mhnpmn5kzd9ag")))

(define-public crate-autograd-0.5.0 (c (n "autograd") (v "0.5.0") (d (list (d (n "fnv") (r "^1.0.5") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "0nzdqdj8xwr2sfrad43ckv0agdca4v9gdsdq25xpd5i8dajrxcgy")))

(define-public crate-autograd-0.6.0 (c (n "autograd") (v "0.6.0") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "1004g31giay6kdxylfzkw4kc9727xrp1bdh05wyf7g2fz4q87a0m")))

(define-public crate-autograd-0.6.1 (c (n "autograd") (v "0.6.1") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "09n97kqpd2zyqaqkbzraa1bcp2vkz5fcgmq2mgyczal2bldja8zw")))

(define-public crate-autograd-0.6.2 (c (n "autograd") (v "0.6.2") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "1zldp2znnzlywlgn8pzg61cy77n76fnx8kzm5665vicmhm7s0vcn")))

(define-public crate-autograd-0.6.3 (c (n "autograd") (v "0.6.3") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "18nhzr12wgyw3q8zz1vwminc4x73cdxh2bx4pk0344h0v110kc0h")))

(define-public crate-autograd-0.6.5 (c (n "autograd") (v "0.6.5") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "08zflhivvma5rsy9ja7lxs7f7ncsn4dpfvz82vq2jcjcwaf8g6h5")))

(define-public crate-autograd-0.6.6 (c (n "autograd") (v "0.6.6") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "0vli3vqb8d6d1n4mpx2ffm363k9sv3fipsciq7agw5jkrmh2dlfc")))

(define-public crate-autograd-0.6.7 (c (n "autograd") (v "0.6.7") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "04487lji45lyvzai1b1zvyzag4fa60shk2a0771rwjr89h6hhfgj")))

(define-public crate-autograd-0.7.0 (c (n "autograd") (v "0.7.0") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^0.8.2") (d #t) (k 0)))) (h "1lip8vkv7n881awcqg6yipdllk4h08msadrz2p6k0ismpm6gqdnk")))

(define-public crate-autograd-0.8.0 (c (n "autograd") (v "0.8.0") (d (list (d (n "blas-src") (r "^0.2.0") (f (quote ("openblas"))) (d #t) (k 0)) (d (n "cblas-sys") (r "^0.1.4") (d #t) (k 0)) (d (n "cc") (r "^1.0") (d #t) (k 1)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.1.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "openblas-src") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0s5j4fdyial67l106bj7ff174kj4ikxxsxai7zbki3zbqdmhjdwd")))

(define-public crate-autograd-0.9.0 (c (n "autograd") (v "0.9.0") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.1.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0xpmw11x6f8f5n4bgcqc0qq8zr6m17ikja62rav62dnjkr4y7lzj") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.1 (c (n "autograd") (v "0.9.1") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.1.14") (d #t) (k 0)) (d (n "ndarray") (r "^0.10.11") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0jwx1i3vk9hn61q1v5qs3hgsw4j0yhcf2m5hlg13yz1rcf0xpzk9") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.2 (c (n "autograd") (v "0.9.2") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0na7x9fxfdym5c5izb70jzyags745166wxcq064vld6yh139kw3c") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.3 (c (n "autograd") (v "0.9.3") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0p06f06a7bk9lyqvw4wirbaawhi27yprzra5zydv4prb1jh0as6a") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.4 (c (n "autograd") (v "0.9.4") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0hj26vschm7csk502dlssabqqbd6wmabnbbkc9s5jfwk46iy2cnh") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.5 (c (n "autograd") (v "0.9.5") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "19fyhsmiz62ip9l7ylphrcgslr149qx46dkbvvz4rj6wxy9imi2m") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.6 (c (n "autograd") (v "0.9.6") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0v6nd8q21n88m6z2ndipb8m89zla43znpbd86qg8bsmj8iv4mrj5") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.7 (c (n "autograd") (v "0.9.7") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "1lwyyggwk6jm9znscaawqs7z6m9ckygqmzq7xfn9q778q5vmx388") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-0.9.8 (c (n "autograd") (v "0.9.8") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3.15") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)))) (h "0c9fvq0shcidhbldg92nj9j2cxagnakg7y2f8qh3qka1j25kkkwd") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-1.0.0 (c (n "autograd") (v "1.0.0") (d (list (d (n "crossbeam") (r "^0.7.2") (d #t) (k 0)) (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)))) (h "0g5jpzl779v03pzc1y87ajf7ymabsi34w725fxxrdxv7lsd02dkj") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-1.0.1 (c (n "autograd") (v "1.0.1") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)))) (h "1qd8zxy4ws1bar5lv34v5717rxsa1q7v81a0c82asmpk2kj8sxqf") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-1.0.2 (c (n "autograd") (v "1.0.2") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)))) (h "1iq3z6vw25g8zfxp4nb94qlwkm4qdvdjfnsnaiggkb1any6biys8") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-1.0.3 (c (n "autograd") (v "1.0.3") (d (list (d (n "glob") (r "^0.2") (d #t) (k 0)) (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.7.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.2.2") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)))) (h "1vjv1b2qmv80c90j6xvzynr7rjvdkfccyngpln21sb3v1wab0ydv") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-1.1.0 (c (n "autograd") (v "1.1.0") (d (list (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)))) (h "052y06xql9sdf37gdyjzxbaa5mwby1j1gfgbklqqypjb1is1vfz6") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-1.1.1 (c (n "autograd") (v "1.1.1") (d (list (d (n "intel-mkl-src") (r "^0.2.5") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.12.1") (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)))) (h "0hxxxjlz4sqyvdpf694jfjkfdk0amqg3wz1mgnhviy5ajwshcr2z") (f (quote (("mkl" "intel-mkl-src"))))))

(define-public crate-autograd-2.0.0-rc0 (c (n "autograd") (v "2.0.0-rc0") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (k 0)) (d (n "cblas-sys") (r "^0.1.4") (o #t) (k 0)) (d (n "intel-mkl-src") (r "^0.5") (o #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "special") (r "^0.8.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "11xf9zds98ic00748mif0prjnjizgj4n8ls71cv43461h4zxhgsf") (f (quote (("openblas" "blas-src/openblas" "cblas-sys") ("intel-mkl" "intel-mkl-src" "cblas-sys") ("blas") ("accelerate" "blas-src/accelerate" "cblas-sys"))))))

(define-public crate-autograd-2.0.0-rc1 (c (n "autograd") (v "2.0.0-rc1") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (k 0)) (d (n "cblas-sys") (r "^0.1.4") (o #t) (k 0)) (d (n "intel-mkl-src") (r "^0.5") (o #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "special") (r "^0.8.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0iqik8j4qp83rsa6aqigcz66mciysk2qa1biz7mqb735aqhdymzs") (f (quote (("openblas" "blas-src/openblas" "cblas-sys") ("intel-mkl" "intel-mkl-src" "cblas-sys") ("blas") ("accelerate" "blas-src/accelerate" "cblas-sys"))))))

(define-public crate-autograd-2.0.0-rc2 (c (n "autograd") (v "2.0.0-rc2") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (k 0)) (d (n "cblas-sys") (r "^0.1.4") (o #t) (k 0)) (d (n "intel-mkl-src") (r "^0.5") (o #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "special") (r "^0.8.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1lpc6m3xa6xp1dk3rz020psq5sfxvgxyn5bq22cligjxfj1djl28") (f (quote (("openblas" "blas-src/openblas" "cblas-sys") ("intel-mkl" "intel-mkl-src" "cblas-sys") ("blas") ("accelerate" "blas-src/accelerate" "cblas-sys"))))))

(define-public crate-autograd-2.0.0-rc3 (c (n "autograd") (v "2.0.0-rc3") (d (list (d (n "approx") (r "^0.4.0") (d #t) (k 0)) (d (n "blas-src") (r "^0.8") (o #t) (k 0)) (d (n "cblas-sys") (r "^0.1.4") (o #t) (k 0)) (d (n "intel-mkl-src") (r "^0.5") (o #t) (k 0)) (d (n "libc") (r "^0.2") (d #t) (k 0)) (d (n "matrixmultiply") (r "^0.2.2") (d #t) (k 0)) (d (n "ndarray") (r "^0.14.0") (f (quote ("serde" "approx"))) (d #t) (k 0)) (d (n "num") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.0") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3.0") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.120") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "smallvec") (r "^1.2.0") (d #t) (k 0)) (d (n "special") (r "^0.8.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "126zaaxsyvprs3bwxzhkiiw5spzc5d298s5rh2f8jrb3kn2qn5r6") (f (quote (("openblas" "blas-src/openblas" "cblas-sys") ("intel-mkl" "intel-mkl-src" "cblas-sys") ("blas") ("accelerate" "blas-src/accelerate" "cblas-sys"))))))

