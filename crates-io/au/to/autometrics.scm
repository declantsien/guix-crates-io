(define-module (crates-io au to autometrics) #:use-module (crates-io))

(define-public crate-autometrics-0.1.0 (c (n "autometrics") (v "0.1.0") (d (list (d (n "autometrics-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1fk33fi8zff7c0y4vz99c8lvm96ihsbrb12kf6g5yagw22bhahh9") (f (quote (("prometheus-exporter" "once_cell" "opentelemetry-prometheus" "prometheus"))))))

(define-public crate-autometrics-0.1.1 (c (n "autometrics") (v "0.1.1") (d (list (d (n "autometrics-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0hszwhd1wvq33hvvc1rywfb6n3ray0a1ppssm8c834yyk4ldw8lc") (f (quote (("prometheus-exporter" "once_cell" "opentelemetry-prometheus" "prometheus"))))))

(define-public crate-autometrics-0.2.0 (c (n "autometrics") (v "0.2.0") (d (list (d (n "autometrics-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "12wfs6w9ia2avha66n9s1x2snznlkrc71ka5fghm9dayis8b2660") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry")))) (s 2) (e (quote (("prometheus" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.2.1 (c (n "autometrics") (v "0.2.1") (d (list (d (n "autometrics-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "1favx3bq1yfcmbl55ir4092835p5vyw06qbn58akfby1cfnkzm9a") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry")))) (s 2) (e (quote (("prometheus" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.2.2 (c (n "autometrics") (v "0.2.2") (d (list (d (n "autometrics-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "07jny5bqa447hkw6wvx01ghrk1y37a3sala44ai5s2g814q51gy5") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry")))) (s 2) (e (quote (("prometheus" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.2.3 (c (n "autometrics") (v "0.2.3") (d (list (d (n "autometrics-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0war2q76p7qrw70yji8ylmm6nj5n3waf2q82dikclqkmn822gnm9") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry")))) (s 2) (e (quote (("prometheus" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.2.4 (c (n "autometrics") (v "0.2.4") (d (list (d (n "autometrics-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "axum") (r "^0.6.4") (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.14") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (d #t) (k 2)) (d (n "strum") (r "^0.24.1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "thiserror") (r "^1.0.38") (d #t) (k 2)) (d (n "tokio") (r "^1.24.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0vz65ljwiq53x3272070a5k1nw57rlm28vbw3f4w455k2pjfksc8") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry")))) (s 2) (e (quote (("prometheus" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.3.0 (c (n "autometrics") (v "0.3.0") (d (list (d (n "autometrics-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)))) (h "0y0wvp3acz0llgpkbpbr12n8vii1iz7hrw9pfwx7bs7hivxm5gy8") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry") ("custom-objectives")))) (y #t) (s 2) (e (quote (("prometheus" "const_format" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.3.1 (c (n "autometrics") (v "0.3.1") (d (list (d (n "autometrics-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)))) (h "0z4kamam9qfnvz02is1b1dpfh7j8n72vwr90565wnkbv3zx6hydy") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus" "const_format" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.3.2 (c (n "autometrics") (v "0.3.2") (d (list (d (n "autometrics-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)))) (h "1dimam4cyqf2rm6qpp6zp546nnk5a0vf6wkgikwkq6nr1m4blgv2") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus" "const_format" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.3.3 (c (n "autometrics") (v "0.3.3") (d (list (d (n "autometrics-macros") (r "^0.3.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "metrics") (r "^0.20") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 2)))) (h "06x9xzy76dspiw37glg4czcibdldyshgigx7jaiqhhxhhci7mi2j") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus" "const_format" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.4.0 (c (n "autometrics") (v "0.4.0") (d (list (d (n "autometrics-macros") (r "^0.4.0") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "metrics") (r "^0.21") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "vergen") (r "^8.1") (f (quote ("git" "gitcl"))) (d #t) (k 2)))) (h "09gn4gkjvzk29z3wvwjk4lgx3pjvy72x619smlkqjcxijaqaz8bk") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus" "const_format" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.4.1 (c (n "autometrics") (v "0.4.1") (d (list (d (n "autometrics-macros") (r "^0.4.1") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("rust_1_51"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "metrics") (r "^0.21") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (o #t) (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "vergen") (r "^8.1") (f (quote ("git" "gitcl"))) (d #t) (k 2)))) (h "0064nfjlz0x2c87ss0j0xlrakrqiqac89bbvccy5493f46m02rg0") (f (quote (("prometheus-exporter" "metrics-exporter-prometheus" "once_cell" "opentelemetry-prometheus" "opentelemetry_sdk" "prometheus") ("opentelemetry" "opentelemetry_api") ("default" "opentelemetry") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus" "const_format" "dep:prometheus" "once_cell") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.5.0 (c (n "autometrics") (v "0.5.0") (d (list (d (n "autometrics-macros") (r "^0.5.0") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "metrics") (r "^0.21") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_api") (r "^0.19.0") (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.19") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.19") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "prometheus-client") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "spez") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.19") (o #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("registry"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "vergen") (r "^8.1") (f (quote ("git" "gitcl"))) (d #t) (k 2)))) (h "0dzaajk0rpj8jwjkg9kdj87ajznnxfjh8820nbghl1ib8n573mbg") (f (quote (("opentelemetry" "opentelemetry_api/metrics") ("exemplars-tracing-opentelemetry" "opentelemetry_api/trace" "tracing" "tracing-opentelemetry") ("exemplars-tracing" "tracing" "tracing-subscriber") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus-exporter" "http" "metrics-exporter-prometheus" "opentelemetry-prometheus" "opentelemetry_sdk" "dep:prometheus" "dep:prometheus-client" "thiserror") ("prometheus-client" "dep:prometheus-client") ("prometheus" "dep:prometheus") ("metrics" "dep:metrics"))))))

(define-public crate-autometrics-0.6.0 (c (n "autometrics") (v "0.6.0") (d (list (d (n "autometrics-macros") (r "^0.6.0") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (d #t) (k 2)) (d (n "opentelemetry-prometheus") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.1") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20") (o #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "prometheus-client") (r "^0.21.1") (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.21") (d #t) (k 2)) (d (n "spez") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-opentelemetry") (r "^0.20") (o #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.20") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("registry"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "vergen") (r "^8.1") (f (quote ("git" "gitcl"))) (d #t) (k 2)))) (h "11nfmpcq43pldfbkxjn0cznq1r3lf5c73gq26a2gpb8q3vmzbklm") (f (quote (("prometheus-client" "prometheus-client-0_21") ("prometheus" "prometheus-0_13") ("opentelemetry" "opentelemetry-0_20") ("metrics" "metrics-0_21") ("exemplars-tracing-opentelemetry-0_20" "opentelemetry_api/trace" "tracing" "tracing-opentelemetry") ("exemplars-tracing-opentelemetry" "exemplars-tracing-opentelemetry-0_20") ("exemplars-tracing" "tracing" "tracing-subscriber") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus-exporter" "http" "metrics-exporter-prometheus" "opentelemetry-prometheus" "opentelemetry_sdk" "dep:prometheus" "dep:prometheus-client") ("prometheus-client-0_21" "dep:prometheus-client") ("prometheus-0_13" "dep:prometheus") ("opentelemetry-0_20" "opentelemetry_api/metrics" "dep:prometheus") ("metrics-0_21" "dep:metrics"))))))

(define-public crate-autometrics-1.0.0 (c (n "autometrics") (v "1.0.0") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 2)) (d (n "autometrics-macros") (r "^1.0.0") (d #t) (k 0)) (d (n "axum") (r "^0.6") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 2)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 2)) (d (n "opentelemetry-otlp") (r "^0.14.0") (o #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "prometheus-client") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22") (d #t) (k 2)) (d (n "spez") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-opentelemetry-0-22") (r "^0.22") (o #t) (k 0) (p "tracing-opentelemetry")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("registry"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "vergen") (r "^8.1") (f (quote ("git" "gitcl"))) (d #t) (k 2)))) (h "1rvk94ns294vnmzwwy0zgbhbx6hd01w85j591ii5f8s2d2x9wsdj") (f (quote (("prometheus-client" "prometheus-client-0_22") ("prometheus" "prometheus-0_13") ("otel-push-exporter-tokio-current-thread" "otel-push-exporter" "opentelemetry_sdk/rt-tokio-current-thread") ("otel-push-exporter-tokio" "otel-push-exporter" "opentelemetry_sdk/rt-tokio") ("otel-push-exporter-http" "otel-push-exporter" "opentelemetry-otlp/http-proto") ("otel-push-exporter-grpc" "otel-push-exporter" "opentelemetry-otlp/grpc-tonic") ("otel-push-exporter-async-std" "otel-push-exporter" "opentelemetry_sdk/rt-async-std") ("opentelemetry" "opentelemetry-0_21") ("metrics" "metrics-0_21") ("exemplars-tracing-opentelemetry" "exemplars-tracing-opentelemetry-0_22") ("exemplars-tracing" "tracing" "tracing-subscriber") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus-exporter" "http" "metrics-exporter-prometheus" "opentelemetry-prometheus" "opentelemetry_sdk" "dep:prometheus" "dep:prometheus-client") ("prometheus-client-0_22" "dep:prometheus-client") ("prometheus-0_13" "dep:prometheus") ("otel-push-exporter" "opentelemetry_sdk" "dep:opentelemetry" "opentelemetry-otlp" "opentelemetry-otlp/metrics" "opentelemetry-otlp/tls-roots") ("opentelemetry-0_21" "opentelemetry/metrics" "dep:prometheus") ("metrics-0_21" "dep:metrics") ("exemplars-tracing-opentelemetry-0_22" "dep:opentelemetry" "opentelemetry_sdk/trace" "tracing" "dep:tracing-opentelemetry-0-22"))))))

(define-public crate-autometrics-1.0.1 (c (n "autometrics") (v "1.0.1") (d (list (d (n "async-trait") (r "^0.1.74") (d #t) (k 2)) (d (n "autometrics-macros") (r "^1.0.1") (d #t) (k 0)) (d (n "axum") (r "^0.7.2") (f (quote ("tokio"))) (d #t) (k 2)) (d (n "cfg_aliases") (r "^0.1") (d #t) (k 1)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "http") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.0.0") (d #t) (k 2)) (d (n "linkme") (r "^0.3") (d #t) (k 0)) (d (n "metrics") (r "^0.21") (o #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12") (o #t) (k 0)) (d (n "once_cell") (r "^1.17") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (d #t) (k 2)) (d (n "opentelemetry-otlp") (r "^0.14.0") (o #t) (k 0)) (d (n "opentelemetry-prometheus") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "opentelemetry-stdout") (r "^0.2") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("metrics"))) (o #t) (k 0)) (d (n "prometheus") (r "^0.13") (o #t) (k 0)) (d (n "prometheus-client") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22") (d #t) (k 2)) (d (n "spez") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-opentelemetry-0-22") (r "^0.22") (o #t) (k 0) (p "tracing-opentelemetry")) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("registry"))) (o #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 2)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("v4"))) (d #t) (k 2)) (d (n "vergen") (r "^8.1") (f (quote ("git" "gitcl"))) (d #t) (k 2)))) (h "0dwirq7mlvsq29f2frr0v3bbsa3id9vm7kf87n0s66bkkr9sxshh") (f (quote (("prometheus-client" "prometheus-client-0_22") ("prometheus" "prometheus-0_13") ("otel-push-exporter-tokio-current-thread" "otel-push-exporter" "opentelemetry_sdk/rt-tokio-current-thread") ("otel-push-exporter-tokio" "otel-push-exporter" "opentelemetry_sdk/rt-tokio") ("otel-push-exporter-http" "otel-push-exporter" "opentelemetry-otlp/http-proto") ("otel-push-exporter-grpc" "otel-push-exporter" "opentelemetry-otlp/grpc-tonic") ("otel-push-exporter-async-std" "otel-push-exporter" "opentelemetry_sdk/rt-async-std") ("opentelemetry" "opentelemetry-0_21") ("metrics" "metrics-0_21") ("exemplars-tracing-opentelemetry" "exemplars-tracing-opentelemetry-0_22") ("exemplars-tracing" "tracing" "tracing-subscriber") ("custom-objective-percentile") ("custom-objective-latency")))) (s 2) (e (quote (("prometheus-exporter" "http" "metrics-exporter-prometheus" "opentelemetry-prometheus" "opentelemetry_sdk" "dep:prometheus" "dep:prometheus-client") ("prometheus-client-0_22" "dep:prometheus-client") ("prometheus-0_13" "dep:prometheus") ("otel-push-exporter" "opentelemetry_sdk" "dep:opentelemetry" "opentelemetry-otlp" "opentelemetry-otlp/metrics" "opentelemetry-otlp/tls-roots" "opentelemetry-otlp/reqwest-rustls") ("opentelemetry-0_21" "opentelemetry/metrics" "dep:prometheus") ("metrics-0_21" "dep:metrics") ("exemplars-tracing-opentelemetry-0_22" "dep:opentelemetry" "opentelemetry_sdk/trace" "tracing" "dep:tracing-opentelemetry-0-22"))))))

