(define-module (crates-io au to autoperf) #:use-module (crates-io))

(define-public crate-autoperf-0.9.0 (c (n "autoperf") (v "0.9.0") (d (list (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "csv") (r "0.*") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^1.2.3") (d #t) (k 0)) (d (n "pbr") (r "^1.0.1") (d #t) (k 0)) (d (n "perfcnt") (r "0.*") (d #t) (k 0)) (d (n "phf") (r "0.7.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.2") (d #t) (k 0)) (d (n "wait-timeout") (r "^0.1") (d #t) (k 0)) (d (n "x86") (r "^0.16.2") (f (quote ("performance-counter"))) (d #t) (k 0)))) (h "09zrq55dfcx115rzaxw20jx4ylz8bs3bmp636v6agijcqbm2llw6")))

(define-public crate-autoperf-0.9.1 (c (n "autoperf") (v "0.9.1") (d (list (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "csv") (r "0.*") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^1.2.3") (d #t) (k 0)) (d (n "pbr") (r "^1.0.1") (d #t) (k 0)) (d (n "perfcnt") (r "^0.4.3") (d #t) (k 0)) (d (n "phf") (r "0.7.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.2") (d #t) (k 0)) (d (n "wait-timeout") (r "^0.1") (d #t) (k 0)) (d (n "x86") (r "^0.16.2") (f (quote ("performance-counter"))) (d #t) (k 0)))) (h "1w3lsp9iinrvnnaa3dj92z3j66xpgm8b5gqp7pc05w0qbm11bsvb")))

(define-public crate-autoperf-0.9.2 (c (n "autoperf") (v "0.9.2") (d (list (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "csv") (r "0.*") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^1.2.3") (d #t) (k 0)) (d (n "pbr") (r "^1.0.1") (d #t) (k 0)) (d (n "perfcnt") (r "^0.4.3") (d #t) (k 0)) (d (n "phf") (r "0.7.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.2") (d #t) (k 0)) (d (n "wait-timeout") (r "^0.1") (d #t) (k 0)) (d (n "x86") (r "^0.16.2") (f (quote ("performance-counter"))) (d #t) (k 0)))) (h "1mgixrfa7pa0ld7rywi56gsq38i3dgnrq87n3223mzam1zc3wnii")))

(define-public crate-autoperf-0.9.3 (c (n "autoperf") (v "0.9.3") (d (list (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "csv") (r "0.*") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^1.2.3") (d #t) (k 0)) (d (n "pbr") (r "^1.0.1") (d #t) (k 0)) (d (n "perfcnt") (r "^0.4.3") (d #t) (k 0)) (d (n "phf") (r "0.7.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.2") (d #t) (k 0)) (d (n "wait-timeout") (r "^0.1") (d #t) (k 0)) (d (n "x86") (r "^0.16.2") (f (quote ("performance-counter"))) (d #t) (k 0)))) (h "1132n5dh6xzj4h5wsvv6m548a1zrfwg0p05dcc3pnkmkqzl980mx")))

(define-public crate-autoperf-0.9.4 (c (n "autoperf") (v "0.9.4") (d (list (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "csv") (r "0.*") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^1.2.3") (d #t) (k 0)) (d (n "pbr") (r "^1.0.1") (d #t) (k 0)) (d (n "perfcnt") (r "^0.4.3") (d #t) (k 0)) (d (n "phf") (r "0.7.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.2") (d #t) (k 0)) (d (n "wait-timeout") (r "^0.1") (d #t) (k 0)) (d (n "x86") (r "^0.16.2") (f (quote ("performance-counter"))) (d #t) (k 0)))) (h "0r13nlxwg3q6c7iv7r99pfy8bqsjka3va13kxx9cgryqm83h21kl")))

(define-public crate-autoperf-0.9.5 (c (n "autoperf") (v "0.9.5") (d (list (d (n "clap") (r "^2") (f (quote ("yaml"))) (d #t) (k 0)) (d (n "csv") (r "0.*") (d #t) (k 0)) (d (n "env_logger") (r "^0.6") (d #t) (k 0)) (d (n "itertools") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "0.1.*") (d #t) (k 0)) (d (n "libc") (r "^0.2.16") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nom") (r "^1.2.3") (d #t) (k 0)) (d (n "pbr") (r "^1.0.1") (d #t) (k 0)) (d (n "perfcnt") (r "^0.6") (d #t) (k 0)) (d (n "phf") (r "0.7.*") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "toml") (r "^0.2") (d #t) (k 0)) (d (n "wait-timeout") (r "^0.1") (d #t) (k 0)) (d (n "x86") (r "^0.34") (f (quote ("performance-counter"))) (d #t) (k 0)))) (h "1xka58369q7yy9lisfzpgwmahc3af9q3hpzwb78l5nwl5693iqpy")))

