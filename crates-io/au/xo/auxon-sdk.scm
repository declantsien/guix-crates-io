(define-module (crates-io au xo auxon-sdk) #:use-module (crates-io))

(define-public crate-auxon-sdk-1.0.0 (c (n "auxon-sdk") (v "1.0.0") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-modality") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "14m98gm6pjkdfsl9cbg7a1565q5686mps2hab0m1hb7mlmy7m1kx") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix" "dep:tracing-modality") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.0.1 (c (n "auxon-sdk") (v "1.0.1") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-modality") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "04g4hw0a2dpmk4xa70ha5914qslqkwmfs84g5r12ic5fv94arms3") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix" "dep:tracing-modality") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.1.0 (c (n "auxon-sdk") (v "1.1.0") (d (list (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-modality") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "126wwyfabminyri7q4xgj2w3zihw7lbzqnc7hqkadhzwj0lvh8i0") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix" "dep:tracing-modality") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.2.0 (c (n "auxon-sdk") (v "1.2.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (o #t) (d #t) (k 0)) (d (n "tracing-serde-structured") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-serde-wire") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "1wir7ahgjrqgfgqsrgvr81f9007k1xzsfylf1syp97lv6iamwvd5") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality_tracing" "modality" "dep:anyhow" "dep:serde_json" "dep:once_cell" "dep:tracing-serde-wire" "dep:tracing-serde-structured" "dep:tracing-core" "dep:parking_lot" "dep:duplicate") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.2.1 (c (n "auxon-sdk") (v "1.2.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (o #t) (d #t) (k 0)) (d (n "tracing-serde-structured") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-serde-wire") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "0xxnmwk9k4nsz3i8cy6yrapc2b0by3hj6ji9hbq7674apmpw17fv") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality_tracing" "modality" "dep:anyhow" "dep:serde_json" "dep:once_cell" "dep:tracing-serde-wire" "dep:tracing-serde-structured" "dep:tracing-core" "dep:parking_lot" "dep:duplicate") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.3.0 (c (n "auxon-sdk") (v "1.3.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (o #t) (d #t) (k 0)) (d (n "tracing-serde-structured") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-serde-wire") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "1j7mqlh613c7d82pixnxbm44cyaiqlsh7jb8axkvn0d5mwk0n3dy") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality_tracing" "modality" "dep:anyhow" "dep:serde_json" "dep:once_cell" "dep:tracing-serde-wire" "dep:tracing-serde-structured" "dep:tracing-core" "dep:parking_lot" "dep:duplicate") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.4.0 (c (n "auxon-sdk") (v "1.4.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "envy") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (o #t) (d #t) (k 0)) (d (n "tracing-serde-structured") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-serde-wire") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "1wjzjd1pbp1idrbqq2rq22bz6l22kiv8dqfhlwd9v1i5am5c16h5") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality_tracing" "modality" "dep:anyhow" "dep:serde_json" "dep:once_cell" "dep:tracing-serde-wire" "dep:tracing-serde-structured" "dep:tracing-core" "dep:parking_lot" "dep:duplicate") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix" "dep:envy") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

(define-public crate-auxon-sdk-1.5.0 (c (n "auxon-sdk") (v "1.5.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("color" "derive" "env"))) (o #t) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.2") (d #t) (k 2)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "duplicate") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "envy") (r "^0.4.2") (o #t) (d #t) (k 0)) (d (n "exitcode") (r "^1.1.2") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "minicbor") (r "^0.13.1") (f (quote ("std" "derive"))) (o #t) (d #t) (k 0)) (d (n "minicbor-io") (r "^0.8") (f (quote ("async-io"))) (o #t) (d #t) (k 0)) (d (n "native-tls") (r "^0.2.10") (o #t) (d #t) (k 0)) (d (n "nix") (r "^0.26.2") (o #t) (d #t) (t "cfg(target_family = \"unix\")") (k 0)) (d (n "once_cell") (r "^1.12.0") (o #t) (d #t) (k 0)) (d (n "ordered-float") (r "^3.7.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1.0") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "proptest") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking" "stream" "json" "default-tls"))) (o #t) (k 0)) (d (n "schemars") (r "^0.8.8") (f (quote ("uuid1" "chrono"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("float_roundtrip"))) (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^3") (d #t) (k 2)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "rt-multi-thread" "sync" "time" "tracing" "net" "signal" "net" "io-util" "fs"))) (o #t) (d #t) (k 0)) (d (n "tokio-native-tls") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "tokio-util") (r "^0.7.3") (f (quote ("compat"))) (o #t) (d #t) (k 0)) (d (n "toml") (r "^0.5") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.27") (o #t) (d #t) (k 0)) (d (n "tracing-serde-structured") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-serde-wire") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (o #t) (d #t) (k 0)) (d (n "url") (r "^2.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "utoipa") (r "^3.0") (f (quote ("uuid" "axum_extras"))) (o #t) (d #t) (k 0)) (d (n "utoipa-swagger-ui") (r "^3.0") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("std" "v4" "v5" "serde"))) (k 0)))) (h "0lahffw3y4f2pwq8imggy4wiajnkhk4z0rmljg63fhprrmvb938w") (f (quote (("default")))) (s 2) (e (quote (("test_support" "dep:proptest") ("schemars" "dep:schemars") ("mutator_server" "modality" "deviant" "dep:axum" "dep:utoipa" "dep:utoipa-swagger-ui" "dep:parking_lot" "dep:percent-encoding" "dep:reqwest" "dep:serde_json") ("modality_tracing" "modality" "dep:anyhow" "dep:serde_json" "dep:once_cell" "dep:tracing-serde-wire" "dep:tracing-serde-structured" "dep:tracing-core" "dep:parking_lot" "dep:duplicate") ("modality" "dep:minicbor" "dep:native-tls" "dep:tokio" "dep:tokio-native-tls" "dep:clap" "dep:tracing-subscriber" "dep:futures" "dep:exitcode" "dep:nix" "dep:envy") ("deviant" "modality" "dep:async-trait" "dep:tokio-util" "dep:minicbor-io"))))))

