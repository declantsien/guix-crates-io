(define-module (crates-io au td autd3-backend-cuda) #:use-module (crates-io))

(define-public crate-autd3-backend-cuda-11.0.0 (c (n "autd3-backend-cuda") (v "11.0.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "autd3-core") (r "^11.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^11.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1p3dxg8dn343lc5y11mfd4blbl1hz0h0pigw9g5r6zc48p2abm9r") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-11.0.1 (c (n "autd3-backend-cuda") (v "11.0.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "autd3-core") (r "^11.0.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^11.0.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0bc325bv0dw07314scj0iss2n4y5wxgl9nvc4xqyg4032rrshzm2") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-11.0.2 (c (n "autd3-backend-cuda") (v "11.0.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "autd3-core") (r "^11.0.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^11.0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "13y1v8vhfx094sbgi4x9bdhd12mra6rlymh1hv58yv8ra8vf521s") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-11.1.0 (c (n "autd3-backend-cuda") (v "11.1.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 0)) (d (n "autd3-core") (r "^11.1.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^11.1.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0d9djy0hlcsdc25bvjgddqnqpv4lhlcrxb0ksa97a167rx63fmzd") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-11.2.0 (c (n "autd3-backend-cuda") (v "11.2.0") (d (list (d (n "autd3-core") (r "^11.2.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^11.2.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1axhkzxm6560lx3glflrbbvfd2ddd2h2sf43kl8z1w6nrd2z9xvc") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-12.0.0 (c (n "autd3-backend-cuda") (v "12.0.0") (d (list (d (n "autd3-core") (r "^12.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^12.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "07m9ja86r692ldndd84ys225myg41hy97q31qw3rwk3mm6lpdn63") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-12.1.0 (c (n "autd3-backend-cuda") (v "12.1.0") (d (list (d (n "autd3-core") (r "^12.1.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^12.1.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0091d9l31lrxzdsklf7b60i84kz81llcliiwa8fr7xb5yjnd1f4j") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-12.1.1 (c (n "autd3-backend-cuda") (v "12.1.1") (d (list (d (n "autd3-core") (r "^12.1.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^12.1.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1zfjgw29n01y8d8lc201zwnkap7y7rhpkhhjb3cncgfsbbbb9jqm") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-12.2.0 (c (n "autd3-backend-cuda") (v "12.2.0") (d (list (d (n "autd3-core") (r "^12.2.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^12.2.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1hi8pmkzdi91hysmb7xa3zsd6x0x3y8jk720d5dig1h2v14iw3mj") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-12.3.0 (c (n "autd3-backend-cuda") (v "12.3.0") (d (list (d (n "autd3-core") (r "^12.3.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^12.3.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0cd94mg1lxpz167mscqhlsn74fxiz2ljavxxf118a38lcpk1g8il") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-12.3.1 (c (n "autd3-backend-cuda") (v "12.3.1") (d (list (d (n "autd3-core") (r "^12.3.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^12.3.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1c8d8h7vyj2hwqiqi33lzwf19y75d0zqq9x3cvkjqcbqpwxc14in") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-13.0.0 (c (n "autd3-backend-cuda") (v "13.0.0") (d (list (d (n "autd3-core") (r "^13.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^13.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1pi8s9xm0mhc9m0dn76s4n7wa1i9x11bnx94ilq1dhn27fkw8ds2") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-14.0.0 (c (n "autd3-backend-cuda") (v "14.0.0") (d (list (d (n "autd3-core") (r "^14.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^14.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0wilkmcnzis419iqzxr50fb9sgi3ma5p2fm8fyv7bahjhvl85x6k") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-14.0.1 (c (n "autd3-backend-cuda") (v "14.0.1") (d (list (d (n "autd3-core") (r "^14.0.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^14.0.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("rand"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1y4i64w3sqg89f64z7v43a47vc2ak4jgh3sr8zk7844hq73zlqln") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-14.1.0 (c (n "autd3-backend-cuda") (v "14.1.0") (d (list (d (n "autd3-core") (r "^14.1.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^14.1.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "09xcrkg3k9i02ji1i3a27iv1zbq3hxqi75a3r80qyck6bwax1q3b") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-14.2.0 (c (n "autd3-backend-cuda") (v "14.2.0") (d (list (d (n "autd3-core") (r "^14.2.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^14.2.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1nj58ijl5hrba6s0z37mgycldy7jm8figjwi4sphmyw2a2w56504") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-14.2.1 (c (n "autd3-backend-cuda") (v "14.2.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-core") (r "^14.2.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^14.2.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "03zcc2qxjqm82lqf2zcvdcwxckm7i9vdv6qypwq0146f71fq2b1c") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-14.2.2 (c (n "autd3-backend-cuda") (v "14.2.2") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-core") (r "^14.2.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^14.2.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.4") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1iqi5zi4417p8asnz0qimm34hm8bvlglv0am0zk9bf3spbm682mi") (f (quote (("use_meter" "autd3-core/use_meter") ("single_float" "autd3-core/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon" "autd3-core/parallel") ("default"))))))

(define-public crate-autd3-backend-cuda-15.0.0 (c (n "autd3-backend-cuda") (v "15.0.0") (d (list (d (n "autd3-driver") (r "^15.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0xaiqms6lq548dmw0ihhr175w8hhhy0m6yr3qz80ngbazfsghnnh") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.0.2 (c (n "autd3-backend-cuda") (v "15.0.2") (d (list (d (n "autd3-driver") (r "^15.0.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0d8bi1x3rpxihxsbjgz9w3r87czc99ddfqnj5sfsjd5k9pdjjr4w") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.1.0 (c (n "autd3-backend-cuda") (v "15.1.0") (d (list (d (n "autd3-driver") (r "^15.1.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.1.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0cfa79dv72rv6kifw2fxkwx3575bxrk1x5yw5brf2y4n2vqa1nwx") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.1.1 (c (n "autd3-backend-cuda") (v "15.1.1") (d (list (d (n "autd3-driver") (r "^15.1.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.1.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "09m4r1pmaai7z7vjyqb8jvbciidl5y7zryzxcqqm6lvpjxi2kh8p") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.1.2 (c (n "autd3-backend-cuda") (v "15.1.2") (d (list (d (n "autd3-driver") (r "^15.1.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.1.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "16121bpd1ms3bv0dp4gnwhkd1fysaspy00mkbwsp8gsldshv2rnx") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.2.0 (c (n "autd3-backend-cuda") (v "15.2.0") (d (list (d (n "autd3-driver") (r "^15.2.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.2.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1r54ynyh5hg4jrza9kzwdw97wyfk9iwy2vyynnl5l7c00s83w7gp") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.2.1 (c (n "autd3-backend-cuda") (v "15.2.1") (d (list (d (n "autd3-driver") (r "^15.2.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.2.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "093848rpnd5jc2yga8g16rlvlxyp27yw945khc6cmnw7f5rwzcdb") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.3.0 (c (n "autd3-backend-cuda") (v "15.3.0") (d (list (d (n "autd3-driver") (r "^15.3.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.3.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0976cyfk56z2xbp98z9zi14bnacbzkwgk2d8icp1176mx3bjf7ih") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-15.3.1 (c (n "autd3-backend-cuda") (v "15.3.1") (d (list (d (n "autd3-driver") (r "^15.3.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.3.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0dlcb4wqdn7mrr7f8ncy23v8axyd4xmjyn9dliabah7l8l0ljrb7") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-cuda-16.0.0 (c (n "autd3-backend-cuda") (v "16.0.0") (d (list (d (n "autd3-driver") (r "^16.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1dzjh3g18l4m2n3xn92jifw87fzwapksxh85bjkyaxfrk69mkwy5") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-16.0.1 (c (n "autd3-backend-cuda") (v "16.0.1") (d (list (d (n "autd3-driver") (r "^16.0.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1yjsqx2hi712z3932nnvxlvrlh7587kp40sr1bdb3i3aayrnfham") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-16.0.2 (c (n "autd3-backend-cuda") (v "16.0.2") (d (list (d (n "autd3-driver") (r "^16.0.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0s2yxi6qrhrzlrvg4x91kfx7im7xl1q2dprf0j75cy7kk8ryc67z") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-16.0.3 (c (n "autd3-backend-cuda") (v "16.0.3") (d (list (d (n "autd3-driver") (r "^16.0.3") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "01zqjz5wmcd81pc0jcp4kw670jjj49vyk3lvkfij7p9dj8544g18") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-19.0.0 (c (n "autd3-backend-cuda") (v "19.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^19.0.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^19.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^19.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1v8ms2yswj5n7xkf75r4fdy5xbr72kbhgj9v5b5rxsh1m08p29fh") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-20.0.0 (c (n "autd3-backend-cuda") (v "20.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^20.0.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^20.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^20.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1xyvw7kdgswniihyib96x73rcpsvwy5ssb2cv0kl4jss5nb3fn9q") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-20.0.3 (c (n "autd3-backend-cuda") (v "20.0.3") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^20.0.3") (d #t) (k 2)) (d (n "autd3-driver") (r "^20.0.3") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^20.0.3") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0c3z771ppbdl20ydgjpp7bxk6xcv60nhm7aq25ndbb7a8v7c488w") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-cuda-21.0.0-alpha.0 (c (n "autd3-backend-cuda") (v "21.0.0-alpha.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^21.0.0-alpha.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^21.0.0-alpha.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^21.0.0-alpha.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0s0fxlznn29zrvr2nc19yldyqsvsm0cwgi8f3d46zsprs3z64zxw") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("rpitit" "autd3-driver/rpitit" "autd3-gain-holo/rpitit") ("default" "rpitit") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-21.0.0-alpha.1 (c (n "autd3-backend-cuda") (v "21.0.0-alpha.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^21.0.0-alpha.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^21.0.0-alpha.0") (k 0)) (d (n "autd3-gain-holo") (r "^21.0.0-alpha.0") (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1yjibr0zbgblkrjsv66fl9yiczkk3mrcvlw26brx0q7dr5j0qccl") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("rpitit" "autd3-driver/rpitit" "autd3-gain-holo/rpitit") ("default" "rpitit") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-21.0.0-alpha.2 (c (n "autd3-backend-cuda") (v "21.0.0-alpha.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^21.0.0-alpha.2") (d #t) (k 2)) (d (n "autd3-driver") (r "^21.0.0-alpha.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^21.0.0-alpha.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1ja5w2bssfhd3m955pkfqf1mvp85pgnn2qa8k5xgccv9a2370kb0") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-21.0.0 (c (n "autd3-backend-cuda") (v "21.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^21.0.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^21.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^21.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1rlqnvgarpwnkyw1hprycqyr51q9q7mwl117nb88f0azk4qjwk7z") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-21.1.0 (c (n "autd3-backend-cuda") (v "21.1.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^21.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^21.1.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^21.1.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "01l3id1v2yy6ghar0vrzbxn5ylfvjy3n3nd955qiqj5mg6rx42bd") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-22.0.0-rc.0 (c (n "autd3-backend-cuda") (v "22.0.0-rc.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^22.0.0-rc.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^22.0.0-rc.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^22.0.0-rc.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1qfy615ncc68kn4zr09m1mcjc8aqm0x1sc3y6r991m9im43yy98z") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-22.0.0 (c (n "autd3-backend-cuda") (v "22.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^22.0.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^22.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^22.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "10xn3fzb61cd4wns9v22d0k32mwl3lgqchf1w2a69jzpjzchprgc") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default") ("bench-utilities" "autd3-gain-holo/criterion") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-22.0.2 (c (n "autd3-backend-cuda") (v "22.0.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^22.0.2") (d #t) (k 2)) (d (n "autd3-driver") (r "^22.0.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^22.0.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0gi71p8nxh2pkrkrrcifxf6icr3n9fccn8s2gzljskl2cav268g9") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("default") ("bench-utilities" "autd3-gain-holo/bench-utilities") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-22.0.4 (c (n "autd3-backend-cuda") (v "22.0.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^22.0.4") (d #t) (k 2)) (d (n "autd3-driver") (r "^22.0.4") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^22.0.4") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0jvsb31jqqnrsy4nx7vdkyw7fwp6i65srf09lja8x5xlsxdpl2ic") (f (quote (("test-utilities" "autd3-gain-holo/test-utilities") ("default") ("bench-utilities" "autd3-gain-holo/bench-utilities") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-23.0.0 (c (n "autd3-backend-cuda") (v "23.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^23.0.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^23.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^23.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0b2n3zz5q0m1rgqdpxilxnspmq2k883ri6izqxdp6qc2hr0n5bs4") (f (quote (("test-utilities" "autd3-gain-holo/test-utilities") ("default") ("bench-utilities" "autd3-gain-holo/bench-utilities") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-24.0.0-rc.2 (c (n "autd3-backend-cuda") (v "24.0.0-rc.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^24.0.0-rc.2") (d #t) (k 2)) (d (n "autd3-driver") (r "^24.0.0-rc.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^24.0.0-rc.2") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0w6qx08971118qgrwp16pyhlrk5lwwiml4amkvd2zcrx7nbd1gjq") (f (quote (("test-utilities" "autd3-gain-holo/test-utilities") ("default") ("bench-utilities" "autd3-gain-holo/bench-utilities") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-24.0.0 (c (n "autd3-backend-cuda") (v "24.0.0") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^24.0.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^24.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^24.0.0") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "1zqj44h51m44mdx6nd0m4gn3i0a8bm09h84yjp80dga6xkgignxv") (f (quote (("test-utilities" "autd3-gain-holo/test-utilities") ("default") ("bench-utilities" "autd3-gain-holo/bench-utilities") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

(define-public crate-autd3-backend-cuda-25.0.0-rc.1 (c (n "autd3-backend-cuda") (v "25.0.0-rc.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 2)) (d (n "autd3") (r "^25.0.0-rc.1") (d #t) (k 2)) (d (n "autd3-driver") (r "^25.0.0-rc.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^25.0.0-rc.1") (d #t) (k 0)) (d (n "bitvec") (r "^1.0.1") (d #t) (k 0)) (d (n "cc") (r "^1.0.79") (d #t) (k 1)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "cuda-config") (r "^0.1.0") (d #t) (k 1)) (d (n "cuda-sys") (r "^0.2.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.34.0") (f (quote ("macros" "rt-multi-thread"))) (d #t) (k 2)))) (h "0rxnjgf67nn2rd65wi8sx33q1v3ibd2hdga6bn6wzyb5dni7ab2q") (f (quote (("test-utilities" "autd3-gain-holo/test-utilities") ("default") ("bench-utilities" "autd3-gain-holo/bench-utilities") ("async-trait" "autd3-driver/async-trait" "autd3-gain-holo/async-trait"))))))

