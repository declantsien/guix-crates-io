(define-module (crates-io au td autd3-backend-arrayfire) #:use-module (crates-io))

(define-public crate-autd3-backend-arrayfire-15.0.0 (c (n "autd3-backend-arrayfire") (v "15.0.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0m8k79dgckdgn3nglzmalja0ahw62nwghz3hpfy5f7ddr8zy5xz5") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.0.2 (c (n "autd3-backend-arrayfire") (v "15.0.2") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.0.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1psx1p9py3n7vwhm2q8r5d9l3qky12przshf2wbx7qpdsl5n87sl") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.1.0 (c (n "autd3-backend-arrayfire") (v "15.1.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.1.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1hjd60s82byiy2qaxqhx8w5b99jz79a6smww8d1zvgm3fwmfj3cc") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.1.1 (c (n "autd3-backend-arrayfire") (v "15.1.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.1.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.1.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1c9713s25phcj15n9ddm8pi3y5bf5x5627bbbjz1c791wbr172lx") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.1.2 (c (n "autd3-backend-arrayfire") (v "15.1.2") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.1.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.1.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0aqwyzj28jrlwq5vcvrgvykhkmvcnzskms0xkngck19n5gam9mqs") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.2.0 (c (n "autd3-backend-arrayfire") (v "15.2.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.2.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.2.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0n355xd0y8m99zix9ynx8wabkf611ryxjk41hxcw2hn82zmqm9hc") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.2.1 (c (n "autd3-backend-arrayfire") (v "15.2.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.2.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.2.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0nb7gxrpmfp5ikgq66aqdc23q2rjkwfmvdxny0bjghjcdm73hw1j") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.3.0 (c (n "autd3-backend-arrayfire") (v "15.3.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.3.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.3.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1q84kbwx2wvg501pgwxdisixbp3igw9xfdh727bkw42s45msd9ic") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-15.3.1 (c (n "autd3-backend-arrayfire") (v "15.3.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^15.3.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^15.3.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1mbpqvdw6q3fssv7cwlqhg3hfw5nkhr8hjsmrpy96fn5qvnc8wdp") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("parallel" "rayon") ("default"))))))

(define-public crate-autd3-backend-arrayfire-16.0.0 (c (n "autd3-backend-arrayfire") (v "16.0.0") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^16.0.0") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "01p93n7szkfdrmv21jwg03m9ys3ydpgx1wxqmjk821x7wd1lp8g4") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-arrayfire-16.0.1 (c (n "autd3-backend-arrayfire") (v "16.0.1") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^16.0.1") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.1") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "1llpjnzzjpcmydh06wddp9qs4pxlnnidldqz9d509p4ikgw25dms") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-arrayfire-16.0.2 (c (n "autd3-backend-arrayfire") (v "16.0.2") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^16.0.2") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.2") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0gllprw9ialipnca8jsyy4ap2k074l8f0zc9rpi41rmsg69qybx5") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

(define-public crate-autd3-backend-arrayfire-16.0.3 (c (n "autd3-backend-arrayfire") (v "16.0.3") (d (list (d (n "anyhow") (r "^1.0.72") (d #t) (k 2)) (d (n "arrayfire") (r "^3.8.0") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "autd3-driver") (r "^16.0.3") (d #t) (k 0)) (d (n "autd3-gain-holo") (r "^16.0.3") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (f (quote ("html_reports"))) (d #t) (k 2)) (d (n "nalgebra") (r "^0.32.1") (f (quote ("std"))) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)))) (h "0h2srpfnbj7zricwkz56yhja8zwr9zdlw410vw3hc7yka312qz1f") (f (quote (("use_meter" "autd3-driver/use_meter") ("test-utilities" "autd3-gain-holo/test-utilities") ("single_float" "autd3-driver/single_float" "autd3-gain-holo/single_float") ("default"))))))

