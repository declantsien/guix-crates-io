(define-module (crates-io au gu augurs-ets) #:use-module (crates-io))

(define-public crate-augurs-ets-0.1.0-alpha.0 (c (n "augurs-ets") (v "0.1.0-alpha.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "augurs-core") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "augurs-mstl") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "augurs-testing") (r "^0.1.0-alpha.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "distrs") (r "^0.2.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lstsq") (r "^0.5.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("criterion" "frame-pointer" "prost-codec"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0pg3n22rfy3ylwifgp0pbpqhw5nzdqmhybi58xyks8a9395ydkxw") (s 2) (e (quote (("serde" "dep:serde") ("mstl" "dep:augurs-mstl"))))))

(define-public crate-augurs-ets-0.1.0 (c (n "augurs-ets") (v "0.1.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "augurs-core") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "augurs-mstl") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "augurs-testing") (r "^0.1.0-alpha.0") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "distrs") (r "^0.2.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lstsq") (r "^0.5.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "pprof") (r "^0.12.0") (f (quote ("criterion" "frame-pointer" "prost-codec"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1222b9xcghkjqcv85lcbwbh8pgxk7ljfxr7v723n8bwgfnwwsh2v") (s 2) (e (quote (("serde" "dep:serde") ("mstl" "dep:augurs-mstl"))))))

(define-public crate-augurs-ets-0.1.1 (c (n "augurs-ets") (v "0.1.1") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "augurs-core") (r "^0.1.1") (d #t) (k 0)) (d (n "augurs-mstl") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "augurs-testing") (r "^0.1.1") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "distrs") (r "^0.2.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lstsq") (r "^0.5.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("criterion" "frame-pointer" "prost-codec"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "0485kpyj5kbvppawai0qgaxi8vwhf1fdfddhb3zbr7klblhg5hcz") (s 2) (e (quote (("serde" "dep:serde") ("mstl" "dep:augurs-mstl"))))))

(define-public crate-augurs-ets-0.1.2 (c (n "augurs-ets") (v "0.1.2") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "augurs-core") (r "^0.1.2") (d #t) (k 0)) (d (n "augurs-mstl") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "augurs-testing") (r "^0.1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "distrs") (r "^0.2.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lstsq") (r "^0.5.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("criterion" "frame-pointer" "prost-codec"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1fnail4x5wrrf1dzw0bv4pxajmdfban7q39p5zcgzw5rmzqpap78") (s 2) (e (quote (("serde" "dep:serde") ("mstl" "dep:augurs-mstl"))))))

(define-public crate-augurs-ets-0.2.0 (c (n "augurs-ets") (v "0.2.0") (d (list (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "augurs-core") (r "^0.2.0") (d #t) (k 0)) (d (n "augurs-mstl") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "distrs") (r "^0.2.1") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "itertools") (r "^0.13.0") (d #t) (k 0)) (d (n "lstsq") (r "^0.5.0") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32.2") (d #t) (k 0)) (d (n "pprof") (r "^0.13.0") (f (quote ("criterion" "frame-pointer" "prost-codec"))) (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_distr") (r "^0.4.3") (d #t) (k 0)) (d (n "roots") (r "^0.0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.166") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)))) (h "1v0isvypmcv5b7gfs982qhdz5w3gp3sfia2mjbw9p31d3nq6f4mv") (s 2) (e (quote (("serde" "dep:serde") ("mstl" "dep:augurs-mstl"))))))

