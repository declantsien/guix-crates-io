(define-module (crates-io au th authzen-opa) #:use-module (crates-io))

(define-public crate-authzen-opa-0.1.0-alpha.0 (c (n "authzen-opa") (v "0.1.0-alpha.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "authzen-service-util") (r "^0.1.0-alpha.0") (f (quote ("client"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "derive_more") (r "^0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0") (d #t) (k 0)) (d (n "hyper-rustls") (r "^0") (f (quote ("webpki-roots"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_with") (r "^2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync" "macros" "rt" "sync" "time"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0") (d #t) (k 0)) (d (n "typed-builder") (r "^0.12") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)))) (h "11jvbq8zlncr5y372a3bpzxwwz02ywzda6vmf0g41sf101v36igj")))

