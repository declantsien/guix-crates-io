(define-module (crates-io au th authzen) #:use-module (crates-io))

(define-public crate-authzen-0.1.0-alpha.0 (c (n "authzen") (v "0.1.0-alpha.0") (d (list (d (n "authzen-core") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "authzen-diesel") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "authzen-opa") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "authzen-proc-macro-util") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "authzen-proc-macros") (r "^0.1.0-alpha.0") (d #t) (k 0)) (d (n "authzen-service-util") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "authzen-session") (r "^0.1.0-alpha.0") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "dotenv") (r "^0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)))) (h "00pldpr0hgcirnsymbwm1j01743ci1masvnw61rar095cg04fdw6") (f (quote (("tracing" "authzen-core/tracing") ("session-redis-backend" "session" "authzen-session/redis-backend") ("session-axum-core-03" "session" "authzen-session/axum-core-03") ("session-axum-core-02" "session" "authzen-session/axum-core-02") ("session-account-session" "session" "authzen-session/account-session") ("session" "authzen-session") ("service-util-trace" "service-util" "authzen-service-util/trace") ("service-util-server" "service-util" "authzen-service-util/server") ("service-util-max-allowed-request-body-size-small" "service-util" "authzen-service-util/max-allowed-request-body-size-small") ("service-util-max-allowed-request-body-size-medium" "service-util" "authzen-service-util/max-allowed-request-body-size-medium") ("service-util-max-allowed-request-body-size-large" "service-util" "authzen-service-util/max-allowed-request-body-size-large") ("service-util-log_error" "service-util" "authzen-service-util/log_error") ("service-util-http2" "service-util" "authzen-service-util/http2") ("service-util-http1" "service-util" "authzen-service-util/http1") ("service-util-grpc" "service-util" "authzen-service-util/grpc") ("service-util-graphql" "service-util" "authzen-service-util/graphql") ("service-util-db" "service-util" "authzen-service-util/db") ("service-util-client" "service-util" "authzen-service-util/client") ("service-util-axum-06" "service-util" "authzen-service-util/axum-06") ("service-util-axum-05" "service-util" "authzen-service-util/axum-05") ("service-util" "authzen-service-util") ("proc-macro-util" "authzen-proc-macro-util") ("policy-information-point" "authzen-core/policy-information-point") ("opa-decision-maker" "authzen-opa" "authzen-core/opa-decision-maker") ("mongodb-tx-cache" "authzen-core/mongodb-tx-cache") ("extra-traits" "authzen-core/extra-traits") ("diesel-storage-backend" "authzen-diesel" "authzen-core/diesel-storage-backend") ("diesel-postgres" "diesel-storage-backend" "authzen-core/diesel-postgres" "authzen-diesel/postgres") ("diesel-mysql" "diesel-storage-backend" "authzen-core/diesel-mysql" "authzen-diesel/mysql") ("diesel-mobc" "diesel-storage-backend" "authzen-diesel/mobc") ("diesel-deadpool" "diesel-storage-backend" "authzen-diesel/deadpool") ("diesel-bb8" "diesel-storage-backend" "authzen-diesel/bb8")))) (s 2) (e (quote (("policy-information-point-server" "authzen-core/policy-information-point-server" "dep:dotenv" "dep:tokio"))))))

