(define-module (crates-io au th authzen-diesel-core) #:use-module (crates-io))

(define-public crate-authzen-diesel-core-0.1.0-alpha.0 (c (n "authzen-diesel-core") (v "0.1.0-alpha.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "derive_more") (r "^0") (d #t) (k 0)) (d (n "diesel") (r "^2") (d #t) (k 0)) (d (n "diesel-async") (r "^0.2") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "mobc") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "scoped-futures") (r "^0.1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)))) (h "0gaxz690yaqgadw2cj8kyw8mna7vr4scqpja30zp6kf6nx8fpr6m") (f (quote (("postgres" "diesel/postgres" "diesel-async/postgres") ("mysql" "diesel/mysql" "diesel-async/mysql") ("deadpool" "diesel-async/deadpool") ("bb8" "diesel-async/bb8")))) (s 2) (e (quote (("mobc" "diesel-async/mobc" "dep:mobc"))))))

