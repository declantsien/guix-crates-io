(define-module (crates-io pa ck packetraven) #:use-module (crates-io))

(define-public crate-packetraven-3.0.6 (c (n "packetraven") (v "3.0.6") (d (list (d (n "aprs-parser") (r ">=0.4.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.24") (f (quote ("clock"))) (d #t) (k 0)) (d (n "clap") (r ">=4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r ">=0.26.1") (d #t) (k 0)) (d (n "custom_error") (r ">=1.9.2") (d #t) (k 0)) (d (n "geo") (r ">=0.24.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "geo-types") (r ">=0.7.9") (d #t) (k 0)) (d (n "geojson") (r ">=0.24.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.17") (d #t) (k 0)) (d (n "postgres") (r "^0.19.5") (o #t) (d #t) (k 0)) (d (n "ratatui") (r ">=0.21.0") (d #t) (k 0)) (d (n "regex") (r ">=1.8.1") (d #t) (k 0)) (d (n "reqwest") (r ">=0.11.17") (f (quote ("json" "blocking" "gzip"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0.160") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.96") (d #t) (k 0)) (d (n "serde_with") (r ">=3.0.0") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde_yaml") (r ">=0.9.21") (d #t) (k 0)) (d (n "serialport") (r ">=4.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r ">=2.3.1") (d #t) (k 0)))) (h "1plknzmw34vdnvh66kgjc33qjzfwwdsay7jmpz5yjhzfqs1klzxj") (f (quote (("sondehub") ("default" "serial" "aprsfi" "sondehub") ("aprsfi")))) (s 2) (e (quote (("serial" "dep:serialport") ("postgres" "dep:postgres"))))))

(define-public crate-packetraven-3.0.7 (c (n "packetraven") (v "3.0.7") (d (list (d (n "aprs-parser") (r ">=0.4.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.24") (f (quote ("clock"))) (d #t) (k 0)) (d (n "clap") (r ">=4.2.7") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r ">=0.26.1") (d #t) (k 0)) (d (n "custom_error") (r ">=1.9.2") (d #t) (k 0)) (d (n "geo") (r ">=0.24.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "geo-types") (r ">=0.7.9") (d #t) (k 0)) (d (n "geojson") (r ">=0.24.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.17") (d #t) (k 0)) (d (n "postgres") (r "^0.19.5") (o #t) (d #t) (k 0)) (d (n "ratatui") (r ">=0.21.0") (d #t) (k 0)) (d (n "regex") (r ">=1.8.1") (d #t) (k 0)) (d (n "reqwest") (r ">=0.11.17") (f (quote ("json" "blocking" "gzip"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0.160") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.96") (d #t) (k 0)) (d (n "serde_with") (r ">=3.0.0") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde_yaml") (r ">=0.9.21") (d #t) (k 0)) (d (n "serialport") (r ">=4.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r ">=2.3.1") (d #t) (k 0)))) (h "1fbpprifq9fsx2k5m4458km5w3lkv9543x732jx27ala4mcj069m") (f (quote (("sondehub") ("default" "serial" "aprsfi" "sondehub") ("aprsfi")))) (s 2) (e (quote (("serial" "dep:serialport") ("postgres" "dep:postgres"))))))

(define-public crate-packetraven-4.0.0 (c (n "packetraven") (v "4.0.0") (d (list (d (n "aprs-parser") (r ">=0.4.0") (d #t) (k 0)) (d (n "chrono") (r ">=0.4.24") (f (quote ("clock"))) (d #t) (k 0)) (d (n "clap") (r ">=4.3.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "crossterm") (r ">=0.26.1") (d #t) (k 0)) (d (n "custom_error") (r ">=1.9.2") (d #t) (k 0)) (d (n "geo") (r ">=0.24.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "geo-types") (r ">=0.7.9") (d #t) (k 0)) (d (n "geojson") (r ">=0.24.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.17") (d #t) (k 0)) (d (n "postgres") (r "^0.19.5") (o #t) (d #t) (k 0)) (d (n "ratatui") (r ">=0.21.0") (d #t) (k 0)) (d (n "regex") (r ">=1.8.1") (d #t) (k 0)) (d (n "reqwest") (r ">=0.11.17") (f (quote ("json" "blocking" "gzip"))) (d #t) (k 0)) (d (n "serde") (r ">=1.0.160") (d #t) (k 0)) (d (n "serde_json") (r ">=1.0.96") (d #t) (k 0)) (d (n "serde_with") (r ">=3.0.0") (f (quote ("chrono"))) (d #t) (k 0)) (d (n "serde_yaml") (r ">=0.9.21") (d #t) (k 0)) (d (n "serialport") (r ">=4.2.0") (o #t) (d #t) (k 0)) (d (n "url") (r ">=2.3.1") (d #t) (k 0)))) (h "0j2zkxk1i87rwki8xvcf153hfzfqzjqaccdnnsnxrqkd9n40g67k") (f (quote (("sondehub") ("default" "serial" "aprsfi" "sondehub") ("aprsfi")))) (s 2) (e (quote (("serial" "dep:serialport") ("postgres" "dep:postgres"))))))

