(define-module (crates-io pa rr parry3d-f64) #:use-module (crates-io))

(define-public crate-parry3d-f64-0.0.1 (c (n "parry3d-f64") (v "0.0.1") (h "1gzpw4yrsqidgwppndk3n265alw5l3dkxbd08lfzch70mylz3ai8")))

(define-public crate-parry3d-f64-0.1.0 (c (n "parry3d-f64") (v "0.1.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "04ik4m7s0b9amshxlf9ip2yf4jskkrrshbjn4bny09k9kg0qpwxw") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "erased-serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.1.1 (c (n "parry3d-f64") (v "0.1.1") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1icw88rqagsqzx819yf6avgl2dmijy7ccjf5sq5gig30zj937ayw") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "erased-serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.1.2 (c (n "parry3d-f64") (v "0.1.2") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "erased-serde") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.24") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.7") (k 2)) (d (n "rand_isaac") (r "^0.2") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.3") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "06774y0v25xaz5i96v3278xn9l0m6h2bxymm3114zxjgzhcbzp2w") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "erased-serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.2.0 (c (n "parry3d-f64") (v "0.2.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_isaac") (r "^0.3") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0v30f39898q2n9hl5z26s0is9si4wpqg0w0nb2dgahsf92gymdk0") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.3.0 (c (n "parry3d-f64") (v "0.3.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.25") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1r2smqdj5zqq0ps54xzawk415hp24lnpm4s2sbkyjbzjsfm73lbn") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.4.0 (c (n "parry3d-f64") (v "0.4.0") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "048c56ixlify3sa2a6pvs1gqari2di5clmadq0pcc5syhb385l2g") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.4.1 (c (n "parry3d-f64") (v "0.4.1") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0hfikr7f6q9vrwk1p5m50ksq5xki42yy8xm3jbk887cnympm3d25") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.4.2 (c (n "parry3d-f64") (v "0.4.2") (d (list (d (n "approx") (r "^0.4") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.26") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.4") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0ack38rw8f9ffmra586y2pvz21smqnspgdyc2pha8zbjbmhg3jw7") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.5.0 (c (n "parry3d-f64") (v "0.5.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0jd8p7cvzmxb658vpxz2r0mw67z340hssjxpp79xcl86g1qnzphs") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.5.1 (c (n "parry3d-f64") (v "0.5.1") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.27") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "175jpp3mlpaaycx07zznkxghfqfihx2irppm75as7ix8k2c2jjlj") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.6.0 (c (n "parry3d-f64") (v "0.6.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.28") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.5") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0ry5srjghz29456rcphplwl9iavmr45pkhkf6b1aqzmb13b7aigy") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.7.0 (c (n "parry3d-f64") (v "0.7.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.6") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0jv93cqk7s0b7aqvi4jsjsfrxls5rxbxkjdl1ghcv3g5p7fqf47l") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.7.1 (c (n "parry3d-f64") (v "0.7.1") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (d #t) (k 0)) (d (n "either") (r "^1") (d #t) (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (d #t) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.6") (d #t) (k 0)) (d (n "slab") (r "^0.4") (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "0mndi933j5y36b2i46ii50lcay63pjn08k2f08kmc7kdxy5y4qj2") (f (quote (("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "dim3" "f64"))))))

(define-public crate-parry3d-f64-0.8.0 (c (n "parry3d-f64") (v "0.8.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cust") (r "^0.2") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.30") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)))) (h "1q2ll6iil7gy70dy1nzqr1ra0g8l1hsv15h69l6dlayb98cr633n") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("required-features" "dim3" "f64") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust" "nalgebra/cuda"))))))

(define-public crate-parry3d-f64-0.9.0 (c (n "parry3d-f64") (v "0.9.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "1589qhbiyf3b5ad7q63rnmcjyn3vaz0zw539grflmg3gj13wvbvn") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("required-features" "dim3" "f64") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda"))))))

(define-public crate-parry3d-f64-0.10.0 (c (n "parry3d-f64") (v "0.10.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7.2") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0rr2lhxlnc7d8sa0akwb6wl809bp6a9hpj2lb38idibyiljzssp3") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda"))))))

(define-public crate-parry3d-f64-0.11.0 (c (n "parry3d-f64") (v "0.11.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7.3") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "025gwks8aiyad88dqpdxnllqylgpsn95nwy771qn1l0n150apq8g") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda"))))))

(define-public crate-parry3d-f64-0.11.1 (c (n "parry3d-f64") (v "0.11.1") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7.3") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "01jk3km7agvwqzq5v94460xw33151cilhn0hwdi12g96n65x4hiz") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda"))))))

(define-public crate-parry3d-f64-0.12.0 (c (n "parry3d-f64") (v "0.12.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7.3") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "03dxr5bymsfns0brr6d5y273qm841hm77ri7x2p3avm2il45qkyd") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda"))))))

(define-public crate-parry3d-f64-0.12.1 (c (n "parry3d-f64") (v "0.12.1") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.31") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.7.3") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0ks9jf8s4a1bjj1g32f4w18z4888gsm7k6cvp1zf4wm8zcqjpbs7") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.0 (c (n "parry3d-f64") (v "0.13.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "19jmdf7m7y6lyaxkw76s7prjfb3sc3h07z9rz18w5m3cy36g0grh") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.1 (c (n "parry3d-f64") (v "0.13.1") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0070p86lbihjf7v130xyck67nr4hmyajznqgcablf2psx902zp0q") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.2 (c (n "parry3d-f64") (v "0.13.2") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0j2n6indlwrg4ajzl9cj4163fdhb9mkqfdsimgnhry34g2a8r8aw") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck")))) (y #t)))

(define-public crate-parry3d-f64-0.13.3 (c (n "parry3d-f64") (v "0.13.3") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0im3slsjkc7lnm8204c8rdlay8s5lmv7k74vxsqwdgdjrfnaxnax") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.4 (c (n "parry3d-f64") (v "0.13.4") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "1z4hc1plp1qy0nhxr6kp4zpqi9rcxn7055cxsnkiz4v2csprvxdz") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.5 (c (n "parry3d-f64") (v "0.13.5") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.3") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "130x8kaqrxs60qf6f8av3lzcf792djsj16ipq66bdlxgfjagv2cp") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.6 (c (n "parry3d-f64") (v "0.13.6") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0kqnqka0xcxkr9dbk5xhaz652hdr9jajl2ag8xlncjwz9yzbi3in") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.7 (c (n "parry3d-f64") (v "0.13.7") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0d10qdyr5980hzbfqa7iyz34vpz03683sdsdirwpk4y0pid28nfj") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.13.8 (c (n "parry3d-f64") (v "0.13.8") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust") (r "^0.3") (o #t) (d #t) (t "cfg(not(target_os = \"cuda\"))") (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "19vwk53qycb18pabm2g95bpig7x30smxy586vlk3y3gpz9xyfijw") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("cuda" "cust_core" "cust" "nalgebra/cuda") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.14.0 (c (n "parry3d-f64") (v "0.14.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "04y771zi0za12wsixw9wvz8armglyvdvi9n6ip9rlyiqaxrl6zhg") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

(define-public crate-parry3d-f64-0.15.0 (c (n "parry3d-f64") (v "0.15.0") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0hywgnbx721gbcvkwzkkl878gxi1k53lbqzv3qrhn5667m3xqrgm") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck")))) (y #t)))

(define-public crate-parry3d-f64-0.15.1 (c (n "parry3d-f64") (v "0.15.1") (d (list (d (n "approx") (r "^0.5") (k 0)) (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "cust_core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "downcast-rs") (r "^1") (k 0)) (d (n "either") (r "^1") (k 0)) (d (n "indexmap") (r "^1") (f (quote ("serde-1"))) (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.32") (f (quote ("libm"))) (k 0)) (d (n "num-derive") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "oorandom") (r "^11") (d #t) (k 2)) (d (n "ptree") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rkyv") (r "^0.7.41") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "simba") (r "^0.8") (k 0)) (d (n "slab") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (d #t) (k 0)) (d (n "spade") (r "^2") (o #t) (d #t) (k 0)))) (h "0vnp9vm5k50hc06qrqw2smg89gr0spgd6nbd0qlwlgi7fjipzh7x") (f (quote (("std" "nalgebra/std" "slab" "rustc-hash" "simba/std" "arrayvec/std" "spade") ("simd-stable" "simba/wide" "simd-is-enabled") ("simd-nightly" "simba/packed_simd" "simd-is-enabled") ("simd-is-enabled") ("serde-serialize" "serde" "nalgebra/serde-serialize") ("rkyv-serialize" "rkyv/validation" "nalgebra/rkyv-serialize" "simba/rkyv-serialize") ("required-features" "dim3" "f64") ("parallel" "rayon") ("f64") ("enhanced-determinism" "simba/libm_force" "indexmap") ("dim3") ("default" "required-features" "std") ("bytemuck-serialize" "bytemuck" "nalgebra/convert-bytemuck"))))))

