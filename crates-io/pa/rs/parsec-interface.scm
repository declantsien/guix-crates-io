(define-module (crates-io pa rs parsec-interface) #:use-module (crates-io))

(define-public crate-parsec-interface-0.7.0 (c (n "parsec-interface") (v "0.7.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "curl") (r "^0.4.25") (d #t) (k 1)) (d (n "flate2") (r "^1.0.13") (d #t) (k 1)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.5.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tar") (r "^0.4.26") (d #t) (k 1)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "0811hprfynn95mgip8blip3qmgljcbhxd0nsif7d62cd8fwd5l6g") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.7.1 (c (n "parsec-interface") (v "0.7.1") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.5.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "0hazijrqlrbdncwby7mhx9v40mwpmhicd9nk5kd05lc33d6qnp0p") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.8.0 (c (n "parsec-interface") (v "0.8.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.5.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "14fs514rzj4n0yg1icq0590amx271d5z7k63sgxjp1z6y6b0cfhl") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.8.1 (c (n "parsec-interface") (v "0.8.1") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.5.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "14xidbnbmf5jsszy7dxfx8ihiw00g0wwg5zy5l0i0q4xip0j9a57") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.8.2 (c (n "parsec-interface") (v "0.8.2") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.5.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "04k85zaq5iqixnwdqijhvc608ikc41m0szy6xbyi76svvcz0mrx9") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.8.3 (c (n "parsec-interface") (v "0.8.3") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.5.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.5.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "1hx9fhv2mkq4hq30691kpj84vxcj2s1hwfkscj5b0ia9a4wmmrf8") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.10.0 (c (n "parsec-interface") (v "0.10.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "1hqrvdjn95skmbzr98k6dcp2ignaqa2vczi74rqymwzay096f9x9") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.11.0 (c (n "parsec-interface") (v "0.11.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "0hj1fp3jfwhkiml75fcwazsm7h1pwzjizsghh06jivfp476x59q6") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.12.0 (c (n "parsec-interface") (v "0.12.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "1mqin9vbbyvsllvmc55hxcwd2j1pr01kpzm1w9a8070mdn5vw50x") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.13.0 (c (n "parsec-interface") (v "0.13.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "0iajwb23zd3mqgk4ypbgqpz5hr3vccma3s6l15nm6q6k01xqg1sy") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.14.0 (c (n "parsec-interface") (v "0.14.0") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "1sr3ncjszhwpafv2s1k3i95psjp9qq1lzdgp2plnwjhr6q94wqpx") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.14.1 (c (n "parsec-interface") (v "0.14.1") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "0d6rg8mzcwizypngx7wig7wsrf2m4zfjhrqk8p43adxd15726akh") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.14.2 (c (n "parsec-interface") (v "0.14.2") (d (list (d (n "arbitrary") (r "^0.4.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.1.4") (d #t) (k 0)) (d (n "bytes") (r "^0.4.12") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "116c34h2144102br2nj2p1smxdqw2q9vw0c1s8lmg03fxax1ry9s") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.15.0 (c (n "parsec-interface") (v "0.15.0") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "0jwhym8nw5iy0lddib5knf41hqyjsgv0cxlz1x5grsp77kmgb5si") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.16.0 (c (n "parsec-interface") (v "0.16.0") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.2.0") (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)))) (h "1whvqdpl4n564mqj43nsg1q3iarp44428jfd796w21q6m888wihv") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.17.0 (c (n "parsec-interface") (v "0.17.0") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.2.0") (k 0)) (d (n "secrecy") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1ac3lcs9z1ndg14wl77s4c25jnk488s28xv3gwr2cl252scd9c1x") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.17.1 (c (n "parsec-interface") (v "0.17.1") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.2.0") (k 0)) (d (n "secrecy") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0bfp08khlhzd0ypymps6xvp5d6l726xqcjm71jz1d93qlp057ysl") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.18.0 (c (n "parsec-interface") (v "0.18.0") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.2.2") (k 0)) (d (n "secrecy") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "16301jrphw00npldizr9c6g26w71iwnf2fsa9s05vrfzw4896a09") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.19.0 (c (n "parsec-interface") (v "0.19.0") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.3.0") (k 0)) (d (n "secrecy") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0f4rvfb7wnwg9zas4847dl3f2dhqqgnl44668dck1ia4d54r6ws7") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.20.0 (c (n "parsec-interface") (v "0.20.0") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.4.0") (k 0)) (d (n "secrecy") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0ifhz8c5z92mjl6ycfrvh7as6dpppzfyd4d7fz2vnwckkdp7wiv1") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.20.1 (c (n "parsec-interface") (v "0.20.1") (d (list (d (n "arbitrary") (r "^0.4.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "num") (r "^0.2.1") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.5.0") (k 0)) (d (n "secrecy") (r "^0.6.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.110") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.7.4") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1g3advv0zvwq4jnsgklw575iil9p3zacvxhvz9kgi7qrvr990vh0") (f (quote (("testing") ("fuzz"))))))

(define-public crate-parsec-interface-0.20.2 (c (n "parsec-interface") (v "0.20.2") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.5.1") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1djpfbkq6afrglp2d5n53d24k5lz4zwcwh6q2z785fmn1j2n4m97") (f (quote (("testing") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.21.0 (c (n "parsec-interface") (v "0.21.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.6.0") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1n6crzz33ywgnmran5wvqxm239ax984l0wd0dmklz2mfwvxq9x52") (f (quote (("testing") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.22.0 (c (n "parsec-interface") (v "0.22.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.6.1") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1ia9pw2n719h1vx0wg717nf1jsl1n5md7i529lq4km5xcc892593") (f (quote (("testing") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.23.0 (c (n "parsec-interface") (v "0.23.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.7.0") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "06v80sn3ijvvh3zpamcdcm0ahbdg2r9jxwar63p43naqml2nvk7x") (f (quote (("testing") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.24.0 (c (n "parsec-interface") (v "0.24.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (d #t) (k 1)) (d (n "psa-crypto") (r "^0.8.0") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0q6rmd2fragq1mn28hs6b5j17h1n0jrk0k6gkmby6afk5k4q9ff0") (f (quote (("testing") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.25.0 (c (n "parsec-interface") (v "0.25.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.6.1") (d #t) (k 0)) (d (n "prost-build") (r "^0.6.1") (o #t) (d #t) (k 1)) (d (n "psa-crypto") (r "^0.9.0") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1lw8q8bxs5vpl9sv6rjvsyzwi32k3wqw5k2cfm3ccwr871lh3hb8") (f (quote (("testing") ("regenerate-protobuf" "prost-build") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.26.0 (c (n "parsec-interface") (v "0.26.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.3.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.8.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.8.0") (o #t) (d #t) (k 1)) (d (n "psa-crypto") (r "^0.9.0") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0nhn3f2zkcj5j4hdqyzwzj1v026zc9w8h0kli6ski3pr75d9gbgr") (f (quote (("testing") ("regenerate-protobuf" "prost-build") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.27.0 (c (n "parsec-interface") (v "0.27.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.8.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.8.0") (o #t) (d #t) (k 1)) (d (n "psa-crypto") (r "^0.9.2") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1k67d50inif5gb9nx37d6bzw3whr1zy3jiah7w34i3rkqfm8iv9a") (f (quote (("testing") ("regenerate-protobuf" "prost-build") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.28.0 (c (n "parsec-interface") (v "0.28.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.3.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.8.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.8.0") (o #t) (d #t) (k 1)) (d (n "psa-crypto") (r "^0.10.0") (k 0)) (d (n "secrecy") (r "^0.7.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "0mnyczwlb6kx73905wwq4ly6inda5diwx8h0f66vpjnli43vkwgn") (f (quote (("testing") ("regenerate-protobuf" "prost-build") ("fuzz" "arbitrary"))))))

(define-public crate-parsec-interface-0.29.0 (c (n "parsec-interface") (v "0.29.0") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.9.0") (o #t) (d #t) (k 1)) (d (n "psa-crypto") (r "^0.11.0") (k 0)) (d (n "secrecy") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "12n714429n0bk6baxk7wyzd04rccfb3mm8d9qhza1j8cxkxvipqc") (f (quote (("testing") ("regenerate-protobuf" "prost-build") ("fuzz" "arbitrary")))) (r "1.66.0")))

(define-public crate-parsec-interface-0.29.1 (c (n "parsec-interface") (v "0.29.1") (d (list (d (n "arbitrary") (r "^0.4.6") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 0)) (d (n "derivative") (r "^2.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4.11") (d #t) (k 0)) (d (n "num") (r "^0.4.0") (d #t) (k 0)) (d (n "num-derive") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.12") (d #t) (k 0)) (d (n "prost") (r "^0.9.0") (d #t) (k 0)) (d (n "prost-build") (r "^0.9.0") (o #t) (d #t) (k 1)) (d (n "psa-crypto") (r "^0.12.0") (k 0)) (d (n "secrecy") (r "^0.8.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.115") (f (quote ("derive"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.1") (d #t) (k 0)) (d (n "zeroize") (r "^1.1.0") (f (quote ("zeroize_derive"))) (d #t) (k 0)))) (h "1p8acp8nrfcxymwhdh113f9x80fcp50rsw1mm85z2c4v404nww6c") (f (quote (("testing") ("regenerate-protobuf" "prost-build") ("fuzz" "arbitrary")))) (r "1.66.0")))

