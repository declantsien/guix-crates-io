(define-module (crates-io pa rs parse-changelog) #:use-module (crates-io))

(define-public crate-parse-changelog-0.1.0 (c (n "parse-changelog") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.20") (d #t) (k 0)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1qwzl9iqd78y819ykwiz8iiy274dxj4appirf2v8dx759binpsh8") (f (quote (("default" "structopt"))))))

(define-public crate-parse-changelog-0.2.0 (c (n "parse-changelog") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1gisi8yr8f6g9hcaxqb78k40s37m6g5ad8y4x6d80315jd72h4i2") (f (quote (("default" "anyhow" "structopt"))))))

(define-public crate-parse-changelog-0.2.1 (c (n "parse-changelog") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "19z4yvwixxfp1wrdz7i3prd7r12x9g4zyd3xvkb8crkn1fpgby22") (f (quote (("default" "anyhow" "structopt"))))))

(define-public crate-parse-changelog-0.2.2 (c (n "parse-changelog") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.20") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (f (quote ("std" "unicode"))) (k 0)) (d (n "rustversion") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0c1bxbww3cskfq0b5ijck4i96nkaj215s2fnbf7gxs7skki6rdn6") (f (quote (("default" "anyhow" "structopt" "regex/perf"))))))

(define-public crate-parse-changelog-0.3.0 (c (n "parse-changelog") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0sg85kwizj4chlhh4pwks5cyfcgb4snkh48nywizcxa0a0d3hs1l") (f (quote (("default" "anyhow" "structopt"))))))

(define-public crate-parse-changelog-0.4.0 (c (n "parse-changelog") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1ifwa4zvk3n18860jxqgzp3iq87rmin3z3lzp423a7q24w53bxxh") (f (quote (("default" "anyhow" "structopt"))))))

(define-public crate-parse-changelog-0.4.1 (c (n "parse-changelog") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1z8lxldyd66p62w84z5647fcccl8v9hc0c8sraj8jknipq3376jg") (f (quote (("default" "anyhow" "structopt"))))))

(define-public crate-parse-changelog-0.4.2 (c (n "parse-changelog") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde-crate") (r "^1") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1fizqmf4xdm7li5dkdw4ilizi5fljkc7b5w1yd7pmylksqs731sk") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "serde" "serde_json" "structopt"))))))

(define-public crate-parse-changelog-0.4.3 (c (n "parse-changelog") (v "0.4.3") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^0.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde-crate") (r "^1") (f (quote ("derive"))) (d #t) (k 2) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "structopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "1ay0bsn3d1njr168swblfl38wgykfiak28y6m9rdzznzl9b3zc9y") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "serde" "serde_json" "structopt"))))))

(define-public crate-parse-changelog-0.4.4 (c (n "parse-changelog") (v "0.4.4") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "clap") (r "=3.0.0-beta.4") (f (quote ("cargo" "derive" "std" "suggestions"))) (o #t) (k 0)) (d (n "clap_derive") (r "=3.0.0-beta.4") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0bggr0w3hp16idh3xilynnng6q7yj9iwng49vrw2j0fpgrzj4bhz") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "clap" "clap_derive" "serde" "serde_json")))) (r "1.54")))

(define-public crate-parse-changelog-0.4.5 (c (n "parse-changelog") (v "0.4.5") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pico-args") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "084y0vmzq311xmlgsknpfffx05zghyzsa07gzwjsis5vzyip769z") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "pico-args" "serde" "serde_json")))) (r "1.51")))

(define-public crate-parse-changelog-0.4.6 (c (n "parse-changelog") (v "0.4.6") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0s271d981xx8a0qv745msrp9hn84kjnncdm051qpy2jhklpjmiy5") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.51")))

(define-public crate-parse-changelog-0.4.7 (c (n "parse-changelog") (v "0.4.7") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0d3h5k492fzfqiwnd4hi9z6qpvjqkyix5rjvphvpmjigr2y562wa") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.51")))

(define-public crate-parse-changelog-0.4.8 (c (n "parse-changelog") (v "0.4.8") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1is89c0chkzy76rgbsj3xhq9qh100xb7xl4s92rwqscq43b2b6rk") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.51")))

(define-public crate-parse-changelog-0.4.9 (c (n "parse-changelog") (v "0.4.9") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.5.2") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "181cw3h5g7inpd1ah662nd07q13wklxbvq1j7wjf4bhjgx345h8h") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.56")))

(define-public crate-parse-changelog-0.5.0 (c (n "parse-changelog") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1yrzcm45qh41vv4k9bwa6h9yw5rg2a5kw3by3jbxfwi616ykxsp6") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.56")))

(define-public crate-parse-changelog-0.5.1 (c (n "parse-changelog") (v "0.5.1") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0qlzihv1bh9v3g1fa9lwfyr4sixwl12b4bj2xxny52bcphz0nds6") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.56")))

(define-public crate-parse-changelog-0.5.2 (c (n "parse-changelog") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "056zwndh79r2pr96rwjfkksylqizvddxdkwijnn7qr7pzxvvf1ji") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.56")))

(define-public crate-parse-changelog-0.5.3 (c (n "parse-changelog") (v "0.5.3") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "19mm97kvsf857m75wi6p5sicb1k2gx1xipy9pj5ih9p61rljnpam") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.56")))

(define-public crate-parse-changelog-0.5.4 (c (n "parse-changelog") (v "0.5.4") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^1.6.1") (f (quote ("std"))) (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde-crate") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "16xdcjvy6h8pd5axglv38nvn7vam8wnqrm84syvx4gfbvbflpavf") (f (quote (("serde" "serde-crate" "indexmap/serde-1") ("default" "anyhow" "lexopt" "serde" "serde_json")))) (r "1.56")))

(define-public crate-parse-changelog-0.6.0 (c (n "parse-changelog") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.103") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "14kv7wki90x5kvmwgixyfc3jvv1czkjyq4rjpcs9kqkisk56nx92") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "indexmap/serde")))) (r "1.64")))

(define-public crate-parse-changelog-0.6.1 (c (n "parse-changelog") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "1vsm0b0v1vpp2h50nmcwq3r0k865md0w1y3xfh55mhazlsb438ir") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "indexmap/serde")))) (r "1.64")))

(define-public crate-parse-changelog-0.6.2 (c (n "parse-changelog") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "19smq1b4n8j5ahnz15alzjmh7v33ha9spqc7gwjzyibzvzmjb4sb") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "indexmap/serde")))) (r "1.64")))

(define-public crate-parse-changelog-0.6.3 (c (n "parse-changelog") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0zlb8yms0g4vfgrfl8m38fy2kvjvwpfylcjfpz5xs9pkd5hm04vl") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "indexmap/serde")))) (r "1.63")))

(define-public crate-parse-changelog-0.6.4 (c (n "parse-changelog") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0gdx8s5kiwq68lbnqf57p710i4291zvq5jd137fqf0lp25bva4rc") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "indexmap/serde")))) (r "1.65")))

(define-public crate-parse-changelog-0.6.5 (c (n "parse-changelog") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0ymdcmhcsbwl2ks0awarbddf4djp6v7frqwcgr8xska4yjmjjy93") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "indexmap/serde")))) (r "1.65")))

(define-public crate-parse-changelog-0.6.6 (c (n "parse-changelog") (v "0.6.6") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0nrppq5fp033y89j7k9dwfz6dmm8migfjmba84m2bvmy3rfvaz55") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "indexmap/serde")))) (r "1.70")))

(define-public crate-parse-changelog-0.6.7 (c (n "parse-changelog") (v "0.6.7") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "043ajvf6kd89xjcsnpbr8zzzvbmxr0lpc7j2nj7a3phwxsp3byxr") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "indexmap/serde")))) (r "1.70")))

(define-public crate-parse-changelog-0.6.8 (c (n "parse-changelog") (v "0.6.8") (d (list (d (n "anyhow") (r "^1.0.34") (o #t) (d #t) (k 0)) (d (n "easy-ext") (r "^1") (d #t) (k 2)) (d (n "indexmap") (r "^2") (d #t) (k 0)) (d (n "lexopt") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "memchr") (r "^2.4") (d #t) (k 0)) (d (n "regex") (r "^1.3") (d #t) (k 0)) (d (n "serde") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.165") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (o #t) (d #t) (k 0)))) (h "0r92nfnf2dwksnq3swxq0y8fwabda709spxhdz26b2vpa8lpa8q8") (f (quote (("default" "anyhow" "lexopt" "serde" "serde_json")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_derive" "indexmap/serde")))) (r "1.70")))

