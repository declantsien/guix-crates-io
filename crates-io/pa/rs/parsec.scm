(define-module (crates-io pa rs parsec) #:use-module (crates-io))

(define-public crate-parsec-0.1.0 (c (n "parsec") (v "0.1.0") (d (list (d (n "pulse") (r "^0.5") (d #t) (k 0)) (d (n "threadpool") (r "^1.0") (d #t) (k 0)))) (h "0f04qc1dbz04iybc03lwn4mdr48ppac2ji83chrvj5dgb7r84vp8") (y #t)))

(define-public crate-parsec-0.2.0 (c (n "parsec") (v "0.2.0") (d (list (d (n "mopa") (r "^0.2") (d #t) (k 0)) (d (n "pulse") (r "^0.5") (d #t) (k 0)) (d (n "threadpool") (r "^1.0") (d #t) (k 0)))) (h "130b58kdhpw0b40hrrylcss9j9x0hms6kg465d85wy1y1kakj3y9") (y #t)))

(define-public crate-parsec-0.3.0 (c (n "parsec") (v "0.3.0") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "mopa") (r "^0.2") (d #t) (k 0)) (d (n "pulse") (r "^0.5") (d #t) (k 0)) (d (n "threadpool") (r "^1.0") (d #t) (k 0)))) (h "10bv1m6lv343x6z9yvbnsz0f5r0xan30lzzsy8fc34v252c247nb") (y #t)))

(define-public crate-parsec-0.3.1 (c (n "parsec") (v "0.3.1") (d (list (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "mopa") (r "^0.2") (d #t) (k 0)) (d (n "pulse") (r "^0.5") (d #t) (k 0)) (d (n "threadpool") (r "^1.0") (d #t) (k 0)))) (h "0adar97jlyysagg7jzln9sr8kyriw8lnljn7hfnja4ziscy4yrjz") (y #t)))

(define-public crate-parsec-0.4.0 (c (n "parsec") (v "0.4.0") (h "0xsr1fx8p2djwq49zpsldkn37briyxh6vl40ai6zk5vr31c0h6p9") (y #t)))

(define-public crate-parsec-0.5.0 (c (n "parsec") (v "0.5.0") (d (list (d (n "clap") (r "~2.31.2") (d #t) (k 2)) (d (n "lazy_static") (r "~1.0.1") (o #t) (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.15.0") (d #t) (k 0)) (d (n "quick-error") (r "~1.2.2") (d #t) (k 0)) (d (n "rand") (r "~0.4.2") (d #t) (k 0)) (d (n "serde") (r "~1.0.66") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.66") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.4.2") (d #t) (k 0)) (d (n "unwrap") (r "~1.1.0") (d #t) (k 2)))) (h "0l75vfg1y94rbgfmr9dsrvnya799k5d3wd37b32jc4vsl30iap8q") (f (quote (("dump-graphs" "lazy_static"))))))

(define-public crate-parsec-0.6.0 (c (n "parsec") (v "0.6.0") (d (list (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "criterion") (r "~0.2.5") (d #t) (k 2)) (d (n "failure") (r "~0.1.5") (d #t) (k 0)) (d (n "fnv") (r "~1.0.6") (d #t) (k 0)) (d (n "itertools") (r "~0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.18.0") (d #t) (k 0)) (d (n "pom") (r "~1.1.0") (o #t) (d #t) (k 0)) (d (n "pom") (r "~1.1.0") (d #t) (k 2)) (d (n "proptest") (r "~0.8.6") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.7.2") (d #t) (k 0)) (d (n "rand_core") (r "~0.5.1") (d #t) (k 0)) (d (n "rand_maidsafe_utilities") (r "~0.3.15") (d #t) (k 0) (p "rand")) (d (n "rand_threshold_crypto") (r "~0.6.5") (d #t) (k 0) (p "rand")) (d (n "rand_xorshift") (r "~0.2.0") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r "~0.2.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.66") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.66") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.2.7") (d #t) (k 2)))) (h "18fl9g8yqhsfwjpd1gyv3ijwbb1dkgxc3nq4965d1pl7lajh6vf8") (f (quote (("testing" "maidsafe_utilities/testing" "proptest" "mock" "pom" "rand_xorshift") ("mock") ("malice-detection") ("dump-graphs"))))))

(define-public crate-parsec-0.7.0 (c (n "parsec") (v "0.7.0") (d (list (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "criterion") (r "~0.2.5") (d #t) (k 2)) (d (n "failure") (r "~0.1.5") (d #t) (k 0)) (d (n "fnv") (r "~1.0.6") (d #t) (k 0)) (d (n "itertools") (r "~0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "maidsafe_utilities") (r "~0.19.0") (d #t) (k 0)) (d (n "pom") (r "~1.1.0") (o #t) (d #t) (k 0)) (d (n "pom") (r "~1.1.0") (d #t) (k 2)) (d (n "proptest") (r "~0.8.6") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.7.2") (d #t) (k 0)) (d (n "rand_core") (r "~0.5.1") (d #t) (k 0)) (d (n "rand_maidsafe_utilities") (r "~0.3.15") (d #t) (k 0) (p "rand")) (d (n "rand_threshold_crypto") (r "~0.6.5") (d #t) (k 0) (p "rand")) (d (n "rand_xorshift") (r "~0.2.0") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r "~0.2.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.66") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.66") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.2.7") (d #t) (k 2)))) (h "08d5lsn53mflxz5lbmv2as90g42v98xpkyw79amilq5y7xsb9mw2") (f (quote (("testing" "maidsafe_utilities/testing" "proptest" "mock" "pom" "rand_xorshift") ("mock") ("malice-detection") ("dump-graphs"))))))

(define-public crate-parsec-0.7.1 (c (n "parsec") (v "0.7.1") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "~2.32.0") (d #t) (k 2)) (d (n "criterion") (r "~0.2.5") (d #t) (k 2)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "failure") (r "~0.1.5") (d #t) (k 0)) (d (n "fnv") (r "~1.0.6") (d #t) (k 0)) (d (n "itertools") (r "~0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "pom") (r "~1.1.0") (o #t) (d #t) (k 0)) (d (n "pom") (r "~1.1.0") (d #t) (k 2)) (d (n "proptest") (r "~0.8.6") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rand_core") (r "~0.5.1") (d #t) (k 0)) (d (n "rand_threshold_crypto") (r "~0.6.5") (d #t) (k 0) (p "rand")) (d (n "rand_xorshift") (r "~0.2.0") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r "~0.2.0") (d #t) (k 2)) (d (n "serde") (r "~1.0.66") (d #t) (k 0)) (d (n "serde_derive") (r "~1.0.66") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.3.1") (d #t) (k 0)) (d (n "tiny-keccak") (r "~1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "~1.2.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.2.7") (d #t) (k 2)))) (h "12qa9pr3siymdlmy259ismnk07ncrg245200x5v6l8gc15x2v1vj") (f (quote (("testing" "proptest" "mock" "pom" "rand_xorshift") ("mock") ("malice-detection") ("dump-graphs"))))))

(define-public crate-parsec-0.7.2 (c (n "parsec") (v "0.7.2") (d (list (d (n "bincode") (r "^1.2.1") (d #t) (k 0)) (d (n "clap") (r "^2.32.0") (d #t) (k 2)) (d (n "criterion") (r "~0.2.5") (d #t) (k 2)) (d (n "env_logger") (r "~0.7.1") (d #t) (k 2)) (d (n "failure") (r "~0.1.5") (d #t) (k 0)) (d (n "fnv") (r "^1.0.6") (d #t) (k 0)) (d (n "itertools") (r "~0.8.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "~0.3.8") (d #t) (k 0)) (d (n "pom") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "pom") (r "^1.1.0") (d #t) (k 2)) (d (n "proptest") (r "~0.8.6") (o #t) (d #t) (k 0)) (d (n "rand") (r "~0.7.3") (d #t) (k 0)) (d (n "rand_core") (r "~0.5.1") (d #t) (k 0)) (d (n "rand_xorshift") (r "~0.2.0") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r "~0.2.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.66") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.66") (d #t) (k 0)) (d (n "threshold_crypto") (r "~0.4.0") (d #t) (k 0)) (d (n "tiny-keccak") (r "^1.5.0") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)) (d (n "walkdir") (r "^2.2.7") (d #t) (k 2)))) (h "04ikiqy89q299r11781565c3kd61cak0b7ll1zfc9a04ysf3vzmp") (f (quote (("testing" "proptest" "mock" "pom" "rand_xorshift") ("mock") ("malice-detection") ("dump-graphs"))))))

(define-public crate-parsec-0.7.3 (c (n "parsec") (v "0.7.3") (d (list (d (n "bincode") (r ">=1.2.1, <2.0.0") (d #t) (k 0)) (d (n "clap") (r ">=2.32.0, <3.0.0") (d #t) (k 2)) (d (n "criterion") (r ">=0.2.5, <0.3.0") (d #t) (k 2)) (d (n "env_logger") (r ">=0.7.1, <0.8.0") (d #t) (k 2)) (d (n "failure") (r ">=0.1.5, <0.2.0") (d #t) (k 0)) (d (n "fnv") (r ">=1.0.6, <2.0.0") (d #t) (k 0)) (d (n "itertools") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "log") (r ">=0.3.8, <0.4.0") (d #t) (k 0)) (d (n "pom") (r ">=1.1.0, <2.0.0") (o #t) (d #t) (k 0)) (d (n "pom") (r ">=1.1.0, <2.0.0") (d #t) (k 2)) (d (n "proptest") (r ">=0.8.6, <0.9.0") (o #t) (d #t) (k 0)) (d (n "rand") (r ">=0.7.3, <0.8.0") (d #t) (k 0)) (d (n "rand_core") (r ">=0.5.1, <0.6.0") (d #t) (k 0)) (d (n "rand_xorshift") (r ">=0.2.0, <0.3.0") (o #t) (d #t) (k 0)) (d (n "rand_xorshift") (r ">=0.2.0, <0.3.0") (d #t) (k 2)) (d (n "serde") (r ">=1.0.66, <2.0.0") (d #t) (k 0)) (d (n "serde_derive") (r ">=1.0.66, <2.0.0") (d #t) (k 0)) (d (n "threshold_crypto") (r ">=0.4.0, <0.5.0") (d #t) (k 0)) (d (n "tiny-keccak") (r ">=1.5.0, <2.0.0") (d #t) (k 0)) (d (n "unwrap") (r ">=1.2.1, <2.0.0") (d #t) (k 0)) (d (n "walkdir") (r ">=2.2.7, <3.0.0") (d #t) (k 2)))) (h "07aqph5ggc7zrpfg1abb3v435v3sr0syx9sxfifgqj1qs6qi6kyc") (f (quote (("testing" "proptest" "mock" "pom" "rand_xorshift") ("mock") ("malice-detection") ("dump-graphs"))))))

