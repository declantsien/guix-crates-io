(define-module (crates-io pa tr patract-wasmi) #:use-module (crates-io))

(define-public crate-patract-wasmi-0.6.2 (c (n "patract-wasmi") (v "0.6.2") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.41.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "validation") (r "^0.3") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "0wmk6qh023l1bmxx1sfb1cl8rmfhqf4vzgbfbbdidw77rrqn7nnk") (f (quote (("vec_memory") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std") ("default" "std") ("core" "vec_memory" "validation/core" "libm"))))))

(define-public crate-patract-wasmi-0.9.1 (c (n "patract-wasmi") (v "0.9.1") (d (list (d (n "assert_matches") (r "^1.1") (d #t) (k 2)) (d (n "downcast-rs") (r "^1.2.0") (k 0)) (d (n "errno") (r "^0.2.4") (o #t) (d #t) (k 0)) (d (n "libc") (r "^0.2.58") (o #t) (d #t) (k 0)) (d (n "libm") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "memory_units") (r "^0.3.0") (d #t) (k 0)) (d (n "num-rational") (r "^0.2.2") (k 0)) (d (n "num-traits") (r "^0.2.8") (k 0)) (d (n "parity-wasm") (r "^0.42.0") (k 0)) (d (n "rand") (r "^0.4.2") (d #t) (k 2)) (d (n "rustc-demangle") (r "^0.1") (d #t) (k 0)) (d (n "validation") (r "^0.4") (k 0) (p "wasmi-validation")) (d (n "wabt") (r "^0.9") (d #t) (k 2)))) (h "1i3wvgkai9srhmafwab89fnpln553mpnris7mrlxikfkcbph9wb0") (f (quote (("vec_memory") ("std" "parity-wasm/std" "validation/std" "num-rational/std" "num-rational/bigint-std" "num-traits/std" "libc" "downcast-rs/std") ("reduced-stack-buffer" "parity-wasm/reduced-stack-buffer") ("default" "std") ("core" "vec_memory" "validation/core" "libm"))))))

