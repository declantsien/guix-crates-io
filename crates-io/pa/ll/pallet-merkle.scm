(define-module (crates-io pa ll pallet-merkle) #:use-module (crates-io))

(define-public crate-pallet-merkle-3.0.0 (c (n "pallet-merkle") (v "3.0.0") (d (list (d (n "balances") (r "^3.0.0") (k 0) (p "pallet-balances")) (d (n "bulletproofs") (r "^2.0.0") (f (quote ("yoloproofs"))) (k 0) (p "webb-bulletproofs")) (d (n "bulletproofs-gadgets") (r "^2.0.0") (k 0)) (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "curve25519-dalek") (r "^3.0.0") (f (quote ("u64_backend" "alloc"))) (k 0)) (d (n "frame-benchmarking") (r "^3.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "merlin") (r "^2.0.0") (k 0)) (d (n "rand_core") (r "^0.5") (f (quote ("alloc" "getrandom"))) (k 0)) (d (n "serde") (r "^1.0.101") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.9.1") (k 0)) (d (n "sp-core") (r "^3.0.0") (k 2)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "15vrpwdw6djhh34rg9ickqdfp9czck41v6s7f83qxl1lnpd5kfyd") (f (quote (("std" "serde" "sp-runtime/std" "sp-io/std" "sp-std/std" "balances/std" "codec/std" "bulletproofs/std" "frame-support/std" "frame-system/std" "frame-benchmarking/std") ("runtime-benchmarks" "frame-benchmarking" "frame-system/runtime-benchmarks" "frame-support/runtime-benchmarks") ("default" "std"))))))

