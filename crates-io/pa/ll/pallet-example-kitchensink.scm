(define-module (crates-io pa ll pallet-example-kitchensink) #:use-module (crates-io))

(define-public crate-pallet-example-kitchensink-0.0.0 (c (n "pallet-example-kitchensink") (v "0.0.0") (h "0d2qzvcwnvxmsn0my8qam6zqs1sp2wpw0cz63rignn2jcdh0zcq5")))

(define-public crate-pallet-example-kitchensink-0.1.0-dev.2 (c (n "pallet-example-kitchensink") (v "0.1.0-dev.2") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.1.0-dev.2") (o #t) (k 0)) (d (n "frame-support") (r "^21.1.0-dev.2") (k 0)) (d (n "frame-system") (r "^21.1.0-dev.2") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^21.1.0-dev.2") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.2") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)))) (h "09m5cwzhl44743vm54akkywymsx03inpq2sgv5nw1qzc0lw0rwrx") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "log/std" "scale-info/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-runtime/std" "sp-std/std" "frame-benchmarking?/std" "pallet-balances/std"))))))

(define-public crate-pallet-example-kitchensink-0.1.0-dev.3 (c (n "pallet-example-kitchensink") (v "0.1.0-dev.3") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.1.0-dev.3") (o #t) (k 0)) (d (n "frame-support") (r "^21.1.0-dev.3") (k 0)) (d (n "frame-system") (r "^21.1.0-dev.3") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^21.1.0-dev.3") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.3") (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)))) (h "1s34akixv9k4w9gd7vp5brpprr7yafh4rbnv79qnk8nyv48b1ixw") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "log/std" "scale-info/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-runtime/std" "sp-std/std" "frame-benchmarking?/std" "pallet-balances/std"))))))

(define-public crate-pallet-example-kitchensink-0.1.0-dev.5 (c (n "pallet-example-kitchensink") (v "0.1.0-dev.5") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=21.1.0-dev.5") (o #t) (k 0)) (d (n "frame-support") (r "=21.1.0-dev.5") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.5") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "=21.1.0-dev.5") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.5") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)))) (h "03dyn3z7ns90if4j6fwys1v104zc8is69ya7hipdgfynlipgrzbv") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "log/std" "scale-info/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-runtime/std" "sp-std/std" "frame-benchmarking?/std" "pallet-balances/std"))))))

(define-public crate-pallet-example-kitchensink-0.1.0-dev.6 (c (n "pallet-example-kitchensink") (v "0.1.0-dev.6") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=21.1.0-dev.6") (o #t) (k 0)) (d (n "frame-support") (r "=21.1.0-dev.6") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.6") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "=21.1.0-dev.6") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)))) (h "0j2hkfrgglh12samqrbkh2qyi0il8d4fjrj8n9fmjybd3i934g8q") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "log/std" "scale-info/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-runtime/std" "sp-std/std" "frame-benchmarking?/std" "pallet-balances/std"))))))

(define-public crate-pallet-example-kitchensink-4.0.0 (c (n "pallet-example-kitchensink") (v "4.0.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^22.0.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)))) (h "0pglzicglkg9vmmbsicnvswx13qyjab5xr845pdxa4y3llz7qlaf") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "log/std" "scale-info/std" "frame-support/std" "frame-system/std" "sp-io/std" "sp-runtime/std" "sp-std/std" "frame-benchmarking?/std" "pallet-balances/std"))))))

(define-public crate-pallet-example-kitchensink-5.0.0 (c (n "pallet-example-kitchensink") (v "5.0.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^23.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^23.0.0") (k 0)) (d (n "frame-system") (r "^23.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^23.0.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)))) (h "0kwll3yh11zgi722k9i3r09jagfinw8vcxk82vrczm64v320cc43") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances/std" "scale-info/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

(define-public crate-pallet-example-kitchensink-6.0.0-dev.1 (c (n "pallet-example-kitchensink") (v "6.0.0-dev.1") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=24.0.0-dev.1") (o #t) (k 0)) (d (n "frame-support") (r "=24.0.0-dev.1") (k 0)) (d (n "frame-system") (r "=24.0.0-dev.1") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "=24.0.0-dev.1") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)))) (h "1cqnnp86aw3qdgz3zpbxwxxbdg76yqkayg0aa79mfgs5x8bx2lc6") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances/std" "scale-info/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

(define-public crate-pallet-example-kitchensink-6.0.0 (c (n "pallet-example-kitchensink") (v "6.0.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^24.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^24.0.0") (k 0)) (d (n "frame-system") (r "^24.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^24.0.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^26.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)))) (h "0h13dp265rmcgyfnvd5b11gdz7ng0v3m8y2drbqx6apjrz9pcx2x") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances/std" "scale-info/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

(define-public crate-pallet-example-kitchensink-7.0.0 (c (n "pallet-example-kitchensink") (v "7.0.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^25.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^25.0.0") (k 0)) (d (n "frame-system") (r "^25.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^25.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "070m50c5hga65p3rz4nb96xqharwk47bzzpnbn86g184pb5raj2y") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances/std" "scale-info/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

(define-public crate-pallet-example-kitchensink-8.0.0 (c (n "pallet-example-kitchensink") (v "8.0.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^26.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^26.0.0") (k 0)) (d (n "frame-system") (r "^26.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^26.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "0q0v31s0y7bfhh2kdkih83r9h6ma27irzraqla4nlqziydxvi75i") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances/std" "scale-info/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

(define-public crate-pallet-example-kitchensink-9.0.0 (c (n "pallet-example-kitchensink") (v "9.0.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^27.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^27.0.0") (k 0)) (d (n "frame-system") (r "^27.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-balances") (r "^27.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-io") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)))) (h "1047530x4l2bshz6xb554b2d97mg1pl886bz2va470r7ybj15fwf") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances/std" "scale-info/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

