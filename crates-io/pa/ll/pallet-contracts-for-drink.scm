(define-module (crates-io pa ll pallet-contracts-for-drink) #:use-module (crates-io))

(define-public crate-pallet-contracts-for-drink-21.0.1 (c (n "pallet-contracts-for-drink") (v "21.0.1") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pallet-balances") (r "^22.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^25.0.0") (k 0)) (d (n "pallet-contracts-proc-macro") (r "^13.0.0") (d #t) (k 0)) (d (n "pallet-insecure-randomness-collective-flip") (r "^10.0.0") (d #t) (k 2)) (d (n "pallet-proxy") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-utility") (r "^22.0.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_pcg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics"))) (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "wasm-instrument") (r "^0.4") (o #t) (k 0)) (d (n "wasmi") (r "^0.30") (k 0)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0sfs3i3m9148jq27asw86sfwqq3jp13aci9af3lxd8p43synm7qf") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "rand" "rand_pcg" "wasm-instrument") ("default" "std")))) (s 2) (e (quote (("std" "serde" "codec/std" "scale-info/std" "sp-core/std" "sp-runtime/std" "sp-io/std" "sp-std/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "wasm-instrument/std" "wasmi/std" "pallet-contracts-primitives/std" "pallet-contracts-proc-macro/full" "log/std" "rand/std" "environmental/std"))))))

(define-public crate-pallet-contracts-for-drink-21.0.2 (c (n "pallet-contracts-for-drink") (v "21.0.2") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pallet-balances") (r "^22.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^25.0.0") (k 0)) (d (n "pallet-contracts-proc-macro") (r "^13.0.0") (d #t) (k 0)) (d (n "pallet-insecure-randomness-collective-flip") (r "^10.0.0") (d #t) (k 2)) (d (n "pallet-proxy") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-utility") (r "^22.0.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_pcg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics"))) (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "wasm-instrument") (r "^0.4") (o #t) (k 0)) (d (n "wasmi") (r "^0.30") (k 0)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1jyhs2a6wahnvy01a75g4qbppg3dzq0g1l496dcvr74mh7np242z") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "rand" "rand_pcg" "wasm-instrument") ("default" "std")))) (s 2) (e (quote (("std" "serde" "codec/std" "scale-info/std" "sp-core/std" "sp-runtime/std" "sp-io/std" "sp-std/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "wasm-instrument/std" "wasmi/std" "pallet-contracts-primitives/std" "pallet-contracts-proc-macro/full" "log/std" "rand/std" "environmental/std"))))))

(define-public crate-pallet-contracts-for-drink-21.0.3 (c (n "pallet-contracts-for-drink") (v "21.0.3") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pallet-balances") (r "^22.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^25.0.0") (k 0)) (d (n "pallet-contracts-proc-macro") (r "^13.0.0") (d #t) (k 0)) (d (n "pallet-insecure-randomness-collective-flip") (r "^10.0.0") (d #t) (k 2)) (d (n "pallet-proxy") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-utility") (r "^22.0.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_pcg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics"))) (k 0)) (d (n "sp-api") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^22.0.0") (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-keystore") (r "^0.28.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^25.0.0") (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)) (d (n "wasm-instrument") (r "^0.4") (o #t) (k 0)) (d (n "wasmi") (r "^0.30") (k 0)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1x1yihyw87y5shj7vpn9a3rc831zi9a0b8g07dfij73463gw4fz7") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "rand" "rand_pcg" "wasm-instrument") ("default" "std")))) (s 2) (e (quote (("std" "serde" "codec/std" "scale-info/std" "sp-core/std" "sp-runtime/std" "sp-io/std" "sp-std/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "wasm-instrument/std" "wasmi/std" "pallet-contracts-primitives/std" "pallet-contracts-proc-macro/full" "log/std" "rand/std" "environmental/std"))))))

(define-public crate-pallet-contracts-for-drink-22.0.0 (c (n "pallet-contracts-for-drink") (v "22.0.0") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "frame-benchmarking") (r "^23.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^23.0.0") (k 0)) (d (n "frame-system") (r "^23.0.0") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pallet-balances") (r "^23.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^23.0.0") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^26.0.0") (k 0)) (d (n "pallet-contracts-proc-macro") (r "^14.0.0") (d #t) (k 0)) (d (n "pallet-insecure-randomness-collective-flip") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-proxy") (r "^23.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-utility") (r "^23.0.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_pcg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics"))) (k 0)) (d (n "sp-api") (r "^21.0.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-keystore") (r "^0.29.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "wasm-instrument") (r "^0.4") (o #t) (k 0)) (d (n "wasmi") (r "^0.31") (k 0)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "0gvq2synrvbmnm8xvcvc8d9jj7aj7f5wcwmrhxafycl7cf75kx4y") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "pallet-insecure-randomness-collective-flip/try-runtime" "pallet-proxy/try-runtime" "pallet-timestamp/try-runtime" "pallet-utility/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-proxy/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-utility/runtime-benchmarks" "rand" "rand_pcg" "sp-runtime/runtime-benchmarks" "wasm-instrument") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "environmental/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances?/std" "pallet-contracts-primitives/std" "pallet-contracts-proc-macro/full" "pallet-insecure-randomness-collective-flip/std" "pallet-proxy/std" "pallet-timestamp/std" "pallet-utility/std" "rand/std" "scale-info/std" "serde" "sp-api/std" "sp-core/std" "sp-io/std" "sp-keystore/std" "sp-runtime/std" "sp-std/std" "wasm-instrument/std" "wasmi/std"))))))

(define-public crate-pallet-contracts-for-drink-22.0.1 (c (n "pallet-contracts-for-drink") (v "22.0.1") (d (list (d (n "array-bytes") (r "^6.1") (d #t) (k 2)) (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "bitflags") (r "^1.3") (d #t) (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "environmental") (r "^1.1.4") (k 0)) (d (n "frame-benchmarking") (r "^23.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^23.0.0") (k 0)) (d (n "frame-system") (r "^23.0.0") (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "pallet-balances") (r "^23.0.0") (o #t) (k 0)) (d (n "pallet-balances") (r "^23.0.0") (d #t) (k 2)) (d (n "pallet-contracts-primitives") (r "^26.0.0") (k 0)) (d (n "pallet-contracts-proc-macro") (r "^14.0.0") (d #t) (k 0)) (d (n "pallet-insecure-randomness-collective-flip") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-proxy") (r "^23.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^22.0.0") (d #t) (k 2)) (d (n "pallet-utility") (r "^23.0.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (k 0)) (d (n "rand_pcg") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1") (f (quote ("const_generics"))) (k 0)) (d (n "sp-api") (r "^21.0.0") (k 0)) (d (n "sp-core") (r "^23.0.0") (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-keystore") (r "^0.29.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^26.0.0") (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)) (d (n "wasm-instrument") (r "^0.4") (o #t) (k 0)) (d (n "wasmi") (r "^0.31") (k 0)) (d (n "wat") (r "^1") (d #t) (k 2)))) (h "1476ln1rm1f0k1n62cfngqjs2fyjdmisnys29s5spxjgggkrw0rz") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-balances/try-runtime" "pallet-insecure-randomness-collective-flip/try-runtime" "pallet-proxy/try-runtime" "pallet-timestamp/try-runtime" "pallet-utility/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-proxy/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-utility/runtime-benchmarks" "rand" "rand_pcg" "sp-runtime/runtime-benchmarks" "wasm-instrument") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "environmental/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-balances?/std" "pallet-contracts-primitives/std" "pallet-contracts-proc-macro/full" "pallet-insecure-randomness-collective-flip/std" "pallet-proxy/std" "pallet-timestamp/std" "pallet-utility/std" "rand/std" "scale-info/std" "serde" "sp-api/std" "sp-core/std" "sp-io/std" "sp-keystore/std" "sp-runtime/std" "sp-std/std" "wasm-instrument/std" "wasmi/std"))))))

