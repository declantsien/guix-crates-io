(define-module (crates-io pa ll pallet-reclaim) #:use-module (crates-io))

(define-public crate-pallet-reclaim-1.0.0 (c (n "pallet-reclaim") (v "1.0.0") (d (list (d (n "chrono") (r "^0.4.26") (k 0)) (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0-dev") (o #t) (k 0)) (d (n "frame-support") (r "^4.0.0-dev") (k 0)) (d (n "frame-system") (r "^4.0.0-dev") (k 0)) (d (n "hex") (r "^0.4.3") (f (quote ("alloc"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (d #t) (k 0)) (d (n "pallet-timestamp") (r "^4.0.0-dev") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sha2") (r "^0.10.6") (k 0)) (d (n "sp-core") (r "^21.0.0") (k 0)) (d (n "sp-io") (r "^23.0.0") (k 2)) (d (n "sp-runtime") (r "^24.0.0") (k 2)))) (h "1xdamgysjpzpwpqn7c6jza3841lcjhd1v3llxp4ibfm6g3mx0dsa") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "scale-info/std" "sp-core/std"))))))

