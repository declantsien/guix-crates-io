(define-module (crates-io pa ll pallet-staking) #:use-module (crates-io))

(define-public crate-pallet-staking-2.0.0-alpha.3 (c (n "pallet-staking") (v "2.0.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-alpha.2") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.2") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-alpha.2") (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.2") (f (quote ("historical"))) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-keyring") (r "^2.0.0-alpha.2") (o #t) (d #t) (k 0)) (d (n "sp-phragmen") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)))) (h "08p9a55d9r5gahqqyn256jmqq41h4m73xwpb0dy4k5dn4xb61bl1") (f (quote (("std" "serde" "sp-keyring" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std") ("migrate") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-alpha.5 (c (n "pallet-staking") (v "2.0.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-alpha.5") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-alpha.5") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.5") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-alpha.5") (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.5") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-keyring") (r "^2.0.0-alpha.5") (o #t) (d #t) (k 0)) (d (n "sp-phragmen") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.5") (k 0)))) (h "166jy62pnvjc3b7kgwiy6n57h7jm9dr35242ypdlcs0jkdmd5bjf") (f (quote (("std" "serde" "sp-keyring" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std") ("runtime-benchmarks" "rand_chacha" "frame-benchmarking" "frame-system/runtime-benchmarks") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-alpha.6 (c (n "pallet-staking") (v "2.0.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-alpha.6") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-alpha.6") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.6") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-alpha.6") (k 0)) (d (n "pallet-indices") (r "^2.0.0-alpha.6") (o #t) (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.6") (f (quote ("historical"))) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.6") (o #t) (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-phragmen") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "055j4xazkdzhz4wlw2wcdkn4y4gii3f3s2vdspzdz932ljk5fqwh") (f (quote (("testing-utils" "std" "pallet-indices/std" "sp-core/std" "rand/std") ("std" "serde" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "sp-core/std") ("runtime-benchmarks" "rand_chacha" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-alpha.7 (c (n "pallet-staking") (v "2.0.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-alpha.7") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-alpha.7") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.7") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-alpha.7") (k 0)) (d (n "pallet-indices") (r "^2.0.0-alpha.7") (o #t) (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.7") (f (quote ("historical"))) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.7") (o #t) (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-phragmen") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.7") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1dnbv98j1a5xcq1kwhkpd76rxwz2saw6w1nga25zacn2xinx5drv") (f (quote (("testing-utils" "std" "pallet-indices/std" "sp-core/std" "rand/std") ("std" "serde" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "sp-core/std") ("runtime-benchmarks" "rand_chacha" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-alpha.8 (c (n "pallet-staking") (v "2.0.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-alpha.8") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-alpha.8") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.8") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-alpha.8") (k 0)) (d (n "pallet-indices") (r "^2.0.0-alpha.8") (o #t) (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.8") (f (quote ("historical"))) (k 0)) (d (n "rand") (r "^0.7.3") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-core") (r "^2.0.0-alpha.8") (o #t) (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-phragmen") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.8") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1hlxbvklqrk7lmyb4rwv98v25l6q54x9wv98k2k8cgpx4f3pqvjz") (f (quote (("testing-utils" "std" "pallet-indices/std" "sp-core/std" "rand/std") ("std" "serde" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "sp-core/std") ("runtime-benchmarks" "rand_chacha" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-rc1 (c (n "pallet-staking") (v "2.0.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc1") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc1") (k 0)) (d (n "frame-system") (r "^2.0.0-rc1") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc1") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc1") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc1") (k 0)) (d (n "sp-io") (r "^2.0.0-rc1") (k 0)) (d (n "sp-phragmen") (r "^2.0.0-rc1") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc1") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc1") (k 0)) (d (n "sp-std") (r "^2.0.0-rc1") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0lxx3hywgpsxassb5pj6im5m2zd5d4ndpwcw73xx90ak3h1r7ld9") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-rc2 (c (n "pallet-staking") (v "2.0.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc2") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc2") (k 0)) (d (n "frame-system") (r "^2.0.0-rc2") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc2") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc2") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc2") (k 0)) (d (n "sp-io") (r "^2.0.0-rc2") (k 0)) (d (n "sp-phragmen") (r "^2.0.0-rc2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc2") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1dzvnh84z7703399qhsdx5zvihnx8vvr83wrwl7wh7rj198w154q") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-phragmen/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-rc3 (c (n "pallet-staking") (v "2.0.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc3") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc3") (k 0)) (d (n "frame-system") (r "^2.0.0-rc3") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc3") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc3") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc3") (k 0)) (d (n "sp-io") (r "^2.0.0-rc3") (k 0)) (d (n "sp-npos-elections") (r "^2.0.0-rc3") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc3") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc3") (k 0)) (d (n "sp-std") (r "^2.0.0-rc3") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0s1hf22j448wnlqkpay6amavp0rnllac71f0allqg8v2fm1k1dkx") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-rc4 (c (n "pallet-staking") (v "2.0.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc4") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc4") (k 0)) (d (n "frame-system") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc4") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc4") (k 0)) (d (n "sp-io") (r "^2.0.0-rc4") (k 0)) (d (n "sp-npos-elections") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc4") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "19x6fad01f1zlqzny2npkvpm56jqz9w7vbliayap9a121r8h1aj3") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-rc5 (c (n "pallet-staking") (v "2.0.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc5") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc5") (k 0)) (d (n "frame-system") (r "^2.0.0-rc5") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc5") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc5") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc5") (k 0)) (d (n "sp-io") (r "^2.0.0-rc5") (k 0)) (d (n "sp-npos-elections") (r "^2.0.0-rc5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc5") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc5") (k 0)) (d (n "sp-std") (r "^2.0.0-rc5") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0gg1sxjircwywn4560mw6fr9jxnm5v7aw09fmmwrji9rm6x9vnvp") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0-rc6 (c (n "pallet-staking") (v "2.0.0-rc6") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc6") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc6") (k 0)) (d (n "frame-system") (r "^2.0.0-rc6") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc6") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc6") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc6") (k 0)) (d (n "sp-io") (r "^2.0.0-rc6") (k 0)) (d (n "sp-npos-elections") (r "^2.0.0-rc6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc6") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc6") (k 0)) (d (n "sp-std") (r "^2.0.0-rc6") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0ab73c9azynksw4ggw4s3mxkh8z7ny1hdws1phpa8i2p3dxgm1v0") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.0 (c (n "pallet-staking") (v "2.0.0") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "pallet-authorship") (r "^2.0.0") (k 0)) (d (n "pallet-session") (r "^2.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-io") (r "^2.0.0") (k 0)) (d (n "sp-npos-elections") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-staking") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1xvbvshsd23y06k2inbi2y76vfv0hkq0npg11m41wbf3qlv6nacx") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-2.0.1 (c (n "pallet-staking") (v "2.0.1") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "pallet-authorship") (r "^2.0.0") (k 0)) (d (n "pallet-session") (r "^2.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-io") (r "^2.0.0") (k 0)) (d (n "sp-npos-elections") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-staking") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "04sj178a3mldz7pn1hri42ci8kyi4n6a2s5f47b5vhkmj9iviwfy") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-3.0.0 (c (n "pallet-staking") (v "3.0.0") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^3.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "pallet-authorship") (r "^3.0.0") (k 0)) (d (n "pallet-session") (r "^3.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^3.0.0") (k 0)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-npos-elections") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-staking") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "0cpviprfpdmqz41qgnakx96hfjw0z3vzrlg7n9avgdw9zspm6n69") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

(define-public crate-pallet-staking-4.0.0 (c (n "pallet-staking") (v "4.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^4.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^4.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^4.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^4.0.0") (k 0)) (d (n "frame-system") (r "^4.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^4.0.0") (k 0)) (d (n "pallet-bags-list") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^4.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^4.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^8.0.0") (k 0)) (d (n "sp-core") (r "^8.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^8.0.0") (k 0)) (d (n "sp-npos-elections") (r "^4.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^8.0.0") (k 0)) (d (n "sp-staking") (r "^4.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "0virwb0dkddnh52l7qkvr94n98y2w6y373dyvg9896j72sg0mpq6") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "pallet-bags-list/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-5.0.0 (c (n "pallet-staking") (v "5.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^5.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^5.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^5.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^5.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^5.0.0") (k 0)) (d (n "frame-system") (r "^5.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^5.0.0") (k 0)) (d (n "pallet-bags-list") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^5.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^5.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^9.0.0") (k 0)) (d (n "sp-npos-elections") (r "^5.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-staking") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "1pbz66lnm3ajxm0s9sv4104llidwpnixv3xx6lv2683lisfwxavi") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-6.0.0 (c (n "pallet-staking") (v "6.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^6.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^6.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^6.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^6.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^6.0.0") (k 0)) (d (n "frame-system") (r "^6.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^6.0.0") (k 0)) (d (n "pallet-bags-list") (r "^6.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^6.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^6.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^6.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^9.0.0") (k 0)) (d (n "sp-npos-elections") (r "^5.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-staking") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "1aikgw08cwqnnsqnqyfngsf5j4p9csqdy48bc10kil7xk7q6xyj8") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-7.0.0 (c (n "pallet-staking") (v "7.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^7.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^7.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^7.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^7.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^7.0.0") (k 0)) (d (n "frame-system") (r "^7.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^7.0.0") (k 0)) (d (n "pallet-bags-list") (r "^7.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^7.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^7.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^7.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^9.0.0") (k 0)) (d (n "sp-npos-elections") (r "^5.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-staking") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "1f3nrlq2bpgnlgpjqm8w8mjalvbpc6qdi8xgy9c0r1mf2jrd0dgx") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-8.0.0 (c (n "pallet-staking") (v "8.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^8.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^8.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^8.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^8.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^8.0.0") (k 0)) (d (n "frame-system") (r "^8.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^8.0.0") (k 0)) (d (n "pallet-bags-list") (r "^8.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^8.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^8.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^8.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^10.0.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^10.0.0") (k 0)) (d (n "sp-npos-elections") (r "^6.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^10.0.0") (k 0)) (d (n "sp-staking") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "0vspyw0ziq3w4m018yqgwwk8rhqbacmx3cq5p35nnxhdf7afq141") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-9.0.0 (c (n "pallet-staking") (v "9.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^9.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^9.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^9.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^9.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^9.0.0") (k 0)) (d (n "frame-system") (r "^9.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^9.0.0") (k 0)) (d (n "pallet-bags-list") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^9.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^9.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^11.0.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^11.0.0") (k 0)) (d (n "sp-npos-elections") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^11.0.0") (k 0)) (d (n "sp-staking") (r "^7.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "1n6ial23n4gwb09xm16bd5lz4da188jrwq34i6vzfph4wwj1k0nq") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-10.0.0 (c (n "pallet-staking") (v "10.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^9.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^9.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^9.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^9.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^9.0.0") (k 0)) (d (n "frame-system") (r "^9.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^9.0.0") (k 0)) (d (n "pallet-bags-list") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^10.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^9.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^11.0.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^11.0.0") (k 0)) (d (n "sp-npos-elections") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^11.0.0") (k 0)) (d (n "sp-staking") (r "^7.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "0zw6mrqiff3gy9ivrs9mjmdxg5j4wdg4sbrfjkqzqjaaq1w9z3wx") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-11.0.0 (c (n "pallet-staking") (v "11.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^11.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^11.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^11.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^11.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^11.0.0") (k 0)) (d (n "frame-system") (r "^11.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^11.0.0") (k 0)) (d (n "pallet-bags-list") (r "^10.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^11.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^10.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^12.0.0") (k 0)) (d (n "sp-core") (r "^11.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^12.0.0") (k 0)) (d (n "sp-npos-elections") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^13.0.0") (k 0)) (d (n "sp-staking") (r "^9.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "0zbhj25x2d0pbysxkxvsmfnhbn6d8hb64yk4dn65vml41lh6l3b8") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-12.0.0 (c (n "pallet-staking") (v "12.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^12.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^12.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^12.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^12.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^12.0.0") (k 0)) (d (n "frame-system") (r "^12.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^12.0.0") (k 0)) (d (n "pallet-bags-list") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^12.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^12.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^11.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^13.0.0") (k 0)) (d (n "sp-core") (r "^12.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^13.0.0") (k 0)) (d (n "sp-npos-elections") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^14.0.0") (k 0)) (d (n "sp-staking") (r "^10.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^7.0.0") (d #t) (k 2)))) (h "17lzpv8x4ipn0hs8fb9gvv53xgfa41i4mg6wsdqkq5bngsa4xyy3") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-13.0.0 (c (n "pallet-staking") (v "13.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^13.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^13.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^13.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^13.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^13.0.0") (k 0)) (d (n "frame-system") (r "^13.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^13.0.0") (k 0)) (d (n "pallet-bags-list") (r "^12.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^13.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^13.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^12.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^14.0.0") (k 0)) (d (n "sp-core") (r "^13.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^14.0.0") (k 0)) (d (n "sp-npos-elections") (r "^11.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^15.0.0") (k 0)) (d (n "sp-staking") (r "^11.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^8.0.0") (d #t) (k 2)))) (h "1171lm6gs3ixrsf2wimhmqwrpjwg1r5pxf1h7hsqw7cj9f85vgx4") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-14.0.0 (c (n "pallet-staking") (v "14.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^14.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^14.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^14.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^14.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^14.0.0") (k 0)) (d (n "frame-system") (r "^14.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^14.0.0") (k 0)) (d (n "pallet-bags-list") (r "^13.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^14.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^14.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^13.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^15.0.0") (k 0)) (d (n "sp-core") (r "^14.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^15.0.0") (k 0)) (d (n "sp-npos-elections") (r "^12.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^16.0.0") (k 0)) (d (n "sp-staking") (r "^12.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^8.0.0") (d #t) (k 2)))) (h "0lhcl3ai547kilgbar0qjiqspkb2awmlnvahk8p6kc0qqj0k2v1j") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-15.0.0 (c (n "pallet-staking") (v "15.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^15.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^15.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^15.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^15.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^15.0.0") (k 0)) (d (n "frame-system") (r "^15.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^15.0.0") (k 0)) (d (n "pallet-bags-list") (r "^14.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^15.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^15.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^14.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^16.0.0") (k 0)) (d (n "sp-core") (r "^15.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^16.0.0") (k 0)) (d (n "sp-npos-elections") (r "^13.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^17.0.0") (k 0)) (d (n "sp-staking") (r "^13.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^8.0.0") (d #t) (k 2)))) (h "11mw768kgyf8zg7w4r9zmzplplfw61cs58d08sy07j9x0plxw2bl") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-16.0.0 (c (n "pallet-staking") (v "16.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^16.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^16.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^16.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^16.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^16.0.0") (k 0)) (d (n "frame-system") (r "^16.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^16.0.0") (k 0)) (d (n "pallet-bags-list") (r "^15.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^16.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^16.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^15.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^17.0.0") (k 0)) (d (n "sp-core") (r "^16.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^17.0.0") (k 0)) (d (n "sp-npos-elections") (r "^14.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^18.0.0") (k 0)) (d (n "sp-staking") (r "^14.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^8.0.0") (d #t) (k 2)))) (h "0v8gms0kkmr864ivbng0nzw2kaqnibi7iw7i03yrm6b354fppyjp") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-17.0.0 (c (n "pallet-staking") (v "17.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^17.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^17.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^17.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^17.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^17.0.0") (k 0)) (d (n "frame-system") (r "^17.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^17.0.0") (k 0)) (d (n "pallet-bags-list") (r "^16.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^17.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^17.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^16.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^18.0.0") (k 0)) (d (n "sp-core") (r "^17.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^18.0.0") (k 0)) (d (n "sp-npos-elections") (r "^15.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^19.0.0") (k 0)) (d (n "sp-staking") (r "^15.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)) (d (n "sp-tracing") (r "^8.0.0") (d #t) (k 2)))) (h "1d2kawri7w93axy8i8p14mqzga5zj6yzrs0x855zq8nlzbn6h8aw") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-18.0.0 (c (n "pallet-staking") (v "18.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^18.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^18.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^18.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^18.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^18.0.0") (k 0)) (d (n "frame-system") (r "^18.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^18.0.0") (k 0)) (d (n "pallet-bags-list") (r "^17.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^18.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^18.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^17.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^19.0.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^19.0.0") (k 0)) (d (n "sp-npos-elections") (r "^16.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^20.0.0") (k 0)) (d (n "sp-staking") (r "^16.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-tracing") (r "^9.0.0") (d #t) (k 2)))) (h "1prwpiys0m2rg034sim42w5c8fxyykmlkk4h3shnpbr8rrk13v1h") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-19.0.0 (c (n "pallet-staking") (v "19.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^19.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^19.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^19.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^19.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^19.0.0") (k 0)) (d (n "frame-system") (r "^19.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^19.0.0") (k 0)) (d (n "pallet-bags-list") (r "^18.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^19.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^19.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^18.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^20.0.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^20.0.0") (k 0)) (d (n "sp-npos-elections") (r "^17.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^21.0.0") (k 0)) (d (n "sp-staking") (r "^17.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-tracing") (r "^9.0.0") (d #t) (k 2)))) (h "1l66ljjv32a4vd210c4xmlbgyi7smgnkaf2a1z7qgfy5zr23lrmi") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-20.0.0 (c (n "pallet-staking") (v "20.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^20.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^20.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^20.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^20.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^20.0.0") (k 0)) (d (n "frame-system") (r "^20.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^20.0.0") (k 0)) (d (n "pallet-bags-list") (r "^19.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^20.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^20.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^19.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^21.0.0") (k 0)) (d (n "sp-core") (r "^19.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^21.0.0") (k 0)) (d (n "sp-npos-elections") (r "^18.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^22.0.0") (k 0)) (d (n "sp-staking") (r "^18.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-tracing") (r "^9.0.0") (d #t) (k 2)))) (h "1lnny5mrq7gffl850vr47z3ms9r92rvgj8a2r69w431pqa11zy1j") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-21.0.0 (c (n "pallet-staking") (v "21.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^21.0.0") (d #t) (k 2)) (d (n "frame-election-provider-support") (r "^21.0.0") (k 0)) (d (n "frame-election-provider-support") (r "^21.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^21.0.0") (k 0)) (d (n "frame-system") (r "^21.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^21.0.0") (k 0)) (d (n "pallet-bags-list") (r "^20.0.0") (d #t) (k 2)) (d (n "pallet-balances") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^21.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^20.0.0") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^22.0.0") (k 0)) (d (n "sp-core") (r "^20.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^22.0.0") (k 0)) (d (n "sp-npos-elections") (r "^19.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^23.0.0") (k 0)) (d (n "sp-staking") (r "^19.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)) (d (n "sp-tracing") (r "^9.0.0") (d #t) (k 2)))) (h "1g3sngndpklskk3f37ng3ygyy4h6n6lcpjbpd2wn13rwm29fp558") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-21.1.0-dev.2 (c (n "pallet-staking") (v "21.1.0-dev.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.1.0-dev.2") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^21.1.0-dev.2") (k 0)) (d (n "frame-support") (r "^21.1.0-dev.2") (k 0)) (d (n "frame-system") (r "^21.1.0-dev.2") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^21.1.0-dev.2") (k 0)) (d (n "pallet-session") (r "^21.1.0-dev.2") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^19.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)))) (h "0pmwmhqb5hxrjl6vp1zb6lx5dq2yfkl635mdh4976z2ncrjlp2x9") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde/std" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-21.1.0-dev.3 (c (n "pallet-staking") (v "21.1.0-dev.3") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.1.0-dev.3") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^21.1.0-dev.3") (k 0)) (d (n "frame-support") (r "^21.1.0-dev.3") (k 0)) (d (n "frame-system") (r "^21.1.0-dev.3") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^21.1.0-dev.3") (k 0)) (d (n "pallet-session") (r "^21.1.0-dev.3") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^19.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)))) (h "041x54gqkn2lhbdnwn9y5f0ia58xikgcq4z2b2xjd2j4m7d7vby9") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde/std" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-21.1.0-dev.5 (c (n "pallet-staking") (v "21.1.0-dev.5") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=21.1.0-dev.5") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "=21.1.0-dev.5") (k 0)) (d (n "frame-support") (r "=21.1.0-dev.5") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.5") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=21.1.0-dev.5") (k 0)) (d (n "pallet-session") (r "=21.1.0-dev.5") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "=19.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)))) (h "06irbs3b4cqz5pa5biv44yib0ci3rivj7zia7dxlz31d5719flzl") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde/std" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-21.1.0-dev.6 (c (n "pallet-staking") (v "21.1.0-dev.6") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=21.1.0-dev.6") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "=21.1.0-dev.6") (k 0)) (d (n "frame-support") (r "=21.1.0-dev.6") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.6") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-session") (r "=21.1.0-dev.6") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "=19.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)))) (h "1vfy9pqr8qc2d494682d9ysfhjfwbp88lhsy8680snlr6xzyz640") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde/std" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-22.0.0 (c (n "pallet-staking") (v "22.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^22.0.0") (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^22.0.0") (k 0)) (d (n "pallet-session") (r "^22.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^20.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)))) (h "141vnds6f2zjw126x6jrp7n85r9z84cq0lw8m9xifgx0r420wc1s") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-election-provider-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "rand_chacha" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "frame-benchmarking?/std" "serde/std" "codec/std" "scale-info/std" "sp-std/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std" "log/std" "frame-election-provider-support/std"))))))

(define-public crate-pallet-staking-23.0.0 (c (n "pallet-staking") (v "23.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^23.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^23.0.0") (k 0)) (d (n "frame-support") (r "^23.0.0") (k 0)) (d (n "frame-system") (r "^23.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^23.0.0") (k 0)) (d (n "pallet-session") (r "^23.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^21.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)))) (h "0c949mfxlm4l4fckkpapp3ih7yhhzp4s686z5q0y8rc5nwvv3fb6") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-24.0.0-dev.1 (c (n "pallet-staking") (v "24.0.0-dev.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=24.0.0-dev.1") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "=24.0.0-dev.1") (k 0)) (d (n "frame-support") (r "=24.0.0-dev.1") (k 0)) (d (n "frame-system") (r "=24.0.0-dev.1") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-session") (r "=24.0.0-dev.1") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "=26.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "=22.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)))) (h "0rqjfrwh4771cyfwisrghfiph8fv051ck127vi2jj0yrm7n7z15i") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-24.0.0 (c (n "pallet-staking") (v "24.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^24.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^24.0.0") (k 0)) (d (n "frame-support") (r "^24.0.0") (k 0)) (d (n "frame-system") (r "^24.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^24.0.0") (k 0)) (d (n "pallet-session") (r "^24.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^26.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)))) (h "1i36libc44vbxqxk04p9h18jh22ypxh1k09ficjl5y4mkffn86vs") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-25.0.0 (c (n "pallet-staking") (v "25.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^25.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^25.0.0") (k 0)) (d (n "frame-support") (r "^25.0.0") (k 0)) (d (n "frame-system") (r "^25.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^25.0.0") (k 0)) (d (n "pallet-session") (r "^25.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "08yrawqa9q70lsacpbgsd7zdipq1gfw7zbhdfpcpsd9dsfmkblxy") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-26.0.0 (c (n "pallet-staking") (v "26.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^26.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^26.0.0") (k 0)) (d (n "frame-support") (r "^26.0.0") (k 0)) (d (n "frame-system") (r "^26.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^26.0.0") (k 0)) (d (n "pallet-session") (r "^26.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "0lvpmrnj2bada62aiavihcbvz5sds6p7i8l9pwx7x53dshnx3j8j") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-26.0.1 (c (n "pallet-staking") (v "26.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^26.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^26.0.0") (k 0)) (d (n "frame-support") (r "^26.0.0") (k 0)) (d (n "frame-system") (r "^26.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^26.0.0") (k 0)) (d (n "pallet-session") (r "^26.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "11y6l1n6al2pbck1v4dls6w61shdfhviqvjabi99vf850x86w3nz") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-27.0.0 (c (n "pallet-staking") (v "27.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^27.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^27.0.0") (k 0)) (d (n "frame-support") (r "^27.0.0") (k 0)) (d (n "frame-system") (r "^27.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^27.0.0") (k 0)) (d (n "pallet-session") (r "^27.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)))) (h "0kjyjj4lvy7zpbxms602lxqy98bw9pls0f48vkrwbgcqa8b284vj") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-28.0.0 (c (n "pallet-staking") (v "28.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^28.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^28.0.0") (k 0)) (d (n "frame-support") (r "^28.0.0") (k 0)) (d (n "frame-system") (r "^28.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^28.0.0") (k 0)) (d (n "pallet-session") (r "^28.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1njyihzs93h1wjdwx49mqld7gza4rrr86hc22gw43vnn5g5bp0w8") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-29.0.0 (c (n "pallet-staking") (v "29.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.0") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1zkyf1fnplz2fcv02h07v7nrykl2n246gsikx4k7l0ngjmr1551s") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-30.0.0 (c (n "pallet-staking") (v "30.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^30.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^30.0.0") (k 0)) (d (n "frame-support") (r "^30.0.0") (k 0)) (d (n "frame-system") (r "^30.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-authorship") (r "^30.0.0") (k 0)) (d (n "pallet-session") (r "^30.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1azbk59yx1r9gxb8l7nwkb175wcl31qlb9kxwv3lab6r7dgs7i3p") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-30.0.1 (c (n "pallet-staking") (v "30.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^30.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^30.0.0") (k 0)) (d (n "frame-support") (r "^30.0.0") (k 0)) (d (n "frame-system") (r "^30.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-authorship") (r "^30.0.0") (k 0)) (d (n "pallet-session") (r "^30.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0lr7k2d4w0z1bj3cp9a4ihqs8di5xagpckagk7vbs4xb80zc7jif") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-25.0.1 (c (n "pallet-staking") (v "25.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^25.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^25.0.0") (k 0)) (d (n "frame-support") (r "^25.0.0") (k 0)) (d (n "frame-system") (r "^25.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^25.0.0") (k 0)) (d (n "pallet-session") (r "^25.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "1xb2mm53g93fiaymai8zsm0dya3p569925fvlza2739amsx9r0nn") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-31.0.0 (c (n "pallet-staking") (v "31.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^31.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^31.0.0") (k 0)) (d (n "frame-support") (r "^31.0.0") (k 0)) (d (n "frame-system") (r "^31.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-authorship") (r "^31.0.0") (k 0)) (d (n "pallet-session") (r "^31.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^33.0.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1xy8938pfw7hq7l02c2cdxx4gan97jcblz04wa074c1pwwi3vsxs") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-29.0.1 (c (n "pallet-staking") (v "29.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.1") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "004c7b4d43fnqxmpavqzrryz901yzg48acfd98p1v8ffgs3yafnj") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-29.0.2 (c (n "pallet-staking") (v "29.0.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.2") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0v1dicskd1dcmay16frfhhhjwis2qgv6rlpsjprdkw4rqhl7v2v6") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-32.0.0 (c (n "pallet-staking") (v "32.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^32.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^32.0.0") (k 0)) (d (n "frame-support") (r "^32.0.0") (k 0)) (d (n "frame-system") (r "^32.0.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-authorship") (r "^32.0.0") (k 0)) (d (n "pallet-session") (r "^32.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^34.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^34.0.0") (k 0)) (d (n "sp-runtime") (r "^35.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "18wnym2hzwnll58vdcj9nw4r3a5g1n2w2ck776npjk5pqqfvd2ib") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-30.0.2 (c (n "pallet-staking") (v "30.0.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^30.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^30.0.0") (k 0)) (d (n "frame-support") (r "^30.0.0") (k 0)) (d (n "frame-system") (r "^30.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-authorship") (r "^30.0.0") (k 0)) (d (n "pallet-session") (r "^30.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1kx0dy644jjyf2szj1l61d9wzs0iyszh2425vz2mvg1jrsh1rchf") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-26.0.2 (c (n "pallet-staking") (v "26.0.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^26.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^26.0.0") (k 0)) (d (n "frame-support") (r "^26.0.0") (k 0)) (d (n "frame-system") (r "^26.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^26.0.0") (k 0)) (d (n "pallet-session") (r "^26.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.188") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "1f2bk437zx0cp0x6brz7lijhfqzgim574qqdv42yp86rc62ma43i") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-27.0.1 (c (n "pallet-staking") (v "27.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^27.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^27.0.0") (k 0)) (d (n "frame-support") (r "^27.0.0") (k 0)) (d (n "frame-system") (r "^27.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^27.0.0") (k 0)) (d (n "pallet-session") (r "^27.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)))) (h "17z9vps9gvavqzjqdfwm4znaybm8lhjlydz4x7nr0vv9vd0siis0") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-28.0.1 (c (n "pallet-staking") (v "28.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^28.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^28.0.0") (k 0)) (d (n "frame-support") (r "^28.0.0") (k 0)) (d (n "frame-system") (r "^28.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^28.0.0") (k 0)) (d (n "pallet-session") (r "^28.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1x5sacxbbsfrf1izp3hlijvc1vyfjzhv1w92h2vqh2fi8p4f8gx8") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-33.0.0 (c (n "pallet-staking") (v "33.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^33.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^33.0.0") (k 0)) (d (n "frame-support") (r "^33.0.0") (k 0)) (d (n "frame-system") (r "^33.0.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-authorship") (r "^33.0.0") (k 0)) (d (n "pallet-session") (r "^33.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^35.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^35.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0v83721jfngi8x84d4x84i0r40q0r22hrk7acaabn34yszrli3pn") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-29.0.3 (c (n "pallet-staking") (v "29.0.3") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^29.0.0") (k 0)) (d (n "frame-support") (r "^29.0.2") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "06z1ssdf8sl1yma7rk45rmrn9ck7ghm9g9zcyh6s955p9s0h06q6") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-staking-34.0.0 (c (n "pallet-staking") (v "34.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^34.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^34.0.0") (k 0)) (d (n "frame-support") (r "^34.0.0") (k 0)) (d (n "frame-system") (r "^34.0.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-authorship") (r "^34.0.0") (k 0)) (d (n "pallet-session") (r "^34.0.0") (f (quote ("historical"))) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("alloc" "derive"))) (k 0)) (d (n "sp-application-crypto") (r "^36.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^36.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-staking") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0f2g6pzygvg6b50crbrhqkxirpwspabc2dv4bn4g7xrjpmx8fqx5") (f (quote (("try-runtime" "frame-election-provider-support/try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-election-provider-support/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "rand_chacha" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-election-provider-support/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "scale-info/std" "serde/std" "sp-application-crypto/std" "sp-io/std" "sp-runtime/std" "sp-staking/std" "sp-std/std"))))))

