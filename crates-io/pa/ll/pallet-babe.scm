(define-module (crates-io pa ll pallet-babe) #:use-module (crates-io))

(define-public crate-pallet-babe-2.0.0-alpha.3 (c (n "pallet-babe") (v "2.0.0-alpha.3") (d (list (d (n "codec") (r "^1.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-alpha.2") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.2") (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.2") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-alpha.2") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-alpha.2") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.2") (k 0)))) (h "1mk5jfifdka76wl66ssps8gdlz64fglb414v9sg7lbfnlrkx95k2") (f (quote (("std" "serde" "codec/std" "sp-std/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-alpha.5 (c (n "pallet-babe") (v "2.0.0-alpha.5") (d (list (d (n "codec") (r "^1.2.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-alpha.5") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.5") (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.5") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-alpha.5") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-alpha.5") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.5") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.5") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.5") (k 0)))) (h "1rh2byp84pzp8pz9w468475gqh2hkz2g4bpxaj4ilkkvljj2072x") (f (quote (("std" "serde" "codec/std" "sp-std/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-alpha.6 (c (n "pallet-babe") (v "2.0.0-alpha.6") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-alpha.6") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.6") (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.6") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-alpha.6") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-alpha.6") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.6") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.6") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.6") (k 0)))) (h "01r55gqijpbzic1566ikxi4raanp96alilhd9d5b8k8fpg0anv8n") (f (quote (("std" "serde" "codec/std" "sp-std/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-alpha.7 (c (n "pallet-babe") (v "2.0.0-alpha.7") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-alpha.7") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.7") (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.7") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-alpha.7") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-alpha.7") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.7") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.7") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.7") (k 0)))) (h "0fca5rsp8dypdbcr5lawlnk6jbfcz7gf8qwlckgwqpqpwb2787fd") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-application-crypto/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-alpha.8 (c (n "pallet-babe") (v "2.0.0-alpha.8") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-alpha.8") (k 0)) (d (n "frame-system") (r "^2.0.0-alpha.8") (k 0)) (d (n "pallet-session") (r "^2.0.0-alpha.8") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-alpha.8") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-alpha.8") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-alpha.8") (k 0)) (d (n "sp-inherents") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-io") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-runtime") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-staking") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-std") (r "^2.0.0-alpha.8") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-alpha.8") (k 0)))) (h "0rng6ia04p2vm39mqk7cvf6qzxmbiw34szli6pbq2xj6s698b0fc") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-application-crypto/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-rc1 (c (n "pallet-babe") (v "2.0.0-rc1") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc1") (k 0)) (d (n "frame-system") (r "^2.0.0-rc1") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc1") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc1") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc1") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-rc1") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc1") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc1") (k 0)) (d (n "sp-io") (r "^2.0.0-rc1") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc1") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc1") (k 0)) (d (n "sp-std") (r "^2.0.0-rc1") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc1") (k 0)))) (h "0g0fvqgn3f537qd6g11fx6bm857ffzdcpxngllb0wdfj3q1kim3x") (f (quote (("std" "codec/std" "serde" "sp-std/std" "sp-application-crypto/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-rc2 (c (n "pallet-babe") (v "2.0.0-rc2") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc2") (k 0)) (d (n "frame-system") (r "^2.0.0-rc2") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc2") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc2") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc2") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-rc2") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc2") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc2") (k 0)) (d (n "sp-io") (r "^2.0.0-rc2") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc2") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc2") (k 0)) (d (n "sp-std") (r "^2.0.0-rc2") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc2") (k 0)))) (h "1x3zfn6cg2y9grg84qm4ril3m4rgdif9gs5120ynpsxzr84fn55h") (f (quote (("std" "codec/std" "serde" "sp-std/std" "sp-application-crypto/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-rc3 (c (n "pallet-babe") (v "2.0.0-rc3") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc3") (k 0)) (d (n "frame-system") (r "^2.0.0-rc3") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc3") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc3") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc3") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-rc3") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc3") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc3") (k 0)) (d (n "sp-io") (r "^2.0.0-rc3") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc3") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc3") (k 0)) (d (n "sp-std") (r "^2.0.0-rc3") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc3") (k 0)))) (h "16ygzl7g2i5ifna0qdsq3zpd5nnq8iwxi351fhhgzlk5bgpv6xd4") (f (quote (("std" "codec/std" "serde" "sp-std/std" "sp-application-crypto/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-rc4 (c (n "pallet-babe") (v "2.0.0-rc4") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc4") (k 0)) (d (n "frame-system") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc4") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc4") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-rc4") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc4") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc4") (k 0)) (d (n "sp-io") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc4") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc4") (k 0)))) (h "1c48q9w4i1rg83i6d9pzqkwp37l87388cms9cnq2wkchjh0mwj2l") (f (quote (("std" "codec/std" "serde" "sp-std/std" "sp-application-crypto/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "frame-system/std" "pallet-timestamp/std" "sp-timestamp/std" "sp-inherents/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "pallet-session/std" "sp-io/std") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-rc5 (c (n "pallet-babe") (v "2.0.0-rc5") (d (list (d (n "codec") (r "^1.3.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc5") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc5") (k 0)) (d (n "frame-system") (r "^2.0.0-rc5") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc5") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc5") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc5") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc5") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-rc5") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc5") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc5") (k 0)) (d (n "sp-io") (r "^2.0.0-rc5") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc5") (k 0)) (d (n "sp-session") (r "^2.0.0-rc5") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc5") (k 0)) (d (n "sp-std") (r "^2.0.0-rc5") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc5") (k 0)))) (h "1bmfmafws0bbmv7nivvic96a5bm2sqly1vbi8r26aj0jrvxpggmg") (f (quote (("std" "codec/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "serde" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-inherents/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "sp-timestamp/std") ("runtime-benchmarks" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0-rc6 (c (n "pallet-babe") (v "2.0.0-rc6") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0-rc6") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0-rc6") (k 0)) (d (n "frame-system") (r "^2.0.0-rc6") (k 0)) (d (n "pallet-authorship") (r "^2.0.0-rc6") (k 0)) (d (n "pallet-session") (r "^2.0.0-rc6") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc6") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0-rc6") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0-rc6") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0-rc6") (k 0)) (d (n "sp-inherents") (r "^2.0.0-rc6") (k 0)) (d (n "sp-io") (r "^2.0.0-rc6") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc6") (k 0)) (d (n "sp-session") (r "^2.0.0-rc6") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc6") (k 0)) (d (n "sp-std") (r "^2.0.0-rc6") (k 0)) (d (n "sp-timestamp") (r "^2.0.0-rc6") (k 0)))) (h "0mmgkx0vg8wrgb61paczjrklas9xnzwhlz7sib2ii62mzwilc9b1") (f (quote (("std" "codec/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "serde" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-inherents/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "sp-timestamp/std") ("runtime-benchmarks" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.0 (c (n "pallet-babe") (v "2.0.0") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "pallet-authorship") (r "^2.0.0") (k 0)) (d (n "pallet-session") (r "^2.0.0") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0") (k 0)) (d (n "sp-inherents") (r "^2.0.0") (k 0)) (d (n "sp-io") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-session") (r "^2.0.0") (k 0)) (d (n "sp-staking") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-timestamp") (r "^2.0.0") (k 0)))) (h "1n8bc6irakcl5ma28qaa68vrpcf3sn6csin2fj14k9n4p2zh5rpj") (f (quote (("std" "codec/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "serde" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-inherents/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "sp-timestamp/std") ("runtime-benchmarks" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-babe-2.0.1 (c (n "pallet-babe") (v "2.0.1") (d (list (d (n "codec") (r "^1.3.4") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^2.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^2.0.0") (k 0)) (d (n "frame-system") (r "^2.0.0") (k 0)) (d (n "pallet-authorship") (r "^2.0.0") (k 0)) (d (n "pallet-session") (r "^2.0.0") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^2.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.8.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.8.0") (k 0)) (d (n "sp-inherents") (r "^2.0.0") (k 0)) (d (n "sp-io") (r "^2.0.0") (k 0)) (d (n "sp-runtime") (r "^2.0.0") (k 0)) (d (n "sp-session") (r "^2.0.0") (k 0)) (d (n "sp-staking") (r "^2.0.0") (k 0)) (d (n "sp-std") (r "^2.0.0") (k 0)) (d (n "sp-timestamp") (r "^2.0.0") (k 0)))) (h "0fwjdmxwm8y2lbpxikqvn4wkn67qzpp18vpl3bc6v6blv6fdbqhp") (f (quote (("std" "codec/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "serde" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-inherents/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "sp-timestamp/std") ("runtime-benchmarks" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-babe-3.0.0 (c (n "pallet-babe") (v "3.0.0") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^3.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "pallet-authorship") (r "^3.0.0") (k 0)) (d (n "pallet-session") (r "^3.0.0") (k 0)) (d (n "pallet-timestamp") (r "^3.0.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^3.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.9.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.9.0") (k 0)) (d (n "sp-inherents") (r "^3.0.0") (k 0)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-session") (r "^3.0.0") (k 0)) (d (n "sp-staking") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "sp-timestamp") (r "^3.0.0") (k 0)))) (h "0ja9chywaarblil2lgyh5rcn14p4nhx5bmlsa8cvjpyzv1bwpxzz") (f (quote (("std" "codec/std" "frame-benchmarking/std" "frame-support/std" "frame-system/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "serde" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-inherents/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std" "sp-timestamp/std") ("runtime-benchmarks" "frame-benchmarking") ("default" "std"))))))

(define-public crate-pallet-babe-4.0.0 (c (n "pallet-babe") (v "4.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^4.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^4.0.0") (k 0)) (d (n "frame-system") (r "^4.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^4.0.0") (k 0)) (d (n "pallet-balances") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^4.0.0") (k 0)) (d (n "pallet-staking") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^4.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^8.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.10.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.10.0") (k 0)) (d (n "sp-core") (r "^8.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^8.0.0") (k 0)) (d (n "sp-runtime") (r "^8.0.0") (k 0)) (d (n "sp-session") (r "^4.0.0") (k 0)) (d (n "sp-staking") (r "^4.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "076495sdxwjfiqlbn2d4yalbwsggvc07a3g51myc1qqk8jscsx11") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-5.0.0 (c (n "pallet-babe") (v "5.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^5.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^5.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^5.0.0") (k 0)) (d (n "frame-system") (r "^5.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^5.0.0") (k 0)) (d (n "pallet-balances") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^5.0.0") (k 0)) (d (n "pallet-staking") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^5.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.11.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.11.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^9.0.0") (k 0)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-session") (r "^5.0.0") (k 0)) (d (n "sp-staking") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "0h41xwcy0dsj1rycd221k8kh6nd2c2p25ql35i7m7v8sdk6a8mk3") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-6.0.0 (c (n "pallet-babe") (v "6.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^6.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^6.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^6.0.0") (k 0)) (d (n "frame-system") (r "^6.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^6.0.0") (k 0)) (d (n "pallet-balances") (r "^6.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^6.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^6.0.0") (k 0)) (d (n "pallet-staking") (r "^6.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^6.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.11.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.11.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^9.0.0") (k 0)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-session") (r "^5.0.0") (k 0)) (d (n "sp-staking") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "1scqijlmfi1zf1pvaz0hz66bv58c2lg5506jg0lv8wbgxzsjbvpc") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-7.0.0 (c (n "pallet-babe") (v "7.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^7.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^7.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^7.0.0") (k 0)) (d (n "frame-system") (r "^7.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^7.0.0") (k 0)) (d (n "pallet-balances") (r "^7.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^7.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^7.0.0") (k 0)) (d (n "pallet-staking") (r "^7.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^7.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^9.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.11.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.11.0") (k 0)) (d (n "sp-core") (r "^9.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^9.0.0") (k 0)) (d (n "sp-runtime") (r "^9.0.0") (k 0)) (d (n "sp-session") (r "^5.0.0") (k 0)) (d (n "sp-staking") (r "^5.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "12xgw4i2bqqi7w0s8yqzx12i8xbjd49s3727aj5z2dhz3vw0agm4") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-8.0.0 (c (n "pallet-babe") (v "8.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^8.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^8.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^8.0.0") (k 0)) (d (n "frame-system") (r "^8.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^8.0.0") (k 0)) (d (n "pallet-balances") (r "^8.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^8.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^8.0.0") (k 0)) (d (n "pallet-staking") (r "^8.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^8.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^10.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.12.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.12.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^10.0.0") (k 0)) (d (n "sp-runtime") (r "^10.0.0") (k 0)) (d (n "sp-session") (r "^6.0.0") (k 0)) (d (n "sp-staking") (r "^6.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "04z7lzdgn3wf4fc7nngn9lcl4bs8s73m7n0hnz15r5vpykhn12dn") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-9.0.0 (c (n "pallet-babe") (v "9.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^9.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^9.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^9.0.0") (k 0)) (d (n "frame-system") (r "^9.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^9.0.0") (k 0)) (d (n "pallet-balances") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^9.0.0") (k 0)) (d (n "pallet-staking") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^9.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^11.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.13.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.13.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^11.0.0") (k 0)) (d (n "sp-runtime") (r "^11.0.0") (k 0)) (d (n "sp-session") (r "^7.0.0") (k 0)) (d (n "sp-staking") (r "^7.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "13r0pap4d3ii48w9d9l44dv98fhpzrk3yjynljk6a22ylh5lmsw2") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-10.0.0 (c (n "pallet-babe") (v "10.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^9.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^9.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^9.0.0") (k 0)) (d (n "frame-system") (r "^9.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^9.0.0") (k 0)) (d (n "pallet-balances") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^9.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^10.0.0") (k 0)) (d (n "pallet-staking") (r "^10.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^9.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^11.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.13.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.13.0") (k 0)) (d (n "sp-core") (r "^10.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^11.0.0") (k 0)) (d (n "sp-runtime") (r "^11.0.0") (k 0)) (d (n "sp-session") (r "^8.0.0") (k 0)) (d (n "sp-staking") (r "^7.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "0s58k9wljl0db5dq606i7sk3hlvxafyn8avdk9hqppkqngmc5524") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-11.0.0 (c (n "pallet-babe") (v "11.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^11.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^11.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^11.0.0") (k 0)) (d (n "frame-system") (r "^11.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^11.0.0") (k 0)) (d (n "pallet-balances") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^10.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^11.0.0") (k 0)) (d (n "pallet-staking") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^10.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^12.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.15.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.15.0") (k 0)) (d (n "sp-core") (r "^11.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^12.0.0") (k 0)) (d (n "sp-runtime") (r "^13.0.0") (k 0)) (d (n "sp-session") (r "^10.0.0") (k 0)) (d (n "sp-staking") (r "^9.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "02030w35nfi34cyp5xhs2c5m6nm1jlswyfkpp78743s2yqs36fnn") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-12.0.0 (c (n "pallet-babe") (v "12.0.0") (d (list (d (n "codec") (r "^3.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^12.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^12.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^12.0.0") (k 0)) (d (n "frame-system") (r "^12.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^12.0.0") (k 0)) (d (n "pallet-balances") (r "^12.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^11.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^12.0.0") (k 0)) (d (n "pallet-staking") (r "^12.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^11.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^13.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.16.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.16.0") (k 0)) (d (n "sp-core") (r "^12.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^13.0.0") (k 0)) (d (n "sp-runtime") (r "^14.0.0") (k 0)) (d (n "sp-session") (r "^11.0.0") (k 0)) (d (n "sp-staking") (r "^10.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "12lra4j2bln0p33r6vpc4p6hfndy6rb7qxj2qbbhkx6jmfid85b2") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-13.0.0 (c (n "pallet-babe") (v "13.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^13.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^13.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^13.0.0") (k 0)) (d (n "frame-system") (r "^13.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^13.0.0") (k 0)) (d (n "pallet-balances") (r "^13.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^12.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^13.0.0") (k 0)) (d (n "pallet-staking") (r "^13.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^12.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^14.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.17.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.17.0") (k 0)) (d (n "sp-core") (r "^13.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^14.0.0") (k 0)) (d (n "sp-runtime") (r "^15.0.0") (k 0)) (d (n "sp-session") (r "^12.0.0") (k 0)) (d (n "sp-staking") (r "^11.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "135wn6z14z0yfz40anbj59cm64d6pq9ybms91iwdgsf94zbmjvzn") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-14.0.0 (c (n "pallet-babe") (v "14.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^14.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^14.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^14.0.0") (k 0)) (d (n "frame-system") (r "^14.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^14.0.0") (k 0)) (d (n "pallet-balances") (r "^14.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^13.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^14.0.0") (k 0)) (d (n "pallet-staking") (r "^14.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^13.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^15.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.18.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.18.0") (k 0)) (d (n "sp-core") (r "^14.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^15.0.0") (k 0)) (d (n "sp-runtime") (r "^16.0.0") (k 0)) (d (n "sp-session") (r "^13.0.0") (k 0)) (d (n "sp-staking") (r "^12.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "0clrj3hmf98rhk6agnn5gnyfpgm1n6bq6wvpxdgs8dy3fwkhzgn2") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-15.0.0 (c (n "pallet-babe") (v "15.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^15.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^15.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^15.0.0") (k 0)) (d (n "frame-system") (r "^15.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^15.0.0") (k 0)) (d (n "pallet-balances") (r "^15.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^14.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^15.0.0") (k 0)) (d (n "pallet-staking") (r "^15.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^14.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^16.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.19.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.19.0") (k 0)) (d (n "sp-core") (r "^15.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^16.0.0") (k 0)) (d (n "sp-runtime") (r "^17.0.0") (k 0)) (d (n "sp-session") (r "^14.0.0") (k 0)) (d (n "sp-staking") (r "^13.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "1zi4szr4hjq5a16dglgvg9syvbjqsqz8sr9nwm69raz24a1nc8hf") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-16.0.0 (c (n "pallet-babe") (v "16.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^16.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^16.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^16.0.0") (k 0)) (d (n "frame-system") (r "^16.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^16.0.0") (k 0)) (d (n "pallet-balances") (r "^16.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^15.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^16.0.0") (k 0)) (d (n "pallet-staking") (r "^16.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^15.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^17.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.20.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.20.0") (k 0)) (d (n "sp-core") (r "^16.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^17.0.0") (k 0)) (d (n "sp-runtime") (r "^18.0.0") (k 0)) (d (n "sp-session") (r "^15.0.0") (k 0)) (d (n "sp-staking") (r "^14.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "1gx9x315fi1drprqcij9szz392lpp2jqjg0nhj5shjfm5bpz533i") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-17.0.0 (c (n "pallet-babe") (v "17.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^17.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^17.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^17.0.0") (k 0)) (d (n "frame-system") (r "^17.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^17.0.0") (k 0)) (d (n "pallet-balances") (r "^17.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^16.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^17.0.0") (k 0)) (d (n "pallet-staking") (r "^17.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^4.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^16.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^18.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.21.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.21.0") (k 0)) (d (n "sp-core") (r "^17.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^18.0.0") (k 0)) (d (n "sp-runtime") (r "^19.0.0") (k 0)) (d (n "sp-session") (r "^16.0.0") (k 0)) (d (n "sp-staking") (r "^15.0.0") (k 0)) (d (n "sp-std") (r "^6.0.0") (k 0)))) (h "15z61n7q5g66nb0mb490vcl5d8kizrm88d4fkwp4lq1qpjxbd60l") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-18.0.0 (c (n "pallet-babe") (v "18.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^18.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^18.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^18.0.0") (k 0)) (d (n "frame-system") (r "^18.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^18.0.0") (k 0)) (d (n "pallet-balances") (r "^18.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^17.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^18.0.0") (k 0)) (d (n "pallet-staking") (r "^18.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^17.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^19.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.22.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.22.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^19.0.0") (k 0)) (d (n "sp-runtime") (r "^20.0.0") (k 0)) (d (n "sp-session") (r "^17.0.0") (k 0)) (d (n "sp-staking") (r "^16.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)))) (h "0g17lhfmxwdn7rg9xy1p579zp4kcz9nlam9dqsp80r5arnkks569") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-19.0.0 (c (n "pallet-babe") (v "19.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^19.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^19.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^19.0.0") (k 0)) (d (n "frame-system") (r "^19.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^19.0.0") (k 0)) (d (n "pallet-balances") (r "^19.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^18.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^19.0.0") (k 0)) (d (n "pallet-staking") (r "^19.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^18.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^20.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.23.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.23.0") (k 0)) (d (n "sp-core") (r "^18.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^20.0.0") (k 0)) (d (n "sp-runtime") (r "^21.0.0") (k 0)) (d (n "sp-session") (r "^18.0.0") (k 0)) (d (n "sp-staking") (r "^17.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)))) (h "1cq0vgsb547n143060jdy3d45312iivqwlp0npswwqjapnar3z42") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-20.0.0 (c (n "pallet-babe") (v "20.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^20.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^20.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^20.0.0") (k 0)) (d (n "frame-system") (r "^20.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^20.0.0") (k 0)) (d (n "pallet-balances") (r "^20.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^19.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^20.0.0") (k 0)) (d (n "pallet-staking") (r "^20.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^19.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^21.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.24.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.24.0") (k 0)) (d (n "sp-core") (r "^19.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^21.0.0") (k 0)) (d (n "sp-runtime") (r "^22.0.0") (k 0)) (d (n "sp-session") (r "^19.0.0") (k 0)) (d (n "sp-staking") (r "^18.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)))) (h "0xy6bi439lsrai9mbbx4inspkjql4cg2n391malnc84p4a3n3zfn") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-21.0.0 (c (n "pallet-babe") (v "21.0.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.0.0") (o #t) (k 0)) (d (n "frame-election-provider-support") (r "^21.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^21.0.0") (k 0)) (d (n "frame-system") (r "^21.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^21.0.0") (k 0)) (d (n "pallet-balances") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-offences") (r "^20.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^21.0.0") (k 0)) (d (n "pallet-staking") (r "^21.0.0") (d #t) (k 2)) (d (n "pallet-staking-reward-curve") (r "^5.0.0") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^20.0.0") (k 0)) (d (n "scale-info") (r "^2.1.1") (f (quote ("derive"))) (k 0)) (d (n "sp-application-crypto") (r "^22.0.0") (k 0)) (d (n "sp-consensus-babe") (r "^0.25.0") (k 0)) (d (n "sp-consensus-vrf") (r "^0.25.0") (k 0)) (d (n "sp-core") (r "^20.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^22.0.0") (k 0)) (d (n "sp-runtime") (r "^23.0.0") (k 0)) (d (n "sp-session") (r "^20.0.0") (k 0)) (d (n "sp-staking") (r "^19.0.0") (k 0)) (d (n "sp-std") (r "^7.0.0") (k 0)))) (h "1333yhdb9ylgggrczi7lhmmfcfpkjghi9b1ymlls95gnb1ncz5gj") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-consensus-vrf/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-21.1.0-dev.2 (c (n "pallet-babe") (v "21.1.0-dev.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.1.0-dev.2") (o #t) (k 0)) (d (n "frame-support") (r "^21.1.0-dev.2") (k 0)) (d (n "frame-system") (r "^21.1.0-dev.2") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^21.1.0-dev.2") (k 0)) (d (n "pallet-session") (r "^21.1.0-dev.2") (k 0)) (d (n "pallet-timestamp") (r "^20.1.0-dev.2") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.26.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.2") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^20.1.0-dev.2") (k 0)) (d (n "sp-staking") (r "^19.1.0-dev.2") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.2") (k 0)))) (h "1k8qn8p9cnicjrw3kakkihkk8qrzxhpvqymcz6ggd2kyk7hzysd5") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-21.1.0-dev.3 (c (n "pallet-babe") (v "21.1.0-dev.3") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^21.1.0-dev.3") (o #t) (k 0)) (d (n "frame-support") (r "^21.1.0-dev.3") (k 0)) (d (n "frame-system") (r "^21.1.0-dev.3") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^21.1.0-dev.3") (k 0)) (d (n "pallet-session") (r "^21.1.0-dev.3") (k 0)) (d (n "pallet-timestamp") (r "^20.1.0-dev.3") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^23.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.26.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^21.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^23.1.0-dev.3") (k 0)) (d (n "sp-runtime") (r "^24.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^20.1.0-dev.3") (k 0)) (d (n "sp-staking") (r "^19.1.0-dev.3") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^8.1.0-dev.3") (k 0)))) (h "1kx1zqavx2hdi4iwkrxh0mwiyh0676psar4ah7cbwvjyz2ls61y8") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-21.1.0-dev.5 (c (n "pallet-babe") (v "21.1.0-dev.5") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=21.1.0-dev.5") (o #t) (k 0)) (d (n "frame-support") (r "=21.1.0-dev.5") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.5") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=21.1.0-dev.5") (k 0)) (d (n "pallet-session") (r "=21.1.0-dev.5") (k 0)) (d (n "pallet-timestamp") (r "=20.1.0-dev.5") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "=0.26.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.5") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "=20.1.0-dev.5") (k 0)) (d (n "sp-staking") (r "=19.1.0-dev.5") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.5") (k 0)))) (h "1ihbckk2zgr3p9kmjxlx87azf9g5fdpyin5by06w23aj59v9gmva") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-21.1.0-dev.6 (c (n "pallet-babe") (v "21.1.0-dev.6") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=21.1.0-dev.6") (o #t) (k 0)) (d (n "frame-support") (r "=21.1.0-dev.6") (k 0)) (d (n "frame-system") (r "=21.1.0-dev.6") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-session") (r "=21.1.0-dev.6") (k 0)) (d (n "pallet-timestamp") (r "=20.1.0-dev.6") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "=23.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "=0.26.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "=21.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=23.1.0-dev.6") (k 0)) (d (n "sp-runtime") (r "=24.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "=20.1.0-dev.6") (k 0)) (d (n "sp-staking") (r "=19.1.0-dev.6") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=8.1.0-dev.6") (k 0)))) (h "0snrirvq6i5iw7rcik48yy8i8krn1gkdymws5af51xjjnaiymr4m") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-22.0.0 (c (n "pallet-babe") (v "22.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^22.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^22.0.0") (k 0)) (d (n "frame-system") (r "^22.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^22.0.0") (k 0)) (d (n "pallet-session") (r "^22.0.0") (k 0)) (d (n "pallet-timestamp") (r "^21.0.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.26.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^24.0.0") (k 0)) (d (n "sp-runtime") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^21.0.0") (k 0)) (d (n "sp-staking") (r "^20.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^9.0.0") (k 0)))) (h "0v8rhyn373ni51d52xb16klxllfc1iab5m88lpwfndqhaasfagg7") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-23.0.0 (c (n "pallet-babe") (v "23.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^23.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^23.0.0") (k 0)) (d (n "frame-system") (r "^23.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^23.0.0") (k 0)) (d (n "pallet-session") (r "^23.0.0") (k 0)) (d (n "pallet-timestamp") (r "^22.0.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.27.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^25.0.0") (k 0)) (d (n "sp-runtime") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^22.0.0") (k 0)) (d (n "sp-staking") (r "^21.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^10.0.0") (k 0)))) (h "0diz7lx9ssif6hdfaca1njcfq32jd49f3asx65xrisgmw1sf9mrp") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-24.0.0-dev.1 (c (n "pallet-babe") (v "24.0.0-dev.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "=24.0.0-dev.1") (o #t) (k 0)) (d (n "frame-support") (r "=24.0.0-dev.1") (k 0)) (d (n "frame-system") (r "=24.0.0-dev.1") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-session") (r "=24.0.0-dev.1") (k 0)) (d (n "pallet-timestamp") (r "=23.0.0-dev.1") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "=26.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "=0.28.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "=24.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "=26.0.0-dev.1") (k 0)) (d (n "sp-runtime") (r "=27.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "=23.0.0-dev.1") (k 0)) (d (n "sp-staking") (r "=22.0.0-dev.1") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "=11.0.0-dev.1") (k 0)))) (h "03dvxbnvv505f8lqiycv0klc6zswwbvza0sah8mrghsf48r9g7x3") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-24.0.0 (c (n "pallet-babe") (v "24.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^24.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^24.0.0") (k 0)) (d (n "frame-system") (r "^24.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^24.0.0") (k 0)) (d (n "pallet-session") (r "^24.0.0") (k 0)) (d (n "pallet-timestamp") (r "^23.0.0") (k 0)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.28.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^26.0.0") (k 0)) (d (n "sp-runtime") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^23.0.0") (k 0)) (d (n "sp-staking") (r "^22.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^11.0.0") (k 0)))) (h "1k3x7gqpq2cldfvsf3znxxhg38dy0cbq62c56h9jrh8wi6qvbfpf") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-25.0.0 (c (n "pallet-babe") (v "25.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^25.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^25.0.0") (k 0)) (d (n "frame-system") (r "^25.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^25.0.0") (k 0)) (d (n "pallet-session") (r "^25.0.0") (k 0)) (d (n "pallet-timestamp") (r "^24.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.29.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^27.0.0") (k 0)) (d (n "sp-runtime") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^24.0.0") (k 0)) (d (n "sp-staking") (r "^23.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "1c2jdndxahhf734byh5spqzm1mikkpwz67yb38ijg6xplh6464kb") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-26.0.0 (c (n "pallet-babe") (v "26.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^26.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^26.0.0") (k 0)) (d (n "frame-system") (r "^26.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^26.0.0") (k 0)) (d (n "pallet-session") (r "^26.0.0") (k 0)) (d (n "pallet-timestamp") (r "^25.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.30.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^28.0.0") (k 0)) (d (n "sp-runtime") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^25.0.0") (k 0)) (d (n "sp-staking") (r "^24.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^12.0.0") (k 0)))) (h "0p0ra3a3hgwyx6lwamj8qbygl2mi3y350gz9jngnl1g57j4yppv7") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-27.0.0 (c (n "pallet-babe") (v "27.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^27.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^27.0.0") (k 0)) (d (n "frame-system") (r "^27.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^27.0.0") (k 0)) (d (n "pallet-session") (r "^27.0.0") (k 0)) (d (n "pallet-timestamp") (r "^26.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.31.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^29.0.0") (k 0)) (d (n "sp-runtime") (r "^30.0.1") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^26.0.0") (k 0)) (d (n "sp-staking") (r "^25.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^13.0.0") (k 0)))) (h "1lihjj3pk7r6gxihgv3wh7w6v1rpd9x07d776vqb7kn5vcanivxk") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-28.0.0 (c (n "pallet-babe") (v "28.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^28.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^28.0.0") (k 0)) (d (n "frame-system") (r "^28.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^28.0.0") (k 0)) (d (n "pallet-session") (r "^28.0.0") (k 0)) (d (n "pallet-timestamp") (r "^27.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.32.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^27.0.0") (k 0)) (d (n "sp-staking") (r "^26.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "10036nzw7y14p3fkcb0qsrbpgpsrlc85hafnqkbn444li8i4b92b") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-29.0.0 (c (n "pallet-babe") (v "29.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^29.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^29.0.0") (k 0)) (d (n "frame-system") (r "^29.0.0") (k 0)) (d (n "log") (r "^0.4.17") (k 0)) (d (n "pallet-authorship") (r "^29.0.0") (k 0)) (d (n "pallet-session") (r "^29.0.0") (k 0)) (d (n "pallet-timestamp") (r "^28.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.33.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^28.0.0") (k 0)) (d (n "sp-staking") (r "^27.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0jah535vy0rx4jl75j4v3jy2b3iqcfxlnjp8ch6nayk6a8605wnk") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-30.0.0 (c (n "pallet-babe") (v "30.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^30.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^30.0.0") (k 0)) (d (n "frame-system") (r "^30.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-authorship") (r "^30.0.0") (k 0)) (d (n "pallet-session") (r "^30.0.0") (k 0)) (d (n "pallet-timestamp") (r "^29.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.34.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^29.0.0") (k 0)) (d (n "sp-staking") (r "^28.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "06vq9r2sr62vbzcfskdjsj72vgyl440sbv0dd0y2rmy2cbdhy6mr") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-31.0.0 (c (n "pallet-babe") (v "31.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^31.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^31.0.0") (k 0)) (d (n "frame-system") (r "^31.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-authorship") (r "^31.0.0") (k 0)) (d (n "pallet-session") (r "^31.0.0") (k 0)) (d (n "pallet-timestamp") (r "^30.0.0") (k 0)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^33.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.35.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^33.0.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^30.0.0") (k 0)) (d (n "sp-staking") (r "^29.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0qmk87cvcmd2i8yfg6pmb8ky5cbpyznwbzsnvincfm9n32a34d9p") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-32.0.0 (c (n "pallet-babe") (v "32.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^32.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^32.0.0") (k 0)) (d (n "frame-system") (r "^32.0.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-authorship") (r "^32.0.0") (k 0)) (d (n "pallet-session") (r "^32.0.0") (k 0)) (d (n "pallet-timestamp") (r "^31.0.0") (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^34.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.36.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^34.0.0") (k 0)) (d (n "sp-runtime") (r "^35.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^31.0.0") (k 0)) (d (n "sp-staking") (r "^30.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0p471a461yfj4qab52ypsa92w16gm3iqr9gyvl7ijhqqfs1d00mc") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-33.0.0 (c (n "pallet-babe") (v "33.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^33.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^33.0.0") (k 0)) (d (n "frame-system") (r "^33.0.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-authorship") (r "^33.0.0") (k 0)) (d (n "pallet-session") (r "^33.0.0") (k 0)) (d (n "pallet-timestamp") (r "^32.0.0") (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^35.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.37.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^35.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^32.0.0") (k 0)) (d (n "sp-staking") (r "^31.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0xps95f7fcvpb7s7ghjzj4wfbyj3zw2vbsc9mkxjrsf60d7brs6i") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

(define-public crate-pallet-babe-34.0.0 (c (n "pallet-babe") (v "34.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^34.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^34.0.0") (k 0)) (d (n "frame-system") (r "^34.0.0") (k 0)) (d (n "log") (r "^0.4.21") (k 0)) (d (n "pallet-authorship") (r "^34.0.0") (k 0)) (d (n "pallet-session") (r "^34.0.0") (k 0)) (d (n "pallet-timestamp") (r "^33.0.0") (k 0)) (d (n "scale-info") (r "^2.11.1") (f (quote ("derive" "serde"))) (k 0)) (d (n "sp-application-crypto") (r "^36.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-consensus-babe") (r "^0.38.0") (f (quote ("serde"))) (k 0)) (d (n "sp-core") (r "^33.0.1") (f (quote ("serde"))) (k 0)) (d (n "sp-io") (r "^36.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-session") (r "^33.0.0") (k 0)) (d (n "sp-staking") (r "^32.0.0") (f (quote ("serde"))) (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0k8prif9pvmsip8vxaq15vsjs6cz83hyysd2aw2na01sbgl7w4j3") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-authorship/try-runtime" "pallet-session/try-runtime" "pallet-timestamp/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "sp-staking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-authorship/std" "pallet-session/std" "pallet-timestamp/std" "scale-info/std" "sp-application-crypto/std" "sp-consensus-babe/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-session/std" "sp-staking/std" "sp-std/std"))))))

