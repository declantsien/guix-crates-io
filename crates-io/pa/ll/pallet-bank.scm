(define-module (crates-io pa ll pallet-bank) #:use-module (crates-io))

(define-public crate-pallet-bank-0.1.0 (c (n "pallet-bank") (v "0.1.0") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0-dev") (o #t) (k 0)) (d (n "frame-support") (r "^4.0.0-dev") (k 0)) (d (n "frame-system") (r "^4.0.0-dev") (k 0)) (d (n "pallet-balances") (r "^4.0.0-dev") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^7.0.0") (d #t) (k 2)))) (h "0krbfh4mkxvaazclcgkz77bjbj605gia4h1kmcplxhbjhhgn108r") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "scale-info/std"))))))

(define-public crate-pallet-bank-0.1.1 (c (n "pallet-bank") (v "0.1.1") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0-dev") (o #t) (k 0)) (d (n "frame-support") (r "^4.0.0-dev") (k 0)) (d (n "frame-system") (r "^4.0.0-dev") (k 0)) (d (n "pallet-balances") (r "^4.0.0-dev") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^7.0.0") (d #t) (k 2)))) (h "1psy2c315vs5bk50q322gkvfgaxdysv4hb6m83my0lhp4kdkxnq0") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "scale-info/std"))))))

(define-public crate-pallet-bank-0.1.2 (c (n "pallet-bank") (v "0.1.2") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0-dev") (o #t) (k 0)) (d (n "frame-support") (r "^4.0.0-dev") (k 0)) (d (n "frame-system") (r "^4.0.0-dev") (k 0)) (d (n "pallet-balances") (r "^4.0.0-dev") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^7.0.0") (d #t) (k 2)))) (h "0nq0hfg845ayf185psfr4z9lkndrgb2ysxfl1ggpn4fyrqjpkmzm") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (y #t) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "scale-info/std"))))))

(define-public crate-pallet-bank-0.1.4 (c (n "pallet-bank") (v "0.1.4") (d (list (d (n "codec") (r "^3.2.2") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^4.0.0-dev") (o #t) (k 0)) (d (n "frame-support") (r "^4.0.0-dev") (k 0)) (d (n "frame-system") (r "^4.0.0-dev") (k 0)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pallet-balances") (r "^4.0.0-dev") (d #t) (k 2)) (d (n "scale-info") (r "^2.5.0") (f (quote ("derive"))) (k 0)) (d (n "sp-core") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^7.0.0") (d #t) (k 2)) (d (n "sp-runtime") (r "^7.0.0") (d #t) (k 2)))) (h "0p5m5i7jc7bxg82ck9arqn906irv63sxla237xdd1pf088rhji4w") (f (quote (("try-runtime" "frame-support/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "scale-info/std"))))))

