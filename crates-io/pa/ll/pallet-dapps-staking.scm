(define-module (crates-io pa ll pallet-dapps-staking) #:use-module (crates-io))

(define-public crate-pallet-dapps-staking-1.3.0 (c (n "pallet-dapps-staking") (v "1.3.0") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "derive_more") (r "^0.14.0") (d #t) (k 2)) (d (n "frame-support") (r "^2.0.0-rc4") (k 0)) (d (n "frame-system") (r "^2.0.0-rc4") (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "num-traits") (r "^0.2") (k 0)) (d (n "pallet-balances") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-contract-operator") (r "^1.3.0") (k 0)) (d (n "pallet-contracts") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-plasm-rewards") (r "^1.3.0") (k 0)) (d (n "pallet-randomness-collective-flip") (r "^2.0.0-rc4") (d #t) (k 2)) (d (n "pallet-session") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-staking") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-timestamp") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-transaction-payment") (r "^2.0.0-rc4") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sp-arithmetic") (r "^2.0.0-rc4") (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (k 0)) (d (n "sp-io") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc4") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)) (d (n "wabt") (r "^0.10.0") (d #t) (k 2)))) (h "1vps5gbdfzid9d44wkfyb2pl1yr8xpxwmvmapd9ya41nah7vlcjg") (f (quote (("std" "serde" "codec/std" "num-traits/std" "sp-core/std" "sp-runtime/std" "sp-arithmetic/std" "sp-io/std" "sp-std/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "pallet-session/std" "pallet-timestamp/std" "pallet-contracts/std" "pallet-staking/std" "pallet-contract-operator/std" "pallet-plasm-rewards/std" "sp-staking/std") ("default" "std"))))))

