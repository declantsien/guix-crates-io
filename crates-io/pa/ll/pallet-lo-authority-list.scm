(define-module (crates-io pa ll pallet-lo-authority-list) #:use-module (crates-io))

(define-public crate-pallet-lo-authority-list-0.1.0 (c (n "pallet-lo-authority-list") (v "0.1.0") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^3.1.0") (o #t) (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "logion-shared") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.119") (k 0)) (d (n "sp-core") (r "^3.0.0") (k 2)) (d (n "sp-io") (r "^3.0.0") (k 2)) (d (n "sp-runtime") (r "^3.0.0") (k 2)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "0r805590vml3k2c4mdb7mh59ar1va09pdifiaa1c5w6kjysm5f09") (f (quote (("std" "codec/std" "frame-support/std" "frame-system/std" "frame-benchmarking/std" "serde/std" "sp-std/std") ("runtime-benchmarks" "frame-benchmarking" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks") ("default" "std"))))))

(define-public crate-pallet-lo-authority-list-0.1.1 (c (n "pallet-lo-authority-list") (v "0.1.1") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^3.1.0") (o #t) (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "logion-shared") (r "^0.1.0") (k 0)) (d (n "serde") (r "^1.0.119") (k 0)) (d (n "sp-core") (r "^3.0.0") (k 2)) (d (n "sp-io") (r "^3.0.0") (k 2)) (d (n "sp-runtime") (r "^3.0.0") (k 2)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "18r6zj1q5bnrh4m198ds36ckdkcnixfzhacapbip3i23bvz4pqi2") (f (quote (("std" "codec/std" "frame-support/std" "frame-system/std" "frame-benchmarking/std" "serde/std" "sp-std/std") ("runtime-benchmarks" "frame-benchmarking" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks") ("default" "std"))))))

