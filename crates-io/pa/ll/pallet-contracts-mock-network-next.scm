(define-module (crates-io pa ll pallet-contracts-mock-network-next) #:use-module (crates-io))

(define-public crate-pallet-contracts-mock-network-next-3.0.0 (c (n "pallet-contracts-mock-network-next") (v "3.0.0") (d (list (d (n "assert_matches") (r "^1") (d #t) (k 2)) (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^28.0.0") (k 0)) (d (n "frame-system") (r "^28.0.0") (k 0)) (d (n "pallet-assets") (r "^29.0.0") (d #t) (k 0)) (d (n "pallet-balances") (r "^28.0.0") (d #t) (k 0)) (d (n "pallet-contracts") (r "^27.0.0") (d #t) (k 0) (p "pallet-contracts-next")) (d (n "pallet-contracts-proc-macro") (r "^18.0.0") (d #t) (k 0)) (d (n "pallet-contracts-uapi") (r "^5.0.0") (k 0) (p "pallet-contracts-uapi-next")) (d (n "pallet-insecure-randomness-collective-flip") (r "^16.0.0") (d #t) (k 0)) (d (n "pallet-message-queue") (r "^31.0.0") (d #t) (k 0)) (d (n "pallet-proxy") (r "^28.0.0") (d #t) (k 0)) (d (n "pallet-timestamp") (r "^27.0.0") (d #t) (k 0)) (d (n "pallet-utility") (r "^28.0.0") (d #t) (k 0)) (d (n "pallet-xcm") (r "^7.0.0") (k 0)) (d (n "polkadot-parachain-primitives") (r "^6.0.0") (d #t) (k 0)) (d (n "polkadot-primitives") (r "^7.0.0") (d #t) (k 0)) (d (n "polkadot-runtime-parachains") (r "^7.0.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-api") (r "^26.0.0") (k 0)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-keystore") (r "^0.34.0") (d #t) (k 0)) (d (n "sp-runtime") (r "^31.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "sp-tracing") (r "^16.0.0") (d #t) (k 0)) (d (n "xcm") (r "^7.0.0") (k 0) (p "staging-xcm")) (d (n "xcm-builder") (r "^7.0.0") (d #t) (k 0) (p "staging-xcm-builder")) (d (n "xcm-executor") (r "^7.0.0") (k 0) (p "staging-xcm-executor")) (d (n "xcm-simulator") (r "^7.0.0") (d #t) (k 0)))) (h "1kxvpxfbisr3hklpzzhddrpfq007c0ykkakrckcxm7iydxa7ph9n") (f (quote (("std" "codec/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "pallet-contracts-proc-macro/full" "pallet-contracts/std" "pallet-insecure-randomness-collective-flip/std" "pallet-proxy/std" "pallet-timestamp/std" "pallet-utility/std" "pallet-xcm/std" "scale-info/std" "sp-api/std" "sp-core/std" "sp-io/std" "sp-keystore/std" "sp-runtime/std" "sp-std/std" "xcm-executor/std" "xcm/std") ("runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-assets/runtime-benchmarks" "pallet-balances/runtime-benchmarks" "pallet-contracts/runtime-benchmarks" "pallet-message-queue/runtime-benchmarks" "pallet-proxy/runtime-benchmarks" "pallet-timestamp/runtime-benchmarks" "pallet-utility/runtime-benchmarks" "pallet-xcm/runtime-benchmarks" "polkadot-parachain-primitives/runtime-benchmarks" "polkadot-primitives/runtime-benchmarks" "polkadot-runtime-parachains/runtime-benchmarks" "sp-runtime/runtime-benchmarks" "xcm-builder/runtime-benchmarks" "xcm-executor/runtime-benchmarks") ("default" "std"))))))

