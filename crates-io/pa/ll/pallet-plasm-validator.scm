(define-module (crates-io pa ll pallet-plasm-validator) #:use-module (crates-io))

(define-public crate-pallet-plasm-validator-1.3.0 (c (n "pallet-plasm-validator") (v "1.3.0") (d (list (d (n "codec") (r "^1.3.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-support") (r "^2.0.0-rc4") (k 0)) (d (n "frame-system") (r "^2.0.0-rc4") (k 0)) (d (n "hex-literal") (r "^0.2.1") (d #t) (k 2)) (d (n "pallet-balances") (r "^2.0.0-rc4") (k 0)) (d (n "pallet-plasm-rewards") (r "^1.3.0") (k 0)) (d (n "pallet-randomness-collective-flip") (r "^2.0.0-rc4") (d #t) (k 2)) (d (n "pallet-session") (r "^2.0.0-rc4") (d #t) (k 2)) (d (n "pallet-timestamp") (r "^2.0.0-rc4") (d #t) (k 2)) (d (n "serde") (r "^1.0.106") (o #t) (d #t) (k 0)) (d (n "sp-arithmetic") (r "^2.0.0-rc4") (k 0)) (d (n "sp-core") (r "^2.0.0-rc4") (k 0)) (d (n "sp-io") (r "^2.0.0-rc4") (k 0)) (d (n "sp-runtime") (r "^2.0.0-rc4") (k 0)) (d (n "sp-staking") (r "^2.0.0-rc4") (k 0)) (d (n "sp-std") (r "^2.0.0-rc4") (k 0)))) (h "1pdwmi0ma4vxdnnmfwlw4ydq8k531s1fabb94w80cdc9fcj0sg4x") (f (quote (("std" "serde" "codec/std" "sp-core/std" "sp-runtime/std" "sp-arithmetic/std" "sp-io/std" "sp-std/std" "pallet-balances/std" "frame-support/std" "frame-system/std" "sp-staking/std" "pallet-plasm-rewards/std") ("default" "std"))))))

