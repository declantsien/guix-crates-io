(define-module (crates-io pa ll pallet-asset-conversion-ops) #:use-module (crates-io))

(define-public crate-pallet-asset-conversion-ops-0.0.0 (c (n "pallet-asset-conversion-ops") (v "0.0.0") (h "1rhdycvwqmq0f3ghpvhdc0491c8p66aqnkd4x4wnz62mnrw11gai")))

(define-public crate-pallet-asset-conversion-ops-0.1.0 (c (n "pallet-asset-conversion-ops") (v "0.1.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^33.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^33.0.0") (k 0)) (d (n "frame-system") (r "^33.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-asset-conversion") (r "^15.0.0") (k 0)) (d (n "primitive-types") (r "^0.12.0") (f (quote ("codec" "num-traits" "scale-info"))) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-arithmetic") (r "^26.0.0") (k 0)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-io") (r "^35.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "0y10fg06mrdz67x872qiwjpchwgp8hbkvm1i92izx1vwhiandkz6") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-conversion/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-asset-conversion/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-asset-conversion/std" "scale-info/std" "sp-arithmetic/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

(define-public crate-pallet-asset-conversion-ops-0.2.0 (c (n "pallet-asset-conversion-ops") (v "0.2.0") (d (list (d (n "codec") (r "^3.6.1") (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^34.0.0") (o #t) (k 0)) (d (n "frame-support") (r "^34.0.0") (k 0)) (d (n "frame-system") (r "^34.0.0") (k 0)) (d (n "log") (r "^0.4.20") (k 0)) (d (n "pallet-asset-conversion") (r "^16.0.0") (k 0)) (d (n "primitive-types") (r "^0.12.0") (f (quote ("codec" "num-traits" "scale-info"))) (k 2)) (d (n "scale-info") (r "^2.10.0") (f (quote ("derive"))) (k 0)) (d (n "sp-arithmetic") (r "^26.0.0") (k 0)) (d (n "sp-core") (r "^33.0.0") (k 0)) (d (n "sp-io") (r "^36.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)))) (h "1s4b3rr6s2kpzvdfpcjnc7cycqfzrnxwd8q33vnl17xlqfacim3f") (f (quote (("try-runtime" "frame-support/try-runtime" "frame-system/try-runtime" "pallet-asset-conversion/try-runtime" "sp-runtime/try-runtime") ("runtime-benchmarks" "frame-benchmarking/runtime-benchmarks" "frame-support/runtime-benchmarks" "frame-system/runtime-benchmarks" "pallet-asset-conversion/runtime-benchmarks" "sp-runtime/runtime-benchmarks") ("default" "std")))) (s 2) (e (quote (("std" "codec/std" "frame-benchmarking?/std" "frame-support/std" "frame-system/std" "log/std" "pallet-asset-conversion/std" "scale-info/std" "sp-arithmetic/std" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std"))))))

