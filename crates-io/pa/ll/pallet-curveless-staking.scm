(define-module (crates-io pa ll pallet-curveless-staking) #:use-module (crates-io))

(define-public crate-pallet-curveless-staking-0.1.0 (c (n "pallet-curveless-staking") (v "0.1.0") (d (list (d (n "codec") (r "^2.0.0") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "frame-benchmarking") (r "^3.0.0") (o #t) (k 0)) (d (n "frame-benchmarking") (r "^3.0.0") (d #t) (k 2)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "pallet-authorship") (r "^3.0.0") (k 0)) (d (n "pallet-balances") (r "^3.0.0") (d #t) (k 2)) (d (n "pallet-session") (r "^3.0.0") (f (quote ("historical"))) (k 0)) (d (n "pallet-timestamp") (r "^3.0.0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.11.1") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.2") (o #t) (k 0)) (d (n "rand_chacha") (r "^0.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sp-application-crypto") (r "^3.0.0") (k 0)) (d (n "sp-core") (r "^3.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-npos-elections") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-staking") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "sp-storage") (r "^3.0.0") (d #t) (k 2)) (d (n "sp-tracing") (r "^3.0.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "substrate-test-utils") (r "^3.0.0") (d #t) (k 2)))) (h "1lviv2d3h909ljakq7bmi0jf80h4nwa5ig0rnk55205fx0aaann3") (f (quote (("std" "serde" "codec/std" "sp-std/std" "sp-npos-elections/std" "sp-io/std" "frame-support/std" "sp-runtime/std" "sp-staking/std" "pallet-session/std" "frame-system/std" "pallet-authorship/std" "sp-application-crypto/std") ("runtime-benchmarks" "frame-benchmarking" "rand_chacha") ("default" "std"))))))

