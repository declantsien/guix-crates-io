(define-module (crates-io pa ll pallet-ethereum) #:use-module (crates-io))

(define-public crate-pallet-ethereum-0.1.0 (c (n "pallet-ethereum") (v "0.1.0") (h "061izp5sxgf9d8n46zb0xdlh0c8d3iabg61gdsxp2bl4ckxmcidx")))

(define-public crate-pallet-ethereum-1.0.0 (c (n "pallet-ethereum") (v "1.0.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.7.1") (f (quote ("with-codec"))) (k 0)) (d (n "ethereum-types") (r "^0.11") (k 0)) (d (n "evm") (r "^0.25.0") (f (quote ("with-codec"))) (k 0)) (d (n "fp-consensus") (r "^1.0.0") (k 0)) (d (n "fp-evm") (r "^1.0.0") (k 0)) (d (n "fp-rpc") (r "^1.0.0") (k 0)) (d (n "fp-storage") (r "^1.0.0") (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "libsecp256k1") (r "^0.3") (k 0)) (d (n "pallet-balances") (r "^3.0.0") (k 0)) (d (n "pallet-evm") (r "^3.0.0") (k 0)) (d (n "pallet-timestamp") (r "^3.0.0") (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "sp-core") (r "^3.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "1q21fb9pm318z7m1msyy9cjk5da76z1c93gka140bb9835vzh6hl") (f (quote (("std" "serde" "rustc-hex/std" "codec/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "pallet-timestamp/std" "pallet-evm/std" "sp-io/std" "sp-std/std" "fp-evm/std" "ethereum/std" "ethereum-types/std" "rlp/std" "sha3/std" "libsecp256k1/std" "fp-consensus/std" "fp-rpc/std" "fp-storage/std" "evm/std") ("default" "std"))))))

(define-public crate-pallet-ethereum-2.0.0 (c (n "pallet-ethereum") (v "2.0.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.7.1") (f (quote ("with-codec"))) (k 0)) (d (n "ethereum-types") (r "^0.11") (k 0)) (d (n "evm") (r "^0.27.0") (f (quote ("with-codec"))) (k 0)) (d (n "fp-consensus") (r "^1.0.0") (k 0)) (d (n "fp-evm") (r "^2.0.0") (k 0)) (d (n "fp-rpc") (r "^2.0.0") (k 0)) (d (n "fp-storage") (r "^1.0.1") (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "libsecp256k1") (r "^0.5") (k 0)) (d (n "pallet-balances") (r "^3.0.0") (k 0)) (d (n "pallet-evm") (r "^4.0.0") (k 0)) (d (n "pallet-timestamp") (r "^3.0.0") (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "sp-core") (r "^3.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "1vg78yd2b615ngwfsbnra20qq8f2l15pjcp4ws7dk77rv43k7r22") (f (quote (("std" "serde" "rustc-hex/std" "codec/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "pallet-timestamp/std" "pallet-evm/std" "sp-io/std" "sp-std/std" "fp-evm/std" "ethereum/std" "ethereum-types/std" "rlp/std" "sha3/std" "libsecp256k1/std" "fp-consensus/std" "fp-rpc/std" "fp-storage/std" "evm/std") ("default" "std"))))))

(define-public crate-pallet-ethereum-3.0.0 (c (n "pallet-ethereum") (v "3.0.0") (d (list (d (n "codec") (r "^2.0.0") (k 0) (p "parity-scale-codec")) (d (n "ethereum") (r "^0.7.1") (f (quote ("with-codec"))) (k 0)) (d (n "ethereum-types") (r "^0.11") (k 0)) (d (n "evm") (r "^0.27.0") (f (quote ("with-codec"))) (k 0)) (d (n "fp-consensus") (r "^1.0.0") (k 0)) (d (n "fp-evm") (r "^2.0.0") (k 0)) (d (n "fp-rpc") (r "^2.0.0") (k 0)) (d (n "fp-storage") (r "^2.0.0") (k 0)) (d (n "frame-support") (r "^3.0.0") (k 0)) (d (n "frame-system") (r "^3.0.0") (k 0)) (d (n "libsecp256k1") (r "^0.5") (f (quote ("static-context" "hmac"))) (k 0)) (d (n "pallet-balances") (r "^3.0.0") (k 0)) (d (n "pallet-evm") (r "^5.0.0") (k 0)) (d (n "pallet-timestamp") (r "^3.0.0") (k 0)) (d (n "rlp") (r "^0.5") (k 0)) (d (n "rustc-hex") (r "^2.1.0") (k 0)) (d (n "serde") (r "^1.0.101") (o #t) (d #t) (k 0)) (d (n "sha3") (r "^0.8") (k 0)) (d (n "sp-core") (r "^3.0.0") (d #t) (k 2)) (d (n "sp-io") (r "^3.0.0") (k 0)) (d (n "sp-runtime") (r "^3.0.0") (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)))) (h "1nbcrh6vhlp7wzrwqqxxikfzxchlbcargkpyr9csdpwx7miibmk7") (f (quote (("std" "serde" "rustc-hex/std" "codec/std" "sp-runtime/std" "frame-support/std" "frame-system/std" "pallet-balances/std" "pallet-timestamp/std" "pallet-evm/std" "sp-io/std" "sp-std/std" "fp-evm/std" "ethereum/std" "ethereum-types/std" "rlp/std" "sha3/std" "libsecp256k1/std" "fp-consensus/std" "fp-rpc/std" "fp-storage/std" "evm/std") ("default" "std"))))))

