(define-module (crates-io pa il paillier) #:use-module (crates-io))

(define-public crate-paillier-0.1.3 (c (n "paillier") (v "0.1.3") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "primal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-gmp") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0yz5y2ji98r53v32rif9w30s8y3k0xzi0kc2ib4lrvwgvajpdkkg") (f (quote (("rampexpmod") ("keygen" "primal") ("inclramp" "framp") ("inclnum" "num") ("inclgmp" "rust-gmp") ("defaultramp") ("defaultnum") ("defaultgmp") ("default" "inclramp" "defaultramp" "keygen"))))))

(define-public crate-paillier-0.1.4 (c (n "paillier") (v "0.1.4") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "primal") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-gmp") (r "^0.4") (o #t) (d #t) (k 0)))) (h "18agp59whw5ym6gkcxy90bzfvz2xaid8a53b11i3vbhvpmwcyw26") (f (quote (("rampexpmod") ("keygen" "primal") ("inclramp" "framp") ("inclnum" "num") ("inclgmp" "rust-gmp") ("defaultramp") ("defaultnum") ("defaultgmp") ("default" "inclramp" "defaultramp" "keygen"))))))

(define-public crate-paillier-0.1.5 (c (n "paillier") (v "0.1.5") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-gmp") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1j69bxzssdncp96qjxxhxfc8c0nlhkm2dbhlha3saq9a0dcfjixf") (f (quote (("keygen") ("inclramp" "framp") ("inclnum" "num") ("inclgmp" "rust-gmp") ("defaultramp") ("defaultnum") ("defaultgmp") ("default" "inclramp" "defaultramp" "keygen"))))))

(define-public crate-paillier-0.1.6-pre (c (n "paillier") (v "0.1.6-pre") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-gmp") (r "^0.4") (o #t) (d #t) (k 0)))) (h "16x8qr3w3zim3a3v3wr1hyz6rvsbr7y8ysa8wj4gvhzivr4pd7ri") (f (quote (("keygen") ("inclramp" "framp") ("inclnum" "num") ("inclgmp" "rust-gmp") ("defaultramp") ("defaultnum") ("defaultgmp") ("default" "inclramp" "defaultramp" "keygen"))))))

(define-public crate-paillier-0.1.6 (c (n "paillier") (v "0.1.6") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-gmp") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0p4bc459m521njpj2qfnqnbnxwpz9sbbifmjwxnllswdf58lr7p6") (f (quote (("keygen") ("inclramp" "framp") ("inclnum" "num") ("inclgmp" "rust-gmp") ("defaultramp") ("defaultnum") ("defaultgmp") ("default" "inclramp" "defaultramp" "keygen"))))))

(define-public crate-paillier-0.1.7 (c (n "paillier") (v "0.1.7") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-gmp") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1l5a42jc5cn62n4dy586zyyy8a5723048593q7vp9y8w6hkvy8ag") (f (quote (("keygen") ("inclramp" "framp") ("inclnum" "num") ("inclgmp" "rust-gmp") ("defaultramp") ("defaultnum") ("defaultgmp") ("default" "inclramp" "defaultramp" "keygen"))))))

(define-public crate-paillier-0.2.0 (c (n "paillier") (v "0.2.0") (d (list (d (n "bencher") (r "^0.1") (d #t) (k 2)) (d (n "bit-vec") (r "^0.5") (d #t) (k 0)) (d (n "framp") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.1") (d #t) (k 0)) (d (n "ramp") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 0)) (d (n "rayon") (r "^1.0") (d #t) (k 0)) (d (n "ring") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "rust-gmp") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0q9nf0j1k02l4qagpq49c2ylix4192bxbf438gfhh78gnbf1xvsq") (f (quote (("useramp" "ramp") ("usegmp" "rust-gmp") ("useframp" "framp") ("proofs" "ring") ("keygen") ("gmp_nonsec") ("default" "usegmp" "keygen" "proofs"))))))

