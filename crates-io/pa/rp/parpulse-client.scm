(define-module (crates-io pa rp parpulse-client) #:use-module (crates-io))

(define-public crate-parpulse-client-0.1.0 (c (n "parpulse-client") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 0)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "0w40l4c05wnpfy1j3xsbhl4ng29261q7x6ilbd91m6p9zq0m6bsm")))

(define-public crate-parpulse-client-0.1.1 (c (n "parpulse-client") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "0lsh88lhlvrf4mqkqpgrk9yhh6ddl1irmvm9hyj3q5shizcmlq1d")))

(define-public crate-parpulse-client-0.1.2 (c (n "parpulse-client") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "0dn7l39f7mq3d6s7rffdifsfnzy79zlyjiz89lmplbalyivbcvdp")))

(define-public crate-parpulse-client-0.1.3 (c (n "parpulse-client") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "0677hfywk0a8rz58vmgc5z83xvfl7q4n55iss3lh9vyxjy80shhc")))

(define-public crate-parpulse-client-0.1.4 (c (n "parpulse-client") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "060yzb2425ifza1nxqwr45q7ijhmapv9nk6hzpcyd52d26wcvr6p")))

(define-public crate-parpulse-client-0.1.5 (c (n "parpulse-client") (v "0.1.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "1ywg1ccq50xih4m4bz65nbhm3c68j6fz9fciz0jk0f9sln2lq26d")))

(define-public crate-parpulse-client-0.1.6 (c (n "parpulse-client") (v "0.1.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "0jp9lndmsd3g7kc4y8vm6830l412h2vd43d0xnvlib447wsp1rf6")))

(define-public crate-parpulse-client-0.1.7 (c (n "parpulse-client") (v "0.1.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "0zibpj87vldf7gqfvgllx6yhp6v8zrpc76q3j5mf0vrychah5fqf")))

(define-public crate-parpulse-client-0.1.8 (c (n "parpulse-client") (v "0.1.8") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "arrow") (r "^50.0.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "enum-as-inner") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^1") (d #t) (k 0)) (d (n "istziio-client") (r "^0.1.9") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockito") (r "^1.4.0") (d #t) (k 2)) (d (n "parquet") (r "^50.0.0") (f (quote ("async"))) (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full" "rt-multi-thread"))) (d #t) (k 0)))) (h "1v4dfibqnayr11pvcw37dz4kmzggjnq6wqrzfrvj6jxz9pn9385m")))

