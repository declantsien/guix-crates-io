(define-module (crates-io pa ra parallel-disk-usage) #:use-module (crates-io))

(define-public crate-parallel-disk-usage-0.0.0 (c (n "parallel-disk-usage") (v "0.0.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "11k7l7ffj7kvayxk8qjrdx1kwwpzbvkx1fh7b4l91r6isqg09i7c")))

(define-public crate-parallel-disk-usage-0.0.1 (c (n "parallel-disk-usage") (v "0.0.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1zjdlmdb8y2bwbadhbrr0bq3xvdap6ify2g6hy4as5k6fd9xc8ws")))

(define-public crate-parallel-disk-usage-0.1.0 (c (n "parallel-disk-usage") (v "0.1.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1pcqpm79wzcnw5srkdfmr2vl32fxpw7siy2cjcx82s0y9ibxv8ak")))

(define-public crate-parallel-disk-usage-0.1.1 (c (n "parallel-disk-usage") (v "0.1.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0qfy8yhv8bkfzi02x75hvmh9k3dr9583js9nc3g11qwk5f1sbn6i")))

(define-public crate-parallel-disk-usage-0.1.2 (c (n "parallel-disk-usage") (v "0.1.2") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "19rn797bxa9pja44h3c0vz2bhys2scbm8ixrx3dn3x8mhmjlkghq")))

(define-public crate-parallel-disk-usage-0.1.3 (c (n "parallel-disk-usage") (v "0.1.3") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "084c9j9nhs9icnhpfvp0y9xvzfbs9a39amw9i4wlp72rb61jz9m6")))

(define-public crate-parallel-disk-usage-0.1.4 (c (n "parallel-disk-usage") (v "0.1.4") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "11c9w0f803x1f52jk5s5y8qc6apl0vyzl41g0a2ylricxav1s8pq")))

(define-public crate-parallel-disk-usage-0.2.0 (c (n "parallel-disk-usage") (v "0.2.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0bdl3wm0mbmxmjay6rp4zzmi62m3gjlskdcd4lddvm23k7rncv10") (f (quote (("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities"))))))

(define-public crate-parallel-disk-usage-0.2.1 (c (n "parallel-disk-usage") (v "0.2.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1y6nmn6c4hggpn5lvljydba5cvlnjlfkakngpii24ajzpx45ynif") (f (quote (("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities"))))))

(define-public crate-parallel-disk-usage-0.2.2 (c (n "parallel-disk-usage") (v "0.2.2") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0cxbfiznmd004gvldzx0zff1226aqkcly3vp59k9pdzvc4vi65vh") (f (quote (("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities"))))))

(define-public crate-parallel-disk-usage-0.2.3 (c (n "parallel-disk-usage") (v "0.2.3") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1dyfnir2f8a243hg432hj98x93lygd7d5z44xl7fglggyvdj9rnw") (f (quote (("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities"))))))

(define-public crate-parallel-disk-usage-0.2.4 (c (n "parallel-disk-usage") (v "0.2.4") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "102s8vr74y58wi5267lyc716czs0bsbmx741g672pxz60yxwg2fd") (f (quote (("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities"))))))

(define-public crate-parallel-disk-usage-0.2.5 (c (n "parallel-disk-usage") (v "0.2.5") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.2.6") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1ndwigc8zhxmc5qpv2q096gazfd8ksfdffarnmki3pnwsa63hwp0") (f (quote (("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities"))))))

(define-public crate-parallel-disk-usage-0.3.0 (c (n "parallel-disk-usage") (v "0.3.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "01yykfshbcyr5746y84pm5j20pzwbmirdg99k7qmgl9w8l7pzz45") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.4.0 (c (n "parallel-disk-usage") (v "0.4.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0az5372w8lmsa94vxv1q0yd4m9pkjacdv9bawzr064cz171fgxh8") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.5.0 (c (n "parallel-disk-usage") (v "0.5.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0cgkmk40rrr74rapxpwi9gnwv8fmr6lzddwij9pih9k8z6hvyj4j") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.5.1 (c (n "parallel-disk-usage") (v "0.5.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.20.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1anaqr68cjjvlpbgmslk4y7xqw1ia6yvnhplcxg8maixjcimcjnd") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.5.2 (c (n "parallel-disk-usage") (v "0.5.2") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0nyhn1ykpbb2f6ljdkijw67f86li59asn0wn8qda36cz7n9hs1ya") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.5.3 (c (n "parallel-disk-usage") (v "0.5.3") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.14") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0fpxd99n2gmwxdsn1vxybvbicmmq6z2mgwsq7skpdhdlhqmliilv") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.5.4 (c (n "parallel-disk-usage") (v "0.5.4") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "00aki8mgvx721vf2qlcfd3mxicl1r4l4gvjla0lv607zvni8zznl") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.6.0 (c (n "parallel-disk-usage") (v "0.6.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1mxqidigij1q84cw2mf5r6g2zc2mjg8gn6s1gd92042d4cfw6yh4") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.6.1 (c (n "parallel-disk-usage") (v "0.6.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.16") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.3.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.22") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.0.8") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.21.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0j3kj1nah5b3wcpklr0nn8faxggarbz7r28ybw9nvqfy7y36i9g8") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.7.0 (c (n "parallel-disk-usage") (v "0.7.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1k01895lhz20x6msxcza5h3l98pzp9v4b6bimazrmdg5w6y9kd9c") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.7.1 (c (n "parallel-disk-usage") (v "0.7.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.1.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.78") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "structopt") (r "^0.3.26") (o #t) (d #t) (k 0)) (d (n "structopt-utilities") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.23.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "terminal_size") (r "^0.1.17") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0vx5f6zrj904sdhvh8fj2ajrziiq8l3pzdxspp4z2pi3s5hi9zf2") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "structopt" "structopt-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.0 (c (n "parallel-disk-usage") (v "0.8.0") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.16") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0ang9j1rljn98kf5mqh126b6p9mns54w62xm95049zjhfgx5ly9s") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.1 (c (n "parallel-disk-usage") (v "0.8.1") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.16") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1h7m1lnd1yr7q5dkspfwl388dif0a2rzqy7gn972vz121ww2nwlc") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.2 (c (n "parallel-disk-usage") (v "0.8.2") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.3.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.16") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^3.2.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.2.1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.142") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.83") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.32") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0rbzv2nfg1bm3ad6zxkizqx03xim7xi5ifmf1dv0znkpcila8a7z") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.3 (c (n "parallel-disk-usage") (v "0.8.3") (d (list (d (n "assert-cmp") (r "^0.2.0") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.4.0") (d #t) (k 2)) (d (n "clap") (r "^4.0.13") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.2") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.5.3") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.145") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.86") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.1") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "16r7szdk43yqmzj8h7k48hx2df62cmi63zrz4if38nkdbpw36az4") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.4 (c (n "parallel-disk-usage") (v "0.8.4") (d (list (d (n "assert-cmp") (r "^0.2.1") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.4.1") (d #t) (k 2)) (d (n "clap") (r "^4.0.13") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.0.7") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.3") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "03j594y2x7adc1mlxwpvcyaza99xh0gb7zz7fpxmd2p80r5szwqr") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.5 (c (n "parallel-disk-usage") (v "0.8.5") (d (list (d (n "assert-cmp") (r "^0.2.1") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.4.1") (d #t) (k 2)) (d (n "clap") (r "^4.1.6") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.3") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0mfbnhr5rr2n8s0v43bl1a6yjd4xzjrr0zss79shdxyzq9vnr78l") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.8.6 (c (n "parallel-disk-usage") (v "0.8.6") (d (list (d (n "assert-cmp") (r "^0.2.1") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.4.1") (d #t) (k 2)) (d (n "clap") (r "^4.1.6") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.3") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "03xn9nvdcnyrj6wip6yf88p9vf369cvjjasw8p6rjpwwppilh6qw") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.9.0 (c (n "parallel-disk-usage") (v "0.9.0") (d (list (d (n "assert-cmp") (r "^0.2.1") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.4.1") (d #t) (k 2)) (d (n "clap") (r "^4.1.8") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.94") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.6.0") (d #t) (k 0)) (d (n "terminal_size") (r "^0.2.3") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1wlbzild09qwfxmxshnljf3vmp95zm4mrd3am7irv6c003x5xn3w") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.9.1 (c (n "parallel-disk-usage") (v "0.9.1") (d (list (d (n "assert-cmp") (r "^0.2.1") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.6.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.8") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.7.1") (d #t) (k 0)) (d (n "terminal_size") (r "^0.3.0") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "0fcbjh920yhadp0vfpfq6595pczp3y8lmsl0c0s977qbdsxfsbax") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

(define-public crate-parallel-disk-usage-0.9.2 (c (n "parallel-disk-usage") (v "0.9.2") (d (list (d (n "assert-cmp") (r "^0.2.1") (d #t) (k 0)) (d (n "build-fs-tree") (r "^0.6.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.8") (o #t) (d #t) (k 0)) (d (n "clap-utilities") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "clap_complete") (r "^4.1.3") (o #t) (d #t) (k 0)) (d (n "command-extra") (r "^1.0.0") (d #t) (k 2)) (d (n "derive_more") (r "^0.99.17") (d #t) (k 0)) (d (n "fmt-iter") (r "^0.2.1") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 2)) (d (n "pipe-trait") (r "^0.4.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rayon") (r "^1.7.0") (d #t) (k 0)) (d (n "rounded-div") (r "^0.1.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.159") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (o #t) (d #t) (k 0)) (d (n "smart-default") (r "^0.7.1") (d #t) (k 0)) (d (n "terminal_size") (r "^0.3.0") (d #t) (k 0)) (d (n "text-block-macros") (r "^0.1.1") (d #t) (k 0)) (d (n "zero-copy-pads") (r "^0.2.0") (d #t) (k 0)))) (h "1aqa0azafapsmx9nbis8n49n5lf8i48s88lwc0c97d3cnmji1x1j") (f (quote (("json" "serde/derive" "serde_json") ("default" "cli") ("cli-completions" "cli") ("cli" "clap/derive" "clap_complete" "clap-utilities" "json"))))))

