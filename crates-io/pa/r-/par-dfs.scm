(define-module (crates-io pa r- par-dfs) #:use-module (crates-io))

(define-public crate-par-dfs-0.0.6 (c (n "par-dfs") (v "0.0.6") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0") (f (quote ("fs"))) (d #t) (k 2)))) (h "1a5b9qm0l00b23677c9rlsdx53hflzkxxpihdcjn6lcljiw1lnqi") (f (quote (("sync") ("full" "sync" "async" "rayon") ("default" "sync")))) (s 2) (e (quote (("rayon" "dep:rayon") ("async" "dep:futures" "dep:pin-project" "dep:async-trait"))))))

(define-public crate-par-dfs-0.0.7 (c (n "par-dfs") (v "0.0.7") (d (list (d (n "anyhow") (r "^1") (d #t) (k 2)) (d (n "async-trait") (r "^0") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3.2") (f (quote ("derive"))) (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async_tokio"))) (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "pin-project") (r "^1") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("time" "rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0") (f (quote ("fs"))) (d #t) (k 2)) (d (n "tokio-test") (r "^0") (d #t) (k 2)))) (h "1mxkbwyj53ha09n2pdmhrqvgldgkgcqnw8bdjnj8ijgsp455z3kw") (f (quote (("sync") ("full" "sync" "async" "rayon") ("default" "sync")))) (s 2) (e (quote (("rayon" "dep:rayon") ("async" "dep:futures" "dep:pin-project" "dep:async-trait"))))))

