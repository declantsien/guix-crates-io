(define-module (crates-io pa ce pace_core) #:use-module (crates-io))

(define-public crate-pace_core-0.1.0 (c (n "pace_core") (v "0.1.0") (h "1xpbdlnrljas9xx6dilkxiic1lja4rn1vddvbn2qma3qi59j03pc")))

(define-public crate-pace_core-0.1.1 (c (n "pace_core") (v "0.1.1") (h "19rsdap30q01064wiiy6yz0pjzz90y1i5dykiwbaaq2csjr210qp")))

(define-public crate-pace_core-0.2.0 (c (n "pace_core") (v "0.2.0") (h "0k1llqqf727da5lrz84bm9bz66lh6c7sycw7sy33x9r4f7yh39qs")))

(define-public crate-pace_core-0.3.0 (c (n "pace_core") (v "0.3.0") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (f (quote ("serde"))) (d #t) (k 0)) (d (n "derive-getters") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "132imm0zyd4q4l8h6w6nnvzlgq7ryqm3q8ky44b4xlja8vy2m7z6")))

(define-public crate-pace_core-0.4.0 (c (n "pace_core") (v "0.4.0") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "1nwqpyjccchg3af9vm5zm3dnzb7w0124fhqx0hbw3fvk48gv1pbc")))

(define-public crate-pace_core-0.5.0 (c (n "pace_core") (v "0.5.0") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.33") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.56") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "0qibrvhjxq9jz0drygwcwkjpvps8970cnzhk7x1lr36aiaa2jpzg") (r "1.74.1")))

(define-public crate-pace_core-0.5.1 (c (n "pace_core") (v "0.5.1") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "1jh62pb99nm89cz9cyzvnqj2jjzc3x6nx84i2fhf1ihsdx8n4l2l") (r "1.74.1")))

(define-public crate-pace_core-0.6.0 (c (n "pace_core") (v "0.6.0") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "0k4ml3is4lchj726rjxg70pbzcwmkyiddgxc1fff17rg59qy374c") (r "1.74.1")))

(define-public crate-pace_core-0.7.0 (c (n "pace_core") (v "0.7.0") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "0f3jq8n2qbhr9iz86r3k22zzkydp1lysqyz2l5cw0wcfafswabr1") (r "1.74.1")))

(define-public crate-pace_core-0.8.0 (c (n "pace_core") (v "0.8.0") (d (list (d (n "async-condvar-fair") (r "^1.0.0") (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "delegate") (r "^0.12.0") (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.30.0") (f (quote ("bundled" "chrono" "uuid"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.196") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.196") (d #t) (k 0)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "tokio") (r "^1.36.0") (f (quote ("sync" "rt" "rt-multi-thread" "time"))) (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("serde" "fast-rng" "v7"))) (d #t) (k 0)))) (h "0ryawagvbydqq3k3n4r7vdnhy4vga92mj0lbl96fdpag721vjjfd") (r "1.74.1")))

(define-public crate-pace_core-0.9.0 (c (n "pace_core") (v "0.9.0") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "09nrr26i6wfbfh8xk9d9qxd0kbzvdxhr3d634xzff9lsk0mrz0h1") (f (quote (("default")))) (s 2) (e (quote (("sqlite" "dep:rusqlite")))) (r "1.74.1")))

(define-public crate-pace_core-0.10.0 (c (n "pace_core") (v "0.10.0") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1cd3i4fg79azigaw7pf0sjv1rxabzb676zzjsp85j7fr3rsbdmlw") (f (quote (("default")))) (s 2) (e (quote (("sqlite" "dep:rusqlite")))) (r "1.74.1")))

(define-public crate-pace_core-0.10.1 (c (n "pace_core") (v "0.10.1") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "11mi03k1l0fpfrmzak5kgyfgm30avskqqhr4r4wz0hqhvz4k46i4") (f (quote (("default")))) (s 2) (e (quote (("sqlite" "dep:rusqlite")))) (r "1.74.1")))

(define-public crate-pace_core-0.10.2 (c (n "pace_core") (v "0.10.2") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0mwgqk7klsy2hvcqv3dmpmhd5c7ycyk9ck7j9mhdmswaxg3g1jga") (f (quote (("default")))) (s 2) (e (quote (("sqlite" "dep:rusqlite")))) (r "1.74.1")))

(define-public crate-pace_core-0.11.0 (c (n "pace_core") (v "0.11.0") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1h52q9rq84dm5pdvqpzsx7x6x0p59l05dnafmv9jr97718d04lfy") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.12.0 (c (n "pace_core") (v "0.12.0") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1qh1k9q1v36g0k0sh0n2swp68h2rl63ylgc0v1yy74yvz5n2ii4x") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.12.1 (c (n "pace_core") (v "0.12.1") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1w55ysa1ig1ykjwdmwvm3abmjp8ydlb474366cjvzfdawxy2hxg3") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.13.0 (c (n "pace_core") (v "0.13.0") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0zbcg34xvw8zgrpg0qp0skm630n0y0sabbwzffg2q32a92f44x1z") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.14.0 (c (n "pace_core") (v "0.14.0") (d (list (d (n "chrono") (r "^0.4.34") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "insta") (r "^1.35.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "log") (r "^0.4.21") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "11v1djhnx2nyfxs362hr9n3xrq65max4c9j9155ngxgcdl3zzrrc") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.15.0 (c (n "pace_core") (v "0.15.0") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.1.0") (d #t) (k 0)) (d (n "pace_testing") (r "^0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "0c4d0n4b6q2df52c6y77jj55n1dkvc1g1ba2yafdsdx7cfig82l3") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.15.1 (c (n "pace_core") (v "0.15.1") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.1.0") (d #t) (k 0)) (d (n "pace_testing") (r "^0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "tabled") (r "^0.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)))) (h "1pf3sfw7mnk84ygra4sri1lglhjq6s669g0h86varf41hm9yazcz") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.16.0 (c (n "pace_core") (v "0.16.0") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "pace_testing") (r "^0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rusqlite") (r "^0.31.0") (f (quote ("bundled" "chrono" "uuid"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "tabled") (r "^0.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wildmatch") (r "^2.3.0") (d #t) (k 0)))) (h "1bjc2kkg4vwgiviqm1lk42525p89m97c9i3l58756d5amb51iyx5") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:rusqlite") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.16.1 (c (n "pace_core") (v "0.16.1") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "diesel") (r "^2.1.4") (f (quote ("sqlite" "chrono"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "humantime") (r "^2.1.0") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "pace_testing") (r "^0") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "strum") (r "^0.26.1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.1") (d #t) (k 0)) (d (n "tabled") (r "^0.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.57") (d #t) (k 0)) (d (n "toml") (r "^0.8.10") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wildmatch") (r "^2.3.0") (d #t) (k 0)))) (h "004w2kk6nfinvkw077jsblhar891a299b908gj1j66mw0lzrb77a") (f (quote (("default") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:diesel" "libsqlite3-sys") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.17.0 (c (n "pace_core") (v "0.17.0") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "diesel") (r "^2.1.5") (f (quote ("sqlite" "chrono"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "pace_testing") (r "^0") (d #t) (k 2)) (d (n "pace_time") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.9.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "simplelog") (r "^0.12.2") (d #t) (k 2)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.2") (d #t) (k 0)) (d (n "tabled") (r "^0.15.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wildmatch") (r "^2.3.3") (d #t) (k 0)))) (h "0qf2dyrpg9gj983rm1a3g0bmj213ml506h5mdk00r7nnm0jiv4ww") (f (quote (("default" "cli") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:diesel" "dep:libsqlite3-sys") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.18.0 (c (n "pace_core") (v "0.18.0") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "diesel") (r "^2.1.5") (f (quote ("sqlite" "chrono"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "pace_testing") (r "^0") (d #t) (k 2)) (d (n "pace_time") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "simplelog") (r "^0.12.2") (d #t) (k 2)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.2") (d #t) (k 0)) (d (n "tabled") (r "^0.15.0") (d #t) (k 0)) (d (n "tera") (r "^1.19.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wildmatch") (r "^2.3.3") (d #t) (k 0)))) (h "1xdymxa77pj1h417kp4c77j0lh1i2yw8vcfnyqh9ashv35dp7v0j") (f (quote (("default" "cli") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:diesel" "dep:libsqlite3-sys") ("clap" "dep:clap")))) (r "1.74.1")))

(define-public crate-pace_core-0.19.0 (c (n "pace_core") (v "0.19.0") (d (list (d (n "chrono") (r "^0.4.35") (f (quote ("serde"))) (d #t) (k 0)) (d (n "chrono-tz") (r "^0.8.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("env" "wrap_help" "derive"))) (o #t) (d #t) (k 0)) (d (n "diesel") (r "^2.1.5") (f (quote ("sqlite" "chrono"))) (o #t) (d #t) (k 0)) (d (n "directories") (r "^5.0.1") (d #t) (k 0)) (d (n "displaydoc") (r "^0.2.4") (d #t) (k 0)) (d (n "enum_dispatch") (r "^0.3.12") (d #t) (k 0)) (d (n "eyre") (r "^0.6.12") (d #t) (k 2)) (d (n "getset") (r "^0.1.2") (d #t) (k 0)) (d (n "insta") (r "^1.36.1") (f (quote ("toml" "redactions"))) (d #t) (k 2)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "libsqlite3-sys") (r "^0.27") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "merge") (r "^0.1.0") (d #t) (k 0)) (d (n "miette") (r "^7.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "open") (r "^5.1.2") (d #t) (k 0)) (d (n "pace_time") (r "^0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("deadlock_detection"))) (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.197") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 0)) (d (n "similar-asserts") (r "^1.5.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "simplelog") (r "^0.12.2") (d #t) (k 2)) (d (n "strum") (r "^0.26.2") (f (quote ("derive"))) (d #t) (k 0)) (d (n "strum_macros") (r "^0.26.2") (d #t) (k 0)) (d (n "tabled") (r "^0.15.0") (d #t) (k 0)) (d (n "tera") (r "^1.19.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (f (quote ("indexmap" "preserve_order"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "typed-builder") (r "^0.18.1") (d #t) (k 0)) (d (n "ulid") (r "^1.1.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "wildmatch") (r "^2.3.3") (d #t) (k 0)))) (h "0qsghzyh4k28y2395c7abiza9p5n0mn9q6n27wckz7f1nr8k217d") (f (quote (("default" "cli") ("cli" "clap")))) (s 2) (e (quote (("sqlite" "dep:diesel" "dep:libsqlite3-sys") ("clap" "dep:clap")))) (r "1.74.1")))

