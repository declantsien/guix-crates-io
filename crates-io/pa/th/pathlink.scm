(define-module (crates-io pa th pathlink) #:use-module (crates-io))

(define-public crate-pathlink-0.1.0 (c (n "pathlink") (v "0.1.0") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hr-id") (r "^0.4") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "url") (r "^2.2") (o #t) (d #t) (k 0)))) (h "0zdxfgw3lhhpshsj57r46s7v3gm3w2hh0db881f1i2mp790i1cnb") (f (quote (("uuid" "hr-id/uuid") ("stream" "async-trait" "destream" "hr-id/stream") ("serialize" "serde" "hr-id/serde") ("hash" "async-hash" "hex" "hr-id/hash") ("all" "hash" "stream" "serialize" "uuid" "url"))))))

(define-public crate-pathlink-0.2.0 (c (n "pathlink") (v "0.2.0") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hr-id") (r "^0.5") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "url") (r "^2.4") (o #t) (d #t) (k 0)))) (h "1ag5sij1s04nyj8p2zyf0hzw34smy394jj8vn9j756y4193bd05w") (f (quote (("uuid" "hr-id/uuid") ("stream" "async-trait" "destream" "hr-id/stream") ("serialize" "serde" "hr-id/serde") ("hash" "async-hash" "hex" "hr-id/hash") ("all" "hash" "stream" "serialize" "uuid" "url"))))))

(define-public crate-pathlink-0.2.1 (c (n "pathlink") (v "0.2.1") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hr-id") (r "^0.5") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)))) (h "17938lk7aki4xd26fh45ig0g3sx3pic3c76iz64hf02hlaydpgsk") (f (quote (("uuid" "hr-id/uuid") ("stream" "async-trait" "destream" "hr-id/stream") ("serialize" "serde" "hr-id/serde") ("hash" "async-hash" "hex" "hr-id/hash") ("all" "hash" "stream" "serialize" "uuid" "url")))) (y #t)))

(define-public crate-pathlink-0.2.2 (c (n "pathlink") (v "0.2.2") (d (list (d (n "async-hash") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "derive_more") (r "^0.99") (f (quote ("display"))) (d #t) (k 0)) (d (n "destream") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "get-size") (r "^0.1") (d #t) (k 0)) (d (n "get-size-derive") (r "^0.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "hr-id") (r "^0.5") (d #t) (k 0)) (d (n "safecast") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.11") (d #t) (k 0)) (d (n "url") (r "^2.5") (o #t) (d #t) (k 0)))) (h "1xq6fx1irppq2hzinzydk6pha87f1b6c9dpry7pjn6j8m92fxwaf") (f (quote (("uuid" "hr-id/uuid") ("stream" "async-trait" "destream" "hr-id/stream") ("serialize" "serde" "hr-id/serde") ("hash" "async-hash" "hex" "hr-id/hash") ("all" "hash" "stream" "serialize" "uuid" "url"))))))

