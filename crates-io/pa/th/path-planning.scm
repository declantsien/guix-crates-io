(define-module (crates-io pa th path-planning) #:use-module (crates-io))

(define-public crate-path-planning-0.1.0 (c (n "path-planning") (v "0.1.0") (d (list (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("wrap_help"))) (d #t) (k 0)) (d (n "ctrlc") (r "^3.2.1") (d #t) (k 0)) (d (n "factorial") (r "^0.2.1") (d #t) (k 0)) (d (n "indextree") (r "^4.3") (f (quote ("deser"))) (d #t) (k 0)) (d (n "kdtree") (r "^0.6.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "nalgebra") (r "^0.29") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parry2d") (r "^0.7") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "parry2d-f64") (r "^0.7") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "parry3d") (r "^0.7") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "parry3d-f64") (r "^0.7") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6") (f (quote ("stable_graph" "serde-1"))) (k 0)) (d (n "priority-queue") (r "^1.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_pcg") (r "^0.2.1") (d #t) (k 0)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.6.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "simba") (r "^0.6") (d #t) (k 0)) (d (n "simple-logging") (r "^2.0") (d #t) (k 0)) (d (n "tar") (r "^0.4.38") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde-human-readable" "macros"))) (d #t) (k 0)) (d (n "typenum") (r "^1.12.0") (d #t) (k 0)))) (h "0b3myxfk8qs2hhb0lkjf4psnyzay86d50bgqczaky42k502jq9f8")))

