(define-module (crates-io pa st pasta_curves) #:use-module (crates-io))

(define-public crate-pasta_curves-0.0.0 (c (n "pasta_curves") (v "0.0.0") (h "0rmy1rrlqby5x2hjyiskq1spyvc3amlb46vh6azk876j8fmjnjmn")))

(define-public crate-pasta_curves-0.1.0 (c (n "pasta_curves") (v "0.1.0") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.10") (d #t) (k 0)) (d (n "group") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (d #t) (k 0)))) (h "0piq323wjpxb2h3xnz88xdjdvly0gajfnr5qnpvcn8dflq8vq89w") (f (quote (("default" "bits") ("bits" "ff/bits"))))))

(define-public crate-pasta_curves-0.1.1 (c (n "pasta_curves") (v "0.1.1") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.10") (d #t) (k 0)) (d (n "group") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (d #t) (k 0)))) (h "0mdlpcyvfzvrdp3bhy2syj1q496b9c6fqdzmk6b6cs80w98gg78p") (f (quote (("default" "bits") ("bits" "ff/bits"))))))

(define-public crate-pasta_curves-0.1.2 (c (n "pasta_curves") (v "0.1.2") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.10") (d #t) (k 0)) (d (n "group") (r "^0.10") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (d #t) (k 0)))) (h "1687ayvk2wa0cinhdl71wlz0i2sf3blwi4c0cgkp96sqvi6r28cs") (f (quote (("default" "bits") ("bits" "ff/bits"))))))

(define-public crate-pasta_curves-0.2.0 (c (n "pasta_curves") (v "0.2.0") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.11") (d #t) (k 0)) (d (n "group") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (d #t) (k 0)))) (h "1rbf65j9dp0xvd0js27id1n8z9pmr65kb2cgjx8a513bwmagksg2") (f (quote (("default" "bits") ("bits" "ff/bits"))))))

(define-public crate-pasta_curves-0.2.1 (c (n "pasta_curves") (v "0.2.1") (d (list (d (n "blake2b_simd") (r "^0.5") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.11") (d #t) (k 0)) (d (n "group") (r "^0.11") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (d #t) (k 0)))) (h "12r7a6i07gaiddkiggwvbj01g8fdbwi6pq31zlh83mxsf8cxjiyn") (f (quote (("default" "bits") ("bits" "ff/bits"))))))

(define-public crate-pasta_curves-0.3.0 (c (n "pasta_curves") (v "0.3.0") (d (list (d (n "blake2b_simd") (r "^1") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ff") (r "^0.11") (k 0)) (d (n "group") (r "^0.11") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (k 0)))) (h "130vi5b4a51ayr0y88jg4hn7y3jp3y7w7q6x5yjnlgq3fd7zrdl2") (f (quote (("sqrt-table" "alloc" "lazy_static") ("default" "bits" "sqrt-table") ("bits" "ff/bits") ("alloc" "group/alloc" "blake2b_simd"))))))

(define-public crate-pasta_curves-0.3.1 (c (n "pasta_curves") (v "0.3.1") (d (list (d (n "blake2b_simd") (r "^1") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.11") (k 0)) (d (n "group") (r "^0.11") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (k 0)))) (h "0gxcy9wlfixgfrbnms9kwshlyw1kxnsmj9906gqlb35wzpqha3fi") (f (quote (("sqrt-table" "alloc" "lazy_static") ("repr-c") ("gpu" "alloc" "ec-gpu") ("default" "bits" "sqrt-table") ("bits" "ff/bits") ("alloc" "group/alloc" "blake2b_simd"))))))

(define-public crate-pasta_curves-0.4.0 (c (n "pasta_curves") (v "0.4.0") (d (list (d (n "blake2b_simd") (r "^1") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (k 0)) (d (n "group") (r "^0.12") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (k 0)))) (h "0hms2m5lakhvqbwixc9nhmyr56p1lf69cza6pq6gzmwa2s2pg79n") (f (quote (("sqrt-table" "alloc" "lazy_static") ("repr-c") ("gpu" "alloc" "ec-gpu") ("default" "bits" "sqrt-table") ("bits" "ff/bits") ("alloc" "group/alloc" "blake2b_simd")))) (r "1.56")))

(define-public crate-pasta_curves-0.4.1 (c (n "pasta_curves") (v "0.4.1") (d (list (d (n "blake2b_simd") (r "^1") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ec-gpu") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.12") (k 0)) (d (n "group") (r "^0.12") (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (k 0)))) (h "1n218dh96ygqfwafffv6m6cx9vm02ylpr7xazfqv84vkispmzijw") (f (quote (("uninline-portable") ("sqrt-table" "alloc" "lazy_static") ("repr-c") ("gpu" "alloc" "ec-gpu") ("default" "bits" "sqrt-table") ("bits" "ff/bits") ("alloc" "group/alloc" "blake2b_simd")))) (r "1.56")))

(define-public crate-pasta_curves-0.5.0 (c (n "pasta_curves") (v "0.5.0") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "group") (r "^0.13") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.16") (f (quote ("alloc"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (k 0)))) (h "0nk1pjpv6ahc1dbh5pv2xffivrklb4v0m2fd768m5iq9srnn0pbw") (f (quote (("uninline-portable") ("sqrt-table" "alloc" "lazy_static") ("serde" "hex" "serde_crate") ("repr-c") ("gpu" "alloc" "ec-gpu") ("default" "bits" "sqrt-table") ("bits" "ff/bits") ("alloc" "group/alloc" "blake2b_simd")))) (r "1.56")))

(define-public crate-pasta_curves-0.5.1 (c (n "pasta_curves") (v "0.5.1") (d (list (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "blake2b_simd") (r "^1") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "csv") (r ">=1.0, <1.2") (d #t) (k 2)) (d (n "ec-gpu") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "ff") (r "^0.13") (k 0)) (d (n "group") (r "^0.13") (k 0)) (d (n "hex") (r "^0.4") (f (quote ("alloc" "serde"))) (o #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (f (quote ("spin_no_std"))) (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "serde_crate") (r "^1.0.16") (f (quote ("alloc"))) (o #t) (k 0) (p "serde")) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "subtle") (r "^2.3") (k 0)))) (h "15d0wy6j1d8ilg5cs0n4sxy8g81igd8rriv3mjrf3irwyyc7brfk") (f (quote (("uninline-portable") ("sqrt-table" "alloc" "lazy_static") ("serde" "hex" "serde_crate") ("repr-c") ("gpu" "alloc" "ec-gpu") ("default" "bits" "sqrt-table") ("bits" "ff/bits") ("alloc" "group/alloc" "blake2b_simd")))) (r "1.56")))

