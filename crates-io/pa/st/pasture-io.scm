(define-module (crates-io pa st pasture-io) #:use-module (crates-io))

(define-public crate-pasture-io-0.1.0 (c (n "pasture-io") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "float-ord") (r "^0.2.0") (d #t) (k 0)) (d (n "las") (r "^0.7.3") (f (quote ("laz"))) (d #t) (k 0)) (d (n "laz") (r "^0.5.2") (d #t) (k 0)) (d (n "pasture-core") (r "=0.1.0") (d #t) (k 0)) (d (n "pasture-derive") (r "=0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.1.0") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1branrbjwridpv5rqkg9l5zb13cm2k350qg11jgqv2p45nqx7nsv")))

(define-public crate-pasture-io-0.2.0 (c (n "pasture-io") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "float-ord") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "las") (r "^0.7.3") (f (quote ("laz"))) (d #t) (k 0)) (d (n "laz") (r "^0.5.2") (d #t) (k 0)) (d (n "pasture-core") (r "=0.2.0") (d #t) (k 0)) (d (n "pasture-derive") (r "=0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1j3nnx4pv7hdxm8kpcyry5x74ywhdqbrg6bwrgjg67avjhkbffwb")))

(define-public crate-pasture-io-0.3.0 (c (n "pasture-io") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bytemuck") (r "^1.5.1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "crevice") (r "^0.7.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "float-ord") (r "^0.2.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "las") (r "=0.7.3") (f (quote ("laz"))) (d #t) (k 0)) (d (n "laz") (r "^0.6.0") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "mint") (r "^0.5.6") (o #t) (d #t) (k 0)) (d (n "pasture-core") (r "=0.3.0") (d #t) (k 0)) (d (n "pasture-derive") (r "=0.2.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "1cfq88ybn7y8v0xxap3x8kzk6261hfdgwsnrvq2wh6pn7phh8172") (f (quote (("io_gpu_examples" "pasture-core/gpu" "crevice" "mint" "log" "env_logger" "futures" "bytemuck"))))))

(define-public crate-pasture-io-0.4.0 (c (n "pasture-io") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.34") (d #t) (k 0)) (d (n "array-init") (r "^2.1") (d #t) (k 0)) (d (n "bincode") (r "^1.3.3") (d #t) (k 0)) (d (n "bitfield") (r "^0.14") (d #t) (k 0)) (d (n "bytemuck") (r "^1.13") (f (quote ("derive"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.4.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "float-ord") (r "^0.2.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "las") (r "^0.8") (f (quote ("laz"))) (d #t) (k 0)) (d (n "laz") (r "^0.8") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "memmap2") (r "^0.7.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.16") (d #t) (k 0)) (d (n "pasture-core") (r "=0.4.0") (d #t) (k 0)) (d (n "pasture-derive") (r "=0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.3") (d #t) (k 2)) (d (n "scopeguard") (r "^1.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)))) (h "14adwarxff27rk28743a66xsawa9yws1g112mdv4ss85051p7wc9")))

