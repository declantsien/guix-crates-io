(define-module (crates-io pa ss passkey-authenticator) #:use-module (crates-io))

(define-public crate-passkey-authenticator-0.0.1 (c (n "passkey-authenticator") (v "0.0.1") (h "1lhdw81b3sw6pxw81z61rx3r2lfgcckycgl6cpz370583frp4h56")))

(define-public crate-passkey-authenticator-0.1.0 (c (n "passkey-authenticator") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "coset") (r "^0.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "p256") (r "^0.10") (f (quote ("pem" "arithmetic" "jwk"))) (d #t) (k 0)) (d (n "passkey-types") (r "^0.1.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "signature") (r ">=1.3.1, <1.5") (f (quote ("rand-preview"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros" "rt"))) (d #t) (k 2)))) (h "1q5zy1shkiwr533rm48lzjg0dvx515gfdif80m5slnqr8a1icwy8") (f (quote (("default")))) (s 2) (e (quote (("tokio" "dep:tokio") ("testable" "dep:mockall"))))))

(define-public crate-passkey-authenticator-0.2.0 (c (n "passkey-authenticator") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "coset") (r "^0.3") (d #t) (k 0)) (d (n "generic-array") (r "^0.14") (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "p256") (r "^0.13") (f (quote ("pem" "arithmetic" "jwk"))) (d #t) (k 0)) (d (n "passkey-types") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "signature") (r "^2") (f (quote ("rand_core"))) (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("sync"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("sync" "macros" "rt"))) (d #t) (k 2)))) (h "0yam8j90w8w7h16n6d9v3j17qyrxrcczx8s3icsrh2llk1zd45s0") (f (quote (("default")))) (s 2) (e (quote (("tokio" "dep:tokio") ("testable" "dep:mockall"))))))

