(define-module (crates-io pa ss passwordmaker-rs) #:use-module (crates-io))

(define-public crate-passwordmaker-rs-0.1.0 (c (n "passwordmaker-rs") (v "0.1.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (d #t) (k 2)) (d (n "md-5") (r "^0.10.5") (d #t) (k 2)) (d (n "md4") (r "^0.10.2") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "strum") (r "^0.24") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)))) (h "0dhz0zfrg35am19yi4rkyi7s5g3nh6lzxj7i3jrbfx4qxcz16ggz") (r "1.52")))

(define-public crate-passwordmaker-rs-0.2.0 (c (n "passwordmaker-rs") (v "0.2.0") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (d #t) (k 2)) (d (n "md-5") (r "^0.10.5") (d #t) (k 2)) (d (n "md4") (r "^0.10.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "strum") (r "^0.24") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)))) (h "02mzf6z4bskcyiyv7in0m78i19vflrsr89ry3hg2lmgdgp9jli1z") (f (quote (("precomputed_max_powers" "precomputed_common_max_powers") ("precomputed_common_max_powers") ("default" "precomputed_common_max_powers")))) (r "1.52")))

(define-public crate-passwordmaker-rs-0.2.1 (c (n "passwordmaker-rs") (v "0.2.1") (d (list (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "digest") (r "^0.10.5") (d #t) (k 2)) (d (n "md-5") (r "^0.10.5") (d #t) (k 2)) (d (n "md4") (r "^0.10.2") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_xoshiro") (r "^0.6.0") (d #t) (k 2)) (d (n "ripemd") (r "^0.1.3") (d #t) (k 2)) (d (n "sha-1") (r "^0.10.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10.6") (d #t) (k 2)) (d (n "strum") (r "^0.24") (d #t) (k 2)) (d (n "strum_macros") (r "^0.24") (d #t) (k 2)) (d (n "unicode-segmentation") (r "^1.10.0") (d #t) (k 0)))) (h "0ib6phyr59mda7nlxc71a339vmr0227ryhxcmhp8bwj9f8yka9xb") (f (quote (("precomputed_max_powers" "precomputed_common_max_powers") ("precomputed_common_max_powers") ("default" "precomputed_common_max_powers")))) (r "1.52")))

