(define-module (crates-io pa rq parquet) #:use-module (crates-io))

(define-public crate-parquet-0.1.0 (c (n "parquet") (v "0.1.0") (d (list (d (n "brotli") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.2") (d #t) (k 0)) (d (n "x86intrin") (r "^0.4.3") (d #t) (k 0)))) (h "0dz56ijamk99rchaijf0h9mrcwr7ql9dskv7sx5gm00209g7g6dq")))

(define-public crate-parquet-0.2.0 (c (n "parquet") (v "0.2.0") (d (list (d (n "brotli") (r "^1.1.2") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.22") (d #t) (k 0)) (d (n "parquet-format") (r "^2.4.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "x86intrin") (r "^0.4.3") (d #t) (k 0)))) (h "1dn9y22blzji8a350dbiv9gzybvjj7lxd97m5bghmsswwkgrvsx6")))

(define-public crate-parquet-0.3.0 (c (n "parquet") (v "0.3.0") (d (list (d (n "brotli") (r "^2.0.1") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.22") (d #t) (k 0)) (d (n "num-bigint") (r "^0.1") (d #t) (k 0)) (d (n "parquet-format") (r "^2.4.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.1") (d #t) (k 0)) (d (n "rand") (r "^0.4") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "x86intrin") (r "^0.4.3") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0gams969yxjjrdzir7zhx2nlxc7p0dpb05jw737snb2rvcsysh5l")))

(define-public crate-parquet-0.4.0 (c (n "parquet") (v "0.4.0") (d (list (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.4.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0p9mbii13ib18sarl1y6qa9hiv1wjjbm4vi63mkr6l1ca3hxjsa1")))

(define-public crate-parquet-0.4.1 (c (n "parquet") (v "0.4.1") (d (list (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.4.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1wrwbv8ffqryyvn159dj4gnz9n8nwfc1mi8w5h05hic1wvbfvmxc")))

(define-public crate-parquet-0.4.2 (c (n "parquet") (v "0.4.2") (d (list (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.5.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "0lran48nn71qj6s5fd9nvalgv5lg79y1mk1qi1bb55dak27k30ca")))

(define-public crate-parquet-0.12.0 (c (n "parquet") (v "0.12.0") (d (list (d (n "arrow") (r "^0.12.0") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.5.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "08n5rk1p4vhlg8na08swvykm0sg3klggg69q5v84x0f2va8c7v6p")))

(define-public crate-parquet-0.13.0 (c (n "parquet") (v "0.13.0") (d (list (d (n "arrow") (r "^0.13.0") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.5.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1qrg684649y9zzbg4wy064zipvks3nlw1c9a3dwc258wycd0nbgx")))

(define-public crate-parquet-0.14.0 (c (n "parquet") (v "0.14.0") (d (list (d (n "arrow") (r "^0.14.0") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.5.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1j23k9x88zvyl9j4dxh26mi6wc0w4srbrlrx6zn1c8yl5p2jhrqr")))

(define-public crate-parquet-0.14.1 (c (n "parquet") (v "0.14.1") (d (list (d (n "arrow") (r "^0.14.0") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "^2.5.0") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "03xv55ys476bp8fn1157dcl8bwkjj1kgycci2z8vgddmy7m4glq7")))

(define-public crate-parquet-0.15.0 (c (n "parquet") (v "0.15.0") (d (list (d (n "arrow") (r "^0.15.0") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "~2.5") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1i1vzdnm57vas3mzh49h1ifd4w8mm4hiy0z7sl2x72f3dkrrhpjg")))

(define-public crate-parquet-0.15.1 (c (n "parquet") (v "0.15.1") (d (list (d (n "arrow") (r "^0.15.1") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "~2.5") (d #t) (k 0)) (d (n "quick-error") (r "^1.2.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1mji6wivyazxlfqziy3wmn5ql90ps47f9839xhwjbssfq3phcc1j")))

(define-public crate-parquet-0.16.0 (c (n "parquet") (v "0.16.0") (d (list (d (n "arrow") (r "^0.16.0") (d #t) (k 0)) (d (n "brotli") (r "^2.5") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6") (d #t) (k 0)) (d (n "quick-error") (r "^1.2") (d #t) (k 0)) (d (n "rand") (r "^0.5") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.13") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "thrift") (r "^0.12") (d #t) (k 0)) (d (n "zstd") (r "^0.4") (d #t) (k 0)))) (h "1a3wr5jf3kb1wzhds17lja6d8s45gfh5bswbzi6zl4c2nbd07fxs")))

(define-public crate-parquet-0.17.0 (c (n "parquet") (v "0.17.0") (d (list (d (n "arrow") (r "^0.17.0") (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (d #t) (k 0)) (d (n "num-bigint") (r "^0.2") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6") (d #t) (k 0)) (d (n "quick-error") (r "^1.2") (d #t) (k 0)) (d (n "rand") (r "^0.6") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "thrift") (r "^0.12") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (k 0)))) (h "0xh6aam07pj0d5m004yp4afp70pfvn58x6xjvbkf3693br9md4vn")))

(define-public crate-parquet-1.0.0 (c (n "parquet") (v "1.0.0") (d (list (d (n "arrow") (r "^1.0.0-SNAPSHOT") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^1.0.0") (d #t) (k 2)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "parquet-format") (r "^2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (k 2)))) (h "00sh4fvflbn5akqlwji6cdv2qxjmcrydgg4ngh7lq10n1i83ch13") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd"))))))

(define-public crate-parquet-1.0.1 (c (n "parquet") (v "1.0.1") (d (list (d (n "arrow") (r "^1.0.0-SNAPSHOT") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^1.0.1") (d #t) (k 2)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "parquet-format") (r "^2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (k 2)))) (h "1khmz3z2s1f3bay1vw8l1mix7r99grlh7vnvanj2sq39wzpbgq05") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd"))))))

(define-public crate-parquet-2.0.0 (c (n "parquet") (v "2.0.0") (d (list (d (n "arrow") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^2.0.0") (d #t) (k 2)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "parquet-format") (r "^2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.5") (d #t) (k 2)))) (h "0vl99blxywqkjwbfy276s7m8948s9ywbrvv1acwr05z74lqa1gv3") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd"))))))

(define-public crate-parquet-3.0.0 (c (n "parquet") (v "3.0.0") (d (list (d (n "arrow") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^3.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.6") (d #t) (k 2)))) (h "0vxk4jcnwm0dcgnpxxfdg1m468prgyqqflym4rd65s6a3nszhyif") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64"))))))

(define-public crate-parquet-4.0.0 (c (n "parquet") (v "4.0.0") (d (list (d (n "arrow") (r "^4.0.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^4.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.3") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.7") (d #t) (k 2)))) (h "0rf8d8qzb92s4h83h2ghskz35xnj2zv6mdz4dd0dl7yndghqm19j") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-4.1.0 (c (n "parquet") (v "4.1.0") (d (list (d (n "arrow") (r "^4.1.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^4.1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.8") (d #t) (k 2)))) (h "1pk8xx5c7hd5s1sbh27f42mwmcrr7r1qzps7cj5a47q2j2r8sfqr") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-4.2.0 (c (n "parquet") (v "4.2.0") (d (list (d (n "arrow") (r "^4.2.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^4.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.8") (d #t) (k 2)))) (h "19l8ya7jqym8bpf1pyg0i31a7sqaw18dskwbj6v6lkmhxbwafxcj") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-4.3.0 (c (n "parquet") (v "4.3.0") (d (list (d (n "arrow") (r "^4.3.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^4.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.8") (d #t) (k 2)))) (h "10rw31c2q7b66p7fvb79npbv7wiahksg1lyfvgbhl5nfmdffdlb1") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-4.4.0 (c (n "parquet") (v "4.4.0") (d (list (d (n "arrow") (r "^4.4.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^4.4.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.8") (d #t) (k 2)))) (h "0m3aqmaa79wka7adijl3zqkfjf1iwm2y58v0g16askv73pj48l16") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-5.0.0 (c (n "parquet") (v "5.0.0") (d (list (d (n "arrow") (r "^5.0.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^5.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1p8dbdyqw23ijalv9wpdaxv28drbpfmk1ll5aq8gd1vjxwbwp5wj") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-5.1.0 (c (n "parquet") (v "5.1.0") (d (list (d (n "arrow") (r "^5.1.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^5.1.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "13c6pyp47xwzk5kvrgr2qfhrmcggmdj2hcz03wpa4kpn2c1x2m6v") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-5.2.0 (c (n "parquet") (v "5.2.0") (d (list (d (n "arrow") (r "^5.2.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^5.2.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0k2pzbqy6qb3rhxfsbx6gnmqyz4c9rprn6p76ws5f7cbgjwv97p2") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-5.3.0 (c (n "parquet") (v "5.3.0") (d (list (d (n "arrow") (r "^5.3.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^5.3.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "01ncjd5yz7vmv0qw5xqr6bn5szrnscngm8d83sjsmxq82wkfqhr9") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-5.4.0 (c (n "parquet") (v "5.4.0") (d (list (d (n "arrow") (r "^5.4.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^5.4.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1pcxpv61z0w6qd1g2hnbzhayr6427f8y24w1x7kdih1s6v8fycgj") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-5.5.0 (c (n "parquet") (v "5.5.0") (d (list (d (n "arrow") (r "^5.5.0") (o #t) (d #t) (k 0)) (d (n "arrow") (r "^5.5.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1j3a8s7pkk2c8hsq472xgr610vv0vi09dxrr76xh712zx0hdn7x0") (f (quote (("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-6.0.0 (c (n "parquet") (v "6.0.0") (d (list (d (n "arrow") (r "^6.0.0") (o #t) (k 0)) (d (n "arrow") (r "^6.0.0") (d #t) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "06l4ivizvmj09zlczfpsl3z6bxy365cxcyz5x66m2q52kfsvjqyj") (f (quote (("test_common") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-6.1.0 (c (n "parquet") (v "6.1.0") (d (list (d (n "arrow") (r "^6.1.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "04g6wq9i2k14qk311k0p7hp4qzr7h45kqj47b08jxr6pgq8wcc2a") (f (quote (("test_common") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-6.2.0 (c (n "parquet") (v "6.2.0") (d (list (d (n "arrow") (r "^6.2.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1vdj019k02qmf8k1mg97j9p5p2r4qj1pfjzx252ylds8lq6qidjd") (f (quote (("test_common") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-6.3.0 (c (n "parquet") (v "6.3.0") (d (list (d (n "arrow") (r "^6.3.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1rqyd9g35246z69rj9drzjk16bchrjirvrnd74ggbaxpzdsy97a7") (f (quote (("test_common") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-6.4.0 (c (n "parquet") (v "6.4.0") (d (list (d (n "arrow") (r "^6.4.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "00rspmlzjzalzxrah212q4gwqz31s0c5gx5p2f9004xk8qi0qbax") (f (quote (("test_common") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-6.5.0 (c (n "parquet") (v "6.5.0") (d (list (d (n "arrow") (r "^6.5.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "~2.6.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "17dc5i1mvj6xn618pmw08vihblcr8baynyzzpsqrvgngyi9rk3bq") (f (quote (("test_common") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap"))))))

(define-public crate-parquet-7.0.0 (c (n "parquet") (v "7.0.0") (d (list (d (n "arrow") (r "^7.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^7.0.0") (f (quote ("test_utils"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1ip8lqf8gzbgm7xfhymi7ibnd15vd8sqc0jginkqyj2fndsqawaw") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap")))) (r "1.57")))

(define-public crate-parquet-8.0.0 (c (n "parquet") (v "8.0.0") (d (list (d (n "arrow") (r "^8.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^8.0.0") (f (quote ("test_utils"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^2.33.3") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1n1akpv2a9qncxkmgci1rjrq564a9kp4ldn9id2zsjdqw2968nid") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap")))) (r "1.57")))

(define-public crate-parquet-9.0.2 (c (n "parquet") (v "9.0.2") (d (list (d (n "arrow") (r "^9.0.2") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^9.0.2") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.10") (o #t) (d #t) (k 0)))) (h "1ka4rz9hhsv9dqbqpzjm00rc3asgfv8h4700f9k686p8wc9i6lrn") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-9.1.0 (c (n "parquet") (v "9.1.0") (d (list (d (n "arrow") (r "^9.1.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^9.1.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.10") (o #t) (d #t) (k 0)))) (h "0ck5vk8cnwmj9fg0z28294yhb1868jjk3wfwk84ik71iwrixk5qn") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-10.0.0 (c (n "parquet") (v "10.0.0") (d (list (d (n "arrow") (r "^10.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^10.0.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.10") (o #t) (d #t) (k 0)))) (h "08brx9jffv99nk27bfpv809sybkv47jqdv22bpc956xg43ycisak") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-11.0.0 (c (n "parquet") (v "11.0.0") (d (list (d (n "arrow") (r "^11.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^11.0.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "1a799rmaij2jcn3jkhdbpn7d5d83qijdfz1m4pca5rr9vr7c0q0l") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-11.1.0 (c (n "parquet") (v "11.1.0") (d (list (d (n "arrow") (r "^11.1.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^11.1.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "0hd5ig3akilgrdy990l6hrkiixxbclxddc565pdas068x0js4awy") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-12.0.0 (c (n "parquet") (v "12.0.0") (d (list (d (n "arrow") (r "^12.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^12.0.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "0amlf82njawnzbfz8qs970fa9pa2nfqrz9mbsfp5czachmwdzi8k") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-13.0.0 (c (n "parquet") (v "13.0.0") (d (list (d (n "arrow") (r "^13.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^13.0.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "1d50yamrljr4mjfbxvad0yyxdwd23wpjdak9gbl7b1ylmrxp6vbc") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-14.0.0-dev (c (n "parquet") (v "14.0.0-dev") (d (list (d (n "arrow") (r "^14.0.0-dev") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^14.0.0-dev") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "1wz7nlsz5c1hs2z0adh70ghy2qhq74v0qrkyp3lyydp9qdjmj0xv") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (y #t) (r "1.57")))

(define-public crate-parquet-0.18.0 (c (n "parquet") (v "0.18.0") (d (list (d (n "arrow") (r "^0.18.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "1cs4d4s8ahdgfy25lqjb8ig1bbjq9b51x9110ck9jnllp64zlf2b") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (y #t) (r "1.57")))

(define-public crate-parquet-0.18.1 (c (n "parquet") (v "0.18.1") (d (list (d (n "arrow") (r "^0.18.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^0.18.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "02zy3rczr1k7xg5i1h1hkzga83b5lxzrznyfpmmhibxmf151fkqi") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (y #t) (r "1.57")))

(define-public crate-parquet-14.0.0 (c (n "parquet") (v "14.0.0") (d (list (d (n "arrow") (r "^14.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^14.0.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "04yl2jmiq50mr5cp11pz2qwlww6j8id2c6b5p101w2d53pp8a4ds") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-15.0.0 (c (n "parquet") (v "15.0.0") (d (list (d (n "arrow") (r "^15.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^15.0.0") (f (quote ("test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)))) (h "0vxmn1vbd7fp2dfx1vxfpmyjvm36iwx7x11cxj4fyldic3g1vlwl") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap") ("async" "futures" "tokio")))) (r "1.57")))

(define-public crate-parquet-16.0.0 (c (n "parquet") (v "16.0.0") (d (list (d (n "arrow") (r "^16.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^16.0.0") (f (quote ("ipc" "test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 2)) (d (n "brotli") (r "^3.3") (o #t) (d #t) (k 0)) (d (n "brotli") (r "^3.3") (d #t) (k 2)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("derive" "env"))) (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "flate2") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (d #t) (k 0)) (d (n "lz4") (r "^1.23") (d #t) (k 2)) (d (n "num") (r "^0.4") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "parquet-format") (r "^4.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "snap") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 2)) (d (n "tempfile") (r "^3.0") (d #t) (k 2)) (d (n "thrift") (r "^0.13") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (d #t) (k 2)))) (h "150mwr6dl290brxl587rhlphgl5873i2ha315bam6a3h7r84857i") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.57")))

(define-public crate-parquet-17.0.0 (c (n "parquet") (v "17.0.0") (d (list (d (n "arrow") (r "^17.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^17.0.0") (f (quote ("ipc" "test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "~3.1") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "parquet-format") (r "^4.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.13") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "18xq3iqb1wvbjfvp75bl1bkc061ac8y7jgbywkljklk0dq94cz9n") (f (quote (("test_common") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.57")))

(define-public crate-parquet-18.0.0 (c (n "parquet") (v "18.0.0") (d (list (d (n "arrow") (r "^18.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^18.0.0") (f (quote ("ipc" "test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "parquet-format") (r "^4.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.13") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0z9azn7nxygy40y8jv3pkfksh0l4442wfmkn3rqsszrhmxcigxk5") (f (quote (("test_common" "arrow/test_utils") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.57")))

(define-public crate-parquet-19.0.0 (c (n "parquet") (v "19.0.0") (d (list (d (n "arrow") (r "^19.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^19.0.0") (f (quote ("ipc" "test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "parquet-format") (r "^4.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.13") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "178901gfcn1cgx23x1c5n0rk2c4v78hhwkrf6j5qhir06qvz5z1c") (f (quote (("test_common" "arrow/test_utils") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "serde_json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.57")))

(define-public crate-parquet-20.0.0 (c (n "parquet") (v "20.0.0") (d (list (d (n "ahash") (r "^0.7") (d #t) (k 0)) (d (n "arrow") (r "^20.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^20.0.0") (f (quote ("ipc" "test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "byteorder") (r "^1") (k 0)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "parquet-format") (r "^4.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.13") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0l6rfph9gkbd4xy874cwqglgy8aqyaz6wxki56giv3fgixlszw6h") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-21.0.0 (c (n "parquet") (v "21.0.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^21.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^21.0.0") (f (quote ("ipc" "test_utils" "prettyprint"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "parquet-format") (r "^4.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.13") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0wi6a1wn9vd3x8v2flm4gg4l8pf6f9vlx8xr04006jylm112sqj8") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-22.0.0 (c (n "parquet") (v "22.0.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^22.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^22.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.3") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "parquet-format") (r "^4.0.0") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.13") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0kr28kjawv4pa3hxwq0kgswc31zyqwpb951vmfnj22giwqxl4k27") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-23.0.0 (c (n "parquet") (v "23.0.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^23.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^23.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.16") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0wgygvpjs4db5qfb3a9i239i4vayfh3ngr5b8l5fhlkfhb6snf5w") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-24.0.0 (c (n "parquet") (v "24.0.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^24.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^24.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^3") (f (quote ("std" "derive" "env"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.16") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0zs3v2hyblyqgmf4khrws21jawv9pjzbrl838pw8v6bj0q7mkzbl") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-25.0.0 (c (n "parquet") (v "25.0.0") (d (list (d (n "ahash") (r "^0.8") (d #t) (k 0)) (d (n "arrow") (r "^25.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^25.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 0)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.16") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "fs" "rt" "io-util"))) (o #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0l1mdd690dxvn4gqbc3hl6h6iizpr0zlfci8wm1v4cjw2c1qhxgp") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-26.0.0 (c (n "parquet") (v "26.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (k 0)) (d (n "arrow") (r "^26.0.0") (f (quote ("ipc"))) (o #t) (k 0)) (d (n "arrow") (r "^26.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.16") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "1i7chikp9nx2m1f0mqbak65yip9jqmfzb5c5b8r929spnrxgmy1v") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow/csv") ("async" "futures" "tokio")))) (s 2) (e (quote (("arrow" "dep:arrow" "base64")))) (r "1.62")))

(define-public crate-parquet-27.0.0 (c (n "parquet") (v "27.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (k 0)) (d (n "arrow") (r "^27.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^27.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^27.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.16") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "zstd") (r "^0.11.1") (o #t) (k 0)) (d (n "zstd") (r "^0.11") (k 2)))) (h "0fqsxa0ig1mi535xkrikaisywfj31908z4v4dlpi557j9x76bgal") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (r "1.62")))

(define-public crate-parquet-28.0.0 (c (n "parquet") (v "28.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (k 0)) (d (n "arrow") (r "^28.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^28.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^28.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0lx3gwi8hvkbqahsf804mzqml48dgq9jyzvl1drb66qi1693whr1") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (r "1.62")))

(define-public crate-parquet-29.0.0 (c (n "parquet") (v "29.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^29.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^29.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^29.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.13") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0f1kh6x8rfc12dm7jg4cza73bsg88dvnjx2hincnpklas4zk81nr") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (r "1.62")))

(define-public crate-parquet-30.0.0 (c (n "parquet") (v "30.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^30.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^30.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.20") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.20") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1ww15igfc44ji7p1nbigy9sgjwjq904b3rf6y1lc95lg8q3xpyya") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-30.0.1 (c (n "parquet") (v "30.0.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^30.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^30.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^30.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.20") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.20") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0cp9qksfnkq7w5mawvg0401xf6anmmi508i042g6z56j61v2mfjb") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-31.0.0 (c (n "parquet") (v "31.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^31.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^31.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^31.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0i9x7sqvfc9d45jsk5fyi891myyjrbr78p1sg34rb0vpq3zy2kkb") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-32.0.0 (c (n "parquet") (v "32.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^32.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^32.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^32.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0k2vhn2hxkm5by6jpvqdbx344yi3v9vd41zvllfpxq89fa8x9cr3") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-33.0.0 (c (n "parquet") (v "33.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^33.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^33.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^33.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0r67py4vfckf3z5nj57s60s58mchk1bikkcmjy47s5h1k217dc5i") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-34.0.0 (c (n "parquet") (v "34.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^34.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^34.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^34.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1yhcy0zqd3wy1dvg999iyqz8n16nfq5ip4m0vm9mzfryyvn3bhbs") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-35.0.0 (c (n "parquet") (v "35.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^35.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^35.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^35.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "08n9pq78a659x4fkykdbw1mpwjj8v8jmhm8vqq4ksd3m6fcwjpb9") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-36.0.0 (c (n "parquet") (v "36.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^36.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-buffer") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-cast") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-csv") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-data") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-ipc") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-schema") (r "^36.0.0") (o #t) (k 0)) (d (n "arrow-select") (r "^36.0.0") (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1dq6hngmlql1vqij4n5kq67fs5ix4gw0fnw756gpai966gw1a6ij") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-37.0.0 (c (n "parquet") (v "37.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^37.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^37.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0agd1pi1f1f84f8r3jm6ymmp4qcf95hbgfl77v5g8w9j6fc2s0mm") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-38.0.0 (c (n "parquet") (v "38.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^38.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^38.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1xnkyb6g5ymhg2ia24ykjzh851sqiaqj45bvd79g77wd3wqm3gac") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-39.0.0 (c (n "parquet") (v "39.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^39.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^39.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0k805sfdagzxf3izzhygfi6srwrmyip9dxc0lbdvv7ph4zxfd8dh") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-40.0.0 (c (n "parquet") (v "40.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^40.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^40.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.4") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.5") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0jkwkz1xry6rcl4g63vrdw4lws1jjxl2qx2mr5bicr3yq7y5d9nn") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-41.0.0 (c (n "parquet") (v "41.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^41.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^41.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.13") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1aizvm9jg93g11i1xb7kahxy46snz1yh4jwz3m2c8jl8h4nw7038") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-42.0.0 (c (n "parquet") (v "42.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^42.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^42.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1j6ngrskg3jlsfc30di1839zjcx7l03d6xymnj0hnc68n4v9raxs") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-43.0.0 (c (n "parquet") (v "43.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^43.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^43.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0l1prfk9j1irvb9kl5q9s3cc1v3wls41pi0a9mfragvwc2lnfwpc") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.62")))

(define-public crate-parquet-44.0.0 (c (n "parquet") (v "44.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^44.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^44.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0472phad6dw64inz5jqz0k9dj0zz976dh0zwkk7rzrjq556bmjz5") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-45.0.0 (c (n "parquet") (v "45.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^45.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^45.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.6") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0yaxnvwc26jw8qbcy4lji779p0r8bmdswjbpvcmmi023k2dp7ya9") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-46.0.0 (c (n "parquet") (v "46.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^46.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^46.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.23") (f (quote ("alloc"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "1yn5yla5iqg048wwibcv3angzlzrw2wqh6ipfd6xl1xfhskwplhs") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-47.0.0 (c (n "parquet") (v "47.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^47.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^47.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4") (r "^1.23") (o #t) (k 0)) (d (n "lz4") (r "^1.23") (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.12.0") (o #t) (k 0)) (d (n "zstd") (r "^0.12") (k 2)))) (h "0kdzysqn5810jrq422gnxs64qkv72qxbx929ii050pvd4lxwqqq4") (f (quote (("test_common" "arrow/test_utils") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-48.0.0 (c (n "parquet") (v "48.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^48.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^48.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (o #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (k 0)) (d (n "zstd") (r "^0.13") (k 2)))) (h "0ia9b8h947s96k4z983sbws6j47sy0ffdp733p351av8lvk2k4i3") (f (quote (("test_common" "arrow/test_utils") ("lz4" "lz4_flex") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-48.0.1 (c (n "parquet") (v "48.0.1") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^48.0.1") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^48.0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (o #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.7") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (k 0)) (d (n "zstd") (r "^0.13") (k 2)))) (h "15rmvwhzavhrvnan2bzq64b80ydvj5yy6yhrpw8jzw73jvgmbzkb") (f (quote (("test_common" "arrow/test_utils") ("lz4" "lz4_flex") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-49.0.0 (c (n "parquet") (v "49.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^49.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^49.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (o #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.8") (o #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (k 0)) (d (n "zstd") (r "^0.13") (k 2)))) (h "1m3l1i1sc38axsgjjfqx44h7vsgwyvxyb76nncwxm1r7hh57925g") (f (quote (("test_common" "arrow/test_utils") ("lz4" "lz4_flex") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-50.0.0 (c (n "parquet") (v "50.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^50.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^50.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.21") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.31") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (o #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.9.0") (o #t) (k 0)) (d (n "object_store") (r "^0.9.0") (f (quote ("azure"))) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (k 0)) (d (n "zstd") (r "^0.13") (k 2)))) (h "0l57nz2z49cp30s9hjjnimkjxrkyfmwqyk7lj8w7w5y1y3mr4ysl") (f (quote (("test_common" "arrow/test_utils") ("lz4" "lz4_flex") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

(define-public crate-parquet-51.0.0 (c (n "parquet") (v "51.0.0") (d (list (d (n "ahash") (r "^0.8") (f (quote ("runtime-rng"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "ahash") (r "^0.8") (f (quote ("compile-time-rng"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "arrow") (r "^51.0.0") (f (quote ("ipc" "test_utils" "prettyprint" "json"))) (k 2)) (d (n "arrow-array") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-buffer") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-cast") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-csv") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-data") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-ipc") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-schema") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "arrow-select") (r "^51.0.0") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("std"))) (o #t) (k 0)) (d (n "base64") (r "^0.22") (f (quote ("std"))) (k 2)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "brotli") (r "^3.3") (f (quote ("std"))) (k 2)) (d (n "bytes") (r "^1.1") (f (quote ("std"))) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("clock"))) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("std" "derive" "env" "help" "error-context" "usage"))) (o #t) (k 0)) (d (n "criterion") (r "^0.5") (k 2)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (o #t) (k 0)) (d (n "flate2") (r "^1.0") (f (quote ("rust_backend"))) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (o #t) (k 0)) (d (n "half") (r "^2.1") (f (quote ("num-traits"))) (k 0)) (d (n "hashbrown") (r "^0.14") (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (o #t) (k 0)) (d (n "lz4_flex") (r "^0.11") (f (quote ("std" "frame"))) (k 2)) (d (n "num") (r "^0.4") (k 0)) (d (n "num-bigint") (r "^0.4") (k 0)) (d (n "object_store") (r "^0.9.0") (o #t) (k 0)) (d (n "object_store") (r "^0.9.0") (f (quote ("azure"))) (k 2)) (d (n "paste") (r "^1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (k 2)) (d (n "seq-macro") (r "^0.3") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("std"))) (k 2)) (d (n "snap") (r "^1.0") (o #t) (k 0)) (d (n "snap") (r "^1.0") (k 2)) (d (n "tempfile") (r "^3.0") (k 2)) (d (n "thrift") (r "^0.17") (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("macros" "rt" "io-util" "fs"))) (k 2)) (d (n "twox-hash") (r "^1.6") (k 0)) (d (n "zstd") (r "^0.13.0") (o #t) (k 0)) (d (n "zstd") (r "^0.13") (k 2)))) (h "0cncgv8sshslpvjb11f75hpn0vdjgavrhnpcw4zgsrbzyka9arq9") (f (quote (("test_common" "arrow/test_utils") ("lz4" "lz4_flex") ("json" "serde_json" "base64") ("experimental") ("default" "arrow" "snap" "brotli" "flate2" "lz4" "zstd" "base64") ("cli" "json" "base64" "clap" "arrow-csv" "serde") ("async" "futures" "tokio") ("arrow" "base64" "arrow-array" "arrow-buffer" "arrow-cast" "arrow-data" "arrow-schema" "arrow-select" "arrow-ipc")))) (s 2) (e (quote (("object_store" "dep:object_store" "async")))) (r "1.70.0")))

