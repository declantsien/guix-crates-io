(define-module (crates-io pa ro parol) #:use-module (crates-io))

(define-public crate-parol-0.1.0 (c (n "parol") (v "0.1.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0hxgzx6x0kxjzsci0923dw5s3l9w79z5b8p3fywybqidl7xawld9")))

(define-public crate-parol-0.1.1 (c (n "parol") (v "0.1.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1n4jy78ifcsrc34310wk80n2gla6kz3lyrakcgs7fvl4kki2xvrj")))

(define-public crate-parol-0.1.2 (c (n "parol") (v "0.1.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1rdb2plsbx33s6kvp8xaz3ypgdh6ayp7f9xdl63z8rk676aas090")))

(define-public crate-parol-0.1.3 (c (n "parol") (v "0.1.3") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1jm1vw0a9vbpm3d8lnx8wl8c8ggg9b99j4id87pzhadyfk56vcn5")))

(define-public crate-parol-0.1.4 (c (n "parol") (v "0.1.4") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "17zy58h8rz8nfy2w9z27fyjq51z71qha88b6wiwzzj5v4xdkvh2y")))

(define-public crate-parol-0.1.5 (c (n "parol") (v "0.1.5") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1y8x8xh2b2mc1srk7righ6sdkmpg3hjn2brjaypj69z2z13g9ach")))

(define-public crate-parol-0.1.6 (c (n "parol") (v "0.1.6") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "09xbdzr35zqb16adzf29rv7wnw2aj55fn85pdcgq6lz8kqalwkky")))

(define-public crate-parol-0.1.7 (c (n "parol") (v "0.1.7") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "0ghbjs77sppic3s2mlkn4myxj1lap27p028lbwxznc2d0ix7jsmh")))

(define-public crate-parol-0.1.8 (c (n "parol") (v "0.1.8") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1zm53br2bahma9k2bw2cjq6jqqk0za8jsxvy7rqm0j6128b6dvdn")))

(define-public crate-parol-0.1.9 (c (n "parol") (v "0.1.9") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "1ssdfpwwkdf6jl7p37zsw54dvzagq29xdlsjy4l3n8jb3dpwhi0v")))

(define-public crate-parol-0.1.10 (c (n "parol") (v "0.1.10") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.1.5") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.126") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.115") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)))) (h "07ajs6yp7c8xmhm8d1c3bq8pvjla8nli88rhavv110327dsry9kx")))

(define-public crate-parol-0.2.0 (c (n "parol") (v "0.2.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1wc6jda25y79kf5h7s1n39sjx2ladjrb7g44ff6if97z3fx29lvc")))

(define-public crate-parol-0.2.1 (c (n "parol") (v "0.2.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1985dliyic4kvg2nxgmh9ll7fwqqyi426j7p8xskwvr7iqlk6fij")))

(define-public crate-parol-0.2.2 (c (n "parol") (v "0.2.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1m9jxgmyyg2sp7fk3if9zkiyrg4pp0gk2bxrm2q6rbpi8sj60f4d")))

(define-public crate-parol-0.2.3 (c (n "parol") (v "0.2.3") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1kkiv965ikxcxj0r01brabvhfx2xvfcx4kqnp291yxdpq95myxyx")))

(define-public crate-parol-0.3.0 (c (n "parol") (v "0.3.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "05w9hg1ficmq38w1p9s4ib4jkgvkxvi99giwi89n227c6cbzz1pp")))

(define-public crate-parol-0.3.1 (c (n "parol") (v "0.3.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "12f2sbmfkqxrpwvbiiv2kp4m6qcg5brziyw0xd9b8jqyqiqy17wc")))

(define-public crate-parol-0.3.2 (c (n "parol") (v "0.3.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "error-chain") (r "^0.12.4") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.2.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1fj65rcnxnzddhci10iqhcw6qm447jx5x683gf3xzrzqzmj73vnf")))

(define-public crate-parol-0.4.0 (c (n "parol") (v "0.4.0") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.3.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1bp21mmay3ad2bnh54jg8f7pzyzdyfaxa40lasifja963z8y10ap")))

(define-public crate-parol-0.4.1 (c (n "parol") (v "0.4.1") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.3.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "01gyqicyqcl6sg8y9bwpkpx823h96mzgj9dqb3kmwjz86szx2css")))

(define-public crate-parol-0.4.2 (c (n "parol") (v "0.4.2") (d (list (d (n "anyhow") (r "^1.0.51") (d #t) (k 0)) (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.4.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "1d1n7sklf1qgzrglxk2m88930ranfi1cdn626s8skkm7b78mglrb")))

(define-public crate-parol-0.5.0 (c (n "parol") (v "0.5.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "0gb2az3fabnajq7561s3v09aayq1bvwjrr5h9l86csshl37dgkd3")))

(define-public crate-parol-0.5.1 (c (n "parol") (v "0.5.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)))) (h "0232lcd8p0akc4dqzdnijckm7wfqyjingv40zdadqhwkgd2cd01b")))

(define-public crate-parol-0.5.2 (c (n "parol") (v "0.5.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "11v8g33j89cgpdli1jfad5n9qrr8mxrbbcg2gv4gddkggfcjlapp")))

(define-public crate-parol-0.5.3 (c (n "parol") (v "0.5.3") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "05x1vqdxp96cfhid03930r3ajfwhq7pkric3l11ar7dgpcmpc4hf")))

(define-public crate-parol-0.5.4 (c (n "parol") (v "0.5.4") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1idhigmkhwhsh9fadgawc2qacw0ljn14vjz7w7wq77rzjz8i7xl4") (f (quote (("default" "build") ("build")))) (y #t)))

(define-public crate-parol-0.5.5 (c (n "parol") (v "0.5.5") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.3") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1i2pa295swhrl9jvj2w152ca15ykad1w3axnf12r8v3akxxd42qw") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.5.6 (c (n "parol") (v "0.5.6") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "10m4yb38x4h6hhrfq3ihydjz5rr5ngjwfz1nlnadxbn0mm2igsmc") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.5.7 (c (n "parol") (v "0.5.7") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^2.33.3") (f (quote ("suggestions" "color" "yaml"))) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "0a590f3k9d6s33sv3n00aplsj7alnhgxkxri6sgkjpdgh4256g9z") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.5.8 (c (n "parol") (v "0.5.8") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8.0") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^3.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.4") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.4") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0.130") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.69") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)))) (h "1x190ihmbmm91p6nk5hi2kiv87bbd70kg0ms000q48l152qxinmm") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.5.9 (c (n "parol") (v "0.5.9") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.10.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.6") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1i676ynh6kwxwxirkdpd565xgg47wnhlgv0mb7anq32i9grjic8q") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.6.0 (c (n "parol") (v "0.6.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.7") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "065d27rnbns1v072kc8ng7221h1dxdkaidybki0qdnkj3a1lznfm") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.6.1 (c (n "parol") (v "0.6.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lkvpb01bj41ghprdkcrk4a9n8qxq70mhmh2qy0j5mf52n3r4z6s") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.6.2 (c (n "parol") (v "0.6.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0svysa3k5vqa7m190ppjyhygd051xkfcjzk2lgshgkbij8fjj7r6") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.7.0 (c (n "parol") (v "0.7.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0w7hwkqad0ncxdpfq24wa3kw55yjy1bazqfkwayhhj5jghj4cpwm") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.8.0 (c (n "parol") (v "0.8.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "11vh0ajnafyacgx2rra81i60zkx0wjkyzss3lsshkxy3kv6s96s1") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.8.1 (c (n "parol") (v "0.8.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.2.1") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1fiz8f0v7j8w6slwfkyal5kxzkxc9rvshsx5lx3rhrz51dxps30z") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.8.2 (c (n "parol") (v "0.8.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h9np6x9dw3l9sladsppszg00szjdl9a1y2gsjd99gzwkq1scc3v") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.8.3 (c (n "parol") (v "0.8.3") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1nqb9ykmdrmc7x0rbpsfzia27w3z7nznchzl3w4mps5cw66qhw22") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.9.0 (c (n "parol") (v "0.9.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0c1y91i90rndq3llbr6jfgh3kg5lkigddncfl2npvy2b84c8gaa7") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.9.1 (c (n "parol") (v "0.9.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "155n426nywck962qqha4948rhjmcnw8nqqpv3gk0w6q76rdhygzn") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.9.2 (c (n "parol") (v "0.9.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0d6hydp85v9x4lwplh1f65fsvnxbpajrgwdnkgwkxh931qf197bd") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.9.3 (c (n "parol") (v "0.9.3") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jm81yhbzzzd2dd7rpa0x74qbfa8pqklv0w344jyphfgxzvdbi0i") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.9.4 (c (n "parol") (v "0.9.4") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.5.9") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.0") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1lgdrrcclfzw0mqlrp3zcwlgj8z8ia0cz7kixmpd8j4jkn35qn40") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.0 (c (n "parol") (v "0.10.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.6.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rrmn0ajf5ap711zq60gqq8277k78zz9mjfngr06lncy7lq4lw0f") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.1 (c (n "parol") (v "0.10.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.1.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^4.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.3.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.6.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0jj6j7gz6n7cjaqzmzpil7c4a58h461ivdh7wsn6ih1i76ss2sgg") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.2 (c (n "parol") (v "0.10.2") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.0") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0l8ajqa19c5rki8nbdc04bypx4072bpq6jrnjjamgk4b465h3gp0") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.3 (c (n "parol") (v "0.10.3") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.8") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.1.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.25") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "080n8075j39hhzb3b7vq6vjhlfnlsqzxmxdw16lv2didxsy8vz1d") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.4 (c (n "parol") (v "0.10.4") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.1") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "09dgz5qgp4nmysv116dhh1zcqpbj7mvwin0lbyxnfpzzpknaalqi") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.5 (c (n "parol") (v "0.10.5") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1pw1b065r53css1lzyvyy27kkz53pi93ajsx8l2fyx87ryvaidgc") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.6 (c (n "parol") (v "0.10.6") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1n5wvnvsyrmr86a3z9fds5jl557y28366zccrnydszmjvay5nk4d") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.10.7 (c (n "parol") (v "0.10.7") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.2") (d #t) (k 0)) (d (n "petgraph") (r "^0.6.2") (d #t) (k 0)) (d (n "prettyplease") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1x536pbi5l4hdgwk5jqbvhni5hnx9jvx9xiwim50km7c6c2lmy5y") (f (quote (("pretty" "prettyplease") ("default" "build") ("build"))))))

(define-public crate-parol-0.11.0 (c (n "parol") (v "0.11.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.7.2") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0krjzbdbqn8bd50pbyxlx0r4yvm6bhbs43rbcjq8rr32xkn06bk9") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.12.0 (c (n "parol") (v "0.12.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0.9") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.4.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.8.0") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0.13") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b9960pq4zd79nbn36axmin3dr7j1y9lgvzrfs43z6rfp1x6hjv5") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.12.1 (c (n "parol") (v "0.12.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0nfln2aa5gps0hsbpmq3vwrn33qasiqw3djpav30wjapijkyzq4g") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.13.0 (c (n "parol") (v "0.13.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1hym8kb61yidh355vwblgjnh51zzs4md0mmdm63axv5m1gibrsxg") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.13.1 (c (n "parol") (v "0.13.1") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.8.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "semver") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c7wf6caxpvamgnlsrs45lbbz42nwhym30ivjp53lywqhwd8a1c4") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.14.0 (c (n "parol") (v "0.14.0") (d (list (d (n "bart") (r "^0.1.4") (d #t) (k 0)) (d (n "bart_derive") (r "^0.1.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.11.2") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.9.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0vkdsifc0cjbh8fqh7409j7iyh8ks6d8mdwgsrg99x7hgin1ljlv") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.15.0 (c (n "parol") (v "0.15.0") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.11.2") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0s5lz81f9gg2fzvrzwcb4d5bwa7c5nzw9f7yix9811n5xvpn6hsh") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.15.1 (c (n "parol") (v "0.15.1") (d (list (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miette") (r "^5.2.0") (f (quote ("fancy"))) (d #t) (k 0)) (d (n "once_cell") (r "^1.16") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.1.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.11.2") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1jiblnggg9x8varv0fsd0galmbk27imy4wvvvcys9s5a4lwbs6dg") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.16.0 (c (n "parol") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.0") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.3") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.12.1") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1hqf32v6a0glsgg9nwfq4b06asfjk84qrsn2irydm78ihiw56gkr") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.17.0 (c (n "parol") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2.0.4") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.13.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1rjf25s2m276jnrprfphp4xcf5m4ajj5660drqhqk0ra2l1jsrwf") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.18.0 (c (n "parol") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.14.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0n8qn1qc63aidylfchiybm4cdl5b3brw2ylrhxzbpx1415a39r7y") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.18.1 (c (n "parol") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "id_tree") (r "^1.8") (d #t) (k 0)) (d (n "id_tree_layout") (r "^2") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.14.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1ff6sal2blb222w5n0mmy9a13nyi4yi10pcbyssa9mcxpp1qsk6v") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.19.0 (c (n "parol") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.15.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.3") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "00wfmjx5abk8adwvp8qc5x2yjz4zq1cvyppxvisa723l43s9xf4d") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.20.0 (c (n "parol") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.15.1") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.3") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1igg242x3l91bg9wlm5nzw6kfyxi1sl2d1am3iv9icxwdqr9imfn") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.21.0 (c (n "parol") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.1") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.16.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "rayon") (r "^1.6.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.27") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.3") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1g632qf7fvzzh0bkf2x3ncfphqlzrglcrsmpfqix9y75h4ddnka3") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.21.1 (c (n "parol") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.16.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0n7xyjz79p14ysmdfvyw4ym7b6jgw65ai54a5lgmbixssqdjk506") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.21.2 (c (n "parol") (v "0.21.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.16.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0i77764zly2dcqyhi3kmf4fjxnnmgx33v7y6gpzp67ynza1haicf") (f (quote (("default" "build") ("build")))) (y #t)))

(define-public crate-parol-0.21.3 (c (n "parol") (v "0.21.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.16.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1ap6dlbi6f23w903rqlcnsvb9rf3vw9576j4xgjmb117nfc55wdi") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.21.4 (c (n "parol") (v "0.21.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.2") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.16.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.7") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^6.2.1") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0h80szbfqd6dff840g042hvxgk4b7fklp2gyh3sqww0y8ax64b9g") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.21.5 (c (n "parol") (v "0.21.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.16.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^6.2.1") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1xpz5ndq8n5k2zkakmxrxlc5im62qn9w9f7k2idkppajanskcyxv") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.22.0 (c (n "parol") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.15.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.17.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.6.29") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^6.2.1") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "1qm7v94mpxmsklxqf3lzyn8p2n03j2vabq294ci0b2arc957qdak") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.22.1 (c (n "parol") (v "0.22.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.17.1") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^6.2.1") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0pbdy8r36040lyxwwnz4zr9lr5rv08vlg3adqz2gwfifdcjyirri") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.23.0 (c (n "parol") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.3.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.18.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^6.2.1") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "05kxfdaqidhkr5grrhlwbw5m328lfgi0nmsgnq2fikd9rbf1zc0p") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.23.1 (c (n "parol") (v "0.23.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.3") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.18.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0n7921fqdfvg417mc8gqgav3qrb7pfxk40lm6r6pcpg7hramrdr5") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.24.0 (c (n "parol") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.19.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0zcz8zci2ss6k5gb1jliy1ik57605a8dgmhx0bc216b61mmicpnf") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.25.0 (c (n "parol") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^3.5.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.20.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0havxz42w19zv3frm3w7sagyz4i1gl68g895rl53i2gnfyvws54n") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.26.0 (c (n "parol") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.12.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.20.1") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.16.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.7.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^7.0.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "09z1i61n35hml7shgibh77znk80cr57hmxdq6q9vyi1iy33zj1vk") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.26.1 (c (n "parol") (v "0.26.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.4.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.13.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.2") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "graph-cycles") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.20.1") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.17.0") (d #t) (k 0)) (d (n "rayon") (r "^1.8.1") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^7.1.1") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "19kk2k648yg21na096ililgh82g7k8inqrxjkrympp3lya8cs42b") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.27.0 (c (n "parol") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.2") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "graph-cycles") (r "^0.1.0") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.20.2") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.17.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^8.1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0fwxv12vwrlp15py07p22pd4nryjs4r35wp3v1dbmqw6ps7g3phg") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.28.0 (c (n "parol") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "graph-cycles") (r "^0.1.0") (d #t) (k 0)) (d (n "lalr") (r "^0.0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.21.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.17.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^8.1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0z8gad1fr5p98iy81nyp70vph5s2ppdhkyw1s1gi2vsbrpvy9x7l") (f (quote (("default" "build") ("build"))))))

(define-public crate-parol-0.29.0 (c (n "parol") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 0)) (d (n "assert_cmd") (r "^2.0") (d #t) (k 2)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4.5") (f (quote ("derive" "cargo"))) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "derive_builder") (r "^0.20.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 0)) (d (n "function_name") (r "^0.3.0") (d #t) (k 0)) (d (n "graph-cycles") (r "^0.1.0") (d #t) (k 0)) (d (n "lalr") (r "^0.0.2") (d #t) (k 0)) (d (n "num_cpus") (r "^1.16.0") (d #t) (k 0)) (d (n "owo-colors") (r "^4.0.0") (d #t) (k 0)) (d (n "parol-macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parol_runtime") (r "^0.22.0") (f (quote ("auto_generation"))) (d #t) (k 0)) (d (n "petgraph") (r "^0.6.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.4") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "rand_regex") (r "^0.17.0") (d #t) (k 0)) (d (n "rayon") (r "^1.10.0") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "regex-syntax") (r "^0.8.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "syn") (r "^2") (f (quote ("full" "parsing"))) (k 0)) (d (n "syntree") (r "^0.14.5") (d #t) (k 0)) (d (n "syntree_layout") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "ts-rs") (r "^8.1.0") (d #t) (k 0)) (d (n "ume") (r "^0.1") (d #t) (k 0)))) (h "0ybb4ggpkbia6lyaipm4llqlqq6gyhlhs38m8f9phsvx71176awy") (f (quote (("default" "build") ("build"))))))

