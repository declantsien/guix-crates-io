(define-module (crates-io pa la palaver) #:use-module (crates-io))

(define-public crate-palaver-0.1.0 (c (n "palaver") (v "0.1.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)) (d (n "proc_self") (r "^0.1") (d #t) (k 0)) (d (n "valgrind_request") (r "^1.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (d #t) (t "cfg(windows)") (k 0)))) (h "133bx5ma6rzf3lizpx128dpvfhs4wv96nxi1swqkzz77gmm9kc4y")))

(define-public crate-palaver-0.2.0 (c (n "palaver") (v "0.2.0") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.46") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "13qa3326rl0qqyjws20zfh9bzyxp6nhrf4hbydikrhzhpg04yxfq")))

(define-public crate-palaver-0.2.1 (c (n "palaver") (v "0.2.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.2") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.11") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "try_from") (r "^0.3") (d #t) (k 0)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0445x7n9n6jzcvg5gz9ghirykbb18h75f91v8ws2wsk0kglh4qsh") (f (quote (("nightly" "valgrind_request") ("default" "nightly"))))))

(define-public crate-palaver-0.2.2 (c (n "palaver") (v "0.2.2") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0zq8cjqkm4pf7pvxmmva811disq30bkqihq0kdlwns9cnx8gpfg5") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.2.3 (c (n "palaver") (v "0.2.3") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0013cj37zf11pfmn4a0vsar4xp8gvw961rfhpz0n804pwggf1m9d") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.2.4 (c (n "palaver") (v "0.2.4") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0gpavib3krlw4w0l7rjsi5q0bxryv1mq4ncj8ykdhwclaim6ai6l") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.2.5 (c (n "palaver") (v "0.2.5") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "1fynss9bh9mqxqh99cgw651q8pjxfslgkw2yk32774lihkza18h2") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.2.6 (c (n "palaver") (v "0.2.6") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.14") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "19mby6p8psjgvrkl6lfr2ia3wsxfpvbi70ixvpiw50v6bwwxgxsw") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.2.7 (c (n "palaver") (v "0.2.7") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.15") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "void") (r "^1.0") (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "02haa0y1jyifh6743jrplwjgh3264kjm167wnhd91fd4dhjn7nan") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.2.8 (c (n "palaver") (v "0.2.8") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "heapless") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.15") (d #t) (t "cfg(unix)") (k 0)) (d (n "procinfo") (r "^0.4") (d #t) (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0pv85nij901d1rqz7ghhc29j65sj9d2pwjhykb6lvhrsfc0c5ps9") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.3.0-alpha.1 (c (n "palaver") (v "0.3.0-alpha.1") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "heapless") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.16") (d #t) (t "cfg(unix)") (k 0)) (d (n "procfs") (r "^0.7") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0xvd6s487z7pakzf3s7m9n1bv5lqiqyl9x0nsf99qc76mzqajnl3") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.3.0-alpha.2 (c (n "palaver") (v "0.3.0-alpha.2") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "heapless") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.16") (d #t) (t "cfg(unix)") (k 0)) (d (n "procfs") (r "^0.7") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0mj4kvyl7qz99xpcm1xn808a4y2xvzvr72n4qgzxv4kyz3r5ylav") (f (quote (("nightly" "valgrind_request"))))))

(define-public crate-palaver-0.3.0-alpha.3 (c (n "palaver") (v "0.3.0-alpha.3") (d (list (d (n "bitflags") (r "^1.0") (d #t) (k 0)) (d (n "escargot") (r "^0.5") (d #t) (k 2)) (d (n "heapless") (r "^0.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.47") (d #t) (t "cfg(unix)") (k 0)) (d (n "mach") (r "^0.3") (d #t) (t "cfg(any(target_os = \"macos\", target_os = \"ios\"))") (k 0)) (d (n "nix") (r "^0.16") (d #t) (t "cfg(unix)") (k 0)) (d (n "procfs") (r "^0.7") (t "cfg(any(target_os = \"android\", target_os = \"linux\"))") (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 2)) (d (n "replace_with") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "twox-hash") (r "^1.5") (t "cfg(unix)") (k 0)) (d (n "typenum") (r "^1.10") (d #t) (k 0)) (d (n "valgrind_request") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3") (f (quote ("processthreadsapi"))) (d #t) (t "cfg(windows)") (k 0)))) (h "0wbyx6s2p750vffziy1jks5bdhyizslpz8d7w31x0w6hhh1zrnnd") (f (quote (("nightly" "valgrind_request"))))))

