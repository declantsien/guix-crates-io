(define-module (crates-io pa ct pact_consumer) #:use-module (crates-io))

(define-public crate-pact_consumer-0.0.0 (c (n "pact_consumer") (v "0.0.0") (d (list (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.18") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.2") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ssznk7hf86dxfs8c18dnyqrjpph3y275q7r3d1iw8m7fhgagnbm")))

(define-public crate-pact_consumer-0.1.0 (c (n "pact_consumer") (v "0.1.0") (d (list (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.18") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.1.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ymvyyiljdhs1hj41k7dn19fg11zy5phnx8fc3bl61b5d0fnak9b")))

(define-public crate-pact_consumer-0.2.0 (c (n "pact_consumer") (v "0.2.0") (d (list (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.18") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1pr0p8iv3flracq84cdlk30fgg01mp8s175dsl7vg1vn19fi79mx")))

(define-public crate-pact_consumer-0.3.0 (c (n "pact_consumer") (v "0.3.0") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.18") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 2)) (d (n "pact_matching") (r "^0.3.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "11fsflrl1pppzaznv56chzwjqsf9n0q6p292fzjz4fli8a4zkgzi")))

(define-public crate-pact_consumer-0.3.1 (c (n "pact_consumer") (v "0.3.1") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.18") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 2)) (d (n "pact_matching") (r "^0.3.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.3.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fzmsq295zpn15rl2mkgalp0wvbvc3js3mgpqfdyk18gci73l7vd")))

(define-public crate-pact_consumer-0.4.0 (c (n "pact_consumer") (v "0.4.0") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.5.4") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 2)) (d (n "pact_matching") (r "^0.4.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1429lxdr0xjdmsx4in8y2b0q34wsbflx20zb7gl6iz39p5nhdz7s")))

(define-public crate-pact_consumer-0.5.0 (c (n "pact_consumer") (v "0.5.0") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.5.4") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 2)) (d (n "pact_matching") (r "^0.5.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0dd2vfkl02zpn38q0ksjqa2ln437nx3firy8v8civg0cl4lwgwgw")))

(define-public crate-pact_consumer-0.5.1 (c (n "pact_consumer") (v "0.5.1") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.5.4") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 2)) (d (n "pact_matching") (r "^0.5.3") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.5.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "13xg4nam2rjszp04zncmjzcwyldpv5zhaiafm7npppigxjhqx5b1")))

(define-public crate-pact_consumer-0.5.2 (c (n "pact_consumer") (v "0.5.2") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.5.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.5") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.6.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1j8hh7k26xys7in2ph0j5f426bw71hpzb221kswg76l4v3x6z9gx")))

(define-public crate-pact_consumer-0.5.3 (c (n "pact_consumer") (v "0.5.3") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.6.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.5") (d #t) (k 2)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "url") (r "^1.5.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "10vwh5qmx02npa05ginsvqsh89qb5psh6x78di98lawghyqb0mna")))

(define-public crate-pact_consumer-0.6.0 (c (n "pact_consumer") (v "0.6.0") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.8.2") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.8") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("default-tls" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "12vnbqxsi18qjpya2phpqzqxwmvzbf2225capanddp5my051lzza")))

(define-public crate-pact_consumer-0.6.1 (c (n "pact_consumer") (v "0.6.1") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("default-tls" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1x3a9zsv2p6c158hi52nfjx97ws5wlkdl4ibl1hqbldlk218x1sa")))

(define-public crate-pact_consumer-0.6.2 (c (n "pact_consumer") (v "0.6.2") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.3") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("default-tls" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0dckwqasja86ir49fl6a967p943k6p72km8p8q2w1yacxvrf16wj")))

(define-public crate-pact_consumer-0.7.0 (c (n "pact_consumer") (v "0.7.0") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("default-tls" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cwjcr9kgvmq8s0kz9rdq4ybj34zpc40156shzgqn9i02ijf3vfl")))

(define-public crate-pact_consumer-0.7.1 (c (n "pact_consumer") (v "0.7.1") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("default-tls" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1x32wj5slvx7rcw32lpaync1x995np3n3c5did7d3r7b1cv9xbcg")))

(define-public crate-pact_consumer-0.7.2 (c (n "pact_consumer") (v "0.7.2") (d (list (d (n "env_logger") (r "^0.4") (d #t) (k 2)) (d (n "expectest") (r "^0.9.2") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "regex") (r "^0.1.56") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("default-tls" "blocking"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wnd6nbd56l9bcvndgvwcakrrsqffrwqfiyixdv3da9bz6ccf57h")))

(define-public crate-pact_consumer-0.7.3 (c (n "pact_consumer") (v "0.7.3") (d (list (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("default-tls"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "11ll6335xl04q755dai0lcrblbza3mj0vc7hwfdcky16mviyjqfz")))

(define-public crate-pact_consumer-0.7.4 (c (n "pact_consumer") (v "0.7.4") (d (list (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("default-tls"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1y8l9fk3al70cjfddqs6fxm7r03z4fy4f279z4mbdvm5mnlvhx3h")))

(define-public crate-pact_consumer-0.7.5 (c (n "pact_consumer") (v "0.7.5") (d (list (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("default-tls"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rinx1pysxlbg4bsm3lxn74jn2ln9wyhqy3i0k3xh1p5s94n2az6")))

(define-public crate-pact_consumer-0.7.6 (c (n "pact_consumer") (v "0.7.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.9") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "pact_models") (r "^0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("default-tls"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s16jajwgpg24bhv0lyk3rfq6h2i458ds128r2gzcyy1g104qhfa")))

(define-public crate-pact_consumer-0.7.7 (c (n "pact_consumer") (v "0.7.7") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "=0.9.4") (d #t) (k 0)) (d (n "pact_mock_server") (r "=0.7.19") (d #t) (k 0)) (d (n "pact_models") (r "=0.0.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0cjxsbnjvqj0cn0dz1jvwm3sm902h3dq2x4km2l8zrh893i4rjyk")))

(define-public crate-pact_consumer-0.7.8 (c (n "pact_consumer") (v "0.7.8") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.10") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "pact_models") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0813shmj3666lsjlbbjjajnpamq7r8cdfwk2bpx6bs15kxg9lc2g")))

(define-public crate-pact_consumer-0.8.0-beta.0 (c (n "pact_consumer") (v "0.8.0-beta.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.0-beta.1") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fbsjjl38xwmhqynv4jlgsv34k5c3l2apkm967gnszd0w9k4cicf")))

(define-public crate-pact_consumer-0.8.0-beta.1 (c (n "pact_consumer") (v "0.8.0-beta.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.2") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.0-beta.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "11yjqlajysbdfvh2l4pq48ph0nfkc4k10r1zzhz80y3s6zk1qvba")))

(define-public crate-pact_consumer-0.8.0-beta.2 (c (n "pact_consumer") (v "0.8.0-beta.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.6") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.3") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.0-beta.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1jjf594f4lqlnwd1a1f5m7q47waxky98pvbgxh5kyk4p5q68kpxn")))

(define-public crate-pact_consumer-0.8.0-beta.3 (c (n "pact_consumer") (v "0.8.0-beta.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.7") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.4") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.0-beta.4") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0vihx4rhdj1l9vra4xpnf7rvhl2fgp1vwyks4mds3bpzs27s619r")))

(define-public crate-pact_consumer-0.8.0 (c (n "pact_consumer") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.8") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.0") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1pf0njvpr3vqn28v4nhcwrd69cafsyqkscdciji90cnnlndbx8iv")))

(define-public crate-pact_consumer-0.8.1 (c (n "pact_consumer") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.9") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.1") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "14d74d942zpk6dsmdrq96f93gzj54dsizbg0k0y6f7045vl920cc")))

(define-public crate-pact_consumer-0.8.2 (c (n "pact_consumer") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.12") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.3") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0kx0f48i4mf2rz5wmy9nyx4lng72n44iq51pmcqn1k0vsckpgyzf")))

(define-public crate-pact_consumer-0.8.3 (c (n "pact_consumer") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.14") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.5") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.4") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rjrskszb1kllkxgqw397y4pf2mqz1bibxk2xh4lgrrjm3v9jy6q")))

(define-public crate-pact_consumer-0.8.4 (c (n "pact_consumer") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.16") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.5") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.6") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0zx2yps6m6awajqi8293sx02hb5y7paziy4dc3pc15ingrj3jf2z")))

(define-public crate-pact_consumer-0.8.5 (c (n "pact_consumer") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.51") (d #t) (k 0)) (d (n "bytes") (r "^1.0.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.17") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.2") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.7") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0d6x0cbyqs7nsklaxhr3hisq475nj931ff47r2g1n0wjzh3bh8g6")))

(define-public crate-pact_consumer-0.8.6 (c (n "pact_consumer") (v "0.8.6") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.18") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.3") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.7") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0kmzrgazg7dqzlnbh0iw6agv48f3w4w23p29jq0j5b95czclh3pb")))

(define-public crate-pact_consumer-0.9.0 (c (n "pact_consumer") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.4") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.8") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1inf07ffkrvp16bm8r4zfpcs69rzw43d5g5h9s44xwgl566rfpl8")))

(define-public crate-pact_consumer-0.9.1 (c (n "pact_consumer") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.5") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.9") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0pvd3kj4sf5r234rdwn74dgkc7n1j1w15w5yqpa8wac8z45pmm73")))

(define-public crate-pact_consumer-0.9.2 (c (n "pact_consumer") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.5") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.10") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.4") (d #t) (k 2)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.32") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0nvyflj1c7v5dk8hzx74v5fj05gcwn0slrq27n53a83jc8dkzbzs")))

(define-public crate-pact_consumer-0.9.3 (c (n "pact_consumer") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.6") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.11") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1y24radrp68yxk0450nidkhdxlibq7srm7rna8ivr0v0ykq5c7x9")))

(define-public crate-pact_consumer-0.9.4 (c (n "pact_consumer") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.7") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.0") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1lh21biykpfjqd0hp3896zgwxrl59mdxq795z2kgy5c0vg0d5jrp")))

(define-public crate-pact_consumer-0.9.5 (c (n "pact_consumer") (v "0.9.5") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.8") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.8") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.1") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0y6mb76dc8zia4rdc3vkqlbjbdqmlgbz4qfg9xy3jccly7ip7kcg")))

(define-public crate-pact_consumer-0.9.6 (c (n "pact_consumer") (v "0.9.6") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.10") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.11") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "=0.1.36") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rhkss9bq865ww20sjjv2y58xbhnwxp8xv82b5p0badw0v4786xf")))

(define-public crate-pact_consumer-0.9.7 (c (n "pact_consumer") (v "0.9.7") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.11") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.11") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.5.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "=0.1.36") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1n9prfxcqczxyqyzkygf6iy1qi80qxc97mb27h5sph7g6xq0hsx4")))

(define-public crate-pact_consumer-0.10.0 (c (n "pact_consumer") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.15") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.14") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.4") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "06iahq6m8jjpfdmzsbxf0g1najwvxda6m6rwc673sbvg16b2zb50")))

(define-public crate-pact_consumer-0.10.1 (c (n "pact_consumer") (v "0.10.1") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.6") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1myh0j6khyjdp493f1215jpazzl1ldbscmav95gjqq8n88axs24r")))

(define-public crate-pact_consumer-0.10.2 (c (n "pact_consumer") (v "0.10.2") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.6") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1baqz1mswxa853myshjflp20v91r899jixmrhbw97dw6lr0649jg")))

(define-public crate-pact_consumer-0.10.3 (c (n "pact_consumer") (v "0.10.3") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.2.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.7") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (d #t) (k 2)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1spyfc4baja4xcr18h4wwmdljk4cz028z8pyshxch0n5iadmgcdi")))

(define-public crate-pact_consumer-0.10.4 (c (n "pact_consumer") (v "0.10.4") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.3.1") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.5") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.7") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0w6n93w1f3qadkdxnnpjbwsk79by10qcvqqq7azxql5kj4kiwh9w")))

(define-public crate-pact_consumer-0.10.5 (c (n "pact_consumer") (v "0.10.5") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.58") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.3.3") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^1.0.0") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "03rmm9gpl0f454i3s33j6bjckkzafvx06nkvh9hhrjvjnnrwixaj")))

(define-public crate-pact_consumer-0.10.6 (c (n "pact_consumer") (v "0.10.6") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.4.0") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^1.0.1") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0psx7f2gk5qzsmfnflxp4420hmsypabm86yj8lp9wlaih9b5jpd9")))

(define-public crate-pact_consumer-0.10.7 (c (n "pact_consumer") (v "0.10.7") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.4.1") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^1.0.1") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rva3pis1abl04cwd69b9lacd2d2j6hj0dhn15q7rw8sbizs0ppi")))

(define-public crate-pact_consumer-0.10.8 (c (n "pact_consumer") (v "0.10.8") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.4.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.8") (d #t) (k 0)) (d (n "pact_mock_server") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.13") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1qzj9dbhn9vcmps220iyinq80fhcp4fb2zv1c46w015kq69djhnq")))

(define-public crate-pact_consumer-1.0.0 (c (n "pact_consumer") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.4") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "01xaj58dwkpyx4qslraivbzhjz1z00bxhzr693s25jqflys38qq1")))

(define-public crate-pact_consumer-1.0.1 (c (n "pact_consumer") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.4") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1z7xyljf9nh1lkgb6s3klx2b757icdpdi6i0wwapfhsr99i2j6n9")))

(define-public crate-pact_consumer-1.0.2 (c (n "pact_consumer") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.3") (k 0)) (d (n "pact_mock_server") (r "~1.2.1") (k 0)) (d (n "pact_models") (r "~1.1.8") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0wwrsmrnf7y0qrds1minwxqrcy01ib1k1c71n7654gpjvzimh6rg") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.0.3 (c (n "pact_consumer") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.3") (k 0)) (d (n "pact_mock_server") (r "~1.2.1") (k 0)) (d (n "pact_models") (r "~1.1.8") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "14ffa4kgzphzr26c84yf6s4xhc23nynhqimxq52hagyparn2rzzm") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.0.4 (c (n "pact_consumer") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.5") (k 0)) (d (n "pact_mock_server") (r "~1.2.3") (k 0)) (d (n "pact_models") (r "~1.1.11") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1xcfqg9pxfgwj6g7lbxlqq7hhc3x87z0wdxhj7sr0f3jvlp6w2wf") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.0.5 (c (n "pact_consumer") (v "1.0.5") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.7") (k 0)) (d (n "pact_mock_server") (r "~1.2.3") (k 0)) (d (n "pact_models") (r "~1.1.12") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g9bw3mv33szkbxqghahvs6z2a3hbz6jcr8fy4pf2n98zmn2slp5") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.1.0 (c (n "pact_consumer") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.6") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.7") (k 0)) (d (n "pact_mock_server") (r "~1.2.3") (k 0)) (d (n "pact_models") (r "~1.1.12") (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "15hbjsawxz6b92g0szybivmg4a0xrlrkvj20hv3zp7y3jyf35zyd") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.1.1 (c (n "pact_consumer") (v "1.1.1") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.5.0") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.9") (k 0)) (d (n "pact_mock_server") (r "~1.2.4") (k 0)) (d (n "pact_models") (r "~1.1.17") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gw7a4mshnpf7j06qa1dp1ffng3m13jlicwvvhqdj7hbdgvz2isb") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.1.2 (c (n "pact_consumer") (v "1.1.2") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.74") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.5.1") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.10") (k 0)) (d (n "pact_mock_server") (r "~1.2.4") (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.3") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1mw1hdg7csj69av2hd7nfg204cgrz7yd7pdag25nh4bfcahiccml") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.2.0 (c (n "pact_consumer") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.6.0") (o #t) (k 0)) (d (n "pact_matching") (r "~1.2.0") (k 0)) (d (n "pact_mock_server") (r "~1.2.6") (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.3") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1km6pl81ja0q3a698akw85d11chw1ksv6ijdxjqd9sj2mz944wcs") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

(define-public crate-pact_consumer-1.2.1 (c (n "pact_consumer") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.80") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.6.1") (o #t) (k 0)) (d (n "pact_matching") (r "~1.2.2") (k 0)) (d (n "pact_mock_server") (r "~1.2.6") (k 0)) (d (n "pact_models") (r "~1.2.0") (k 0)) (d (n "pretty_assertions") (r "^1.4.0") (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "regex") (r "^1.10.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.3") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "test-log") (r "^0.2.15") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-test") (r "^0.4.4") (d #t) (k 2)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log" "fmt"))) (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1yxhg3xc91d689nx6z7c2fq002b59102ndba64fhllp30b3cp7d2") (f (quote (("tls" "pact_mock_server/tls") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml" "pact-plugin-driver?/xml") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins" "pact_mock_server/plugins") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime" "pact-plugin-driver?/datetime"))))))

