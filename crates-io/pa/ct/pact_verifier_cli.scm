(define-module (crates-io pa ct pact_verifier_cli) #:use-module (crates-io))

(define-public crate-pact_verifier_cli-0.0.0 (c (n "pact_verifier_cli") (v "0.0.0") (d (list (d (n "clap") (r "^2.13.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.2") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)))) (h "0pavm943dpwh08hkidjbrx40wq1b1p68a1kvpdpa8s4jbf39smqh")))

(define-public crate-pact_verifier_cli-0.1.0 (c (n "pact_verifier_cli") (v "0.1.0") (d (list (d (n "clap") (r "^2.13.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.1") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)))) (h "04r0iamlh5yzhgc7pc66rrhr1c4jw8jx7zgwqb7a2am8fvcyrhdv")))

(define-public crate-pact_verifier_cli-0.2.0 (c (n "pact_verifier_cli") (v "0.2.0") (d (list (d (n "clap") (r "^2.13.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)))) (h "11cbx6z7sw8sp0rvs1hj2ybifqlffyv7gzyyrki6frjjggivc5vd")))

(define-public crate-pact_verifier_cli-0.3.0 (c (n "pact_verifier_cli") (v "0.3.0") (d (list (d (n "clap") (r "^2.13.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.3.1") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)))) (h "1r92lw1navw0j615pks57sz90wd1qv4n6ga9va2ilwnmfc36rgx8")))

(define-public crate-pact_verifier_cli-0.4.0 (c (n "pact_verifier_cli") (v "0.4.0") (d (list (d (n "clap") (r "^2.13.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.4.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)))) (h "1cj08vxq4wlj9m3aivyag6580xc6zn4i9zdqsx56v2hvdwhwhpyj")))

(define-public crate-pact_verifier_cli-0.5.0 (c (n "pact_verifier_cli") (v "0.5.0") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)))) (h "0qxqs576aq86snm45iki77x60bbv7rjs6yifan6dvfc9bv3mxawf")))

(define-public crate-pact_verifier_cli-0.5.1 (c (n "pact_verifier_cli") (v "0.5.1") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.3") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.5.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)))) (h "1vavzdr3df7b0cw6nhfxjjbj4676541pavzzz1qjj1niaqx5fkh9")))

(define-public crate-pact_verifier_cli-0.6.0 (c (n "pact_verifier_cli") (v "0.6.0") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.3") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.6.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)))) (h "0g4x9h15dqcjh9qi50k13v01rgmj3cnwihpx2n32g596p742p4ar")))

(define-public crate-pact_verifier_cli-0.6.1 (c (n "pact_verifier_cli") (v "0.6.1") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.5") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.6.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.6.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)))) (h "0gv0pdcd7xn8r5l31k8vz5byk1aivrk80p91nf9l6ml5gajr7mfm")))

(define-public crate-pact_verifier_cli-0.7.0 (c (n "pact_verifier_cli") (v "0.7.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.3") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.8.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "1v9qhkd2y7rjzkz3bizcj11aaixqp2agv6q9gw2mj13qk0fcds12")))

(define-public crate-pact_verifier_cli-0.7.1 (c (n "pact_verifier_cli") (v "0.7.1") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.5") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.8.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "0l59wa5n5b5j64jjb1xzkzzgnfn4flh4j8w3sj49jzjx1db36q23")))

(define-public crate-pact_verifier_cli-0.8.0 (c (n "pact_verifier_cli") (v "0.8.0") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.7.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.9.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "0lappmn0i9z0xvhkhrljhkd11smqra57fb9aknhbz2nkfz3j7h46")))

(define-public crate-pact_verifier_cli-0.8.1 (c (n "pact_verifier_cli") (v "0.8.1") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.9.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "0mp33r7mc46pr9v4k2j1rblicxg09zpvgc2bdx38b28vmygmgdds")))

(define-public crate-pact_verifier_cli-0.8.2 (c (n "pact_verifier_cli") (v "0.8.2") (d (list (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.9.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "18iyjx9ffxymb62qxdj0gqnhxg7pdscxa2ni6fwa5ajn2f7f7833")))

(define-public crate-pact_verifier_cli-0.8.3 (c (n "pact_verifier_cli") (v "0.8.3") (d (list (d (n "clap") (r ">=2.33.0, <3.0.0") (d #t) (k 0)) (d (n "expectest") (r ">=0.12.0, <0.13.0") (d #t) (k 2)) (d (n "lazy_static") (r ">=1.4.0, <2.0.0") (d #t) (k 0)) (d (n "libc") (r ">=0.2.76, <0.3.0") (d #t) (k 0)) (d (n "log") (r ">=0.4.8, <0.5.0") (d #t) (k 0)) (d (n "maplit") (r ">=1.0.2, <2.0.0") (d #t) (k 0)) (d (n "pact_matching") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "pact_verifier") (r ">=0.9.0, <0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r ">=0.9.2, <0.10.0") (d #t) (k 2)) (d (n "rand") (r ">=0.7.3, <0.8.0") (d #t) (k 0)) (d (n "regex") (r ">=1.3.9, <2.0.0") (d #t) (k 0)) (d (n "simplelog") (r ">=0.8.0, <0.9.0") (d #t) (k 0)) (d (n "tokio") (r ">=0.2.9, <0.3.0") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "1d2kxp0x16xg8139bzpi61a5crv0fypkd8bcz46pirszp7j9x5ks")))

(define-public crate-pact_verifier_cli-0.8.4 (c (n "pact_verifier_cli") (v "0.8.4") (d (list (d (n "cbindgen") (r "^0.14.1") (d #t) (k 1)) (d (n "clap") (r "^2.33.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.76") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.10.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.9.2") (d #t) (k 2)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "simplelog") (r "^0.8") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-core" "macros"))) (d #t) (k 0)))) (h "00j2am1i57papjwpdl1j226xiy2id53wpgggyz1rd428ivmfs405")))

(define-public crate-pact_verifier_cli-0.8.5 (c (n "pact_verifier_cli") (v "0.8.5") (d (list (d (n "pact_verifier_ffi") (r ">=0.0.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0c726z9k8xx53r118k1pnvf5spnhpsk8qvmhbdwhbnrvijq4y2va")))

(define-public crate-pact_verifier_cli-0.8.6 (c (n "pact_verifier_cli") (v "0.8.6") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "pact_ffi") (r "^0.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "00jds7dy76n0v5xhnnyjizcj18zf2gi354wal819yg17pwjpgcnc")))

(define-public crate-pact_verifier_cli-0.8.7 (c (n "pact_verifier_cli") (v "0.8.7") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "pact_ffi") (r "^0.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "160mcj1ba0ir1v07mgsn0vyh2lg3522qharphz9di6284vlngp7n")))

(define-public crate-pact_verifier_cli-0.8.8 (c (n "pact_verifier_cli") (v "0.8.8") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "pact_ffi") (r "^0.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0qg6rp54730hs6f8w1ji94fn6qi2w72xf0cgir6nvjmbjpxh03s9")))

(define-public crate-pact_verifier_cli-0.9.0-beta.0 (c (n "pact_verifier_cli") (v "0.9.0-beta.0") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.11.0-beta.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0vpmkpfnp0k0g90qarh3wyq6g653iqdfkz7w3s15a9adbryd8wm9")))

(define-public crate-pact_verifier_cli-0.9.0 (c (n "pact_verifier_cli") (v "0.9.0") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0blc85kjkly5p0h952r4kxgd0ppz34cf3ang5f9ky991c5s6zm4b")))

(define-public crate-pact_verifier_cli-0.9.1 (c (n "pact_verifier_cli") (v "0.9.1") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.1") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "07wv1jr78ihabp222mcjg0vq29cyq5mnhj65irx4vbnysl859n61")))

(define-public crate-pact_verifier_cli-0.9.2 (c (n "pact_verifier_cli") (v "0.9.2") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.2") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.11.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0lvxw7cszcg4xry986w99lhh9qk759xx4c49x0p422z8ysazlslh")))

(define-public crate-pact_verifier_cli-0.9.3 (c (n "pact_verifier_cli") (v "0.9.3") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.2") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.12.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "00459c3z7ai5il7l782jqiw4zh9m18lb52g07gp4vh640g20vvfr")))

(define-public crate-pact_verifier_cli-0.9.4 (c (n "pact_verifier_cli") (v "0.9.4") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.2") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.12.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0v5pr1plsz9r5dgrxh2izcy7nfjkf80flqrw0v4c9qww1n8byimx")))

(define-public crate-pact_verifier_cli-0.9.5 (c (n "pact_verifier_cli") (v "0.9.5") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.2") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.12.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1ipvn5b2gvp4nkmfgxai0yr99h23fg47jw6s472vk4f96zkh6r66")))

(define-public crate-pact_verifier_cli-0.9.6 (c (n "pact_verifier_cli") (v "0.9.6") (d (list (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.7") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.12.4") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1xhcdkizgxzh09pqfka16zcy7qw2y8f7ld28x7cma2vmfa5lp6r8")))

(define-public crate-pact_verifier_cli-0.9.7 (c (n "pact_verifier_cli") (v "0.9.7") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.53") (d #t) (k 0)) (d (n "clap") (r "^2.33") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.7") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.0") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.78") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0rkkbzh2a2lpz91b372sczihv5vn1l4hgny8yjqkcs0r61yp91r3")))

(define-public crate-pact_verifier_cli-0.9.8 (c (n "pact_verifier_cli") (v "0.9.8") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^2.33.4") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.2") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.9") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "0yyqhh5z5yybpj6nkp964hq2sqa8579wrplp4n7r3lq1xfdlprwv")))

(define-public crate-pact_verifier_cli-0.9.9 (c (n "pact_verifier_cli") (v "0.9.9") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^2.33.4") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.3") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.4") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1y066qn049yfj7bki17skwq9dxnnxkx3m8p0v7r72ilvsydbl4k1")))

(define-public crate-pact_verifier_cli-0.9.10 (c (n "pact_verifier_cli") (v "0.9.10") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^2.33.4") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.0") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log-always"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "119xwhdn9jnb79k99b6r678397y3ypp1r79bb8kx2x1y6qvq4pjp")))

(define-public crate-pact_verifier_cli-0.9.11 (c (n "pact_verifier_cli") (v "0.9.11") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^2.33.4") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.1") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.8") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "simplelog") (r "^0.10.2") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log-always"))) (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "0arwn3hci02g67kn93ylxmnh8yq7p06q1w0a8f9agrnc96acpi8j")))

(define-public crate-pact_verifier_cli-0.9.12 (c (n "pact_verifier_cli") (v "0.9.12") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^2.33.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.1") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.9") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "0l54518slg21vsri4dhvz8dw32bval52ipccg8gi48v8fkwqkiwc")))

(define-public crate-pact_verifier_cli-0.9.13 (c (n "pact_verifier_cli") (v "0.9.13") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.2") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.10") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "19y4gjkyyw7677rfdi14b7f8rz43ndld6s069chcckny70bijrcy")))

(define-public crate-pact_verifier_cli-0.9.14 (c (n "pact_verifier_cli") (v "0.9.14") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.2") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.10") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "0l15jl05w90f03yyb04ah22q2r66spawrmz1imazg0v6armpglp7")))

(define-public crate-pact_verifier_cli-0.9.15 (c (n "pact_verifier_cli") (v "0.9.15") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.5") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.12") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "10843y26xdzyrwb45828kdqaf3jjv1jiswhkqdx5mpk1sfh8n9mm")))

(define-public crate-pact_verifier_cli-0.9.16 (c (n "pact_verifier_cli") (v "0.9.16") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.5") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.13") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "1xb8g2z4d6vyqsbyy7lr3yg9ajjgb7mxvad6vy7a240swnpp39ip")))

(define-public crate-pact_verifier_cli-0.9.17 (c (n "pact_verifier_cli") (v "0.9.17") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "=0.4.5") (d #t) (k 0)) (d (n "pact_verifier") (r "=0.13.14") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.23") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "0xk17l1821j34zwrbknwss9pgj26qmj6nly2rvxmga72x5mbn619")))

(define-public crate-pact_verifier_cli-0.9.18 (c (n "pact_verifier_cli") (v "0.9.18") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.0") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.15") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "1bqh7r6pxwcm9kx6jz9fzd90r3w3q26grazya7ayw5na294a80yl")))

(define-public crate-pact_verifier_cli-0.9.19 (c (n "pact_verifier_cli") (v "0.9.19") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.1") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.16") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "0r68pcxbgafc559sh9x6cj8cwa5ggkqh4qc7d73qsgc8clngf4sq")))

(define-public crate-pact_verifier_cli-0.9.20 (c (n "pact_verifier_cli") (v "0.9.20") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.19") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "17b18vdj5c3mcxp3j3dzflg8yayqx5l6szx6kc4c7knxrsmdvian")))

(define-public crate-pact_verifier_cli-0.10.0 (c (n "pact_verifier_cli") (v "0.10.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.4") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.20") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "132m6mhp4lpa1vzmknh96bfzx4aibp2g103679nmahjmhm2sn0d1")))

(define-public crate-pact_verifier_cli-0.10.1 (c (n "pact_verifier_cli") (v "0.10.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.4") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.13.21") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "0ijfj1xhjdjqs6mc1vdyiic1nha4f3nqjhkjhcj59vjw59l8jjvs")))

(define-public crate-pact_verifier_cli-0.10.2 (c (n "pact_verifier_cli") (v "0.10.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.4") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.14.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "1swnrr71kxs2imf16q94n5jj5pga6xhp1vffqqlinknsr5ljjx2d")))

(define-public crate-pact_verifier_cli-0.10.3 (c (n "pact_verifier_cli") (v "0.10.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.4") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.15.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "0mhnpl3pppya9nsj3qvaiqpc7lrlmryapx709plai58navnh3i4d")))

(define-public crate-pact_verifier_cli-0.10.4 (c (n "pact_verifier_cli") (v "0.10.4") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "clap") (r "^4.0.32") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.15.1") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.24.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)))) (h "1i5kvxzdyy9j8z8qmkj16xb12j65bxvnmfr2mqlz4ys39mr69mvd")))

(define-public crate-pact_verifier_cli-0.10.5 (c (n "pact_verifier_cli") (v "0.10.5") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.15.2") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)))) (h "19sb0ijzlmsf5pcrv4g86vvj9qmcl1h6wv2xz69xmhnx3g0gqnwd")))

(define-public crate-pact_verifier_cli-0.10.6 (c (n "pact_verifier_cli") (v "0.10.6") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.2") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.13") (d #t) (k 0)) (d (n "pact_verifier") (r "^0.15.3") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)))) (h "1449gaz1y8shnhnb6vgrqd8fj23j8s196b7hq9li30kmj4k8wl9d")))

(define-public crate-pact_verifier_cli-1.0.0 (c (n "pact_verifier_cli") (v "1.0.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.8") (k 0)) (d (n "pact_verifier") (r "~1.0.1") (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)))) (h "1q26w92glpdb6503y1zkvik8znq1rk6vwk9xawz89h026ynp09g3") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

(define-public crate-pact_verifier_cli-1.0.1 (c (n "pact_verifier_cli") (v "1.0.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^4.2.1") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.11") (k 0)) (d (n "pact_verifier") (r "~1.0.3") (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "time") (r "^0.3.20") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-log") (r "^0.1.3") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)))) (h "1mmgbaq40w9jb13p7qxbs1njdkikvi6zf76bxij0zbid8gsy93ys") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

(define-public crate-pact_verifier_cli-1.0.2 (c (n "pact_verifier_cli") (v "1.0.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.4.7") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.12") (k 0)) (d (n "pact_verifier") (r "~1.0.4") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.22") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "time") (r "^0.3.30") (d #t) (k 0)) (d (n "tokio") (r "^1.33.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.19") (d #t) (k 2)))) (h "1cawxmqpvcmvy1k6v6lbhcawjqjr7j77440ziiwzxabg8ivnjk2g") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

(define-public crate-pact_verifier_cli-1.0.3 (c (n "pact_verifier_cli") (v "1.0.3") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.17") (k 0)) (d (n "pact_verifier") (r "~1.0.5") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.19") (d #t) (k 2)))) (h "1bxj82z9n5mw7v4r8bpikawbck8z57a0rraxk73qjcirhnpy0ysd") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

(define-public crate-pact_verifier_cli-1.1.0 (c (n "pact_verifier_cli") (v "1.1.0") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "~4.4.11") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "pact_verifier") (r "~1.1.0") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)))) (h "1wy99r6h6kv6vdaxx422f5dx8fk1sw2cg1a3jnq5xq5wihy70cvd") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

(define-public crate-pact_verifier_cli-1.1.1 (c (n "pact_verifier_cli") (v "1.1.1") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "~4.4.11") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "pact_verifier") (r "~1.1.0") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)))) (h "1qj9x6gki7wy93brrsib93s8ljxivxqv6vrjjljs6c8crfxkm59v") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

(define-public crate-pact_verifier_cli-1.1.2 (c (n "pact_verifier_cli") (v "1.1.2") (d (list (d (n "ansi_term") (r "^0.12.1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.5.4") (f (quote ("cargo" "env"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "junit-report") (r "^0.8.3") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "~1.2.0") (k 0)) (d (n "pact_verifier") (r "~1.2.1") (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.4") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "time") (r "^0.3.31") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2.0") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)))) (h "0wxkahnjc6hvfwsz3di8m6szcl6mgckimgm4s3hzh8ffjs6szmaa") (f (quote (("xml" "pact_models/xml" "pact_verifier/xml") ("plugins" "pact_verifier/plugins") ("multipart" "pact_verifier/multipart") ("default" "datetime" "xml" "plugins" "multipart" "junit") ("datetime" "pact_models/datetime" "pact_verifier/datetime")))) (s 2) (e (quote (("junit" "dep:junit-report"))))))

