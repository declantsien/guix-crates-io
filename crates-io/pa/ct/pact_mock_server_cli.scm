(define-module (crates-io pa ct pact_mock_server_cli) #:use-module (crates-io))

(define-public crate-pact_mock_server_cli-0.0.0 (c (n "pact_mock_server_cli") (v "0.0.0") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.8.0") (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "rustful") (r "^0.8.0") (f (quote ("rustc_json_body"))) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)))) (h "1dmm7qrgsspsnfvcpwspjps8wpbz4dyksmb2a3qskkas5yjhg5jb")))

(define-public crate-pact_mock_server_cli-0.0.1 (c (n "pact_mock_server_cli") (v "0.0.1") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0hn2lfmibd234qfwwcqia1jfyip7dim8i25fv6q97qm7dmraq4aq")))

(define-public crate-pact_mock_server_cli-0.1.0 (c (n "pact_mock_server_cli") (v "0.1.0") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0qb93y607zijwfq1pwwqqhxv9f814jbpi8hkbdq3xca3dkmqnvsl")))

(define-public crate-pact_mock_server_cli-0.2.0 (c (n "pact_mock_server_cli") (v "0.2.0") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0q87sfd153zb1bhrsskkhfgrsxg0s9mq7q3kmjwsy4daja3539m7")))

(define-public crate-pact_mock_server_cli-0.1.1 (c (n "pact_mock_server_cli") (v "0.1.1") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.1.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "1sqchcgykxa4bybnvwxabr0klxpfvcbmfzxki0jymvfwir2phv89")))

(define-public crate-pact_mock_server_cli-0.2.1 (c (n "pact_mock_server_cli") (v "0.2.1") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0669wfdll7q5p2cdqflpaw5l40g355waqm3mbk9pg7b1q28x6z30")))

(define-public crate-pact_mock_server_cli-0.0.2 (c (n "pact_mock_server_cli") (v "0.0.2") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "1f751wayd21npc21pd7dyp3664whc7smpzh0x1zim9mbsbrc36ji")))

(define-public crate-pact_mock_server_cli-0.1.2 (c (n "pact_mock_server_cli") (v "0.1.2") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.1.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "095qdnc948kr1v9qnd10b1xsgvjgw827m902mfrbfkfa47kd7wc2")))

(define-public crate-pact_mock_server_cli-0.2.2 (c (n "pact_mock_server_cli") (v "0.2.2") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0fyz5hldvrgnnayx93r34im9hpcv43k0dk2xdxvlrsjd5jfq4yqv")))

(define-public crate-pact_mock_server_cli-0.2.3 (c (n "pact_mock_server_cli") (v "0.2.3") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "10n2jh64nz0mxylz4jhnyjgzkmjympnsym3ncrg9vdfa71z81sxf")))

(define-public crate-pact_mock_server_cli-0.3.0 (c (n "pact_mock_server_cli") (v "0.3.0") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.3.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "1mllwzpix465ndajnbplwk51yvxq7q01qpsb3mghg3z9gk94ksi7")))

(define-public crate-pact_mock_server_cli-0.3.1 (c (n "pact_mock_server_cli") (v "0.3.1") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.3.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.3.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "10zrddsplcr6803vkf10vjsvxp7n9pp4yk5pk20r97nc5wm6xk15")))

(define-public crate-pact_mock_server_cli-0.4.0 (c (n "pact_mock_server_cli") (v "0.4.0") (d (list (d (n "clap") (r "^2.4.0") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.4.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "1cg0ly71agyf976rmrc286cbdcrpk9h00rqih97lsrh45j43n5vf")))

(define-public crate-pact_mock_server_cli-0.5.0 (c (n "pact_mock_server_cli") (v "0.5.0") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0idr5sly6xqsywn8w4cd22brz5v68w2rw8jkw3w662rlr3nnkrrj")))

(define-public crate-pact_mock_server_cli-0.5.1 (c (n "pact_mock_server_cli") (v "0.5.1") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.1") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.5.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.4.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "0vlwsf8wdywww19xrx4dbky2w436aqihvxs3qg8768g8psh2x874")))

(define-public crate-pact_mock_server_cli-0.6.0 (c (n "pact_mock_server_cli") (v "0.6.0") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.6.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "1vpcr6ks65is9qsv5yqmz54kgfag9crqcd51k56nprch9sf6km85")))

(define-public crate-pact_mock_server_cli-0.6.1 (c (n "pact_mock_server_cli") (v "0.6.1") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "02d3kdzi0xrqmv14glcwr12czxjja0ifvjfydvccjsb0cl2l1xzg")))

(define-public crate-pact_mock_server_cli-0.6.2 (c (n "pact_mock_server_cli") (v "0.6.2") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.3") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.0.0") (d #t) (k 0)))) (h "1pk8swk4482byp2xbs72xl505b0gf2ybv2bkq1rf5lbrhi4i9wvw")))

(define-public crate-pact_mock_server_cli-0.7.0 (c (n "pact_mock_server_cli") (v "0.7.0") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.7.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros" "blocking"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.0") (d #t) (k 0)))) (h "0ai52q6mr0hpj97iqny2dhr4q96r21vx7zcf6h1w4x4h8ar2wmhj")))

(define-public crate-pact_mock_server_cli-0.7.1 (c (n "pact_mock_server_cli") (v "0.7.1") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros" "blocking"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.0") (d #t) (k 0)))) (h "0krzng5k89xn8irc01cymwd5mgrg1537wa4bpkpkz5wspxsv44n2")))

(define-public crate-pact_mock_server_cli-0.7.2 (c (n "pact_mock_server_cli") (v "0.7.2") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros" "blocking"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.0") (d #t) (k 0)))) (h "039f9h9xdbz6fikzs8kyd5lr2hzkljsvkk816f0rb0p4frrlk8vb")))

(define-public crate-pact_mock_server_cli-0.7.3 (c (n "pact_mock_server_cli") (v "0.7.3") (d (list (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2.1") (d #t) (k 0)) (d (n "hyper") (r "^0.13.0") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4.2") (d #t) (k 0)) (d (n "regex") (r "^0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.7") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros" "blocking"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "=0.2.1") (d #t) (k 0)))) (h "0iz9d11zcgvfcnm66fdqs4rar94gkvwm4657x5xl79dc5nhpxykn")))

(define-public crate-pact_mock_server_cli-0.7.4 (c (n "pact_mock_server_cli") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.9") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "pact_models") (r "^0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "1m7j2dxmsnsrbjxf8j684klm77z1z3w069a9kmj67g18g9wvmb3j")))

(define-public crate-pact_mock_server_cli-0.7.5 (c (n "pact_mock_server_cli") (v "0.7.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "=0.9.4") (d #t) (k 0)) (d (n "pact_mock_server") (r "=0.7.19") (d #t) (k 0)) (d (n "pact_models") (r "=0.0.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "1dcsv0dli5q3hbccgf3h4wgkqb44zp9pfb1hymjbg0zyi6d7kpsp")))

(define-public crate-pact_mock_server_cli-0.7.6 (c (n "pact_mock_server_cli") (v "0.7.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.10") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.7.12") (d #t) (k 0)) (d (n "pact_models") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "1vcxqdlbk1443mdsy8mjj0r0bg2y7aiq1p0nnyiwjacfn3352w7f")))

(define-public crate-pact_mock_server_cli-0.7.7 (c (n "pact_mock_server_cli") (v "0.7.7") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "clap") (r "^2.31.2") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.0") (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.2") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.8.6") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.7") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "simplelog") (r "^0.9") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.1.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "11k92aa34ymkcvhkjlfywpz3jq2hiqzn2ni3c2cwc5gpvb2ycrhp")))

(define-public crate-pact_mock_server_cli-0.7.8 (c (n "pact_mock_server_cli") (v "0.7.8") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "clap") (r "^2.34.0") (d #t) (k 0)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "libc") (r "^0.2.119") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.10") (d #t) (k 0)) (d (n "pact_mock_server") (r "^0.9.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.5.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "0sp9vb2nb2jbg8vjkrw22dcg3crrk4rw09az6y4sd84n8aga8dy7")))

(define-public crate-pact_mock_server_cli-1.0.0 (c (n "pact_mock_server_cli") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.7") (d #t) (k 0)) (d (n "pact_mock_server") (r "^1.0.1") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "09nn2wf98bmdlpj5wgnf9zhh0vb8vgf3fknbnshh4736zg0rwjk2")))

(define-public crate-pact_mock_server_cli-1.0.1 (c (n "pact_mock_server_cli") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "clap") (r "^3.2.23") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "simplelog") (r "^0.12.1") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.2.2") (d #t) (k 0)))) (h "0hiaqzm76iqwg2cz2k503and1nkh2ndzxgkn71805x50wg6kz4xg")))

(define-public crate-pact_mock_server_cli-1.0.2 (c (n "pact_mock_server_cli") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_mock_server") (r "~1.2.0") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "local-time" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)) (d (n "url") (r "^2.4.0") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.3.0") (d #t) (k 0)))) (h "149iwl61nrw2ivdhilmw5y9as3fcs59jdlamw0h0xns12c8mfx3f")))

(define-public crate-pact_mock_server_cli-1.0.3 (c (n "pact_mock_server_cli") (v "1.0.3") (d (list (d (n "anyhow") (r "^1.0.71") (d #t) (k 0)) (d (n "clap") (r "^4.3.2") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.26") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.18") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.3") (k 0)) (d (n "pact_mock_server") (r "~1.2.1") (k 0)) (d (n "pact_models") (r "~1.1.8") (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.8.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "test-log") (r "^0.2.11") (d #t) (k 2)) (d (n "tokio") (r "^1.28.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter" "local-time" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.13") (d #t) (k 2)) (d (n "url") (r "^2.4.0") (d #t) (k 0)) (d (n "uuid") (r "^1.3.3") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.3.0") (d #t) (k 0)))) (h "09q3sai9639n4p1lbx08nrr2pnwawcc6lcmg9sczzvi3q88iz7cz") (f (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml") ("tls" "pact_mock_server/tls") ("plugins" "pact_matching/plugins" "pact_mock_server/plugins") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime"))))))

(define-public crate-pact_mock_server_cli-1.0.4 (c (n "pact_mock_server_cli") (v "1.0.4") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "^4.4.11") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.9") (k 0)) (d (n "pact_mock_server") (r "~1.2.4") (k 0)) (d (n "pact_models") (r "~1.1.17") (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.3") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "local-time" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.14.19") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.3.0") (d #t) (k 0)))) (h "1n1k4qp9c0k3qnfgi7z230646kvsnyqqc56v21gmlwxm5yfsgcbc") (f (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml") ("tls" "pact_mock_server/tls") ("plugins" "pact_matching/plugins" "pact_mock_server/plugins") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime"))))))

(define-public crate-pact_mock_server_cli-1.0.5 (c (n "pact_mock_server_cli") (v "1.0.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "~4.4.11") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.10") (k 0)) (d (n "pact_mock_server") (r "~1.2.5") (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.3") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "local-time" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.3.0") (d #t) (k 0)))) (h "03ng1rry1zrc81rwi5h6zwg1xc7yrx59mdw20q5r4g173000yp51") (f (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml") ("tls" "pact_mock_server/tls") ("plugins" "pact_matching/plugins" "pact_mock_server/plugins") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime"))))))

(define-public crate-pact_mock_server_cli-1.0.6 (c (n "pact_mock_server_cli") (v "1.0.6") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "clap") (r "~4.4.11") (f (quote ("cargo"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "~1.2.2") (k 0)) (d (n "pact_mock_server") (r "~1.2.7") (k 0)) (d (n "pact_models") (r "~1.2.0") (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.10.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.3") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (f (quote ("env-filter" "local-time" "tracing-log"))) (d #t) (k 0)) (d (n "trycmd") (r "^0.15.0") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 0)) (d (n "webmachine-rust") (r "^0.3.0") (d #t) (k 0)))) (h "0nz0rnkz3jpwr3xkhdfpvzs899v1yzwqqvwrkwzhv4k9r3063zvb") (f (quote (("xml" "pact_models/xml" "pact_matching/xml" "pact_mock_server/xml") ("tls" "pact_mock_server/tls") ("plugins" "pact_matching/plugins" "pact_mock_server/plugins") ("multipart" "pact_matching/multipart" "pact_mock_server/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls") ("datetime" "pact_models/datetime" "pact_matching/datetime" "pact_mock_server/datetime"))))))

