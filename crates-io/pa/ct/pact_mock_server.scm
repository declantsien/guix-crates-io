(define-module (crates-io pa ct pact_mock_server) #:use-module (crates-io))

(define-public crate-pact_mock_server-0.0.0 (c (n "pact_mock_server") (v "0.0.0") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.8.0") (k 0)) (d (n "itertools") (r "^0.4.11") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "rustful") (r "^0.8.0") (f (quote ("rustc_json_body"))) (k 0)) (d (n "uuid") (r "^0.2.2") (d #t) (k 0)))) (h "1xmkv8khw7mvs7qckp7q22517va39v14xgc2adwp1k22inalcyjn")))

(define-public crate-pact_mock_server-0.0.1 (c (n "pact_mock_server") (v "0.0.1") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0mxlsxhlw6xzfqrrgvr7vy5rsqazjwpjzkcr4n22l2iy9lkgh7ym")))

(define-public crate-pact_mock_server-0.1.0 (c (n "pact_mock_server") (v "0.1.0") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gnwrbgqhckvl6a1xjs6m9a38n5wimmyx71c049z4xm3ywrvd04j")))

(define-public crate-pact_mock_server-0.2.0 (c (n "pact_mock_server") (v "0.2.0") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1kwf0g7yqjgbsywbqzs6fyxjx735rfq606b1zqz5gv3almf9021g")))

(define-public crate-pact_mock_server-0.0.2 (c (n "pact_mock_server") (v "0.0.2") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ajzvik6ldjm04dp8cz9xrk548q0inq57gz7yxr7pgw9zhcgrfjh")))

(define-public crate-pact_mock_server-0.1.1 (c (n "pact_mock_server") (v "0.1.1") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.1.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1n8miw2jspivvdw3il1svggwxmd7y520ddmwbrdz4h8ph29nbahf")))

(define-public crate-pact_mock_server-0.2.1 (c (n "pact_mock_server") (v "0.2.1") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "008gn9mqplgcp4bvnn99dw912p3x0r11622qv4nzj7fhc0jm2giq")))

(define-public crate-pact_mock_server-0.2.2 (c (n "pact_mock_server") (v "0.2.2") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1pzhblssy9r4h23rm205adv0rva8bzfn62agknaw497qnplws7ng")))

(define-public crate-pact_mock_server-0.3.0 (c (n "pact_mock_server") (v "0.3.0") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "14w1ckryhafva7z17v0gz2xa5kqh9pj9vbkybnag7wcxy0vr3dkc")))

(define-public crate-pact_mock_server-0.3.1 (c (n "pact_mock_server") (v "0.3.1") (d (list (d (n "env_logger") (r "^0.3.2") (d #t) (k 0)) (d (n "expectest") (r "^0.5.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.4.15") (d #t) (k 0)) (d (n "lazy_static") (r "^0.1.15") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.5") (d #t) (k 0)) (d (n "maplit") (r "^0.1.3") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.2") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.2.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1x8cg9r7p3hiarmzyprj7zrajpvmh6fylv549rawf346ly3csaj4")))

(define-public crate-pact_mock_server-0.4.0 (c (n "pact_mock_server") (v "0.4.0") (d (list (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1v8a6d1djwabjy7l0irmik0pj6jn72xgcwb72a1hxbh1nsiyphww")))

(define-public crate-pact_mock_server-0.4.1 (c (n "pact_mock_server") (v "0.4.1") (d (list (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "hyper") (r "^0.9.7") (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "06qkw0971wnhcp18if8h3zy7xhr3kllf2skphqi5q1hh5adnycnp")))

(define-public crate-pact_mock_server-0.5.0 (c (n "pact_mock_server") (v "0.5.0") (d (list (d (n "bytes") (r "^0.4.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "p-macro") (r "^0.2.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0pvsfchbd7a2irm9rqm089r5qy0g21qkwyhd32rznnqn46606z7s")))

(define-public crate-pact_mock_server-0.5.1 (c (n "pact_mock_server") (v "0.5.1") (d (list (d (n "bytes") (r "^0.4.4") (d #t) (k 0)) (d (n "env_logger") (r "^0.4.3") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^0.2.8") (d #t) (k 0)) (d (n "libc") (r "^0.2.9") (d #t) (k 0)) (d (n "log") (r "^0.3.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0yz0kicwmmhj4cx4vzva0flv2h416g90wf0sz19h7c5id5w4ssf8")))

(define-public crate-pact_mock_server-0.6.0 (c (n "pact_mock_server") (v "0.6.0") (d (list (d (n "bytes") (r "^0.4.4") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "12fpap6zzc2h114yif8xx6pjmw682wp5khpycc8p6hwsk4sw2j4p")))

(define-public crate-pact_mock_server-0.6.1 (c (n "pact_mock_server") (v "0.6.1") (d (list (d (n "bytes") (r "^0.4.4") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ms9wbgxzgw9aayva8snixq9yg1967l2m6491rc3r8nzxg0hja5f")))

(define-public crate-pact_mock_server-0.6.2 (c (n "pact_mock_server") (v "0.6.2") (d (list (d (n "bytes") (r "^0.4.4") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^0.12") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.1.22") (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "0npsidqdm83a27d24i6rvs7qn58avr6qacg5rirnfflj8v8chlcz")))

(define-public crate-pact_mock_server-0.7.0 (c (n "pact_mock_server") (v "0.7.0") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.8") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^0.6") (f (quote ("v4"))) (d #t) (k 0)))) (h "194hc7mkmndcbgh2knl8c9pmaiplzygqyp4dyy625ayjikvpsb8v")))

(define-public crate-pact_mock_server-0.7.1 (c (n "pact_mock_server") (v "0.7.1") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1i0sqy6kfyxdq4f21miz3s9k5i45rynvi5gzfd19b6bi92858dj8")))

(define-public crate-pact_mock_server-0.7.2 (c (n "pact_mock_server") (v "0.7.2") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.6.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0halpknjkqmmn8gqi54g7vcnd1hsi4s5d5j8gis7ghqx15mpzgif")))

(define-public crate-pact_mock_server-0.7.3 (c (n "pact_mock_server") (v "0.7.3") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.5.11") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gvp312nvxygzlx7jfrmx7408xl45ww494zz04d3d6jsbr60nwhw")))

(define-public crate-pact_mock_server-0.7.4 (c (n "pact_mock_server") (v "0.7.4") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1yqbf3sz0jhn2lk23695js9c3xz0h56xibj55dzfhlx77ng5nr1c")))

(define-public crate-pact_mock_server-0.7.5 (c (n "pact_mock_server") (v "0.7.5") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.3") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1g7w877cmi0jl6557f439k4f11z7v3sdkskhqr747d9v3n707r2n")))

(define-public crate-pact_mock_server-0.7.6 (c (n "pact_mock_server") (v "0.7.6") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.6.5") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0pwhnqia7rhwiqb2w0fw3lwdxhkwzfx732f8m3whida1gzjgkxzn")))

(define-public crate-pact_mock_server-0.7.7 (c (n "pact_mock_server") (v "0.7.7") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.7.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g7w93j80xpd17hawc74kx23gx07l0fz0x2kck54i28fq3gp3ql6")))

(define-public crate-pact_mock_server-0.7.8 (c (n "pact_mock_server") (v "0.7.8") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.7.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0lgvk3z38x3r7bnvwcw3nkw7kw0ykfm1qlqkr4b4daky83gr4civ")))

(define-public crate-pact_mock_server-0.7.9 (c (n "pact_mock_server") (v "0.7.9") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "04wri4pbw6k3dm21gs8cy51nn7l38myvyyixxw1mdny6q2knca1g")))

(define-public crate-pact_mock_server-0.7.10 (c (n "pact_mock_server") (v "0.7.10") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1ss41znpmjsbbb8399qpg8ldw0ialiyrbwq8jpgg7pj400vgkzpz")))

(define-public crate-pact_mock_server-0.7.11 (c (n "pact_mock_server") (v "0.7.11") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1c7666v8rpp0fg9isj1vpv8qddkpngk1g52jvsqscj4rg89nh5jl")))

(define-public crate-pact_mock_server-0.7.12 (c (n "pact_mock_server") (v "0.7.12") (d (list (d (n "bytes") (r "^0.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.13") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.17.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^0.2.9") (f (quote ("rt-threaded" "macros"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.13.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0j0z2hbyn90cjcy8nhxhicbq3k0nrv065zm2sx2mr9dhhxb9bs6n")))

(define-public crate-pact_mock_server-0.7.13 (c (n "pact_mock_server") (v "0.7.13") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.7.1") (d #t) (k 2)) (d (n "expectest") (r "^0.9.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^0.4.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1zk5zjpy0lgynyz2pm0z43kb0q23cyq7iwwjr39fcr2a1dr85vkv")))

(define-public crate-pact_mock_server-0.7.14 (c (n "pact_mock_server") (v "0.7.14") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^0.1.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0kcpp4b2ghy3lsi9bj0isbr2qk70la9v25vg97fzfr6d4wkanhyw")))

(define-public crate-pact_mock_server-0.7.15 (c (n "pact_mock_server") (v "0.7.15") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1dcc04ax00373ddklm5765zz5p8n4r7raj2q81la135c8ix2cdp8")))

(define-public crate-pact_mock_server-0.7.16 (c (n "pact_mock_server") (v "0.7.16") (d (list (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.8.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0wvw1x4rgs751svhf69pcknjy9sy8r4gyj2fs2rnhy4rk8b8z354")))

(define-public crate-pact_mock_server-0.7.17 (c (n "pact_mock_server") (v "0.7.17") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.9") (d #t) (k 0)) (d (n "pact_models") (r "^0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (d #t) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g3s12dc6qpysnd58vmsp6l34q9i33bw763wfsyqv9rli5b2yaik")))

(define-public crate-pact_mock_server-0.7.18 (c (n "pact_mock_server") (v "0.7.18") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.9") (d #t) (k 0)) (d (n "pact_models") (r "^0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0rqjjmm90c3v60j4rsdblq5b7v12g89930giclifphkgxjxg92kx")))

(define-public crate-pact_mock_server-0.7.19 (c (n "pact_mock_server") (v "0.7.19") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.9") (d #t) (k 0)) (d (n "pact_models") (r "^0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1m907x5d4fac9q100miz1fqa07aly5m2ryqmgy92v7w0ldhpyq4r")))

(define-public crate-pact_mock_server-0.7.20 (c (n "pact_mock_server") (v "0.7.20") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.10") (d #t) (k 0)) (d (n "pact_models") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0aiga86jl5735jxgyhaa5i191dld9f31kfd2y21hxsbic9hqapi9")))

(define-public crate-pact_mock_server-0.8.0-beta.0 (c (n "pact_mock_server") (v "0.8.0-beta.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.0") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0g9hyiyma1yz8mmlwkj2hsyj8wlx44309kn0nlmad6g9av63llgv")))

(define-public crate-pact_mock_server-0.7.21 (c (n "pact_mock_server") (v "0.7.21") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^0.10") (d #t) (k 0)) (d (n "pact_models") (r "^0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1z2r59wqi4hywcv3j7c07qz08xb5z9g31n7qaka9wwpgcgmr62aq")))

(define-public crate-pact_mock_server-0.8.0-beta.1 (c (n "pact_mock_server") (v "0.8.0-beta.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.1") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1xfsa6pxlp6k24c59kn08ppngllm8zr7l7vw81xzxk7r4n0mk023")))

(define-public crate-pact_mock_server-0.8.0-beta.2 (c (n "pact_mock_server") (v "0.8.0-beta.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.4") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "00s41i5623b0m0w9bnwndfazfw2hxv2cvdn9jaj0skv6p64gqwim")))

(define-public crate-pact_mock_server-0.8.0-beta.3 (c (n "pact_mock_server") (v "0.8.0-beta.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.6") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.5") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "034vijmijm7xmldxr59i980zsia94h4pzd8n2p90b4v5s97xhj11")))

(define-public crate-pact_mock_server-0.8.0-beta.4 (c (n "pact_mock_server") (v "0.8.0-beta.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.7") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0-beta.4") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0-beta.6") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1j4nnk8fnbzrcdr6q2ivi411hks4j9il2gqfcs4bicw01diaa80d")))

(define-public crate-pact_mock_server-0.8.0 (c (n "pact_mock_server") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.8") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s3shmwwijgc4qhvyswfag2xg4sd19c4fr8lishyb6936nyp56sl")))

(define-public crate-pact_mock_server-0.8.1 (c (n "pact_mock_server") (v "0.8.1") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.9") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1vkh8zjjq7wq15q6my4w285fndcb5qbv4wbg8w0791z3l41mzsqa")))

(define-public crate-pact_mock_server-0.8.2 (c (n "pact_mock_server") (v "0.8.2") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.22.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.10") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.0") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.19.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.22.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1cnf36k5i6c92avs5v04d330b01sba82wmmsjrjvj136091fdjsa")))

(define-public crate-pact_mock_server-0.8.3 (c (n "pact_mock_server") (v "0.8.3") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.12") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.2") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1gp43hslqwx3p6y917dz8z93s25lnjz8az1kbz5dykybk5m1p6di")))

(define-public crate-pact_mock_server-0.8.4 (c (n "pact_mock_server") (v "0.8.4") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.14") (d #t) (k 0)) (d (n "pact_matching") (r "^0.11.5") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.2") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0fl8bfpqpc6d2d0bn3x32msw9gr98iia74j74jm2mk32r8wga560")))

(define-public crate-pact_mock_server-0.8.5 (c (n "pact_mock_server") (v "0.8.5") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.16") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.1") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.6") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.2") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "02wvhsnb2k9838afgwg3zg3df3514ljk2xncrjna2nx91s9jggwv")))

(define-public crate-pact_mock_server-0.8.6 (c (n "pact_mock_server") (v "0.8.6") (d (list (d (n "anyhow") (r "^1.0.40") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.17") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.2") (d #t) (k 0)) (d (n "pact_models") (r "^0.2.7") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.2") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.2.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wp6v49f5r21gz5dgfn58bvcl7isxm6vh7lxhisg6x1czjgdqhhs")))

(define-public crate-pact_mock_server-0.8.7 (c (n "pact_mock_server") (v "0.8.7") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.0.18") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1rvp63lv8nhyl6anwvyxakzxsw3vwc23w992kndd1k8zck6kri4a")))

(define-public crate-pact_mock_server-0.8.8 (c (n "pact_mock_server") (v "0.8.8") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.0") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.3") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0k5p47js0w0plliz7f8far9zs030fmsi8svcyqjq7zbx7hbxcil1")))

(define-public crate-pact_mock_server-0.8.9 (c (n "pact_mock_server") (v "0.8.9") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.3") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.5") (d #t) (k 0)) (d (n "pact_models") (r "^0.3.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1jp4xqkaxylzwjiq5p4gpw5lb6nd4cbwzwg9qcyfx3zjaw38yb0m")))

(define-public crate-pact_mock_server-0.8.10 (c (n "pact_mock_server") (v "0.8.10") (d (list (d (n "anyhow") (r "^1.0.55") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.8") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "=0.4.14") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.5") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.6") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fafhf3vsg1r9ygwp1b4fna6dfj3rypac31cvaaa2945cpi38cdx")))

(define-public crate-pact_mock_server-0.8.11 (c (n "pact_mock_server") (v "0.8.11") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.6") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.7") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "062p6hdnzkjfnckj2mdy69v67s7my56rl8z3fczib2wi5w89mdzx")))

(define-public crate-pact_mock_server-0.9.0 (c (n "pact_mock_server") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.7") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.7") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0p9mj15xnbvwshclk5faacvsvv7h1886ac8dw3kmy6r0vrlf2dqx")))

(define-public crate-pact_mock_server-0.9.1 (c (n "pact_mock_server") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.8") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.8") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "1prdrr4sir1cpf12fdm7mxncv9hhryc1bpsasnysmsnv9hwfbz7n")))

(define-public crate-pact_mock_server-0.9.2 (c (n "pact_mock_server") (v "0.9.2") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.9") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.10") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "=0.1.34") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.26") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "032l6cnkdllrjx94zsywk3qivpbnrfq2f38hgj63ncj5rkkwcw6j")))

(define-public crate-pact_mock_server-0.9.3 (c (n "pact_mock_server") (v "0.9.3") (d (list (d (n "anyhow") (r "^1.0.57") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.10") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.11") (d #t) (k 0)) (d (n "pact_models") (r "^0.4.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.10") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.4") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "=0.1.36") (d #t) (k 0)) (d (n "tracing-core") (r "=0.1.29") (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)) (d (n "uuid") (r "^1.1.2") (f (quote ("v4"))) (d #t) (k 0)))) (h "0p5wrvgh34vkwq21nwyhdlrvc3mdl1lf7w7hnyqhrkc5fqmkp1mr")))

(define-public crate-pact_mock_server-0.9.4 (c (n "pact_mock_server") (v "0.9.4") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hyper") (r "^0.14.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1.15") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.14") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.0") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "08bwgnr938pxzfdk0a0bqh9n2s8rqdl1v736f558a14wjn38fsid")))

(define-public crate-pact_mock_server-0.9.5 (c (n "pact_mock_server") (v "0.9.5") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hyper") (r "^0.14.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.1") (d #t) (k 0)) (d (n "pact_matching") (r "^0.12.15") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.1") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1g9j7i61wpixdx07csxk6a6kcxs91w4d2hpsblx0dzmql4ik4629")))

(define-public crate-pact_mock_server-0.9.6 (c (n "pact_mock_server") (v "0.9.6") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.9.1") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hyper") (r "^0.14.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.21.2") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1fcm6id6wcfzhd51yc2497a819jbf06ns0jfapyq28givc9l35c9")))

(define-public crate-pact_mock_server-0.9.7 (c (n "pact_mock_server") (v "0.9.7") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hyper") (r "^0.14.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.2.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.2") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "0hpqs9mlycv5xfr8ykwr15yqi5gmicqcprsjq180ygfsm0n9ldyw")))

(define-public crate-pact_mock_server-1.0.0 (c (n "pact_mock_server") (v "1.0.0") (d (list (d (n "anyhow") (r "^1.0.66") (d #t) (k 0)) (d (n "bytes") (r "^1.2.1") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "hyper") (r "^0.14.22") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.3.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.5") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.12") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.20.7") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.87") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.37") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.23.4") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.2.1") (f (quote ("v4"))) (d #t) (k 0)))) (h "1wwd5mja77hyf6057y35hlabbn8zrii3g0dljcn71fwz121nvx8s")))

(define-public crate-pact_mock_server-1.0.1 (c (n "pact_mock_server") (v "1.0.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.4.0") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.7") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.9") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1s8z00yp5zfwwrk9w7kxlm7gkd19yg66wznavz7kf4zwj5dnac07")))

(define-public crate-pact_mock_server-1.0.2 (c (n "pact_mock_server") (v "1.0.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "^0.4.2") (d #t) (k 0)) (d (n "pact_matching") (r "^1.0.8") (d #t) (k 0)) (d (n "pact_models") (r "^1.0.13") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1dss1cxhxvrgnjwd730138lshv8j5v4svlhq2fnb1r91j0bbangw")))

(define-public crate-pact_mock_server-1.1.0 (c (n "pact_mock_server") (v "1.1.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.4") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.2") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1gds7xar29pmc5gi3m5hllmvpy1kg6kih9an81vvzhgvfmxs5bns")))

(define-public crate-pact_mock_server-1.2.0 (c (n "pact_mock_server") (v "1.2.0") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.4") (d #t) (k 0)) (d (n "pact_matching") (r "~1.1.0") (d #t) (k 0)) (d (n "pact_models") (r "~1.1.4") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "10kcr4jrsxa9phaiahq8qzmr52gkzadqcaynivxif76faynqjz2k")))

(define-public crate-pact_mock_server-1.2.1 (c (n "pact_mock_server") (v "1.2.1") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.3") (k 0)) (d (n "pact_models") (r "~1.1.8") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "1m1di0bl349m1r1mbz02wx2gj2vqc9xyyqbjkq6yslman04m7jq7") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

(define-public crate-pact_mock_server-1.2.2 (c (n "pact_mock_server") (v "1.2.2") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.4") (k 0)) (d (n "pact_models") (r "~1.1.9") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0b54n43fji1shb22yv0n7kh393k2hj2igr1f2l11jd7pqbva2hrv") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

(define-public crate-pact_mock_server-1.2.3 (c (n "pact_mock_server") (v "1.2.3") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.4.5") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.5") (k 0)) (d (n "pact_models") (r "~1.1.11") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "01n5b3vpclk0py5k5f9v215n3grm8fi62j0xf3jpg1mni7n3rcbz") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

(define-public crate-pact_mock_server-1.2.4 (c (n "pact_mock_server") (v "1.2.4") (d (list (d (n "anyhow") (r "^1.0.70") (d #t) (k 0)) (d (n "bytes") (r "^1.4.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.10.0") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (d #t) (k 0)) (d (n "hyper") (r "^0.14.25") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.5.0") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.9") (k 0)) (d (n "pact_models") (r "~1.1.17") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.16") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.95") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.12") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "tokio") (r "^1.27.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.24.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.30") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.17") (d #t) (k 2)) (d (n "url") (r "^2.3.1") (d #t) (k 0)) (d (n "uuid") (r "^1.3.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "153vkdzdfbwp6xivj868753gszhl72cj013rr7y5l4kfk8ccdc4v") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

(define-public crate-pact_mock_server-1.2.5 (c (n "pact_mock_server") (v "1.2.5") (d (list (d (n "anyhow") (r "^1.0.75") (d #t) (k 0)) (d (n "bytes") (r "^1.5.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.29") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.5.1") (o #t) (k 0)) (d (n "pact_matching") (r "~1.1.10") (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.11.23") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "~0.21.10") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.193") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.108") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.51") (d #t) (k 0)) (d (n "tokio") (r "^1.35.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "~0.24.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.7.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "14nmyhcz1z1alhd4jv5dp9x208i04p6783q5z2d1v44qjcgg22hd") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

(define-public crate-pact_mock_server-1.2.6 (c (n "pact_mock_server") (v "1.2.6") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.6.0") (o #t) (k 0)) (d (n "pact_matching") (r "~1.2.0") (k 0)) (d (n "pact_models") (r "~1.1.18") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.12.3") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "~0.21.10") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "~0.24.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "12rsvsnnxgly25y9524knrzvvn5k4zir9jm2jsjh9qkm82llvcfj") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

(define-public crate-pact_mock_server-1.2.7 (c (n "pact_mock_server") (v "1.2.7") (d (list (d (n "anyhow") (r "^1.0.82") (d #t) (k 0)) (d (n "bytes") (r "^1.6.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.11.3") (d #t) (k 2)) (d (n "expectest") (r "^0.12.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "hyper") (r "^0.14.28") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.24.2") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pact-plugin-driver") (r "~0.6.1") (o #t) (k 0)) (d (n "pact_matching") (r "~1.2.2") (k 0)) (d (n "pact_models") (r "~1.2.0") (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "reqwest") (r "^0.12.3") (f (quote ("rustls-tls-native-roots" "blocking" "json"))) (k 2)) (d (n "rustls") (r "~0.21.10") (o #t) (d #t) (k 0)) (d (n "rustls-pemfile") (r "^1.0.4") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.115") (d #t) (k 0)) (d (n "test-env-log") (r "^0.2.8") (d #t) (k 2)) (d (n "test-log") (r "^0.2.15") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.58") (d #t) (k 0)) (d (n "tokio") (r "^1.37.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "~0.24.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1.32") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.18") (d #t) (k 2)) (d (n "url") (r "^2.5.0") (d #t) (k 0)) (d (n "uuid") (r "^1.8.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0mday138nr29a455ygzak1x23n93g5hl61fpj4xvmv2l15x5chzv") (f (quote (("multipart" "pact_matching/multipart") ("default" "datetime" "xml" "plugins" "multipart" "tls")))) (s 2) (e (quote (("xml" "pact_models/xml" "pact-plugin-driver?/xml" "pact_matching/xml") ("tls" "dep:hyper-rustls" "dep:rustls" "dep:rustls-pemfile" "dep:tokio-rustls") ("plugins" "dep:pact-plugin-driver" "pact_matching/plugins") ("datetime" "pact_models/datetime" "pact-plugin-driver?/datetime" "pact_matching/datetime"))))))

