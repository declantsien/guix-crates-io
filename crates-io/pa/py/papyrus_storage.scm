(define-module (crates-io pa py papyrus_storage) #:use-module (crates-io))

(define-public crate-papyrus_storage-0.0.1 (c (n "papyrus_storage") (v "0.0.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.0.0-rc1") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml" "yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r ">=0.1.5, <0.1.8") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.2.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0chhyx7439hpgsfhlx1ylldj61nkr0z653vv4xrifyhjh0pszjb5") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.0.2 (c (n "papyrus_storage") (v "0.0.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml" "yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r ">=0.1.5, <0.1.8") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "papyrus_config") (r "^0.0.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1s051l8ad9fnwplp7fqndjn4k76gwmpj2lshflkz8c4p2lwcfvxi") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.0.3 (c (n "papyrus_storage") (v "0.0.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml" "yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r ">=0.1.5, <0.1.8") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "papyrus_config") (r "^0.0.3") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.3.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1vdad2wzpvgm22b2ffisvl6ax7lpbj02m3h6yvwk57x8ylkaj2wi") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.0.4 (c (n "papyrus_storage") (v "0.0.4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml" "yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "papyrus_config") (r "^0.0.4") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.4.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "0yx0famwzyax7zfc2cdbgc7yx50s7nxyv7sl7j8kgkkjgfj8jqsd") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.0.5 (c (n "papyrus_storage") (v "0.0.5") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.2.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.2.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.2.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "papyrus_config") (r "^0.0.5") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.5.0-rc1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "15lbhzpvnqlgysm4sqpaw6gxmlark5hvrp0c362sj55mn093lrnl") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.1.1-alpha (c (n "papyrus_storage") (v "0.1.1-alpha") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml" "yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r ">=0.1.5, <0.1.8") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3.1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (d #t) (k 0)) (d (n "starknet_api") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "04f7w1qknn920054n318cgvx298qcgp1876d8ba9sqsp7zxmqkq3") (f (quote (("testing" "tempfile" "starknet_api/testing" "rand" "rand_chacha") ("default" "starknet_api"))))))

(define-public crate-papyrus_storage-0.1.2-alpha (c (n "papyrus_storage") (v "0.1.2-alpha") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.1.0-rc0") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml" "yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r ">=0.1.5, <0.1.8") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order" "preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.1.3") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (d #t) (k 0)))) (h "1fi0mjmj020wdwjsgzk22z4j3v0s4q021a7xs6h4i0d1052psw1c") (f (quote (("testing" "tempfile") ("default" "starknet_api"))))))

(define-public crate-papyrus_storage-0.2.0-rc1 (c (n "papyrus_storage") (v "0.2.0-rc1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.3.1") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.3.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.3.1") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.0-rc1") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.0-rc1") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc1") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "1g0q2hmfbvp0nk3q8qf7rfnmflmqbz0xp7h2nbwxiyphh3h4im3y") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.2.0-rc2 (c (n "papyrus_storage") (v "0.2.0-rc2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc2") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.0-rc2") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.0-rc2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc2") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0ckx98275k0nck793z1q8bkn2zjgjkfrj8z9dmpmf5iqvmpwqkk5") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.2.0-rc3 (c (n "papyrus_storage") (v "0.2.0-rc3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc5") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.0-rc3") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.0-rc3") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc3") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "1nirpxjw4zh7797pfmjx5v85kj3ldkddmdddwinqzcj67q00275j") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.2.0-rc4 (c (n "papyrus_storage") (v "0.2.0-rc4") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0-rc6") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.0-rc4") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.0-rc4") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0-rc3") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "024qhspjgidbnxsnhvl57axyrqwph56b9f2yjflycb45a1c7isfy") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.2.0 (c (n "papyrus_storage") (v "0.2.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.0") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0mpbbwj5pf0jwpl305v4824ll1i0xwc4vzgqnqla15a1vnrrg6gn") (f (quote (("testing" "tempfile")))) (y #t)))

(define-public crate-papyrus_storage-0.2.1 (c (n "papyrus_storage") (v "0.2.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.1") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.1") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0h5nd6bb088zwsg37529xxc9sixmvwzhznwlvhv65098r1l03bfk") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.2.2 (c (n "papyrus_storage") (v "0.2.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.2") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0s9mmfrb536vslzvmjl47qxbqx4413ryh9ybn45irqh5xjjr93aj") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.2.2-patch.0 (c (n "papyrus_storage") (v "0.2.2-patch.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.4.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.4.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.2.2-patch.0") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.2.2-patch.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "^3.5.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.6.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "04wqwfw5hxld68rf0dxlq49jikg63wglq666qfvp9nlb9v8yvklc") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0-dev.0 (c (n "papyrus_storage") (v "0.3.0-dev.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "=2.5.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "=2.5.0-dev.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "=2.5.0-dev.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0-dev.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.7.0-dev.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "1l50p57xlqhn73yk8y8k2v0wx3hxnsms7k5vn2crzjsxii8yyxm1") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0-dev.1 (c (n "papyrus_storage") (v "0.3.0-dev.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.5.0-dev.1") (d #t) (k 0)) (d (n "cairo-lang-starknet") (r "^2.5.0-dev.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.5.0-dev.1") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0-dev.1") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.7.0-dev.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "1nxpykjn9sjzif2qkfi86ywkb08qp4rhcv0ri9kwasnc6g5418iy") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0-rc.0 (c (n "papyrus_storage") (v "0.3.0-rc.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "=2.6.0-rc.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "=2.6.0-rc.0") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "=2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "=2.6.0-rc.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0-rc.0") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0-rc.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "013djkss2h0paczf1yc296p65jn7kpnn1wvqm9ajy5c0hihv9sc2") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0-rc.1 (c (n "papyrus_storage") (v "0.3.0-rc.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.0") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0-rc.1") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0-rc.1") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0myn8dcbg3y4vhlra9mhj2bj0plw195pn0123wk1qw43xv4qdcpv") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0-rc.2 (c (n "papyrus_storage") (v "0.3.0-rc.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0-rc.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.8.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "04kngbmvzz9fdqacqh49yihzgl0iy4kbdhp4a9mvggl4izqdz3lk") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0-rc.3 (c (n "papyrus_storage") (v "0.3.0-rc.3") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0-rc.1") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0-rc.1") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0-rc.3") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0-dev.3") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "1ddr33rfka732a3kmswwfra1dnqy8yglkl10rw9ixlhnjwfymb9j") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.3.0 (c (n "papyrus_storage") (v "0.3.0") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.3.0") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.3.0") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.10.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0hgz3lyhrrpf1bpfpnzgrsln9zy195mflfi507bgy1ap3b64d3hm") (f (quote (("testing" "tempfile"))))))

(define-public crate-papyrus_storage-0.4.0-dev.1 (c (n "papyrus_storage") (v "0.4.0-dev.1") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_common") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "papyrus_config") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.4.0-dev.1") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.12.0-dev.0") (d #t) (k 0)) (d (n "statistical") (r "^1.0.0") (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "1jkjg7b09hb410rbgp7f7xwxx2byzyjrb55k9dpm8jydq1pbhn6j") (f (quote (("testing" "tempfile") ("document_calls" "lazy_static"))))))

(define-public crate-papyrus_storage-0.4.0-dev.2 (c (n "papyrus_storage") (v "0.4.0-dev.2") (d (list (d (n "assert_matches") (r "^1.5.0") (d #t) (k 2)) (d (n "byteorder") (r "^1.4.3") (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec"))) (d #t) (k 0)) (d (n "cairo-lang-casm") (r "^2.6.0") (f (quote ("parity-scale-codec" "schemars"))) (d #t) (k 2)) (d (n "cairo-lang-starknet-classes") (r "^2.6.0") (d #t) (k 0)) (d (n "cairo-lang-utils") (r "^2.6.0") (d #t) (k 0)) (d (n "camelpaste") (r "^0.1.0") (d #t) (k 2)) (d (n "clap") (r "^4.3.10") (o #t) (d #t) (k 0)) (d (n "flate2") (r "^1.0.24") (d #t) (k 0)) (d (n "human_bytes") (r "^0.4.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "insta") (r "^1.29.0") (f (quote ("yaml"))) (d #t) (k 2)) (d (n "integer-encoding") (r "^3.0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (o #t) (d #t) (k 0)) (d (n "libmdbx") (r "^0.3.5") (f (quote ("lifetimed-bytes"))) (d #t) (k 0)) (d (n "memmap2") (r "^0.8.0") (d #t) (k 0)) (d (n "metrics") (r "^0.21.0") (d #t) (k 0)) (d (n "metrics-exporter-prometheus") (r "^0.12.1") (d #t) (k 2)) (d (n "num-bigint") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 2)) (d (n "page_size") (r "^0.6.0") (d #t) (k 0)) (d (n "papyrus_common") (r "^0.4.0-dev.2") (o #t) (d #t) (k 0)) (d (n "papyrus_config") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "papyrus_proc_macros") (r "^0.4.0-dev.2") (d #t) (k 0)) (d (n "parity-scale-codec") (r "=3.6.5") (d #t) (k 0)) (d (n "paste") (r "^1.0.9") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "primitive-types") (r "^0.12.1") (d #t) (k 0)) (d (n "prometheus-parse") (r "^0.2.4") (d #t) (k 2)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rand_chacha") (r "^0.3.1") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serde") (r "^1.0.130") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.81") (f (quote ("arbitrary_precision"))) (d #t) (k 0)) (d (n "starknet_api") (r "^0.12.0-dev.1") (d #t) (k 0)) (d (n "statistical") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.3.0") (d #t) (k 2)) (d (n "test-case") (r "^3.2.1") (d #t) (k 2)) (d (n "test-log") (r "^0.2.14") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "tokio") (r "^1.18.2") (f (quote ("full" "sync"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("log"))) (d #t) (k 0)) (d (n "validator") (r "^0.12") (f (quote ("derive"))) (d #t) (k 0)))) (h "0yimcnaxgpx93nj1pvqksvydxfffaansj4a29s07rv2yp1b0f58m") (f (quote (("testing" "tempfile") ("document_calls" "lazy_static" "papyrus_common"))))))

