(define-module (crates-io pa yl payload) #:use-module (crates-io))

(define-public crate-payload-0.1.0-alpha.1 (c (n "payload") (v "0.1.0-alpha.1") (d (list (d (n "color-eyre") (r "^0.6.1") (d #t) (k 2)) (d (n "target-lexicon") (r "^0.12.4") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("parsing"))) (d #t) (k 0)))) (h "1af0ip1qdyh5fym6kg062izg81vrsxa2bb0nk08c47b3kl457hab")))

(define-public crate-payload-0.1.0-alpha.2 (c (n "payload") (v "0.1.0-alpha.2") (d (list (d (n "color-eyre") (r "^0.6.1") (d #t) (k 2)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("parsing"))) (d #t) (k 0)))) (h "0clggxmdnxi5kxymddcs1ady66zpw94jcbjcqrjjriascknxxb3a") (f (quote (("default" "serde")))) (s 2) (e (quote (("serde" "dep:serde" "dep:serde_json" "dep:serde_with"))))))

(define-public crate-payload-0.1.0-alpha.3 (c (n "payload") (v "0.1.0-alpha.3") (d (list (d (n "color-eyre") (r "^0.6.1") (d #t) (k 2)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^1.14.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "target-lexicon-macros") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "which") (r "^4.2.5") (d #t) (k 0)))) (h "1498xc7y36rrlgb05sac4mrpb2xyky63xq9kvyfrv824d720wpvl") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "dep:serde_with"))))))

(define-public crate-payload-0.1.0-alpha.4 (c (n "payload") (v "0.1.0-alpha.4") (d (list (d (n "color-eyre") (r "^0.6.1") (d #t) (k 2)) (d (n "semver") (r "^1.0.12") (d #t) (k 0)) (d (n "serde") (r "^1.0.137") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.82") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^2.0.1") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "target-lexicon-macros") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.31") (d #t) (k 0)) (d (n "time") (r "^0.3.11") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "which") (r "^4.2.5") (d #t) (k 0)))) (h "1zk4wncwyi7ayjsx883bwdpa9v3vvpxy1ygqwj7d3vgr0jqhjrvh") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "dep:serde_with"))))))

(define-public crate-payload-0.1.0 (c (n "payload") (v "0.1.0") (d (list (d (n "color-eyre") (r "^0.6.2") (d #t) (k 2)) (d (n "semver") (r "^1.0.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (o #t) (d #t) (k 0)) (d (n "serde_with") (r "^3.0.0") (o #t) (d #t) (k 0)) (d (n "target-lexicon") (r "^0.12.7") (f (quote ("std"))) (d #t) (k 0)) (d (n "target-lexicon-macros") (r "^0.1.0-alpha.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.40") (d #t) (k 0)) (d (n "time") (r "^0.3.21") (f (quote ("parsing"))) (d #t) (k 0)) (d (n "which") (r "^4.4.0") (d #t) (k 0)))) (h "0mgc6bgi7in95sbjps5sjl0cz4jnlh4p1932wcbwjmfwgz0bji5g") (s 2) (e (quote (("json" "dep:serde" "dep:serde_json" "dep:serde_with"))))))

