(define-module (crates-io pa ri parity-plonk) #:use-module (crates-io))

(define-public crate-parity-plonk-0.0.1 (c (n "parity-plonk") (v "0.0.1") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.8") (f (quote ("groups" "pairings" "endo"))) (k 0)) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.10") (k 0)) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1f9wlqvayq0sgq5hpjzc5xyyprlvnnp2czj0lb36h9vgzzj5smgd") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc")))) (y #t)))

(define-public crate-parity-plonk-0.0.2 (c (n "parity-plonk") (v "0.0.2") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.1") (f (quote ("groups" "pairings" "endo"))) (k 0) (p "plonk-bls12_381")) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.1") (k 0) (p "plonk-jubjub")) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "parity-scale-codec") (r "^2.0") (f (quote ("derive"))) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "0qqzy2szr103z6rrf16115gf00l11n9jmw40xcj7vqrdhlys2818") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc")))) (y #t)))

(define-public crate-parity-plonk-0.1.0 (c (n "parity-plonk") (v "0.1.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.1") (f (quote ("groups" "pairings" "endo"))) (k 0) (p "plonk-bls12_381")) (d (n "dusk-bytes") (r "^0.1") (d #t) (k 0)) (d (n "dusk-jubjub") (r "^0.1") (k 0) (p "plonk-jubjub")) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "parity-scale-codec") (r "^2.0") (f (quote ("derive"))) (k 0)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rayon") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1jw21fzzaxijh40flrh7pn46mvi4f26crqrbx9c9kiw00y66ljx8") (f (quote (("trace-print" "trace") ("trace") ("std" "rand_core/std" "dusk-bls12_381/default" "dusk-jubjub/default" "itertools/default" "hashbrown/default" "alloc" "rayon") ("default" "std") ("canon" "dusk-bls12_381/canon" "dusk-jubjub/canon" "canonical" "canonical_derive") ("alloc" "dusk-bls12_381/alloc")))) (y #t)))

(define-public crate-parity-plonk-0.2.0 (c (n "parity-plonk") (v "0.2.0") (d (list (d (n "canonical") (r "^0.6") (o #t) (k 0)) (d (n "canonical_derive") (r "^0.6") (o #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "dusk-bls12_381") (r "^0.2") (k 0) (p "plonk-bls12_381")) (d (n "dusk-bytes") (r "^0.1") (k 0)) (d (n "dusk-jubjub") (r "^0.2") (k 0) (p "plonk-jubjub")) (d (n "hashbrown") (r "^0.9") (f (quote ("ahash"))) (k 0)) (d (n "itertools") (r "^0.9") (k 0)) (d (n "merlin") (r "^3.0") (k 0)) (d (n "parity-scale-codec") (r "^2.0") (f (quote ("derive"))) (k 0)) (d (n "rand") (r "^0.8") (k 2)) (d (n "rand_core") (r "^0.6") (k 0)) (d (n "rand_xorshift") (r "^0.1") (k 2) (p "parity_rand_xorshift")) (d (n "serde") (r "^1.0.125") (f (quote ("derive"))) (k 0)) (d (n "sp-std") (r "^3.0.0") (k 0)) (d (n "tempdir") (r "^0.3") (d #t) (k 2)))) (h "1fkyhgcylbbhhf0nvmzwy7n16qixnfp93lrvgcr51kfik243mjya") (y #t)))

