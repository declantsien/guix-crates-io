(define-module (crates-io pa ri parity-util-mem) #:use-module (crates-io))

(define-public crate-parity-util-mem-0.1.0 (c (n "parity-util-mem") (v "0.1.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "clear_on_drop") (r "^0.2") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "elastic-array") (r "^0") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "malloc_size_of_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1haxm1547c6vcb9ck58z0cjwa804i5sqlnnbap5y0q910li0zs49") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "elastic-array" "parking_lot") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls"))))))

(define-public crate-parity-util-mem-0.2.0 (c (n "parity-util-mem") (v "0.2.0") (d (list (d (n "cfg-if") (r "^0.1.6") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "elastic-array") (r "^0") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.1") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "malloc_size_of_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.4") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1p617sm6qr7r4ygwgp28v9rzaigryfmcr0ahr1hbnggrrhvmc072") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "elastic-array" "parking_lot") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls"))))))

(define-public crate-parity-util-mem-0.2.1 (c (n "parity-util-mem") (v "0.2.1") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "elastic-array") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "malloc_size_of_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0p7qx2h85b2k351m16n1d98l2y5fi9fy82fc5nlywsvqkzrr602p") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "elastic-array" "parking_lot") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls"))))))

(define-public crate-parity-util-mem-0.3.0 (c (n "parity-util-mem") (v "0.3.0") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "malloc_size_of_derive") (r "^0.1.1") (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1ydkcx3d06hkbgql41qxi4l7axf5pmk7kxhyvpyibmn4c9gdhx41") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "parking_lot" "smallvec") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls"))))))

(define-public crate-parity-util-mem-0.4.0 (c (n "parity-util-mem") (v "0.4.0") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "014nsc4k0l8jmikc3lmj0bpqx96nczrfyidayai0v7b6fps9zc5i") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "smallvec") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown"))))))

(define-public crate-parity-util-mem-0.4.1 (c (n "parity-util-mem") (v "0.4.1") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1d2r93jk65v2yjy25332x9zlsb7wb0b39fr0sjxfaj5hai3dh3ch") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec"))))))

(define-public crate-parity-util-mem-0.4.2 (c (n "parity-util-mem") (v "0.4.2") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.6") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0nwahdisfv2qqxk2s1305ra67scvf6yv6i1im5d8srl84m6lxc01") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types"))))))

(define-public crate-parity-util-mem-0.5.0 (c (n "parity-util-mem") (v "0.5.0") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.6") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1jz5m4x62j9z140fp42x22npschd64ygcri1h0dvfna1ml6ys9jk") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types"))))))

(define-public crate-parity-util-mem-0.5.1 (c (n "parity-util-mem") (v "0.5.1") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc-sys") (r "^0.1.6") (o #t) (d #t) (k 0)) (d (n "mimallocator") (r "^0.1.3") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.6") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0sj0j786kjkw42k797c1p5pah7426ls9h04ndrvwdxgq1gj7c57g") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimallocator" "mimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types"))))))

(define-public crate-parity-util-mem-0.5.2 (c (n "parity-util-mem") (v "0.5.2") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.6") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1map5nl6bdr9qy0agsc8zk6a1anig7rdryc8wsd9ncv7hjbvqi4k") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types"))))))

(define-public crate-parity-util-mem-0.6.0 (c (n "parity-util-mem") (v "0.6.0") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.7") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1i9jjmjsfp665kn6gdx2cyc3wwbhplyfdn8rm2k23sp54rgpahkf") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types"))))))

(define-public crate-parity-util-mem-0.6.1 (c (n "parity-util-mem") (v "0.6.1") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.7") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "071n087hv89cswrlg8mcsmadmkxb96i1vmyiji4ahg4scj1javic") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.7.0 (c (n "parity-util-mem") (v "0.7.0") (d (list (d (n "cfg-if") (r "^0.1.10") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.1.3") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.1.3") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.7") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0p0gvnqcjk7wbd983g92d1vlcnxpyq1b311l3374kv3alcgzjzr9") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.8.0 (c (n "parity-util-mem") (v "0.8.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.8") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "09xwf5hkzygprjg8891hrrxyzfzhl62h093aydxi55sqn1fg25wg") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.9.0 (c (n "parity-util-mem") (v "0.9.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.9") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0hkfj15f0h946idm9nacbclancxl5sc93qrpz7rgkn32irmqqjk6") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.10.0 (c (n "parity-util-mem") (v "0.10.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0mw4kvq9zi9297l325gmzi20lnkf926ibgav8fpmrfb9xjng3mks") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.10.1 (c (n "parity-util-mem") (v "0.10.1") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "jemalloc-ctl") (r "^0.3.3") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "jemallocator") (r "^0.3.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0ppfys0s1b30ash0lp5m95f41379i02xb16k0r82hp2l1vsxlylz") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "jemallocator" "jemalloc-ctl") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.10.2 (c (n "parity-util-mem") (v "0.10.2") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.10") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "tikv-jemalloc-ctl") (r "^0.4.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tikv-jemallocator") (r "^0.4.1") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "0w27fzmah07j4mgv53afx799p97wr4635dmqqv5pjqa4d7hv8k3g") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "tikv-jemallocator" "tikv-jemalloc-ctl") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates")))

(define-public crate-parity-util-mem-0.11.0 (c (n "parity-util-mem") (v "0.11.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.11") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "tikv-jemalloc-ctl") (r "^0.4.2") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tikv-jemallocator") (r "^0.4.1") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "wee_alloc") (r "^0.4.5") (o #t) (d #t) (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "13sssdxpv45l7qwfm7yw45d6hi56ag1cldph4j0i8lnk939629f3") (f (quote (("weealloc-global" "wee_alloc" "estimate-heapsize") ("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "tikv-jemallocator" "tikv-jemalloc-ctl") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates") (r "1.56.1")))

(define-public crate-parity-util-mem-0.12.0 (c (n "parity-util-mem") (v "0.12.0") (d (list (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "dlmalloc") (r "^0.2.1") (f (quote ("global"))) (o #t) (d #t) (k 0)) (d (n "ethereum-types") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "impl-trait-for-tuples") (r "^0.2.0") (d #t) (k 0)) (d (n "libmimalloc-sys") (r "^0.1.14") (o #t) (d #t) (k 0)) (d (n "lru") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "mimalloc") (r "^0.1.18") (o #t) (d #t) (k 0)) (d (n "parity-util-mem-derive") (r "^0.1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "primitive-types") (r "^0.12") (o #t) (k 0)) (d (n "smallvec") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "tikv-jemalloc-ctl") (r "^0.5.0") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "tikv-jemallocator") (r "^0.5.0") (o #t) (d #t) (t "cfg(not(target_os = \"windows\"))") (k 0)) (d (n "winapi") (r "^0.3.8") (f (quote ("heapapi"))) (d #t) (t "cfg(target_os = \"windows\")") (k 0)))) (h "1y78s61348wh1y5lp568h8is39grl6jsph01c0czk9sw9x7w6chd") (f (quote (("std" "parking_lot") ("mimalloc-global" "mimalloc" "libmimalloc-sys") ("jemalloc-global" "tikv-jemallocator" "tikv-jemalloc-ctl") ("ethereum-impls" "ethereum-types" "primitive-types") ("estimate-heapsize") ("dlmalloc-global" "dlmalloc" "estimate-heapsize") ("default" "std" "ethereum-impls" "lru" "hashbrown" "smallvec" "primitive-types")))) (l "parity-util-mem-ban-duplicates") (r "1.56.1")))

