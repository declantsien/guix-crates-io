(define-module (crates-io tf -d tf-demo-parser) #:use-module (crates-io))

(define-public crate-tf-demo-parser-0.1.0 (c (n "tf-demo-parser") (v "0.1.0") (d (list (d (n "better-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.7") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "err-derive") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "1kr3c71v2a351bp0289zgd36h03y2d0l6aa744cx92i4d0543zdf")))

(define-public crate-tf-demo-parser-0.2.0 (c (n "tf-demo-parser") (v "0.2.0") (d (list (d (n "better-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "err-derive") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "04qparjz5l8mbrrxpkdp5yy7ahrsnbrnw4483kxyjvh36k4wqny5")))

(define-public crate-tf-demo-parser-0.2.1 (c (n "tf-demo-parser") (v "0.2.1") (d (list (d (n "better-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8.1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.6") (d #t) (k 0)) (d (n "err-derive") (r "^0.2") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.4") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^0.2") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "1g30y6b1pq7l6ir3mdcixccl4v4ggw0awl9jd2rfyi697agrxbax")))

(define-public crate-tf-demo-parser-0.2.2 (c (n "tf-demo-parser") (v "0.2.2") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8.1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "19874y2bp4kflji6908qvfc90rqrxc1qgbx5qq4kpcaglgj1kzpl")))

(define-public crate-tf-demo-parser-0.2.3 (c (n "tf-demo-parser") (v "0.2.3") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8.1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "092mcw56xp3g6ghd2bis3zd4ra0mv2b3nghhc5iz277490dnvdyp")))

(define-public crate-tf-demo-parser-0.2.4 (c (n "tf-demo-parser") (v "0.2.4") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8.1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "0sxamdgimh4a6l7bf5ds89isp10dmxpn8rifk5p9hlv99mmv0zf1")))

(define-public crate-tf-demo-parser-0.2.5 (c (n "tf-demo-parser") (v "0.2.5") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8.1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "08adskgz1jizhlq070lgdmgii6l3sp2j35wykz39smfg2if5wm62")))

(define-public crate-tf-demo-parser-0.2.6 (c (n "tf-demo-parser") (v "0.2.6") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.8.1") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1.0") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "test-case") (r "^1.0.0") (d #t) (k 2)))) (h "000naikay8i75y5v88ydd74xbhk20am1lwi02rly5ilsq01g95bg")))

(define-public crate-tf-demo-parser-0.3.0 (c (n "tf-demo-parser") (v "0.3.0") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10") (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1") (d #t) (k 0)) (d (n "test-case") (r "^1") (d #t) (k 2)))) (h "0jrczxyhyrrirv41hqzjgwwhgxq8x5njnk38ka4yck82qg4bm4qa")))

(define-public crate-tf-demo-parser-0.3.1 (c (n "tf-demo-parser") (v "0.3.1") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1") (d #t) (k 0)) (d (n "test-case") (r "^1") (d #t) (k 2)))) (h "0vk29xi7myg7rqpx4pgpc668kjkznzhx6b93ncp52y9189nddjvf")))

(define-public crate-tf-demo-parser-0.3.2 (c (n "tf-demo-parser") (v "0.3.2") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1") (d #t) (k 0)) (d (n "test-case") (r "^1") (d #t) (k 2)))) (h "0zhnprawnbpvji8k2qrzm94i2vphpfhjbvfc6pazcqm8gldns67b") (f (quote (("schema" "schemars" "bitbuffer/schemars"))))))

(define-public crate-tf-demo-parser-0.3.3 (c (n "tf-demo-parser") (v "0.3.3") (d (list (d (n "better-panic") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1") (d #t) (k 0)) (d (n "test-case") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.2") (d #t) (k 0)))) (h "1icxlxff8r6a2i4f7lysyb2q7g40j4zr8mhnjzp5xw7syvfxjlha") (f (quote (("schema" "schemars" "bitbuffer/schemars"))))))

(define-public crate-tf-demo-parser-0.4.0 (c (n "tf-demo-parser") (v "0.4.0") (d (list (d (n "better-panic") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "enumflags2") (r "^0.7") (f (quote ("serde"))) (d #t) (k 0)) (d (n "err-derive") (r "^0.3") (d #t) (k 0)) (d (n "fnv") (r "^1") (d #t) (k 0)) (d (n "iai") (r "^0.1") (d #t) (k 2)) (d (n "jemallocator") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1") (d #t) (k 0)) (d (n "no-panic") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "num_enum") (r "^0.5") (d #t) (k 0)) (d (n "parse-display") (r "^0.5") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "schemars") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1") (d #t) (k 0)) (d (n "snap") (r "^1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1") (d #t) (k 0)) (d (n "test-case") (r "^1") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 0)))) (h "1dz2511fvjcwjizznjhmjhqamxrhc2zcirqnp92c7nw88fnfhqmb") (f (quote (("schema" "schemars" "bitbuffer/schemars"))))))

(define-public crate-tf-demo-parser-0.5.0 (c (n "tf-demo-parser") (v "0.5.0") (d (list (d (n "better-panic") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "err-derive") (r "^0.3.1") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1.2") (d #t) (k 0)) (d (n "no-panic") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.10") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1.0.0") (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)))) (h "1abxi30cpml5ylhyvma1r27b5j4qpfhq118f42wy3jbnswy2scpq") (f (quote (("trace" "tracing" "tracing-subscriber") ("schema" "schemars" "bitbuffer/schemars"))))))

(define-public crate-tf-demo-parser-0.5.1 (c (n "tf-demo-parser") (v "0.5.1") (d (list (d (n "Inflector") (r "^0.11") (o #t) (k 0)) (d (n "better-panic") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "bitbuffer") (r "^0.10.9") (f (quote ("serde"))) (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "enumflags2") (r "^0.7.8") (f (quote ("serde"))) (d #t) (k 0)) (d (n "err-derive") (r "^0.3.1") (d #t) (k 0)) (d (n "fnv") (r "^1.0.7") (d #t) (k 0)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.34.0") (f (quote ("json"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10.5") (d #t) (k 0)) (d (n "jemallocator") (r "^0.5.0") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (o #t) (d #t) (k 0)) (d (n "main_error") (r "^0.1.2") (d #t) (k 0)) (d (n "no-panic") (r "^0.1.17") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2.15") (d #t) (k 0)) (d (n "num_enum") (r "^0.5.7") (d #t) (k 0)) (d (n "parse-display") (r "^0.8.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.3.0") (d #t) (k 2)) (d (n "prettyplease") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "proc-macro2") (r "^1") (o #t) (d #t) (k 0)) (d (n "quote") (r "^1") (o #t) (d #t) (k 0)) (d (n "schemars") (r "^0.8.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "serde_repr") (r "^0.1.10") (d #t) (k 0)) (d (n "snap") (r "^1.1.0") (d #t) (k 0)) (d (n "steamid-ng") (r "^1.0.0") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("full"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (o #t) (d #t) (k 0)) (d (n "test-case") (r "^2.2.2") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.16") (f (quote ("env-filter"))) (o #t) (d #t) (k 0)))) (h "1vqh8jnnqbz0wq7pgv5qbdcihh5y3x2azbwj3lh7l4y5vbhn8zy7") (f (quote (("trace" "tracing" "tracing-subscriber") ("schema" "schemars" "bitbuffer/schemars") ("codegen" "better-panic" "quote" "syn" "Inflector" "proc-macro2" "tempfile" "lazy_static" "prettyplease"))))))

