(define-module (crates-io tf _p tf_platform_youtube) #:use-module (crates-io))

(define-public crate-tf_platform_youtube-0.1.1 (c (n "tf_platform_youtube") (v "0.1.1") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.23") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.10") (d #t) (k 2)) (d (n "mockito") (r "^0.30") (d #t) (k 2)) (d (n "piped") (r "^0.0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.1") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.1") (d #t) (k 0)) (d (n "tokio") (r "^1.9") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "1cxk33yjvchk9q0280bh4wfpqc9dsx8w1k1q1nicip2nmq756j17")))

(define-public crate-tf_platform_youtube-0.1.2 (c (n "tf_platform_youtube") (v "0.1.2") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "piped") (r "^0.0.1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.2") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "1rnahgbdpg27744rzb7xfnp17nsgvgpy6xkyyhf1i3kfdspcvn55")))

(define-public crate-tf_platform_youtube-0.1.3 (c (n "tf_platform_youtube") (v "0.1.3") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "piped") (r "^0.0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.2") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "0r1px221x9cwgbwy5lv695m6mg4h2vfgznw3xnd655hf55bxbrmp")))

(define-public crate-tf_platform_youtube-0.1.4 (c (n "tf_platform_youtube") (v "0.1.4") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "piped") (r "^0.0.2") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.2") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "1an2ixagm0p8hbp92s4rp252b9fbjis69kp43275v0h1cc8a13g3")))

(define-public crate-tf_platform_youtube-0.1.5 (c (n "tf_platform_youtube") (v "0.1.5") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "piped") (r "^0.0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.3") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "03xn0yb6f8b0xvhhsm4hscmm7vcdbm71bgyxdyi4v6nv1q6m5n98")))

(define-public crate-tf_platform_youtube-0.1.6 (c (n "tf_platform_youtube") (v "0.1.6") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "piped") (r "^0.0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.3") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.2") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "13bc5g19prf9wydryyn0m43rwdw395pr9f5aqi377gz6yv8936av")))

(define-public crate-tf_platform_youtube-0.1.7 (c (n "tf_platform_youtube") (v "0.1.7") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "image") (r "^0.24") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "mockall") (r "^0.11") (d #t) (k 2)) (d (n "mockito") (r "^0.31") (d #t) (k 2)) (d (n "piped") (r "^0.0.3") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "regex") (r "^1.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("rustls-tls"))) (k 0)) (d (n "tf_core") (r "^0.1.4") (d #t) (k 0)) (d (n "tf_utils") (r "^0.1.3") (d #t) (k 0)) (d (n "tokio") (r "^1.29") (f (quote ("macros"))) (d #t) (k 2)) (d (n "webp") (r "^0.2") (d #t) (k 0)))) (h "13nga15i7f6z80n2l3c2vpd6f3c03jqijnlnmsd00v1j48gqk2ds")))

