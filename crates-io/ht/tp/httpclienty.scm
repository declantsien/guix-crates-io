(define-module (crates-io ht tp httpclienty) #:use-module (crates-io))

(define-public crate-httpclienty-0.1.0 (c (n "httpclienty") (v "0.1.0") (d (list (d (n "bstr") (r "^1.0") (f (quote ("std"))) (k 0)) (d (n "buildinfy") (r "^0.1.4") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http-body-util") (r "^0.1") (d #t) (k 0)) (d (n "hyper") (r "^1.0") (f (quote ("client" "http1"))) (d #t) (k 0)) (d (n "hyper-util") (r "^0.1") (f (quote ("client-legacy" "http1" "tokio"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "miniz_oxide") (r "^0.7") (d #t) (k 0)) (d (n "rustls-native-certs") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("signal" "rt-multi-thread" "macros" "io-util" "parking_lot" "time" "test-util"))) (d #t) (k 0)) (d (n "tokio-rustls") (r "^0.26") (f (quote ("logging" "tls12" "ring"))) (o #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)) (d (n "tokio-util") (r "^0.7") (f (quote ("codec"))) (d #t) (k 0)))) (h "1a1ijpmy282c41bsah2vydagcwmxbarfv5hsm95xvwcjmwda8l3a") (f (quote (("tls" "tokio-rustls" "rustls-native-certs") ("server" "hyper/server" "hyper-util/server-auto" "hyper-util/server") ("http2" "hyper/http2" "hyper-util/http2") ("default" "tls" "http2" "server"))))))

