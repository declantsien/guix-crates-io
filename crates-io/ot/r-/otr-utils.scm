(define-module (crates-io ot r- otr-utils) #:use-module (crates-io))

(define-public crate-otr-utils-0.1.0 (c (n "otr-utils") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "block-modes") (r "^0.8") (d #t) (k 0)) (d (n "blowfish") (r "^0.8") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "const_format") (r "^0.2") (d #t) (k 0)) (d (n "dirs") (r "^5") (d #t) (k 0)) (d (n "duct") (r "^0.13") (d #t) (k 0)) (d (n "ffprobe") (r "^0.4") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("kv_unstable" "kv_unstable_serde"))) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "random-string") (r "^1") (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.12") (f (quote ("blocking" "multipart"))) (d #t) (k 0)) (d (n "rust-ini") (r "^0.21") (d #t) (k 0)) (d (n "scopeguard") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)))) (h "0djl3867d498zv8bq29lrqh6f02x9svbsq10simr71cphhr28r65")))

