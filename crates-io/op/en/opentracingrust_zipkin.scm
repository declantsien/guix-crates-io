(define-module (crates-io op en opentracingrust_zipkin) #:use-module (crates-io))

(define-public crate-opentracingrust_zipkin-0.1.0 (c (n "opentracingrust_zipkin") (v "0.1.0") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.1.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.0") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "0qsj8isj15migqikgriqb5bskhjgc49fxf5dxr4pz4wnhj8gawcj")))

(define-public crate-opentracingrust_zipkin-0.1.1 (c (n "opentracingrust_zipkin") (v "0.1.1") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.1.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.0") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "1n9xrf4izvkk6a0f81pnj34q0qijj6jqskr24k7mmgq1m0ll8y9l")))

(define-public crate-opentracingrust_zipkin-0.1.2 (c (n "opentracingrust_zipkin") (v "0.1.2") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.1.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.0") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "04xvzh2nyxs3d93z8lpcp25832qbk51ilgr6axrjg0srdzk4xrk0")))

(define-public crate-opentracingrust_zipkin-0.1.3 (c (n "opentracingrust_zipkin") (v "0.1.3") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.2") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "12fmlbf75a5qg19vvnsnjjkafsdvvimr87nvwb7ha2lk1xy7m585") (f (quote (("kafka_transport" "kafka") ("default" "kafka_transport"))))))

(define-public crate-opentracingrust_zipkin-0.1.4 (c (n "opentracingrust_zipkin") (v "0.1.4") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.2") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "1nynddjxnm3m4672jbri0ifgzxgkrfsm1f5bqa5mpj8fkpa3bb9k") (f (quote (("kafka_transport" "kafka") ("default" "kafka_transport"))))))

(define-public crate-opentracingrust_zipkin-0.1.5 (c (n "opentracingrust_zipkin") (v "0.1.5") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.2") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "126hhmab4wazrj9f186zwqrk56zj9ajrcv4r9ar0hgrp99s4s7bh") (f (quote (("kafka_transport" "kafka") ("default" "kafka_transport"))))))

(define-public crate-opentracingrust_zipkin-0.1.6 (c (n "opentracingrust_zipkin") (v "0.1.6") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.2") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "0rbaxspp1xrw8qqb41n31al204y297cjw2pka2dawl4xh05i5ls0") (f (quote (("kafka_transport" "kafka") ("default" "kafka_transport"))))))

(define-public crate-opentracingrust_zipkin-0.2.0 (c (n "opentracingrust_zipkin") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.3.8") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.3.2") (d #t) (k 0)) (d (n "ordered-float") (r "^0.5.0") (d #t) (k 0)) (d (n "rand") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.9.17") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.0.4") (d #t) (k 0)) (d (n "try_from") (r "^0.2.0") (d #t) (k 0)))) (h "0jqlhfla6fvf0frljnalvibin5flb7jwj3kvwc6gxvksbwymw4ad") (f (quote (("kafka_transport" "kafka"))))))

(define-public crate-opentracingrust_zipkin-0.3.0 (c (n "opentracingrust_zipkin") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "futures") (r "^0.3.4") (d #t) (k 0)) (d (n "kafka") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.13.0") (d #t) (k 0)))) (h "0kxq7cvbj8r527xiaxdlryp6srnp2zi8sfw7y1lrih6w7ipr24ca") (f (quote (("kafka_transport" "kafka")))) (y #t)))

(define-public crate-opentracingrust_zipkin-0.3.1 (c (n "opentracingrust_zipkin") (v "0.3.1") (d (list (d (n "byteorder") (r "^1.2.1") (d #t) (k 0)) (d (n "crossbeam-channel") (r "^0.4.2") (d #t) (k 0)) (d (n "data-encoding") (r "^2.1.1") (d #t) (k 0)) (d (n "kafka") (r "^0.8.0") (o #t) (d #t) (k 0)) (d (n "opentracingrust") (r "^0.4.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.10.4") (f (quote ("blocking"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.27") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.9") (d #t) (k 0)) (d (n "thrift") (r "^0.13.0") (d #t) (k 0)))) (h "11899gnr5r18scgcz5vvpqjk56b53sr8wcr4dlvynnsws5dcw9nn") (f (quote (("kafka_transport" "kafka"))))))

