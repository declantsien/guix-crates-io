(define-module (crates-io op en openlimits-nash) #:use-module (crates-io))

(define-public crate-openlimits-nash-0.2.0 (c (n "openlimits-nash") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "nash-native-client") (r "^0.2.1") (k 0)) (d (n "nash-protocol") (r "^0.2.0") (k 0)) (d (n "openlimits-exchange") (r "^0.2.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "1d70fc9d3app8ypyj3wy9bb1acklbnbyxgyf1h7r63sg1k4pbky2") (f (quote (("rustcrypto" "nash-protocol/rustcrypto") ("rust_gmp" "nash-protocol/rust_gmp" "nash-native-client/rust_gmp") ("num_bigint" "nash-protocol/num_bigint" "nash-native-client/num_bigint") ("libsecp256k1" "nash-protocol/libsecp256k1") ("default" "rust_gmp" "rustcrypto"))))))

(define-public crate-openlimits-nash-0.3.0 (c (n "openlimits-nash") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "nash-native-client") (r "^0.3.0") (k 0)) (d (n "nash-protocol") (r "^0.3.0") (k 0)) (d (n "openlimits-exchange") (r "^0.3.0") (d #t) (k 0)) (d (n "rust_decimal") (r "^1.14.3") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 0)))) (h "02dzbgz5kkfvc54snk9say52laanv9zsa0115ij6x463lhmlhmlz") (f (quote (("rustcrypto" "nash-protocol/rustcrypto") ("rust_gmp" "nash-protocol/rust_gmp" "nash-native-client/rust_gmp") ("num_bigint" "nash-protocol/num_bigint" "nash-native-client/num_bigint") ("libsecp256k1" "nash-protocol/libsecp256k1") ("default" "rust_gmp" "rustcrypto"))))))

