(define-module (crates-io op en openlibspot) #:use-module (crates-io))

(define-public crate-openlibspot-0.6.0 (c (n "openlibspot") (v "0.6.0") (d (list (d (n "data-encoding") (r "^2.5") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (f (quote ("color" "humantime" "auto-color"))) (k 0)) (d (n "futures-util") (r "^0.3") (k 0)) (d (n "getopts") (r "^0.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openlibspot-audio") (r "^0.6.0") (d #t) (k 0)) (d (n "openlibspot-connect") (r "^0.6.0") (d #t) (k 0)) (d (n "openlibspot-core") (r "^0.6.0") (d #t) (k 0)) (d (n "openlibspot-discovery") (r "^0.6.0") (d #t) (k 0)) (d (n "openlibspot-metadata") (r "^0.6.0") (d #t) (k 0)) (d (n "openlibspot-playback") (r "^0.6.0") (d #t) (k 0)) (d (n "openlibspot-protocol") (r "^0.6.0") (d #t) (k 0)) (d (n "rpassword") (r "^7.0") (d #t) (k 0)) (d (n "sha1") (r "^0.10") (d #t) (k 0)) (d (n "sysinfo") (r "^0.29") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt" "macros" "signal" "sync" "parking_lot" "process"))) (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)) (d (n "webpki") (r "^0.22.4") (d #t) (k 0)))) (h "0xh2lrqj9miln8wzyb0vx6fzl9hqifadw3p7kackag9k1zrrpcw3") (f (quote (("with-dns-sd" "openlibspot-core/with-dns-sd" "openlibspot-discovery/with-dns-sd") ("sdl-backend" "openlibspot-playback/sdl-backend") ("rodiojack-backend" "openlibspot-playback/rodiojack-backend") ("rodio-backend" "openlibspot-playback/rodio-backend") ("pulseaudio-backend" "openlibspot-playback/pulseaudio-backend") ("portaudio-backend" "openlibspot-playback/portaudio-backend") ("passthrough-decoder" "openlibspot-playback/passthrough-decoder") ("jackaudio-backend" "openlibspot-playback/jackaudio-backend") ("gstreamer-backend" "openlibspot-playback/gstreamer-backend") ("default" "rodio-backend") ("alsa-backend" "openlibspot-playback/alsa-backend")))) (y #t) (r "1.61")))

