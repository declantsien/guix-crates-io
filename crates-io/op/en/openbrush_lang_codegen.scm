(define-module (crates-io op en openbrush_lang_codegen) #:use-module (crates-io))

(define-public crate-openbrush_lang_codegen-1.8.0 (c (n "openbrush_lang_codegen") (v "1.8.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_lang_ir") (r "^3.2.0") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "1zfydh0xa2i7b06s1hvkwvd99j16b1m8xa8awljz7zxl10rq6lgj") (f (quote (("std") ("default" "std"))))))

(define-public crate-openbrush_lang_codegen-2.0.0 (c (n "openbrush_lang_codegen") (v "2.0.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_lang_ir") (r "~3.2.0") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "115z8k00i156jqw959qm4v8h9266c0fkzagv74yhd41yvk6h1p4x") (f (quote (("std") ("default" "std"))))))

(define-public crate-openbrush_lang_codegen-2.1.0 (c (n "openbrush_lang_codegen") (v "2.1.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_lang_ir") (r "~3.3.0") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "18xqg42hkwwk64jyk1kbng4gx9sc2k2j5lv24zwwi3p5x0niw11v") (f (quote (("std") ("default" "std"))))))

(define-public crate-openbrush_lang_codegen-2.2.0 (c (n "openbrush_lang_codegen") (v "2.2.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_lang_ir") (r "~3.3.0") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "0yvhbyfhsai8hga98rnysxyjj4v36dl7yvav62gf6yzhcl6cssj1") (f (quote (("std") ("default" "std"))))))

(define-public crate-openbrush_lang_codegen-2.3.0 (c (n "openbrush_lang_codegen") (v "2.3.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_lang_ir") (r "~3.4.0") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "07aa0b85l6x1wm4r7x47gf0rniya9b64q12m0c9643y6b5jiccb3") (f (quote (("std") ("default" "std"))))))

(define-public crate-openbrush_lang_codegen-4.0.0-beta (c (n "openbrush_lang_codegen") (v "4.0.0-beta") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_ir") (r "^4.1.0-beta") (k 0)) (d (n "ink_primitives") (r "^4.1.0-beta") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "0bsssqsnw6lcxdaxmzf5k0vvpg82kwrjv5qphfimbbrr6px4q3nd") (f (quote (("std") ("default" "std"))))))

(define-public crate-openbrush_lang_codegen-3.2.0 (c (n "openbrush_lang_codegen") (v "3.2.0") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "cargo_metadata") (r "^0.13.1") (d #t) (k 0)) (d (n "fs2") (r "^0.4.3") (d #t) (k 0)) (d (n "heck") (r "^0.3.1") (d #t) (k 0)) (d (n "ink_ir") (r "^4.2.1") (k 0)) (d (n "ink_primitives") (r "^4.2.1") (k 0)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.64") (d #t) (k 0)) (d (n "syn") (r "^1") (f (quote ("parsing" "full" "visit" "extra-traits"))) (d #t) (k 0)) (d (n "synstructure") (r "^0.12") (d #t) (k 0)) (d (n "unwrap") (r "^1.2.1") (d #t) (k 0)))) (h "1x7i75kdk2kw973h1p2g2nr0agnqwbji02nlvgb1vd5sr3fi20jq") (f (quote (("std") ("default" "std"))))))

