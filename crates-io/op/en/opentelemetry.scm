(define-module (crates-io op en opentelemetry) #:use-module (crates-io))

(define-public crate-opentelemetry-0.1.0 (c (n "opentelemetry") (v "0.1.0") (d (list (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustracing") (r "^0.2.0") (d #t) (k 0)) (d (n "rustracing_jaeger") (r "^0.2.1") (d #t) (k 0)))) (h "076903bj9dibx8s45dswimrnhxyg09jdgqbvfvnwk24jnzmn7497")))

(define-public crate-opentelemetry-0.1.1 (c (n "opentelemetry") (v "0.1.1") (d (list (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustracing") (r "^0.2.0") (d #t) (k 0)) (d (n "rustracing_jaeger") (r "^0.2.1") (d #t) (k 0)))) (h "1zjz9ilbm8hndlx9pgij1iry8jnzm8q5x5gqikh9ddnipsdypv5f")))

(define-public crate-opentelemetry-0.1.2 (c (n "opentelemetry") (v "0.1.2") (d (list (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustracing") (r "^0.2.0") (d #t) (k 0)) (d (n "rustracing_jaeger") (r "^0.2.1") (d #t) (k 0)))) (h "106wh1ya2mvax45b48az4dj60mc9pk21ivnxwkkkn4a28yj7728z")))

(define-public crate-opentelemetry-0.1.3 (c (n "opentelemetry") (v "0.1.3") (d (list (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustracing") (r "^0.2.0") (d #t) (k 0)) (d (n "rustracing_jaeger") (r "^0.2.1") (d #t) (k 0)))) (h "0g1820kvrbg9yg5r5vw8z901ihkvdbxypz4xan4mi9k04x8lgc2f")))

(define-public crate-opentelemetry-0.1.4 (c (n "opentelemetry") (v "0.1.4") (d (list (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustracing") (r "^0.2.0") (d #t) (k 0)) (d (n "rustracing_jaeger") (r "^0.2.1") (d #t) (k 0)))) (h "0w8pnl3cq2cx1pdljms9fjw2w7bxy1nkby12h8ngvy0w7w9xvgkk")))

(define-public crate-opentelemetry-0.1.5 (c (n "opentelemetry") (v "0.1.5") (d (list (d (n "crossbeam-channel") (r "^0.3.9") (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (d #t) (k 0)) (d (n "rustracing") (r "^0.2.0") (d #t) (k 0)) (d (n "rustracing_jaeger") (r "^0.2.1") (d #t) (k 0)))) (h "11v4wniilj6mz3sfsblqgycqvcbr8g6pxxlg8a5i92fppg3syykf")))

(define-public crate-opentelemetry-0.2.0 (c (n "opentelemetry") (v "0.2.0") (d (list (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thrift") (r "^0.13.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.10") (f (quote ("full"))) (d #t) (k 2)))) (h "0h4f80p0lydkbc8z60j3sgnz1mgn6r0adcn9xazm79p33hvkpwmh") (f (quote (("trace" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace"))))))

(define-public crate-opentelemetry-0.3.0 (c (n "opentelemetry") (v "0.3.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.1") (d #t) (k 2)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.1.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thrift") (r "^0.13.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.10") (f (quote ("full"))) (d #t) (k 2)))) (h "03m4yc58hnj1s3yzi8lbc256rj3192w6k6kvzx3qjcx39pmwza99") (f (quote (("trace" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace") ("base64_format" "base64"))))))

(define-public crate-opentelemetry-0.4.0 (c (n "opentelemetry") (v "0.4.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2.1") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "futures") (r "^0.3.4") (o #t) (d #t) (k 0)) (d (n "hyper") (r "^0.12.0") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "opentelemetry-jaeger") (r "^0.2.0") (d #t) (k 2)) (d (n "pin-project") (r "^0.4.6") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.104") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "thrift") (r "^0.13.0") (d #t) (k 2)) (d (n "tokio") (r "^0.2.10") (f (quote ("full"))) (d #t) (k 2)))) (h "0557sgkdcmcza1cdla4fk0sdbj0afhqdi47nadp5dfqqd8wajssx") (f (quote (("trace" "futures" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace") ("base64_format" "base64"))))))

(define-public crate-opentelemetry-0.5.0 (c (n "opentelemetry") (v "0.5.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)))) (h "0c7s2rrjqq45aljsx2y5i2z9yyf84y2j6ww4w9rm688ziw1c3nz1") (f (quote (("trace" "futures" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace") ("base64_format" "base64"))))))

(define-public crate-opentelemetry-0.6.0 (c (n "opentelemetry") (v "0.6.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "0cj1ra18h697mj0j33bxrf0zabwfq9by7w4g2lyr4w38ygic4jdw") (f (quote (("trace" "futures" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace") ("base64_format" "base64"))))))

(define-public crate-opentelemetry-0.7.0 (c (n "opentelemetry") (v "0.7.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "1z40cfjgscafnnqh5xn5k30xy5c6bqjdlnq58vbplrkavkx3mx6n") (f (quote (("trace" "futures" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace") ("binary_propagator") ("base64_format" "base64" "binary_propagator"))))))

(define-public crate-opentelemetry-0.8.0 (c (n "opentelemetry") (v "0.8.0") (d (list (d (n "base64") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.2.1") (o #t) (d #t) (k 0)))) (h "0hb422k334krdp8h48vzy6sbvdvlbz00sb3k8a9qcpabnfv6igxc") (f (quote (("trace" "futures" "rand" "pin-project") ("serialize" "serde" "bincode") ("metrics" "prometheus") ("default" "metrics" "trace") ("binary_propagator") ("base64_format" "base64" "binary_propagator"))))))

(define-public crate-opentelemetry-0.9.0 (c (n "opentelemetry") (v "0.9.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.0-rc6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "blocking" "time" "stream"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (o #t) (d #t) (k 0)))) (h "0zz889vv03nxa3xq706vp800b30l872ap5p6fgiph6sqn00hmvxg") (f (quote (("trace" "rand" "pin-project" "async-trait") ("serialize" "serde" "bincode") ("metrics" "thiserror" "dashmap" "fnv") ("default" "trace") ("binary_propagator") ("base64_format" "base64" "binary_propagator"))))))

(define-public crate-opentelemetry-0.9.1 (c (n "opentelemetry") (v "0.9.1") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.0-rc6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "blocking" "time" "stream"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (o #t) (d #t) (k 0)))) (h "1hvn8nvw61bfpck5q6xmz0lz3njzn4warnmbk6mgdn9gnssg90a2") (f (quote (("trace" "rand" "pin-project" "async-trait") ("serialize" "serde" "bincode") ("metrics" "thiserror" "dashmap" "fnv") ("default" "trace") ("binary_propagator") ("base64_format" "base64" "binary_propagator"))))))

(define-public crate-opentelemetry-0.10.0 (c (n "opentelemetry") (v "0.10.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.0-rc6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std" "perf"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "blocking" "time" "stream"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (o #t) (k 0)))) (h "0y96752rn0qj0bd2d9a69g7j7q3bizy3ry23a6wl641y2gpz0q72") (f (quote (("trace" "rand" "pin-project" "async-trait" "regex" "percent-encoding") ("serialize" "serde" "bincode") ("metrics" "thiserror" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.11.0 (c (n "opentelemetry") (v "0.11.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.0-rc6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std" "perf"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "blocking" "time" "stream"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (o #t) (k 0)))) (h "1g7zbwhsx48cyp5hqh7qf1vm61f1p79m4nlw3x5rdzc3zqdj0fr3") (f (quote (("trace" "rand" "pin-project" "async-trait" "regex" "percent-encoding" "thiserror") ("testing" "trace" "metrics" "tokio/full") ("serialize" "serde" "bincode") ("metrics" "thiserror" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.11.1 (c (n "opentelemetry") (v "0.11.1") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.0-rc6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std" "perf"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "blocking" "time" "stream"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (o #t) (k 0)))) (h "1v0cjm0plj5b0s8jxgqlkvcgvjnrr2722p3rcm24wfs7ir88l4m5") (f (quote (("trace" "rand" "pin-project" "async-trait" "regex" "percent-encoding" "thiserror") ("testing" "trace" "metrics" "tokio/full") ("serialize" "serde" "bincode") ("metrics" "thiserror" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.11.2 (c (n "opentelemetry") (v "0.11.2") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.0-rc6") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "http") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (f (quote ("std"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.3.0") (d #t) (k 2)) (d (n "regex") (r "^1.3") (f (quote ("std" "perf"))) (o #t) (k 0)) (d (n "reqwest") (r "^0.10") (f (quote ("blocking"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("rt-core" "blocking" "time" "stream"))) (o #t) (k 0)) (d (n "tokio") (r "^0.2") (f (quote ("full"))) (d #t) (k 2)) (d (n "tonic") (r "^0.3") (o #t) (k 0)))) (h "0mjj5b3pd02cdwrrsvrq7x6kpmbw0kwin9glj6fm7v1aklm4whyk") (f (quote (("trace" "rand" "pin-project" "async-trait" "regex" "percent-encoding" "thiserror") ("testing" "trace" "metrics" "tokio/full") ("serialize" "serde" "bincode") ("metrics" "thiserror" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.12.0 (c (n "opentelemetry") (v "0.12.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (f (quote ("blocking"))) (o #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "surf") (r "^2.0") (o #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)))) (h "05cgnnsb3cbz64y7calj2qvmf6xpsxb1nbfcxrlx43hlbj3j8kai") (f (quote (("trace" "rand" "pin-project" "async-trait" "percent-encoding") ("tokio-support" "tokio" "tokio-stream") ("testing" "trace" "metrics" "tokio-support" "tokio/full") ("serialize" "serde") ("metrics" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.13.0 (c (n "opentelemetry") (v "0.13.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "dashmap") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)))) (h "051rp9br6qaxlkmwivyzqp5p1iqq5napjc83vd94w1jhzlfyl75r") (f (quote (("trace" "rand" "pin-project" "async-trait" "percent-encoding") ("testing" "trace" "metrics" "rt-async-std" "rt-tokio" "rt-tokio-current-thread") ("serialize" "serde") ("rt-tokio-current-thread" "tokio" "tokio-stream") ("rt-tokio" "tokio" "tokio-stream") ("rt-async-std" "async-std") ("metrics" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.14.0 (c (n "opentelemetry") (v "0.14.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (d #t) (k 2)))) (h "0yjl3mc9ky95r9v70sxgw6azcxap5i740fs4w2fpy6zi8zzlha29") (f (quote (("trace" "crossbeam-channel" "rand" "pin-project" "async-trait" "percent-encoding") ("testing" "trace" "metrics" "rt-async-std" "rt-tokio" "rt-tokio-current-thread") ("serialize" "serde") ("rt-tokio-current-thread" "tokio" "tokio-stream") ("rt-tokio" "tokio" "tokio-stream") ("rt-async-std" "async-std") ("metrics" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.15.0 (c (n "opentelemetry") (v "0.15.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0rrapyiwsj6y6gvfjyhza2q9319x23596rlkajc7nbj360zb69zz") (f (quote (("trace" "crossbeam-channel" "rand" "pin-project" "async-trait" "percent-encoding") ("testing" "trace" "metrics" "rt-async-std" "rt-tokio" "rt-tokio-current-thread" "tokio/macros" "tokio/rt-multi-thread") ("serialize" "serde") ("rt-tokio-current-thread" "tokio" "tokio-stream") ("rt-tokio" "tokio" "tokio-stream") ("rt-async-std" "async-std") ("metrics" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.16.0 (c (n "opentelemetry") (v "0.16.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)))) (h "08jxjf86jysg768hqgx7xvhw1gchlipljcn6jgklsv4s9qf9pkz1") (f (quote (("trace" "crossbeam-channel" "rand" "pin-project" "async-trait" "percent-encoding") ("testing" "trace" "metrics" "rt-async-std" "rt-tokio" "rt-tokio-current-thread" "tokio/macros" "tokio/rt-multi-thread") ("serialize" "serde") ("rt-tokio-current-thread" "tokio" "tokio-stream") ("rt-tokio" "tokio" "tokio-stream") ("rt-async-std" "async-std") ("metrics" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.17.0 (c (n "opentelemetry") (v "0.17.0") (d (list (d (n "async-std") (r "^1.6") (f (quote ("unstable"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.2") (d #t) (k 2)) (d (n "criterion") (r "^0.3.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "dashmap") (r "^4.0.1") (o #t) (d #t) (k 0)) (d (n "fnv") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "futures-channel") (r "^0.3") (d #t) (k 0)) (d (n "futures-executor") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (f (quote ("std" "sink"))) (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (f (quote ("std" "std_rng"))) (o #t) (k 0)) (d (n "rand_distr") (r "^0.4.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt" "time"))) (o #t) (k 0)) (d (n "tokio-stream") (r "^0.1") (o #t) (d #t) (k 0)))) (h "1f5c04yl784bwzksl66q6vjp0fjk7dnn9ms9iksgs4xg0acfh1b1") (f (quote (("trace" "crossbeam-channel" "rand" "pin-project" "async-trait" "percent-encoding") ("testing" "trace" "metrics" "rt-async-std" "rt-tokio" "rt-tokio-current-thread" "tokio/macros" "tokio/rt-multi-thread") ("serialize" "serde") ("rt-tokio-current-thread" "tokio" "tokio-stream") ("rt-tokio" "tokio" "tokio-stream") ("rt-async-std" "async-std") ("metrics" "dashmap" "fnv") ("default" "trace"))))))

(define-public crate-opentelemetry-0.18.0 (c (n "opentelemetry") (v "0.18.0") (d (list (d (n "opentelemetry_api") (r "^0.18.0") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.18.0") (d #t) (k 0)))) (h "0vh8xzzigx1n95pv3vxd09lxan40626hwjry6q56q44a53bw7mk9") (f (quote (("trace" "opentelemetry_api/trace" "opentelemetry_sdk/trace") ("testing" "opentelemetry_api/testing" "opentelemetry_sdk/testing") ("rt-tokio-current-thread" "opentelemetry_sdk/rt-tokio-current-thread") ("rt-tokio" "opentelemetry_sdk/rt-tokio") ("rt-async-std" "opentelemetry_sdk/rt-async-std") ("metrics" "opentelemetry_api/metrics" "opentelemetry_sdk/metrics") ("default" "trace")))) (r "1.56")))

(define-public crate-opentelemetry-0.19.0 (c (n "opentelemetry") (v "0.19.0") (d (list (d (n "opentelemetry_api") (r "^0.19") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.19") (d #t) (k 0)))) (h "0vrav575hfm2cp86akbbg5li9q9srig0ci70xqx9s296ri3q6jsz") (f (quote (("trace" "opentelemetry_api/trace" "opentelemetry_sdk/trace") ("testing" "opentelemetry_api/testing" "opentelemetry_sdk/testing") ("rt-tokio-current-thread" "opentelemetry_sdk/rt-tokio-current-thread") ("rt-tokio" "opentelemetry_sdk/rt-tokio") ("rt-async-std" "opentelemetry_sdk/rt-async-std") ("metrics" "opentelemetry_api/metrics" "opentelemetry_sdk/metrics") ("default" "trace")))) (r "1.60")))

(define-public crate-opentelemetry-0.20.0 (c (n "opentelemetry") (v "0.20.0") (d (list (d (n "opentelemetry-stdout") (r "^0.1") (f (quote ("trace"))) (d #t) (k 2)) (d (n "opentelemetry_api") (r "^0.20") (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.20") (d #t) (k 0)))) (h "0m2cg0kqv8hplm3w6aajjm4yl05k19a5k9bidzmjyv8fphvxk4cm") (f (quote (("trace" "opentelemetry_api/trace" "opentelemetry_sdk/trace") ("testing" "opentelemetry_api/testing" "opentelemetry_sdk/testing") ("rt-tokio-current-thread" "opentelemetry_sdk/rt-tokio-current-thread") ("rt-tokio" "opentelemetry_sdk/rt-tokio") ("rt-async-std" "opentelemetry_sdk/rt-async-std") ("metrics" "opentelemetry_api/metrics" "opentelemetry_sdk/metrics") ("logs_level_enabled" "logs") ("logs" "opentelemetry_sdk/logs") ("default" "trace")))) (r "1.60")))

(define-public crate-opentelemetry-0.21.0 (c (n "opentelemetry") (v "0.21.0") (d (list (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "once_cell") (r "^1.12.0") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.7") (d #t) (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "12jfmyx8k9q2sjlx4wp76ddzaf94i7lnkliv1c9mj164bnd36chy") (f (quote (("trace" "pin-project-lite") ("testing" "trace" "metrics") ("metrics") ("logs_level_enabled" "logs") ("logs") ("default" "trace")))) (r "1.65")))

(define-public crate-opentelemetry-0.22.0 (c (n "opentelemetry") (v "0.22.0") (d (list (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)) (d (n "urlencoding") (r "^2.1.2") (d #t) (k 0)))) (h "1gv70rx8172g9n82v9f97ircax7v4ydzyprq1nvsxwp3gfc5f3ch") (f (quote (("trace" "pin-project-lite") ("testing" "trace" "metrics") ("otel_unstable") ("metrics") ("logs_level_enabled" "logs") ("logs") ("default" "trace")))) (r "1.65")))

(define-public crate-opentelemetry-0.23.0 (c (n "opentelemetry") (v "0.23.0") (d (list (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "futures-core") (r "^0.3") (d #t) (k 0)) (d (n "futures-sink") (r "^0.3") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.63") (d #t) (t "cfg(all(target_arch = \"wasm32\", not(target_os = \"wasi\")))") (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "pin-project-lite") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (k 0)))) (h "0xia0flm8w561in05qd5axhaf7qgcfnrfibjdzh17rwk90fsjs8v") (f (quote (("trace" "pin-project-lite") ("testing" "trace" "metrics") ("otel_unstable") ("metrics") ("logs_level_enabled" "logs") ("logs") ("default" "trace")))) (r "1.65")))

