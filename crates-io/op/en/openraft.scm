(define-module (crates-io op en openraft) #:use-module (crates-io))

(define-public crate-openraft-0.6.3 (c (n "openraft") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1q1d2zxyyy6cfmlr7l1a8n7dyn1aak9lzxljsnxj515hqhnc09zk") (f (quote (("docinclude"))))))

(define-public crate-openraft-0.6.4 (c (n "openraft") (v "0.6.4") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "13wgqkwvf1amqr9sg3pcyglzsdhpxypbgws0fziadab4b8yr5zi1") (f (quote (("docinclude"))))))

(define-public crate-openraft-0.6.5 (c (n "openraft") (v "0.6.5") (d (list (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "memstore") (r "^0.2.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "171cy5p15ng1jiq7f47q7x5yv3crfixbs557im2scnnlr4jp2g3l") (f (quote (("docinclude"))))))

(define-public crate-openraft-0.6.6 (c (n "openraft") (v "0.6.6") (d (list (d (n "anyerror") (r "^0.1.6") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "00ix37fk85zx93nc22k8zf9apsf0nzhajl9va2avc703izm2xalb") (f (quote (("docinclude"))))))

(define-public crate-openraft-0.6.7 (c (n "openraft") (v "0.6.7") (d (list (d (n "anyerror") (r "^0.1.6") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0fjn8rngihspv5hkmbiqg0m2cp6g2clrcpbgknvcrsfwp4r73kmh") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.6.8 (c (n "openraft") (v "0.6.8") (d (list (d (n "anyerror") (r "^0.1.6") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0h0asq7y1w0mc6bwdpa2bwamhsbkzpcqb950ngwrn2lhjmh06pvy") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.7.0 (c (n "openraft") (v "0.7.0") (d (list (d (n "anyerror") (r "^0.1.1") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1ndb2xifi92f41clq6wf63y0b6hk100j2gq9rbh4g9ggj2zy480b") (f (quote (("docinclude"))))))

(define-public crate-openraft-0.7.1 (c (n "openraft") (v "0.7.1") (d (list (d (n "anyerror") (r "^0.1.6") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1wzp6h551x6xn5nqz6rvgq2lz2myavhxa9xa1mz6siwjhynpd9ab") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.6.9 (c (n "openraft") (v "0.6.9") (d (list (d (n "anyerror") (r "^0.1.6") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.32") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "structopt") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.29") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0xn0r3wdsq4lqhlvisln2qfvcsz82y04ffy34xd5r7gfsi4qnh2k") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.7.2 (c (n "openraft") (v "0.7.2") (d (list (d (n "anyerror") (r "^0.1.7") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "087jqar8qr6d1gsrgjglrgi1r75ri6gzl84ln35v7djz0q6kgh90") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.7.3 (c (n "openraft") (v "0.7.3") (d (list (d (n "anyerror") (r "^0.1.7") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0fx563cnrb8nvfgr5i64r4kb1hspm4wci9f5rjsajf35h2nv45l7") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.7.4 (c (n "openraft") (v "0.7.4") (d (list (d (n "anyerror") (r "^0.1.7") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "16s9mlmm6nkfqgd1pnkcc33g55r91qw0llww3hwrx7x7vmdiqawq") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.7.5 (c (n "openraft") (v "0.7.5") (d (list (d (n "anyerror") (r "^0.1.7") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "03i91pi6n2gjx8axw3cn3wm083qnh3adc77m8x70dl2n1vin99c3") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.8.0 (c (n "openraft") (v "0.8.0") (d (list (d (n "anyerror") (r "^0.1.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "~3.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0n6i61vij76jscfdmhp40g7hd5gp4aa8nf6paxp37nf99mcww4c0") (f (quote (("single-term-leader") ("docinclude") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempdir" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.1 (c (n "openraft") (v "0.8.1") (d (list (d (n "anyerror") (r "^0.1.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "~3.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempdir") (r "^0.3.7") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1a1bcz0fx0nwqadrmcarkzphj03i7w0p0w0cahwaz5xxbg6majm5") (f (quote (("single-term-leader") ("docinclude") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempdir" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.2 (c (n "openraft") (v "0.8.2") (d (list (d (n "anyerror") (r "^0.1.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "~3.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "1r7cplypiij6b6m6r8m9zsd8rizfb6qxa9bpz7iw6zxniqa2h3yf") (f (quote (("single-term-leader") ("docinclude") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.3 (c (n "openraft") (v "0.8.3") (d (list (d (n "anyerror") (r "^0.1.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "~3.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0y1jc1lr6l0yjla02zp04rp2qs0lwlznpww9nl6wlwwmjlaz2xm9") (f (quote (("single-term-leader") ("docinclude") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.4-alpha.1 (c (n "openraft") (v "0.8.4-alpha.1") (d (list (d (n "anyerror") (r "^0.1.7") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "~3.2") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0gza1dfysswza3m2356s2cn6k4qjbk9r6rscf90ii785wppwagi8") (f (quote (("single-term-leader") ("docinclude") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (y #t) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.7.6 (c (n "openraft") (v "0.7.6") (d (list (d (n "anyerror") (r "^0.1.7") (f (quote ("anyhow"))) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.7") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 2)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2.0") (d #t) (k 2)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3.3") (f (quote ("env-filter"))) (d #t) (k 2)))) (h "0gj4vck3gk85kas3vd153bq6sl5qgzygl57znaxqwrnfchnsdah4") (f (quote (("docinclude") ("bt" "anyerror/backtrace" "anyhow/backtrace"))))))

(define-public crate-openraft-0.8.4 (c (n "openraft") (v "0.8.4") (d (list (d (n "anyerror") (r "^0.1.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0i5fgp8cl5gwpnypvk6a431qrhi8bpv6v401gjdliqq8a3jjiabi") (f (quote (("storage-v2") ("single-term-leader") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.5 (c (n "openraft") (v "0.8.5") (d (list (d (n "anyerror") (r "^0.1.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0z8f7lc5jlg4nxnczjf64x3gq5xg4hjchkwgxr1ay611kghgyzlq") (f (quote (("storage-v2") ("single-term-leader") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (y #t) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.6 (c (n "openraft") (v "0.8.6") (d (list (d (n "anyerror") (r "^0.1.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0b91xhy2kfrlqy8xclydh5r42w3klf0g4sfl15xm9xb0nl1yjrcy") (f (quote (("storage-v2") ("single-term-leader") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.7 (c (n "openraft") (v "0.8.7") (d (list (d (n "anyerror") (r "^0.1.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0lny1s8pmwd17zqmp4b5594xhycn3kx4lz1hhjxcwh93aj120aw1") (f (quote (("storage-v2") ("single-term-leader") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.8 (c (n "openraft") (v "0.8.8") (d (list (d (n "anyerror") (r "^0.1.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "0g1iakj6wbybs9ji5y3zj810dwzr0ipf5lmib8v12jbv22jv72g1") (f (quote (("storage-v2") ("single-term-leader") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.8.9 (c (n "openraft") (v "0.8.9") (d (list (d (n "anyerror") (r "^0.1.12") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.36") (d #t) (k 0)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pin-utils") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.33") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.29") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)))) (h "1al4kz6hkh7i25vssffrq2vqprpxi5d7ddhk4x06p98bb7bglai4") (f (quote (("storage-v2") ("single-term-leader") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde") ("compat-07-testing" "dep:tempfile" "anyhow" "dep:serde_json") ("compat-07" "compat" "serde" "dep:or07" "compat-07-testing"))))))

(define-public crate-openraft-0.9.0 (c (n "openraft") (v "0.9.0") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "04bz84xpb1c51fmnqqaknqd5ccw5ccpmqd2krinyi71cq2pfqava") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.1 (c (n "openraft") (v "0.9.1") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "0m3lscndszrh0j87732l9cq03nacy70r2hnvgk296j01spd32fl6") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.2 (c (n "openraft") (v "0.9.2") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "1cygkfb56pkxwjkhzxsfr5fqihf26civ5ra2dm01dpy7nc0307rr") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.3 (c (n "openraft") (v "0.9.3") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "13vrb64bacvmqa379i4974m502d1yyfzlc2h0sk3dvnyakx4pqhd") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.4 (c (n "openraft") (v "0.9.4") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "0k4h228icfgz620rdyml768zyyk70711j9vnz2csc7xza1261n9i") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.5 (c (n "openraft") (v "0.9.5") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "0pqvfzpn3485rncscv9p5r5xbyc14014ch68jd36yp3k4mbc395f") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.6 (c (n "openraft") (v "0.9.6") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.0") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "1hw5l6wp1s32bkaxy1278w6j6bdkq0l16d3c0a3awjjbxwircpf6") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (y #t) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.7 (c (n "openraft") (v "0.9.7") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.6") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "0vvkf68v8yk4vg0dh61n2410699wnqdjv2xxmmg8h0qwnd1k3fbv") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.8 (c (n "openraft") (v "0.9.8") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.6") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "0rvp9gfqp423kn18y95d74f52vn4pqarsrgdjfdjcbanbkshf8ld") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.9 (c (n "openraft") (v "0.9.9") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.6") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "0z38nrj147hm41cn6f0skzsvkd4987j83v6xfj9dgrhr844xya9z") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.10 (c (n "openraft") (v "0.9.10") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.6") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "1syzj5xdvd05csxggzagfjxff8b0krx36b6nz9yjgxc9s9804idk") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

(define-public crate-openraft-0.9.11 (c (n "openraft") (v "0.9.11") (d (list (d (n "anyerror") (r "^0.1.10") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1.0.63") (d #t) (k 2)) (d (n "async-entry") (r "^0.3.1") (d #t) (k 2)) (d (n "byte-unit") (r "^4.0.12") (d #t) (k 0)) (d (n "clap") (r "^4.1.11") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "derive_more") (r "^0.99.9") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "openraft-macros") (r "^0.9.6") (d #t) (k 0)) (d (n "or07") (r "^0.7.4") (o #t) (d #t) (k 0) (p "openraft")) (d (n "pretty_assertions") (r "^1.0.0") (d #t) (k 2)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1.0.114") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.57") (d #t) (k 2)) (d (n "tempfile") (r "^3.4.0") (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.49") (d #t) (k 0)) (d (n "tokio") (r "^1.8") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync" "time"))) (k 0)) (d (n "tracing") (r "^0.1.40") (d #t) (k 0)) (d (n "tracing-futures") (r "^0.2.4") (d #t) (k 0)) (d (n "validit") (r "^0.2.2") (d #t) (k 0)))) (h "12q96pk51q2m9bx2aqi42nx2gmqrrcc4jrwy428ik3cmdqiwqn8c") (f (quote (("tracing-log" "tracing/log") ("storage-v2") ("singlethreaded" "openraft-macros/singlethreaded") ("single-term-leader") ("loosen-follower-log-revert") ("generic-snapshot-data") ("compat") ("bt" "anyerror/backtrace" "anyhow/backtrace") ("bench")))) (s 2) (e (quote (("serde" "dep:serde"))))))

