(define-module (crates-io op en openai-api-stream-rs) #:use-module (crates-io))

(define-public crate-openai-api-stream-rs-0.1.0 (c (n "openai-api-stream-rs") (v "0.1.0") (d (list (d (n "async-std") (r "^1.10.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "17p799387rlaxfdkb5rnj26vlgj7p3jllwhdy986h0135gidx0m0") (y #t)))

(define-public crate-openai-api-stream-rs-0.1.1 (c (n "openai-api-stream-rs") (v "0.1.1") (d (list (d (n "async-std") (r "^1.10.0") (d #t) (k 0)) (d (n "bytes") (r "^1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 0)))) (h "1cd2xcz345mnrqw9cip09n4i68pra7vbn81cpjary2dri35q62h8")))

