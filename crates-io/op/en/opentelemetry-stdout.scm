(define-module (crates-io op en opentelemetry-stdout) #:use-module (crates-io))

(define-public crate-opentelemetry-stdout-0.1.0 (c (n "opentelemetry-stdout") (v "0.1.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "opentelemetry_api") (r "^0.20") (k 0)) (d (n "opentelemetry_api") (r "^0.20") (f (quote ("metrics"))) (d #t) (k 2)) (d (n "opentelemetry_sdk") (r "^0.20") (k 0)) (d (n "opentelemetry_sdk") (r "^0.20") (f (quote ("rt-tokio" "metrics"))) (d #t) (k 2)) (d (n "ordered-float") (r "^3.4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)))) (h "1imhbnh2lffjrz5s4vbpwaryb7bqc99cgrdzvkvd7yf03cr51mcb") (f (quote (("trace" "opentelemetry_api/trace" "opentelemetry_sdk/trace" "futures-util") ("metrics" "async-trait" "opentelemetry_api/metrics" "opentelemetry_sdk/metrics") ("logs" "opentelemetry_api/logs" "opentelemetry_sdk/logs" "async-trait" "thiserror")))) (r "1.60")))

(define-public crate-opentelemetry-stdout-0.2.0 (c (n "opentelemetry-stdout") (v "0.2.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.22") (f (quote ("clock"))) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (k 0)) (d (n "ordered-float") (r "^4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("full"))) (d #t) (k 2)))) (h "0gpnf02d7aidj7008w0sggxchh53bdr0ca68k84pdharrps2sfy1") (f (quote (("trace" "opentelemetry/trace" "opentelemetry_sdk/trace" "futures-util") ("metrics" "async-trait" "opentelemetry/metrics" "opentelemetry_sdk/metrics") ("logs" "opentelemetry/logs" "opentelemetry_sdk/logs" "async-trait" "thiserror")))) (r "1.65")))

(define-public crate-opentelemetry-stdout-0.3.0 (c (n "opentelemetry-stdout") (v "0.3.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("now"))) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "opentelemetry") (r "^0.22") (k 0)) (d (n "opentelemetry_sdk") (r "^0.22") (k 0)) (d (n "ordered-float") (r "^4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (k 2)))) (h "0y4gcihvgdjj8xaw2833r4gk5pc3865b7h5ga38zqfpjh6rjipsb") (f (quote (("trace" "opentelemetry/trace" "opentelemetry_sdk/trace" "futures-util") ("metrics" "async-trait" "opentelemetry/metrics" "opentelemetry_sdk/metrics") ("logs" "opentelemetry/logs" "opentelemetry_sdk/logs" "async-trait" "thiserror")))) (r "1.65")))

(define-public crate-opentelemetry-stdout-0.4.0 (c (n "opentelemetry-stdout") (v "0.4.0") (d (list (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4.34") (f (quote ("now"))) (k 0)) (d (n "futures-util") (r "^0.3") (o #t) (k 0)) (d (n "opentelemetry") (r "^0.23") (k 0)) (d (n "opentelemetry_sdk") (r "^0.23") (k 0)) (d (n "ordered-float") (r "^4.0") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (o #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("std"))) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("registry" "std"))) (k 2)))) (h "1zhv95xkxdgirmazah4bl5nbfc1cyw687rmjzqwbf0mg0szq1l6n") (f (quote (("trace" "opentelemetry/trace" "opentelemetry_sdk/trace" "futures-util") ("metrics" "async-trait" "opentelemetry/metrics" "opentelemetry_sdk/metrics") ("logs" "opentelemetry/logs" "opentelemetry_sdk/logs" "async-trait" "thiserror" "opentelemetry_sdk/logs_level_enabled") ("default" "trace" "metrics" "logs")))) (r "1.65")))

