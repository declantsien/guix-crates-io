(define-module (crates-io op en openrr-command) #:use-module (crates-io))

(define-public crate-openrr-command-0.0.1 (c (n "openrr-command") (v "0.0.1") (d (list (d (n "arci") (r "^0.0.1") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "k") (r "^0.22") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.1") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1v5civji8kdm6pk1gx2wymzcpc67r5jfxbjv15q4pcnkqlshr2gb")))

(define-public crate-openrr-command-0.0.3 (c (n "openrr-command") (v "0.0.3") (d (list (d (n "arci") (r "^0.0.3") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "k") (r "^0.22") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.3") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "194q9h9pr1l9ixldw8vcm8mp84phy8dl3hy4ynzs7hdcr79hfdf0")))

(define-public crate-openrr-command-0.0.4 (c (n "openrr-command") (v "0.0.4") (d (list (d (n "arci") (r "^0.0.4") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "k") (r "^0.23") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.4") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "1lj508iyp9nzv3cnw2zkij0xgz9bphrh4nzv8dbk1s8h75qafn6y")))

(define-public crate-openrr-command-0.0.5 (c (n "openrr-command") (v "0.0.5") (d (list (d (n "arci") (r "^0.0.5") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "k") (r "^0.23") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.5") (d #t) (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "00zfs5aazbaz6x771xds81aiifjpayqxdgf603ya3hyphjcq7r4d")))

(define-public crate-openrr-command-0.0.6 (c (n "openrr-command") (v "0.0.6") (d (list (d (n "arci") (r "^0.0.6") (d #t) (k 0)) (d (n "async-recursion") (r "^0.3") (d #t) (k 0)) (d (n "k") (r "^0.25") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.6") (k 0)) (d (n "structopt") (r "^0.3.21") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "0pydv92naa33z2w51xn8f6xsfw22b4fv8643c88mka8y9hzpcxpz") (f (quote (("default" "assimp") ("assimp" "openrr-client/assimp"))))))

(define-public crate-openrr-command-0.0.7 (c (n "openrr-command") (v "0.0.7") (d (list (d (n "arci") (r "^0.0.7") (d #t) (k 0)) (d (n "async-recursion") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "k") (r "^0.29") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.7") (k 0)) (d (n "rustyline") (r "^10.0.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "0dhcwn0zxbzhyf0qqwizy6xlr2576zlhykn47smgfm7298mddk9z") (f (quote (("default" "assimp") ("assimp" "openrr-client/assimp"))))))

(define-public crate-openrr-command-0.1.0 (c (n "openrr-command") (v "0.1.0") (d (list (d (n "arci") (r "^0.1.0") (d #t) (k 0)) (d (n "async-recursion") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "clap_complete") (r "^4") (d #t) (k 0)) (d (n "k") (r "^0.29") (d #t) (k 0)) (d (n "openrr-client") (r "^0.1.0") (k 0)) (d (n "rustyline") (r "^11") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "0cx8jiq7ggagplg0rmdcva20hmx34s0hxysh4sc8k6sbgnnpmlzs") (f (quote (("default" "assimp") ("assimp" "openrr-client/assimp"))))))

