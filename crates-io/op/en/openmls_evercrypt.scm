(define-module (crates-io op en openmls_evercrypt) #:use-module (crates-io))

(define-public crate-openmls_evercrypt-0.1.0-pre.1 (c (n "openmls_evercrypt") (v "0.1.0-pre.1") (d (list (d (n "evercrypt") (r "^0.0.10") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0-pre.2") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1-pre.2") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.1-pre.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "memory_keystore") (r "^0.1.0-pre.1") (d #t) (k 0) (p "openmls_memory_keystore")) (d (n "openmls_traits") (r "^0.1.0-pre.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)))) (h "0a6g39bv2z8vhd39k6lz2ld3wfp4d7gqdfq0k1gdgnpddymgk3n1")))

(define-public crate-openmls_evercrypt-0.1.0-pre.2 (c (n "openmls_evercrypt") (v "0.1.0-pre.2") (d (list (d (n "evercrypt") (r "^0.0.10") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0-pre.2") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1-pre.2") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.1-pre.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_memory_keystore") (r "^0.1.0-pre.2") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0-pre.2") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)))) (h "1jq47kimhhjvv3w9mwimgxx3k20wy2izbm8n28jq8rzypd0m3jqm")))

(define-public crate-openmls_evercrypt-0.1.0-pre.3 (c (n "openmls_evercrypt") (v "0.1.0-pre.3") (d (list (d (n "evercrypt") (r "^0.0.10") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_memory_keystore") (r "^0.1.0-pre.3") (d #t) (k 0) (p "openmls_memory_keystore")) (d (n "openmls_traits") (r "^0.1.0-pre.3") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)))) (h "0arg0r9vjiyni8jc7n5qc1v6vikw1r9lzgk67fcn7b3579v786ss")))

(define-public crate-openmls_evercrypt-0.1.0-pre.4 (c (n "openmls_evercrypt") (v "0.1.0-pre.4") (d (list (d (n "evercrypt") (r "^0.0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_memory_keystore") (r "^0.1.0-pre.4") (d #t) (k 0) (p "openmls_memory_keystore")) (d (n "openmls_traits") (r "^0.1.0-pre.4") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)))) (h "0iam7nkapq4k9gbsi72qyddvfmacqk67w5zd9nclcx2qi3lwza38")))

(define-public crate-openmls_evercrypt-0.1.0 (c (n "openmls_evercrypt") (v "0.1.0") (d (list (d (n "evercrypt") (r "^0.0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_memory_keystore") (r "^0.1.0") (d #t) (k 0) (p "openmls_memory_keystore")) (d (n "openmls_traits") (r "^0.1.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)))) (h "12w18cjspn4whc03977wnks2hdc4xism7cys8j58whqdlap5qs2h")))

(define-public crate-openmls_evercrypt-0.2.0-pre.0 (c (n "openmls_evercrypt") (v "0.2.0-pre.0") (d (list (d (n "evercrypt") (r "^0.0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_memory_keystore") (r "^0.2.0-pre.0") (d #t) (k 0) (p "openmls_memory_keystore")) (d (n "openmls_traits") (r "^0.2.0-pre.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.3.0-pre.3") (f (quote ("derive" "serde" "mls"))) (d #t) (k 0)))) (h "14grysbipv14gaxiq9pv4n5gbc1aprmxq3b7dwiyxhfyzgn48s7x")))

(define-public crate-openmls_evercrypt-0.2.0-pre.1 (c (n "openmls_evercrypt") (v "0.2.0-pre.1") (d (list (d (n "evercrypt") (r "^0.0.11") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.1.0") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "hpke-rs-crypto") (r "^0.1.1") (d #t) (k 0)) (d (n "hpke-rs-evercrypt") (r "^0.1.2") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_memory_keystore") (r "^0.2.0-pre.1") (d #t) (k 0) (p "openmls_memory_keystore")) (d (n "openmls_traits") (r "^0.2.0-pre.1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.3.0-pre.3") (f (quote ("derive" "serde" "mls"))) (d #t) (k 0)))) (h "07nxszax9mc3a281942ifwma1x6azyzyh76zmlvq50w7vq40nl19")))

