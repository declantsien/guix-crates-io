(define-module (crates-io op en openapitor) #:use-module (crates-io))

(define-public crate-openapitor-0.0.1 (c (n "openapitor") (v "0.0.1") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.12") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "expectorate") (r "^1") (d #t) (k 2)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "json-patch") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "numeral") (r "^1") (d #t) (k 0)) (d (n "openapiv3") (r "^1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "rustls-tls"))) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("bigdecimal" "chrono" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4.0") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0h061x4ca7kgjkdx4nhnbd0hdaz243d77dq2zdmh1a76mg2dz053")))

(define-public crate-openapitor-0.0.2 (c (n "openapitor") (v "0.0.2") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.15") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "expectorate") (r "^1") (d #t) (k 2)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "json-patch") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "numeral") (r "^1") (d #t) (k 0)) (d (n "openapiv3") (r "^1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "rustls-tls"))) (k 0)) (d (n "reqwest-middleware") (r "^0.1.5") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("bigdecimal" "chrono" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4.0") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "test-context") (r "^0.1.4") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "08y78zsihissywf7gl5x9agjkr4brkasiv3aj65ivcq7q7d47sd8")))

(define-public crate-openapitor-0.0.3 (c (n "openapitor") (v "0.0.3") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.15") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "expectorate") (r "^1") (d #t) (k 2)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "json-patch") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "numeral") (r "^1") (d #t) (k 0)) (d (n "openapiv3") (r "^1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "rustls-tls"))) (k 0)) (d (n "reqwest-middleware") (r "^0.1.5") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("bigdecimal" "chrono" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.8.26") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4.0") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "test-context") (r "^0.1.4") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0ac16ib6b64j27jdkjjhq05qay7cc05n37qf3byhly6cd71mw79k")))

(define-public crate-openapitor-0.0.4 (c (n "openapitor") (v "0.0.4") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "expectorate") (r "^1") (d #t) (k 2)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "json-patch") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "numeral") (r "^1") (d #t) (k 0)) (d (n "openapiv3") (r "^1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "rustls-tls"))) (k 0)) (d (n "reqwest-middleware") (r "^0.1.5") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("bigdecimal" "chrono" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.4") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4.0") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "test-context") (r "^0.1.4") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0ivb26jzq1slbs4gg662nsvqnqd1c9bqikckybwcym673krgil1r")))

(define-public crate-openapitor-0.0.5 (c (n "openapitor") (v "0.0.5") (d (list (d (n "Inflector") (r "^0.11.4") (d #t) (k 0)) (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.56") (d #t) (k 2)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "clap") (r "^3.2.16") (f (quote ("cargo" "derive" "env" "unicode"))) (d #t) (k 0)) (d (n "data-encoding") (r "^2.3.2") (d #t) (k 0)) (d (n "expectorate") (r "^1") (d #t) (k 2)) (d (n "format_serde_error") (r "^0.3.0") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-util") (r "^0.3.21") (d #t) (k 0)) (d (n "http") (r "^0.2.8") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (f (quote ("serde"))) (d #t) (k 0)) (d (n "json-patch") (r "^0.2.6") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "numeral") (r "^1") (d #t) (k 0)) (d (n "openapiv3") (r "^1") (d #t) (k 0)) (d (n "phonenumber") (r "^0.3.1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "proc-macro2") (r "^1") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 0)) (d (n "regex") (r "^1.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "multipart" "rustls-tls"))) (k 0)) (d (n "reqwest-middleware") (r "^0.1.5") (d #t) (k 0)) (d (n "rustfmt-wrapper") (r "^0.2") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (f (quote ("bigdecimal" "chrono" "url" "uuid1"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_yaml") (r "^0.9.4") (d #t) (k 0)) (d (n "slog") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-async") (r "^2.7.0") (d #t) (k 0)) (d (n "slog-json") (r "^2.6.1") (d #t) (k 0)) (d (n "slog-scope") (r "^4.4.0") (d #t) (k 0)) (d (n "slog-stdlog") (r "^4.1.1") (d #t) (k 0)) (d (n "slog-term") (r "^2.9.0") (d #t) (k 0)) (d (n "test-context") (r "^0.1.4") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "url") (r "^2.2.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "1jyy65l0xaqnsiikfr0al7665ps70l1x32vhmy85cj5nwpm6h08j")))

