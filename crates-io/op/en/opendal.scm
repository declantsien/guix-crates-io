(define-module (crates-io op en opendal) #:use-module (crates-io))

(define-public crate-opendal-0.0.0 (c (n "opendal") (v "0.0.0") (h "1brpxghixyxr729j7iqj2435drzclg1wdg8k7f6qssa1l92jx9z9") (y #t)))

(define-public crate-opendal-0.0.1 (c (n "opendal") (v "0.0.1") (d (list (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.6.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0bqlywm4cx4nq9gm1wdfq1whhb160zr8vsh1n3kpdcp3qqavs1ki")))

(define-public crate-opendal-0.0.2 (c (n "opendal") (v "0.0.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.6.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "07zw71i21niapgrq1psgaa7w1d9srs27r6aqbx4yyw3fhi4g8mbq")))

(define-public crate-opendal-0.0.3 (c (n "opendal") (v "0.0.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.6.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0zypzhqjv9pxbz1dd9aks5aavlfr6rmn8d0yd95ylsiv4xgddjr6")))

(define-public crate-opendal-0.0.4 (c (n "opendal") (v "0.0.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.6.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "blocking") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0fsya4j7ah08qb5h3hm9sbssdyj874y3pl0c62x8bh42gfk37mqd")))

(define-public crate-opendal-0.0.5 (c (n "opendal") (v "0.0.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.6.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "blocking") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0zjl5hmr70k9rhj2ss0b30hl957kp5s71llap6yic1w3rpg5zyrv")))

(define-public crate-opendal-0.1.0 (c (n "opendal") (v "0.1.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1.52") (d #t) (k 0)) (d (n "aws-config") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6.0") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36.0") (d #t) (k 0)) (d (n "aws-types") (r "^0.6.0") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "blocking") (r "^1.1.0") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.16") (f (quote ("stream"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16.1") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0rs002nll2qq2xl52gs9sf9k5iijfg0dgg2df6sqfxz3j0cc91n1")))

(define-public crate-opendal-0.1.1 (c (n "opendal") (v "0.1.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.6") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36") (d #t) (k 0)) (d (n "aws-types") (r "^0.6") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "033mid7cpr9sqp6ds2k8aq6nw0fk82rf2qkivvf9cn3kmg7r9ihm")))

(define-public crate-opendal-0.1.2 (c (n "opendal") (v "0.1.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.6") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.6") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.6") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.36") (d #t) (k 0)) (d (n "aws-types") (r "^0.6") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0s77zpai4bfmvppqiqk3vwhyf9fjb50gs1px0hl1wxv0n717v8zv")))

(define-public crate-opendal-0.1.3 (c (n "opendal") (v "0.1.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.8") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.8") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.8") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.38") (d #t) (k 0)) (d (n "aws-types") (r "^0.8") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1fg2x04z3ckfp673052f147np9wikp8sywskcvzq55bsvf34rxi8")))

(define-public crate-opendal-0.1.4 (c (n "opendal") (v "0.1.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.8") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.8") (d #t) (k 0)) (d (n "aws-http") (r "^0.8") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.8") (d #t) (k 0)) (d (n "aws-sig-auth") (r "^0.8") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.8") (d #t) (k 0)) (d (n "aws-smithy-client") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http-tower") (r "^0.38") (d #t) (k 0)) (d (n "aws-types") (r "^0.8") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bitflags") (r "^1") (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "18mp65a3x62slf6azg0ackv86k69w47x5mj6vn34g52kar6zkdmb")))

(define-public crate-opendal-0.2.0 (c (n "opendal") (v "0.2.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.8") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.8") (d #t) (k 0)) (d (n "aws-http") (r "^0.8") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.8") (d #t) (k 0)) (d (n "aws-sig-auth") (r "^0.8") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.8") (d #t) (k 0)) (d (n "aws-smithy-client") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http-tower") (r "^0.38") (d #t) (k 0)) (d (n "aws-types") (r "^0.8") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0f4qar8gxrzhdxmvil9aywh68kab4j17k4m1b1f9nypdajb18jvh")))

(define-public crate-opendal-0.2.1 (c (n "opendal") (v "0.2.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.8") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.8") (d #t) (k 0)) (d (n "aws-http") (r "^0.8") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.8") (d #t) (k 0)) (d (n "aws-sig-auth") (r "^0.8") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.8") (d #t) (k 0)) (d (n "aws-smithy-client") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http-tower") (r "^0.38") (d #t) (k 0)) (d (n "aws-types") (r "^0.8") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "blocking") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.16") (f (quote ("full"))) (d #t) (k 2)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0drax34pdw893nalvvf33qv4rynpmclzmzyydqp4dgwyg64cncbz")))

(define-public crate-opendal-0.2.2 (c (n "opendal") (v "0.2.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.8") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.8") (d #t) (k 0)) (d (n "aws-http") (r "^0.8") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.8") (d #t) (k 0)) (d (n "aws-sig-auth") (r "^0.8") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.8") (d #t) (k 0)) (d (n "aws-smithy-client") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http-tower") (r "^0.38") (d #t) (k 0)) (d (n "aws-types") (r "^0.8") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "143qf59vksq2hlx2in2wcqpprnjq0gynjqljwdhsm1695z7py0i3")))

(define-public crate-opendal-0.2.3 (c (n "opendal") (v "0.2.3") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "aws-config") (r "^0.8") (d #t) (k 0)) (d (n "aws-endpoint") (r "^0.8") (d #t) (k 0)) (d (n "aws-http") (r "^0.8") (d #t) (k 0)) (d (n "aws-sdk-s3") (r "^0.8") (d #t) (k 0)) (d (n "aws-sig-auth") (r "^0.8") (d #t) (k 0)) (d (n "aws-sigv4") (r "^0.8") (d #t) (k 0)) (d (n "aws-smithy-client") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http") (r "^0.38") (d #t) (k 0)) (d (n "aws-smithy-http-tower") (r "^0.38") (d #t) (k 0)) (d (n "aws-types") (r "^0.8") (f (quote ("hardcoded-credentials"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("stream"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "068bf2hwhii5nwwih121g10a2arxkq2adww76hfhdhk82i1a10n5")))

(define-public crate-opendal-0.2.4 (c (n "opendal") (v "0.2.4") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1m76k8hqmwx19242sfgkgn4ar9200jfpzrn3mwbnb93920nh4hf6")))

(define-public crate-opendal-0.2.5 (c (n "opendal") (v "0.2.5") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1aj9sqlbi0y8pwxncsl37raif1awydcba451031016slihflpkr1")))

(define-public crate-opendal-0.3.0 (c (n "opendal") (v "0.3.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bstr") (r "^0.2") (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "tower") (r "^0.4") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "18gs2bwzzq1dyd9xy05wf8d6wjm6f7lfws331b550ynyqmng4k0w")))

(define-public crate-opendal-0.4.0 (c (n "opendal") (v "0.4.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1m8s8wdyb62gxini7zc7knk6hzhk8jcjsbhc21hnyswy3m46x2hj")))

(define-public crate-opendal-0.4.1 (c (n "opendal") (v "0.4.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1hmn23yylvxcp82dwq46adr5dr7qvg0x2yzk0rjj17ssvxag2d6d")))

(define-public crate-opendal-0.4.2 (c (n "opendal") (v "0.4.2") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0kwb1n2dhcp55w5gl76vzwkfh4ghd47qnpafrlirxgmk4mqc3cg6")))

(define-public crate-opendal-0.5.0 (c (n "opendal") (v "0.5.0") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "15ddiw9mc7pfr3xkjag7639l17qchs451l33adz19d0x56gzyx6p") (f (quote (("compress" "async-compression"))))))

(define-public crate-opendal-0.5.1 (c (n "opendal") (v "0.5.1") (d (list (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 2)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.1") (d #t) (k 2)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3.7") (d #t) (k 0)) (d (n "tokio") (r "^1.17") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1hcjkni5v2vjd2cp9qnpi26zs1jc8hdc7r3rv9d2f45msfykjq66") (f (quote (("compress" "async-compression"))))))

(define-public crate-opendal-0.5.2 (c (n "opendal") (v "0.5.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^0.8.2") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0hgsshzympxapaqp3assgmblnsi7zv09ag0pryfj68za13znsss9") (f (quote (("compress" "async-compression"))))))

(define-public crate-opendal-0.6.0 (c (n "opendal") (v "0.6.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "02vxrzsn79wpj7bb15vh2cjl9yhzx5m0s7zmf5qyiarcca6mlj0v") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.6.1 (c (n "opendal") (v "0.6.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0n91dfq2y53p56bw58q3civmi2n7p8043kzibm6lk0pi91l4mqzn") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.6.2 (c (n "opendal") (v "0.6.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1qrwas1h9n6yqhcg8cvcrzl42na2s1d16n94s34qlf4xm7jsqj9n") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.6.3 (c (n "opendal") (v "0.6.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.12") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.22.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "0w158p11z8m6c2l5gs5vlch9i772yk2mgixsln227kivyrrm0qwh") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.7.0 (c (n "opendal") (v "0.7.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "18f17vrbiswn62rrwmy0jriq6z4arjx8nj6idxk2mjlp25ylkm4n") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.7.1 (c (n "opendal") (v "0.7.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.18.1") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.10") (f (quote ("stream"))) (d #t) (k 0)) (d (n "roxmltree") (r "^0.14.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1bbbmavxzyinvj5haankdxj1iscim7jzxgrb1md25xkxkw88dy5f") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.7.2 (c (n "opendal") (v "0.7.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.3") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "069h76a05xq69gysjmc86c2289qck1ijkqrk1l4f6nann2kkd3ij") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.7.3 (c (n "opendal") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "1aq407515gknbr0cpcdavi6wl3jjahl6s9cv7hkfqbj7y6mhcp4z") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.8.0 (c (n "opendal") (v "0.8.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)))) (h "03d9gymjhcwwgbb0jkixa29xbdp3ll85is0p7d6q34arj76mx25q") (f (quote (("testing" "uuid") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.9.0 (c (n "opendal") (v "0.9.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.1.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.1.2") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "05v9s3wrgswmgd8yn08wmqn733bzkqhbb4l29iz1grfx398zii4w") (f (quote (("testing" "uuid") ("services-http" "radix_trie") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.9.1 (c (n "opendal") (v "0.9.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.1.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "1wniwgq6kqscwk488kicjqgzpcfcyl21cimsxx1g3d6h9w1q5sg9") (f (quote (("testing" "uuid") ("services-http" "radix_trie") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.10.0 (c (n "opendal") (v "0.10.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "flagset") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "11za4s2gaf2p8kgxal65l800hvn9162jf7chd7cqvadq6ml8iknn") (f (quote (("testing" "uuid") ("services-http" "radix_trie") ("services-hdfs" "hdrs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.11.0 (c (n "opendal") (v "0.11.0") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "flagset") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "1wkl65pq1zz75cknq1bbkf23p0jrzf38p85fzg99zkw49n57w2kp") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.11.1 (c (n "opendal") (v "0.11.1") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "flagset") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "0zrl05q836ii5fmni8mbip1bbqfvry2r1ikpq0gl5a74gvwac7jb") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.11.2 (c (n "opendal") (v "0.11.2") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "flagset") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.18") (f (quote ("full"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.19.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "0w2kv956p2lm89fcj7243ddx5ccr282lgw7adph3v9sx1ibg8kqp") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.11.3 (c (n "opendal") (v "0.11.3") (d (list (d (n "anyhow") (r "^1.0.56") (d #t) (k 0)) (d (n "anyhow") (r "^1.0.56") (d #t) (k 2)) (d (n "async-compat") (r "^0.2.1") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1.53") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bytes") (r "^1.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3.5") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15.0") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15.0") (d #t) (k 2)) (d (n "env_logger") (r "^0.9.0") (d #t) (k 2)) (d (n "flagset") (r "^0.4.3") (d #t) (k 0)) (d (n "futures") (r "^0.3.21") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.4") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.6") (d #t) (k 0)) (d (n "hyper") (r "^0.14.20") (f (quote ("http1" "http2" "client" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5.0") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 2)) (d (n "log") (r "^0.4.16") (d #t) (k 0)) (d (n "md5") (r "^0.7.0") (d #t) (k 0)) (d (n "metrics") (r "^0.20.0") (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (d #t) (k 0)) (d (n "num-traits") (r "^0.2.14") (d #t) (k 2)) (d (n "once_cell") (r "^1.10.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.0") (d #t) (k 0)) (d (n "paste") (r "^1.0.7") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1.0") (d #t) (k 0)) (d (n "pin-project") (r "^1.0.10") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23.0") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "reqsign") (r "^0.3.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.136") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.79") (d #t) (k 2)) (d (n "sha2") (r "^0.10.2") (d #t) (k 2)) (d (n "size") (r "^0.4.0") (d #t) (k 2)) (d (n "thiserror") (r "^1.0.30") (d #t) (k 0)) (d (n "time") (r "^0.3.9") (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("fs" "macros"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20.1") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5.13") (d #t) (k 2)))) (h "0cq50jjq9rq3x9h9i62y25iw6ig1v4rbl4s79p9qs2q518h3a2j7") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.11.4 (c (n "opendal") (v "0.11.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (f (quote ("http1" "http2" "client" "runtime" "stream"))) (d #t) (k 0)) (d (n "hyper-rustls") (r "^0.23") (f (quote ("rustls-native-certs"))) (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "hyper-tls") (r "^0.5") (d #t) (k 2)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "09fph6j8vil7fvmx1qk8iypivi4ghh7h1q0qyz6g1vgybn6095gp") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("rustls" "hyper-rustls") ("retry" "backon") ("default" "hyper-tls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.12.0 (c (n "opendal") (v "0.12.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^2.0.0-opendal.1") (d #t) (k 0) (p "isahc-opendal-workaround")) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (d #t) (k 0)) (d (n "minitrace") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0hsk1dqv3nzz2i25ybhyrz1l3bffqivlqcm21h6v4gj93vqd7b4z") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("rustls" "isahc/rustls-tls" "isahc/rustls-tls-native-certs") ("retry" "backon") ("compress" "async-compression"))))))

(define-public crate-opendal-0.13.0 (c (n "opendal") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^2.0.0-opendal.1") (d #t) (k 0) (p "isahc-opendal-workaround")) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "08gdvbz7bi53xf67zq7a0ys96ay0s9aniv5l2njf9ywmrsn0l1hc") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("rustls" "isahc/rustls-tls" "isahc/rustls-tls-native-certs") ("retry" "layers-retry") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.13.1 (c (n "opendal") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^2.0.0-opendal.1") (d #t) (k 0) (p "isahc-opendal-workaround")) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "quick-xml") (r "^0.23") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "11zwahhxmhfdpqbjw26wsn6ixf1n4sqzkrwyi2z0ykim020apda7") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("rustls" "isahc/rustls-tls" "isahc/rustls-tls-native-certs") ("retry" "layers-retry") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.14.0 (c (n "opendal") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^2.0.0-opendal.1") (d #t) (k 0) (p "isahc-opendal-workaround")) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "quick-xml") (r "^0.23") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1agpyq2lzczsnd86y655hr8m7xbbq6d2vx2q9ffpz9ckqapcbk13") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("rustls" "isahc/rustls-tls" "isahc/rustls-tls-native-certs") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.14.1 (c (n "opendal") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^2.0.0-opendal.1") (d #t) (k 0) (p "isahc-opendal-workaround")) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "quick-xml") (r "^0.24") (f (quote ("serialize"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "08hm6b5z5szra3v60jm9ywg08m8pp1wqg9vp89cj78i95srv46wy") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("serde" "time/serde") ("rustls" "isahc/rustls-tls" "isahc/rustls-tls-native-certs") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.15.0 (c (n "opendal") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (f (quote ("async" "async_tokio" "html_reports"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "isahc") (r "^2.0.0-opendal.1") (d #t) (k 0) (p "isahc-opendal-workaround")) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "quick-xml") (r "^0.24") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "radix_trie") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1lgm0fcal5bzx42lp7ywi0wd1xmqrnkgipr1vk6jx5cijma22wm3") (f (quote (("services-http" "radix_trie") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("rustls" "isahc/rustls-tls" "isahc/rustls-tls-native-certs") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.16.0 (c (n "opendal") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream"))) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2.5") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "101pbcchy90kqmahyswkkqzh29mhn5jvri6kfhfx6zm1a82llyrg") (f (quote (("services-ipfs" "prost") ("services-http") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("rustls" "reqwest/rustls-tls" "reqwest/rustls-tls-native-roots" "ureq/rustls" "ureq/rustls-native-certs") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.17.0 (c (n "opendal") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "09ngmw78mqns62jijn8mmwys8d6c3p553mzh4qm21agjgraf4nz2") (f (quote (("services-ipfs" "prost") ("services-http") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.17.1 (c (n "opendal") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "15gi29jxwzx9078261hsp85x07z842w389qvi4s0d3hnwp60zlz6") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-http") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.17.2 (c (n "opendal") (v "0.17.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "09ilz2l391hq0dfsn8z24wrhvp8ikymjxjs7mrxr305bidjscczs") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-http") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.17.3 (c (n "opendal") (v "0.17.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0ibpb0h687qbdz82mhj5qcahkp8q1qhvm1v37y9aifqfn8d6ihbv") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-http") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.17.4 (c (n "opendal") (v "0.17.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1kgjjla0q4nykiy1dnnp5rl4krmqawdnl72fk8jp9ddlcsx2zb6i") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-http") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.18.0 (c (n "opendal") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0303hwsgckb4gp2mcwq29gbidzr8xqlk9frkyr00nqnnq2y2w04i") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-metadata-cache" "bincode" "serde") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing" "layers-metadata-cache") ("compress" "async-compression"))))))

(define-public crate-opendal-0.18.1 (c (n "opendal") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1.10") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "percent-encoding") (r "^2.1") (d #t) (k 0)) (d (n "pin-project") (r "^1.0") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2.5") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0fxgdnycsfzirm3vx09pfwvwhdgild7zqm7nz928n1azhd4n59x1") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry" "backon") ("layers-metrics" "metrics") ("layers-metadata-cache" "bincode" "serde") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing" "layers-metadata-cache") ("compress" "async-compression"))))))

(define-public crate-opendal-0.18.2 (c (n "opendal") (v "0.18.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("r2d2" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0c6rpc46f621lhp3j3214ir8y07s90ajg0cjp334r62hknqfmby0") (f (quote (("services-redis" "redis" "bincode" "serde") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde" "time/serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache" "bincode" "serde") ("layers-all" "layers-metrics" "layers-retry" "layers-tracing" "layers-metadata-cache") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.0 (c (n "opendal") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.5.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "17g3ln0xlnzrqardpwpybp830aij8yk2g9x7ngkns0vlh9gyqk51") (f (quote (("services-redis" "redis") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.1 (c (n "opendal") (v "0.19.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1r6crvk2qs99rcdqy3s48lzppsjcicsi78z5pb5kiy3q02c7ny54") (f (quote (("services-redis" "redis") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.2 (c (n "opendal") (v "0.19.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0428lc3y05jds9nmlzd966g5m0n98xqqm6zdv1kk4pmjvd4w6c8z") (f (quote (("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.3 (c (n "opendal") (v "0.19.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md5") (r "^0.7") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1cqwa0jj8p59rxbzsnbwis38y06hnwjxqn56snn9a082jx62cxf4") (f (quote (("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.4 (c (n "opendal") (v "0.19.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.25") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.21") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "trust-dns" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1sc7b7vp5jw30f15fv9ck0wh4gyf80fq144m514b4ixf22szmmgl") (f (quote (("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.5 (c (n "opendal") (v "0.19.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0avjvds2qnf0lb8f3ddfj32m5817xw3pai567w1awwmzy4cdf8bi") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.6 (c (n "opendal") (v "0.19.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "06r78d97vcfiyjmvyn35qw3472wzayyl589c82vn3zhldb8fzhgv") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.7 (c (n "opendal") (v "0.19.7") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1bq8gyvprk2y73agy271ds3n53av4z9bx61mvw7gn3n326f6w29m") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("serde") ("layers-tracing" "tracing") ("layers-retry") ("layers-metrics" "metrics") ("layers-metadata-cache") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.19.8 (c (n "opendal") (v "0.19.8") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream" "rustls-tls-native-roots"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (f (quote ("rustls-native-certs"))) (d #t) (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1c44m2mxibab94ch2s03c0s15mp6s3f0gkw057n1z1jj202f6nc7") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("compress" "async-compression"))))))

(define-public crate-opendal-0.20.0 (c (n "opendal") (v "0.20.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1jqzilflgaqgi9c4m4dllcj0qydnbwfw4cx8lrmsl60bxj8ygr6d") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.20.1 (c (n "opendal") (v "0.20.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1075vg86rpg2yi1li7kaz4kzbinmh87mljmfmbxi07giiivppcb3") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.21.0 (c (n "opendal") (v "0.21.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0m42yk0q08a7n68xpdcrzr8w4gly6jngbq3jp5ynfcqhvwml14z0") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.21.1 (c (n "opendal") (v "0.21.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1sxf8adhhhs7rmf2ahwy0lwgb9v8ajvmpvm50y8rhax11kiy36wc") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.21.2 (c (n "opendal") (v "0.21.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 2)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)) (d (n "zstd-sys") (r "^2") (f (quote ("bindgen"))) (o #t) (d #t) (k 0)))) (h "1lmr9lfh776i41p18icj8vv9v70rsakalmkqbfbvfaagqgxrgf17") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb" "zstd-sys") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression" "zstd-sys"))))))

(define-public crate-opendal-0.22.0 (c (n "opendal") (v "0.22.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0nza951c8jl4887xk8py3679sxdb2ir66pqb5z95fhws1829pi13") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.22.1 (c (n "opendal") (v "0.22.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0f8nyfw3l8rd80kz3gk07k37vm2sx2v9sr1z3r13gn8gg63z0xli") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.22.2 (c (n "opendal") (v "0.22.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "06k0waaprjiwfdnz7bknp3lfhb8qn1afcvs4mw7kq0ywwbn6ikp2") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression"))))))

(define-public crate-opendal-0.22.3 (c (n "opendal") (v "0.22.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.13") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.6.9") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "11r9880cp3n85a37vshlw0z18sbqyrgx710svb2m9ppnlqsirc8d") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (r "1.60")))

(define-public crate-opendal-0.22.4 (c (n "opendal") (v "0.22.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0whhlqjf2shd6cawhpkrk3nmf35fq98p6z7q36a35byq4nzglbjj") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (r "1.60")))

(define-public crate-opendal-0.22.5 (c (n "opendal") (v "0.22.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0gkfwnsqvm8w7lni065pq9b2havjcqiv9dq243n3d64iyivzzldh") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (r "1.60")))

(define-public crate-opendal-0.22.6 (c (n "opendal") (v "0.22.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "01sg4dl2lqablchz0abcikzmb82rkwk3d2ligfyiqjk4snqh68n3") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (r "1.60")))

(define-public crate-opendal-0.23.0 (c (n "opendal") (v "0.23.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.26") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "=4.4") (f (quote ("async-secure"))) (o #t) (d #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0rk5big6nrz62qra6zqrlycq58gwnfcrvqpwdhm91cdcknyxq1mh") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (r "1.60")))

(define-public crate-opendal-0.24.0 (c (n "opendal") (v "0.24.0") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0y186syqr7r4sbqcp1bsrwyb4cqfaw0zlgddjmfdgyl9h9y5wlaj") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8" "async-tls") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs" "suppaftp?/async-rustls") ("native-tls" "reqwest/native-tls" "ureq/native-tls" "suppaftp?/async-rustls")))) (r "1.60")))

(define-public crate-opendal-0.24.1 (c (n "opendal") (v "0.24.1") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "062f03hj5rxbis6hwxjhdvcxfc3g4wx7a41m43z0grbsqi93ms88") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("services-rocksdb" "rocksdb") ("services-redis" "redis") ("services-moka" "moka") ("services-ipfs" "prost") ("services-hdfs" "hdrs") ("services-ftp" "suppaftp" "bb8" "async-tls") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("layers-tracing" "tracing") ("layers-metrics" "metrics") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs" "suppaftp?/async-rustls") ("native-tls" "reqwest/native-tls" "ureq/native-tls" "suppaftp?/async-rustls")))) (r "1.60")))

(define-public crate-opendal-0.24.2 (c (n "opendal") (v "0.24.2") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1hl1hyai6v434xma6z7y3sxzg952y82391ssiyr7669prwj1fm4p") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.24.3 (c (n "opendal") (v "0.24.3") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.20") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-memcached") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "024vk7g7i51bhjc0a56cmzaihaiz8k1bacxi0d1flsd5nf2aqz2a") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8-memcached") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.24.4 (c (n "opendal") (v "0.24.4") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0lbnsb2nbhbvxyh8jclfr340avw6hlvvz17pddcna0wcnj1n5snr") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.24.5 (c (n "opendal") (v "0.24.5") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.1.7") (f (quote ("futures-io"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0zwwns9i1xm96dwm13fqmdz4rac6asm5pgy23cvh6v44i6hn8jjy") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.24.6 (c (n "opendal") (v "0.24.6") (d (list (d (n "anyhow") (r "^1.0") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenv") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenv") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2") (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.7.4") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "06ar750fn5d35yr8r688680vxpp3fpr3nsz0npj0qr2ml8870r9s") (f (quote (("unwind-safe") ("trust-dns" "reqwest/trust-dns") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.25.0 (c (n "opendal") (v "0.25.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0lxylm1739yq34c7idb0f72siiga5l61b620ll4r55z9z20lx2pr") (f (quote (("unwind-safe") ("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.25.1 (c (n "opendal") (v "0.25.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0g18r9rrdvr09h4q6m6v7j8xlkd4003vgln2q9nmahkm0lx9v0kk") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.25.2 (c (n "opendal") (v "0.25.2") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0f678i212xsjz6v1gsqzwnr0vhallmriixn8wszddn2jli3941f2") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.26.0 (c (n "opendal") (v "0.26.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1s539phj3cw6w5xnkignd0ndj45sd34jn9wivwg9wix6g4xahn3k") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.26.1 (c (n "opendal") (v "0.26.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1k564sx9n1zavvrfv5by6vgak1b5jvg291r3hrw1pk53izzsm3ws") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics")))) (r "1.60")))

(define-public crate-opendal-0.26.2 (c (n "opendal") (v "0.26.2") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.2") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^2.0.0-rc.2") (f (quote ("serde"))) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1gjyd3fi9jhdmlh2lzz1rngsrmmgw0b78n4khb78glgyr4yd63n4") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.27.0 (c (n "opendal") (v "0.27.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.9") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.19") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0l3jvw29cwvfigszz9r6qsx8kfycdi65nyvabh2kkqqspfla32g8") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.27.1 (c (n "opendal") (v "0.27.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.2") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3.10") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0j9y9g7232dzq9ivbnsq75sifl2v2in1z800rx0i1128lj703wir") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.27.2 (c (n "opendal") (v "0.27.2") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "14gxbb7i6sb7r9lyywb9a2fa9jcy1nspqda3jvhq711gdy9pnvzg") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.28.0 (c (n "opendal") (v "0.28.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-compression") (r "^0.3.15-issue-150") (f (quote ("futures-io" "all-algorithms"))) (o #t) (d #t) (k 0) (p "async-compression-issue-150-workaround")) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "065ri0313p20xqaki2md1mndikzb4mcwqqkpqczpk1svm2f79j59") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls") ("compress" "async-compression")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.29.0 (c (n "opendal") (v "0.29.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1ryp7asl7s424286pqmxhrzr2kp2jbcbgm3xlf06w7s4qvijl1ff") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.29.1 (c (n "opendal") (v "0.29.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "memcache-async") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0dw7irn94a5il6pf5lbpi556kb70j0kw2d709y7bc5s5xqsmgbn0") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8" "dep:memcache-async") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.30.0 (c (n "opendal") (v "0.30.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "librocksdb-sys") (r "=6.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.15") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0rv9b9gc49g8n2lmkkwafvrg5jb6dy5prhsnj8fngvymwafvhyd6") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb" "dep:librocksdb-sys") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.30.1 (c (n "opendal") (v "0.30.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "librocksdb-sys") (r "=6.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.15") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1wxa94gkrq59blvy4yjsjdva1bnhzwc73a5zmy6gpa65my9k9dkj") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb" "dep:librocksdb-sys") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.30.2 (c (n "opendal") (v "0.30.2") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.50") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.4.1") (o #t) (d #t) (k 0)) (d (n "librocksdb-sys") (r "=6.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.3") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.15") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.20") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1s7in2na3yc0nnqfvwgsclncyvj0xcglj351lcfvbavfyglimxdk") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb" "dep:librocksdb-sys") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.30.3 (c (n "opendal") (v "0.30.3") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "librocksdb-sys") (r "=6.11") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.15") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1ln6nhixc0n88crh0x2xfdsixq70issvwvfgl3rmxw0i2gdvxlgc") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb" "dep:librocksdb-sys") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.30.4 (c (n "opendal") (v "0.30.4") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r ">=0.3.10, <=0.3.17") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0vy2x1c1n1ngdq26gz8r4phzab8k4b1b0iicy89kzwr6bv3w225w") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.30.5 (c (n "opendal") (v "0.30.5") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.66") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.17") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.16") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.8.5") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "time") (r "^0.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("fs"))) (d #t) (k 0)) (d (n "tokio") (r "^1.26") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "trust-dns-resolver") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "ureq") (r "^2") (k 0)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0smlg3wyzryhfhzazc4n7sf8sakc40736cxj3krsyx8ifvqk57d8") (f (quote (("rustls" "reqwest/rustls-tls-native-roots" "ureq/tls" "ureq/native-certs") ("native-tls-vendored" "reqwest/native-tls-vendored" "ureq/native-tls") ("native-tls" "reqwest/native-tls" "ureq/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls")))) (s 2) (e (quote (("trust-dns" "reqwest/trust-dns" "dep:trust-dns-resolver") ("services-sled" "dep:sled") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.60")))

(define-public crate-opendal-0.31.0 (c (n "opendal") (v "0.31.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0zq7ja4a3lg69xvnh30bqm644rd6hcrxnsiskkp27gjqs67sz5ng") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-tracing") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-sled" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-sled" "dep:sled") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.31.1 (c (n "opendal") (v "0.31.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "12xll7yf4x3ppw279xgwvwr8c4n8bgan4nzirqjg93ygrg0wl7ba") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-sled" "dep:sled") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.32.0 (c (n "opendal") (v "0.32.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "045pxmz99xqj0y9df2j2ifpmypd03fb8p2bih709v6q8nmq7jz4c") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-madsim") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.33.0 (c (n "opendal") (v "0.33.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0kw3mz3bhy0i4k5634w5hr4gi0h55lqbx5pn6pcb0vsxz0qhnh75") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.33.1 (c (n "opendal") (v "0.33.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "04j5v5fm4d0abp29fm9w30qdyp1r4q58m1hg47vb8mh6a08jnn4c") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.33.2 (c (n "opendal") (v "0.33.2") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("multipart" "stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0qigs68xk0fyrxp3fkvjqa8dzkrmpyc98q231f2q1yqvgdnisjp3") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-supabase") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.33.3 (c (n "opendal") (v "0.33.3") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "owning_ref") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.9.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "174p1w51qrdwcc15vnn1blbdyinhwfbxasf3qq1wbqd70xy6m5rp") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:bb8" "dep:owning_ref") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.64")))

(define-public crate-opendal-0.34.0 (c (n "opendal") (v "0.34.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.12.2") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "owning_ref") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.10.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1c4iz6yz3ys1asbgkg66z8bh55fc3h1n3g2vh94pg2kq9xy8fp00") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:bb8" "dep:owning_ref") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.35.0 (c (n "opendal") (v "0.35.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.12.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.20.1") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1kkwv3ynk6mp8s7yrfil15rdjsacmcd315dgjkm9ig70h1k4c3s4") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.36.0 (c (n "opendal") (v "0.36.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.12.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0gdvj6yayqlrh9rg9ps7hkbscdmywc0gy5hl5qrkra699j6icm9m") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.36.1 (c (n "opendal") (v "0.36.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0ych5j55jd1hp4psh52qk3j7c2rs908g50jml197zl1pwbafkd40") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (y #t) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.37.0 (c (n "opendal") (v "0.37.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "149z9acrinha77ynmnjsd3wvd77n673xaxizpx83bm9pwsgxwdva") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.38.0 (c (n "opendal") (v "0.38.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.24") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.0") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.22") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "13207i4b5llqc80rlh19sb87g824jhisisqyz18sd9k02yz4fzvi") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-redb" "dep:redb") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.38.1 (c (n "opendal") (v "0.38.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.4.1") (o #t) (d #t) (k 0)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.27") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.13.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "02bawxdsqlbya171byww31wjw07gw9mbksa9i56c0qi106v4bxjd") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis" "dep:redis") ("services-redb" "dep:redb") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand")))) (r "1.65")))

(define-public crate-opendal-0.39.0 (c (n "opendal") (v "0.39.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.0") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.2") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.26") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.11") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.5") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^2.5.0") (o #t) (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.5") (f (quote ("enable"))) (d #t) (k 2)) (d (n "minitrace-jaeger") (r "^0.5") (d #t) (k 2)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.5") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.19") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23") (f (quote ("tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.17") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "113b7azdr49lkqr048nk7mxl3y2rdj2sp67kfhdsnxjr1r35xn8s") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree") ("docs") ("default" "rustls" "services-azblob" "services-azdfs" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-rustls" "services-redis" "redis?/tokio-rustls-comp") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis") ("services-redb" "dep:redb") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-etcd" "dep:etcd-client") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdfs" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree")))) (r "1.65")))

(define-public crate-opendal-0.40.0 (c (n "opendal") (v "0.40.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.11") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0.1") (o #t) (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.5") (f (quote ("enable"))) (d #t) (k 2)) (d (n "minitrace-jaeger") (r "^0.5") (d #t) (k 2)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.9") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.29") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1ib6jfbrv9lkrwi4xfsj4y3ys6avyjvpyq9p5ypd6qdjpacp5fnx") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("docs") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-rustls" "services-redis" "redis?/tokio-rustls-comp") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace")))) (r "1.65")))

(define-public crate-opendal-0.41.0 (c (n "opendal") (v "0.41.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.11") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "hyper") (r "^0.14") (d #t) (k 0)) (d (n "lazy-regex") (r "^3.0.1") (o #t) (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.5") (f (quote ("enable"))) (d #t) (k 2)) (d (n "minitrace-jaeger") (r "^0.5") (d #t) (k 2)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.9") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (f (quote ("trace"))) (k 2)) (d (n "opentelemetry-jaeger") (r "^0.18") (d #t) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "paste") (r "^1") (d #t) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.19") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0flmpwmgq9wr4q2vmm9ww6ixr0a5dkhc3b618jrv7rbdmzq4h6z3") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("docs") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs")))) (s 2) (e (quote (("services-wasabi" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-sqlite" "dep:rusqlite") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-rustls" "services-redis" "redis?/tokio-rustls-comp") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:lazy-regex" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace")))) (r "1.65")))

(define-public crate-opendal-0.42.0 (c (n "opendal") (v "0.42.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.4") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.7.0") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.9.9") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.13.9") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.20") (f (quote ("trace"))) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.1") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^4.5") (f (quote ("async-secure" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1ya3r979dmvdnhx4jglz6zilw8sacxbb9sqlhamxbkpj50zna7zc") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-azfile") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("docs") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy") ("services-sqlite" "dep:rusqlite" "dep:r2d2") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace")))) (r "1.67")))

(define-public crate-opendal-0.43.0 (c (n "opendal") (v "0.43.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^11.6") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "governor") (r "^0.5") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.10") (f (quote ("future"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.7.0") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.4") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.21.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.4") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.2") (f (quote ("async-secure" "async-rustls" "async-native-tls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0an532q8ihaxxdl2przwbqjhkp9rrd8cdg211wm5fasfr5dw4jn0") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-b2") ("services-azfile") ("services-alluxio") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("docs") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy") ("services-sqlite" "dep:rusqlite" "dep:r2d2") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace")))) (r "1.67")))

(define-public crate-opendal-0.44.0 (c (n "opendal") (v "0.44.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^12.0") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "governor") (r "^0.6.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.12") (f (quote ("future" "sync"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.7.0") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.6") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.2") (f (quote ("async-secure" "rustls" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0rpz2322z8991jm4jzrb6mmlskz5r2aj4kl628i5v2phisj3c9y3") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-seafile") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-huggingface") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-b2") ("services-azfile") ("services-alluxio") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("docs") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy") ("services-upyun" "dep:hmac" "dep:sha1") ("services-sqlite" "dep:rusqlite" "dep:r2d2") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace")))) (r "1.67")))

(define-public crate-opendal-0.44.1 (c (n "opendal") (v "0.44.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-compat") (r "^0.2") (d #t) (k 0)) (d (n "async-tls") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^12.0") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dirs") (r "^5.0.1") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "governor") (r "^0.6.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.12") (f (quote ("future" "sync"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.7.0") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "pin-project") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.6") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.2") (f (quote ("async-secure" "rustls" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1h3r8p1hxcyvmsyrkq7gyrf30dvgvhgibsi7kpjlmjj4gcpxf2mw") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-seafile") ("services-onedrive") ("services-memory") ("services-ipmfs") ("services-huggingface") ("services-http") ("services-ghac") ("services-gdrive") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-chainsafe") ("services-b2") ("services-azfile") ("services-alluxio") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy") ("services-upyun" "dep:hmac" "dep:sha1") ("services-sqlite" "dep:rusqlite" "dep:r2d2") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:dirs") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace")))) (r "1.67")))

(define-public crate-opendal-0.44.2 (c (n "opendal") (v "0.44.2") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-tls") (r "^0.12.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^12.0") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "governor") (r "^0.6.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdfs-native") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.12") (f (quote ("future" "sync"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.7.0") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.6") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.2") (f (quote ("async-secure" "rustls" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("sync" "rt"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1624kffzcqlmvwsxyak20ldn5bkp2q3plcvdc2zzlbsd5mjj9y2a") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-yandex-disk") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-seafile") ("services-pcloud") ("services-onedrive") ("services-memory") ("services-koofr") ("services-ipmfs") ("services-icloud" "internal-path-cache" "internal-http-cookies") ("services-huggingface") ("services-http") ("services-hdfs-native" "hdfs-native") ("services-ghac") ("services-gdrive" "internal-path-cache") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-chainsafe") ("services-b2") ("services-azfile") ("services-alluxio") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace") ("internal-http-cookies" "reqwest/cookies") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy") ("services-upyun" "dep:hmac" "dep:sha1") ("services-sqlite" "dep:rusqlite" "dep:r2d2") ("services-sled" "dep:sled") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace") ("internal-path-cache" "dep:moka")))) (r "1.67")))

(define-public crate-opendal-0.45.0 (c (n "opendal") (v "0.45.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-tls") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^12.0") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "governor") (r "^0.6.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdfs-native") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.12") (f (quote ("future" "sync"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.7.0") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "probe") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.30") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.6") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.3.1") (f (quote ("async-secure" "rustls" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0yn4jd7aqpamqbkbp5fd1wb6kc119plsk61cw9y029m39c6vwl1k") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-yandex-disk") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-seafile") ("services-pcloud") ("services-onedrive") ("services-memory") ("services-koofr") ("services-ipmfs") ("services-icloud" "internal-path-cache") ("services-huggingface") ("services-http") ("services-hdfs-native" "hdfs-native") ("services-ghac") ("services-gdrive" "internal-path-cache") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-chainsafe") ("services-b2") ("services-azfile") ("services-alluxio") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-blocking" "internal-tokio-rt") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace" "layers-blocking") ("internal-tokio-rt" "tokio/rt-multi-thread") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy" "layers-blocking") ("services-upyun" "dep:hmac" "dep:sha1") ("services-sqlite" "dep:rusqlite" "dep:r2d2" "internal-tokio-rt") ("services-sled" "dep:sled" "internal-tokio-rt") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb" "internal-tokio-rt") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb" "internal-tokio-rt") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy" "internal-tokio-rt") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-dtrace" "dep:probe") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace") ("internal-path-cache" "dep:moka")))) (r "1.67")))

(define-public crate-opendal-0.45.1 (c (n "opendal") (v "0.45.1") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-tls") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.1") (d #t) (k 0)) (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.4") (d #t) (k 0)) (d (n "cacache") (r "^13.0") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "governor") (r "^0.6.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdfs-native") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.0") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^0.2.9") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.12") (f (quote ("future" "sync"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.8.1") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "probe") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22.0") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.14.7") (o #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.3.1") (f (quote ("async-secure" "rustls" "async-rustls"))) (o #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0rql81qalfb3yq6fh3ggwaxvhhxaigwjmlnr4ln2vyi3gw3prhaj") (f (quote (("trust-dns" "reqwest/trust-dns") ("services-yandex-disk") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-blob") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-seafile") ("services-pcloud") ("services-onedrive") ("services-memory") ("services-koofr") ("services-ipmfs") ("services-icloud" "internal-path-cache") ("services-huggingface") ("services-http") ("services-hdfs-native" "hdfs-native") ("services-ghac") ("services-gdrive" "internal-path-cache") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-chainsafe") ("services-b2") ("services-azfile") ("services-alluxio") ("rustls" "reqwest/rustls-tls-native-roots") ("native-tls-vendored" "reqwest/native-tls-vendored") ("native-tls" "reqwest/native-tls") ("layers-blocking" "internal-tokio-rt") ("layers-all" "layers-chaos" "layers-metrics" "layers-prometheus" "layers-tracing" "layers-minitrace" "layers-throttle" "layers-await-tree" "layers-async-backtrace" "layers-blocking") ("internal-tokio-rt" "tokio/rt-multi-thread") ("default" "rustls" "services-azblob" "services-azdls" "services-cos" "services-fs" "services-gcs" "services-ghac" "services-http" "services-ipmfs" "services-memory" "services-obs" "services-oss" "services-s3" "services-webdav" "services-webhdfs" "services-azfile")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy" "layers-blocking") ("services-upyun" "dep:hmac" "dep:sha1") ("services-sqlite" "dep:rusqlite" "dep:r2d2" "internal-tokio-rt") ("services-sled" "dep:sled" "internal-tokio-rt") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb" "internal-tokio-rt") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb" "internal-tokio-rt") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy" "internal-tokio-rt") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-cacache" "dep:cacache") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-dtrace" "dep:probe") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace") ("internal-path-cache" "dep:moka")))) (r "1.67")))

(define-public crate-opendal-0.46.0 (c (n "opendal") (v "0.46.0") (d (list (d (n "anyhow") (r "^1.0.30") (f (quote ("std"))) (d #t) (k 0)) (d (n "async-backtrace") (r "^0.2.6") (o #t) (d #t) (k 0)) (d (n "async-tls") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1.68") (d #t) (k 0)) (d (n "atomic_lib") (r "^0.34.5") (o #t) (d #t) (k 0)) (d (n "await-tree") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "backon") (r "^0.4.3") (d #t) (k 0)) (d (n "base64") (r "^0.22") (d #t) (k 0)) (d (n "bb8") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "bb8-postgres") (r "^0.8.1") (o #t) (d #t) (k 0)) (d (n "bytes") (r "^1.6") (d #t) (k 0)) (d (n "cacache") (r "^13.0") (f (quote ("tokio-runtime" "mmap"))) (o #t) (k 0)) (d (n "chrono") (r "^0.4.28") (f (quote ("clock" "std"))) (k 0)) (d (n "compio") (r "^0.10.0") (f (quote ("runtime" "bytes" "polling"))) (o #t) (d #t) (k 0)) (d (n "crc32c") (r "^0.6.5") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (f (quote ("async" "async_tokio"))) (d #t) (k 2)) (d (n "dashmap") (r "^5.4") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "dotenvy") (r "^0.15") (d #t) (k 2)) (d (n "etcd-client") (r "^0.12") (f (quote ("tls"))) (o #t) (d #t) (k 0)) (d (n "flagset") (r "^0.4") (d #t) (k 0)) (d (n "foundationdb") (r "^0.8.0") (f (quote ("embedded-fdb-include"))) (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (f (quote ("std"))) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "governor") (r "^0.6.0") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "hdfs-native") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "hdrs") (r "^0.3.2") (f (quote ("async_file"))) (o #t) (d #t) (k 0)) (d (n "hmac") (r "^0.12.1") (o #t) (d #t) (k 0)) (d (n "hrana-client-proto") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "http") (r "^1.1") (d #t) (k 0)) (d (n "libtest-mimic") (r "^0.6") (d #t) (k 2)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "madsim") (r "^0.2.21") (o #t) (d #t) (k 0)) (d (n "md-5") (r "^0.10") (d #t) (k 0)) (d (n "metrics") (r "^0.20") (o #t) (d #t) (k 0)) (d (n "mini-moka") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "minitrace") (r "^0.6") (f (quote ("enable"))) (d #t) (k 2)) (d (n "moka") (r "^0.12") (f (quote ("future" "sync"))) (o #t) (d #t) (k 0)) (d (n "mongodb") (r "^2.8.1") (f (quote ("tokio-runtime"))) (o #t) (d #t) (k 0)) (d (n "mysql_async") (r "^0.32.2") (f (quote ("default-rustls"))) (o #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "openssh") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "openssh-sftp-client") (r "^0.14.0") (f (quote ("openssh" "tracing"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (k 2)) (d (n "percent-encoding") (r "^2") (d #t) (k 0)) (d (n "persy") (r "^1.4.6") (o #t) (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "probe") (r "^0.5.1") (o #t) (d #t) (k 0)) (d (n "prometheus") (r "^0.13") (f (quote ("process"))) (o #t) (d #t) (k 0)) (d (n "prometheus-client") (r "^0.22.2") (o #t) (d #t) (k 0)) (d (n "prost") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "quick-xml") (r "^0.31") (f (quote ("serialize" "overlapped-lists"))) (d #t) (k 0)) (d (n "r2d2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "redb") (r "^1.1.0") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.23.1") (f (quote ("cluster-async" "tokio-comp" "connection-manager"))) (o #t) (d #t) (k 0)) (d (n "reqsign") (r "^0.15.0") (o #t) (k 0)) (d (n "reqwest") (r "^0.12.2") (f (quote ("stream"))) (k 0)) (d (n "rocksdb") (r "^0.21.0") (o #t) (k 0)) (d (n "rusqlite") (r "^0.29.0") (f (quote ("bundled"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha1") (r "^0.10.6") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 2)) (d (n "size") (r "^0.4") (d #t) (k 2)) (d (n "sled") (r "^0.34.7") (o #t) (d #t) (k 0)) (d (n "suppaftp") (r "^5.3.1") (f (quote ("async-secure" "rustls" "async-rustls"))) (o #t) (k 0)) (d (n "surrealdb") (r "^1.3.0") (f (quote ("protocol-http"))) (o #t) (d #t) (k 0)) (d (n "tikv-client") (r "^0.3.0") (o #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("sync" "io-util"))) (d #t) (k 0)) (d (n "tokio") (r "^1.27") (f (quote ("fs" "macros" "rt-multi-thread"))) (d #t) (k 2)) (d (n "tokio-postgres") (r "^0.7.8") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("env-filter" "tracing-log"))) (d #t) (k 2)) (d (n "uuid") (r "^1") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0i6mv5wm783v6yifs1wikdyxqpwb8cw2s47glvk6b2cf6a94k31j") (f (quote (("services-yandex-disk") ("services-webhdfs") ("services-webdav") ("services-wasabi") ("services-vercel-blob") ("services-vercel-artifacts") ("services-tikv" "tikv-client") ("services-swift") ("services-supabase") ("services-seafile") ("services-pcloud") ("services-onedrive") ("services-memory") ("services-koofr") ("services-ipmfs") ("services-icloud" "internal-path-cache") ("services-huggingface") ("services-http") ("services-hdfs-native" "hdfs-native") ("services-github") ("services-ghac") ("services-gdrive" "internal-path-cache") ("services-fs" "tokio/fs") ("services-dropbox") ("services-dbfs") ("services-d1") ("services-cloudflare-kv") ("services-chainsafe") ("services-b2") ("services-alluxio") ("layers-blocking" "internal-tokio-rt") ("internal-tokio-rt" "tokio/rt-multi-thread") ("default" "reqwest/rustls-tls" "services-memory")))) (s 2) (e (quote (("tests" "dep:rand" "dep:sha2" "dep:dotenvy" "layers-blocking" "services-azblob" "services-fs" "services-http" "services-memory" "services-s3") ("services-upyun" "dep:hmac" "dep:sha1") ("services-surrealdb" "dep:surrealdb") ("services-sqlite" "dep:rusqlite" "dep:r2d2" "internal-tokio-rt") ("services-sled" "dep:sled" "internal-tokio-rt") ("services-sftp" "dep:openssh" "dep:openssh-sftp-client" "dep:bb8") ("services-s3" "dep:reqsign" "reqsign?/services-aws" "reqsign?/reqwest_request") ("services-rocksdb" "dep:rocksdb" "internal-tokio-rt") ("services-redis-native-tls" "services-redis" "redis?/tokio-native-tls-comp") ("services-redis" "dep:redis" "redis?/tokio-rustls-comp") ("services-redb" "dep:redb" "internal-tokio-rt") ("services-postgresql" "dep:tokio-postgres" "dep:bb8" "dep:bb8-postgres") ("services-persy" "dep:persy" "internal-tokio-rt") ("services-oss" "dep:reqsign" "reqsign?/services-aliyun" "reqsign?/reqwest_request") ("services-obs" "dep:reqsign" "reqsign?/services-huaweicloud" "reqsign?/reqwest_request") ("services-mysql" "dep:mysql_async") ("services-mongodb" "dep:mongodb") ("services-moka" "dep:moka") ("services-mini-moka" "dep:mini-moka") ("services-memcached" "dep:bb8") ("services-libsql" "dep:hrana-client-proto") ("services-ipfs" "dep:prost") ("services-hdfs" "dep:hdrs") ("services-gridfs" "dep:mongodb") ("services-gcs" "dep:reqsign" "reqsign?/services-google" "reqsign?/reqwest_request") ("services-ftp" "dep:suppaftp" "dep:bb8" "dep:async-tls") ("services-foundationdb" "dep:foundationdb") ("services-etcd" "dep:etcd-client" "dep:bb8") ("services-dashmap" "dep:dashmap") ("services-cos" "dep:reqsign" "reqsign?/services-tencent" "reqsign?/reqwest_request") ("services-compfs" "dep:compio") ("services-cacache" "dep:cacache") ("services-azfile" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azdls" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-azblob" "dep:sha2" "dep:reqsign" "reqsign?/services-azblob" "reqsign?/reqwest_request") ("services-atomicserver" "dep:atomic_lib") ("layers-tracing" "dep:tracing") ("layers-throttle" "dep:governor") ("layers-prometheus-client" "dep:prometheus-client") ("layers-prometheus" "dep:prometheus") ("layers-otel-trace" "dep:opentelemetry") ("layers-minitrace" "dep:minitrace") ("layers-metrics" "dep:metrics") ("layers-madsim" "dep:madsim") ("layers-dtrace" "dep:probe") ("layers-chaos" "dep:rand") ("layers-await-tree" "dep:await-tree") ("layers-async-backtrace" "dep:async-backtrace") ("internal-path-cache" "dep:moka")))) (r "1.75")))

