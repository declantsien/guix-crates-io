(define-module (crates-io op en openrr-teleop) #:use-module (crates-io))

(define-public crate-openrr-teleop-0.0.1 (c (n "openrr-teleop") (v "0.0.1") (d (list (d (n "arci") (r "^0.0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "k") (r "^0.22") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.1") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "15cwgr5yjmz2mik73m5cm8iqcq0k93msarc18ch2x8ip5sx4vbdk")))

(define-public crate-openrr-teleop-0.0.3 (c (n "openrr-teleop") (v "0.0.3") (d (list (d (n "arci") (r "^0.0.3") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "k") (r "^0.22") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)))) (h "1wpqjmzs4kamj4yf28048h6ps9m5ha92a9ykdxkdx91438c0k0yz")))

(define-public crate-openrr-teleop-0.0.4 (c (n "openrr-teleop") (v "0.0.4") (d (list (d (n "arci") (r "^0.0.4") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "k") (r "^0.23") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.4") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "1r50p00d8qr6wfzn34sinmqck3aqw0ccjx0wnvj2yjm67hf2z3bs")))

(define-public crate-openrr-teleop-0.0.5 (c (n "openrr-teleop") (v "0.0.5") (d (list (d (n "arci") (r "^0.0.5") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "k") (r "^0.23") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.5") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "0h24nk3xd85vyvccqjhyrr3sn28f40383j951zwx222lmr7r5d30")))

(define-public crate-openrr-teleop-0.0.6 (c (n "openrr-teleop") (v "0.0.6") (d (list (d (n "arci") (r "^0.0.6") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^0.4.1") (d #t) (k 0)) (d (n "k") (r "^0.25") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.6") (k 0)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "sync" "time"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "12ci9qlhbc469xf8mnnkzp82gij9kz2a0xkpmmq59cak401mrf48") (f (quote (("default" "assimp") ("assimp" "openrr-client/assimp"))))))

(define-public crate-openrr-teleop-0.0.7 (c (n "openrr-teleop") (v "0.0.7") (d (list (d (n "arci") (r "^0.0.7") (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1.0") (d #t) (k 2)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^1.0.0") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "k") (r "^0.29") (d #t) (k 0)) (d (n "openrr-client") (r "^0.0.7") (k 0)) (d (n "openrr-command") (r "^0.0.7") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "schemars") (r "^0.8.3") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)) (d (n "tokio") (r "^1.0") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)))) (h "0m4iyhygiklj27w0p5wbglzald80kdz9jk9m6m0bp633yb7cg10f") (f (quote (("default" "assimp") ("assimp" "openrr-client/assimp"))))))

(define-public crate-openrr-teleop-0.1.0 (c (n "openrr-teleop") (v "0.1.0") (d (list (d (n "arci") (r "^0.1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "clap") (r "^4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "k") (r "^0.29") (d #t) (k 0)) (d (n "openrr-client") (r "^0.1.0") (k 0)) (d (n "openrr-command") (r "^0.1.0") (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "schemars") (r "^0.8") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "sync" "time" "parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (f (quote ("log"))) (d #t) (k 0)) (d (n "assert_approx_eq") (r "^1.1") (d #t) (k 2)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "toml") (r "^0.5") (d #t) (k 2)))) (h "1jy0868rb5s0490nscvk8g84f73ikizwwdn62fx1m9gjl3cjj6nb") (f (quote (("default" "assimp") ("assimp" "openrr-client/assimp"))))))

