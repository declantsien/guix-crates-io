(define-module (crates-io op en open-fastrlp) #:use-module (crates-io))

(define-public crate-open-fastrlp-0.1.2 (c (n "open-fastrlp") (v "0.1.2") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.13") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0) (p "open-fastrlp-derive")))) (h "0gbzpbmplsgzpmkrx8bwi4mdzgdsawflzvrpqmr3w5a5y22f278k") (f (quote (("std" "alloc") ("derive" "rlp-derive") ("alloc"))))))

(define-public crate-open-fastrlp-0.1.3 (c (n "open-fastrlp") (v "0.1.3") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0) (p "open-fastrlp-derive")))) (h "0qclksjzy9lvmvfi1ig38rw0bkz3qri7d2wca2ymqil1a5qz3656") (f (quote (("std" "alloc") ("derive" "rlp-derive") ("alloc"))))))

(define-public crate-open-fastrlp-0.1.4 (c (n "open-fastrlp") (v "0.1.4") (d (list (d (n "arrayvec") (r "^0.7") (k 0)) (d (n "auto_impl") (r "^1") (d #t) (k 0)) (d (n "bytes") (r "^1") (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "ethereum-types") (r "^0.14") (f (quote ("codec"))) (o #t) (d #t) (k 0)) (d (n "ethnum") (r "^1") (o #t) (k 0)) (d (n "hex-literal") (r "^0.3") (d #t) (k 2)) (d (n "rlp-derive") (r "^0.1") (o #t) (d #t) (k 0) (p "open-fastrlp-derive")))) (h "1kmrx6f4qc6vhdiimgf4qsf11pali09x6gq4ysa5fi450kw96qvq") (f (quote (("std" "alloc") ("derive" "rlp-derive") ("alloc"))))))

