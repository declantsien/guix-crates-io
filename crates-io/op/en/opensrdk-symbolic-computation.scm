(define-module (crates-io op en opensrdk-symbolic-computation) #:use-module (crates-io))

(define-public crate-opensrdk-symbolic-computation-0.1.0 (c (n "opensrdk-symbolic-computation") (v "0.1.0") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "num-rational") (r "^0.4") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "opensrdk-linear-algebra") (r "^0.8.6") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "172h41vv9akcna3hyccy7bpby78i06v0x0qjzvd3lml7dsdrs6gh")))

(define-public crate-opensrdk-symbolic-computation-0.1.1 (c (n "opensrdk-symbolic-computation") (v "0.1.1") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.8.8") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "1x5hidab0kaxqksxraw2c04i0sx6xg3amq53s02bgc7vccw9cw6a")))

(define-public crate-opensrdk-symbolic-computation-0.1.2 (c (n "opensrdk-symbolic-computation") (v "0.1.2") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "1ma65fw364cvl6lpqda0gy9hhrxz00j38qvsblpgvnkvxkqpgcx3")))

(define-public crate-opensrdk-symbolic-computation-0.1.3 (c (n "opensrdk-symbolic-computation") (v "0.1.3") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "1zm3wbickqqdw24pys20gi97nxq8nf99li1acxpwd1b0320szjc2")))

(define-public crate-opensrdk-symbolic-computation-0.1.4 (c (n "opensrdk-symbolic-computation") (v "0.1.4") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "0ckmvj6ykl898fs7ydd49g7i6ci0cs20swm5159y436fjxqp4jpl")))

(define-public crate-opensrdk-symbolic-computation-0.1.5 (c (n "opensrdk-symbolic-computation") (v "0.1.5") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "19kpmy0xv9qlz95dhrgaxj8x8qf6gvglqigffcqk0yj9ac3p2aj9")))

(define-public crate-opensrdk-symbolic-computation-0.1.6 (c (n "opensrdk-symbolic-computation") (v "0.1.6") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "100n3g77bhbhv6dg9i08039i5miz2nl8b47pwlqlqfiph0krkgh0")))

(define-public crate-opensrdk-symbolic-computation-0.1.7 (c (n "opensrdk-symbolic-computation") (v "0.1.7") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "1c418nq39bfmgpyxq8vcg26kip8d2x7l2wbfzybnw76358b0rp3f")))

(define-public crate-opensrdk-symbolic-computation-0.1.9 (c (n "opensrdk-symbolic-computation") (v "0.1.9") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "0s7g42jlbs4kpc66q0gvyqadrxgmjxj8zj457znwfm5b8vll8rs2")))

(define-public crate-opensrdk-symbolic-computation-0.2.0 (c (n "opensrdk-symbolic-computation") (v "0.2.0") (d (list (d (n "blas-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "lapack-src") (r "^0.8") (f (quote ("intel-mkl"))) (d #t) (k 2)) (d (n "opensrdk-linear-algebra") (r "^0.9.2") (d #t) (k 0)) (d (n "plotters") (r "^0.3.1") (d #t) (k 2)) (d (n "rayon") (r "^1.5.1") (d #t) (k 0)) (d (n "ron") (r "^0.8") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0.28") (d #t) (k 0)))) (h "0vmsf6vg5fjcgmkraxdqmwshamvzg75dgjdfw8ycq9324y2v6pjf")))

