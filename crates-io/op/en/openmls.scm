(define-module (crates-io op en openmls) #:use-module (crates-io))

(define-public crate-openmls-0.2.0 (c (n "openmls") (v "0.2.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "evercrypt") (r "^0.0.3") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "hpke") (r "^0.0.2") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "11j5d6fafdjcjbny28dyia2j9z3fg8dpjqdnb58vh6sqc24nmywn") (f (quote (("rust-crypto" "evercrypt/rust-crypto-aes") ("default" "rust-crypto")))) (y #t)))

(define-public crate-openmls-0.3.0 (c (n "openmls") (v "0.3.0") (d (list (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "evercrypt") (r "^0.0.5") (f (quote ("serialization"))) (d #t) (k 0)) (d (n "flexi_logger") (r "^0.16") (d #t) (k 2)) (d (n "hpke") (r "^0.0.3") (f (quote ("hazmat" "serialization"))) (d #t) (k 0) (p "hpke-rs")) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 2)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "1jydycrq5qp79qfdfzp3nmhaqgy3lnbfy3n0ic4zmb17h3k4sh89") (f (quote (("rust-crypto" "evercrypt/rust-crypto-aes") ("default" "rust-crypto")))) (y #t)))

(define-public crate-openmls-0.4.0-pre.1 (c (n "openmls") (v "0.4.0-pre.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "evercrypt_backend") (r "^0.1.0-pre.1") (o #t) (d #t) (k 0) (p "openmls_evercrypt")) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0-pre.1") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0-pre.1") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0-pre.4") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ln4x0yfhhjf2z2i261731jz3w4c86dvs5ig1v5mphxrh54w218r") (f (quote (("test-utils" "itertools" "openmls_rust_crypto" "rand" "rstest" "rstest_reuse") ("evercrypt" "evercrypt_backend") ("default") ("crypto-subtle") ("crypto-debug") ("content-debug"))))))

(define-public crate-openmls-0.4.0-pre.2 (c (n "openmls") (v "0.4.0-pre.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_evercrypt") (r "^0.1.0-pre.2") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0-pre.2") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0-pre.2") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0-pre.4") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0qi2kz9bk22kbhwh4p120bvg5x4fmcxypvm9qj420a8g3c8z4s63") (f (quote (("test-utils" "itertools" "openmls_rust_crypto" "rand" "rstest" "rstest_reuse") ("evercrypt" "openmls_evercrypt") ("default") ("crypto-subtle") ("crypto-debug") ("content-debug"))))))

(define-public crate-openmls-0.4.0-pre.3 (c (n "openmls") (v "0.4.0-pre.3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_evercrypt") (r "^0.1.0-pre.3") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0-pre.3") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0-pre.3") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0gfr46j2g9hkicqj0ymbjz2daffmhy98rg2bp2sa7ilxv8s4wn98") (f (quote (("test-utils" "itertools" "openmls_rust_crypto" "rand" "rstest" "rstest_reuse") ("evercrypt" "openmls_evercrypt") ("default") ("crypto-subtle") ("crypto-debug") ("content-debug"))))))

(define-public crate-openmls-0.4.0-pre.4 (c (n "openmls") (v "0.4.0-pre.4") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_evercrypt") (r "^0.1.0-pre.4") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0-pre.4") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0-pre.4") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "18lnzyxb1pym0vzhr6dd2xa7d89fq5j59n48f9x173608fj8f2w4") (f (quote (("test-utils" "itertools" "openmls_rust_crypto" "rand" "rstest" "rstest_reuse") ("evercrypt" "openmls_evercrypt") ("default") ("crypto-subtle") ("crypto-debug") ("content-debug"))))))

(define-public crate-openmls-0.4.0 (c (n "openmls") (v "0.4.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_evercrypt") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.12") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^0.8") (f (quote ("v4"))) (d #t) (k 0)))) (h "0ypc3k81wgk4jfxvrnls66202n5y1zp16gplf7piylrk234x0s77") (f (quote (("test-utils" "itertools" "openmls_rust_crypto" "rand" "rstest" "rstest_reuse") ("evercrypt" "openmls_evercrypt") ("default") ("crypto-subtle") ("crypto-debug") ("content-debug"))))))

(define-public crate-openmls-0.4.1 (c (n "openmls") (v "0.4.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_evercrypt") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.1.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.1.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.13") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.13") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.2.0") (f (quote ("derive" "serde_serialize"))) (d #t) (k 0)) (d (n "typetag") (r "^0.1") (d #t) (k 0)) (d (n "uuid") (r "^1.0") (f (quote ("v4"))) (d #t) (k 0)))) (h "0b1wbhxkkx1fxn22rmrd6754f2hpn0lsm444wmjnr60m4nd2anfs") (f (quote (("test-utils" "itertools" "openmls_rust_crypto" "rand" "rstest" "rstest_reuse") ("evercrypt" "openmls_evercrypt") ("default") ("crypto-subtle") ("crypto-debug") ("content-debug"))))))

(define-public crate-openmls-0.5.0-pre.1 (c (n "openmls") (v "0.5.0-pre.1") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_basic_credential") (r "^0.2.0-pre.1") (f (quote ("clonable" "test-utils"))) (o #t) (d #t) (k 0)) (d (n "openmls_evercrypt") (r "^0.2.0-pre.1") (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.2.0-pre.1") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0-pre.1") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0-pre.1") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.3.0-pre.3") (f (quote ("derive" "serde" "mls"))) (d #t) (k 0)))) (h "0sj49l92bivpm18j5xz00mfqffqg3dr3vkrvr0gnzq7a2m8kmkvb") (f (quote (("default") ("crypto-subtle") ("crypto-debug") ("content-debug")))) (s 2) (e (quote (("test-utils" "dep:serde_json" "dep:itertools" "dep:openmls_rust_crypto" "dep:rand" "dep:rstest" "dep:rstest_reuse" "dep:openmls_basic_credential") ("evercrypt" "dep:openmls_evercrypt"))))))

(define-public crate-openmls-0.5.0-pre.2 (c (n "openmls") (v "0.5.0-pre.2") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_basic_credential") (r "^0.2.0-pre.2") (f (quote ("clonable" "test-utils"))) (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.2.0-pre.2") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0-pre.2") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0-pre.2") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.3.0-pre.4") (f (quote ("derive" "serde" "mls"))) (d #t) (k 0)))) (h "1i204bs05vcqga4p85b2ca97ck5s8nppr9zwdk7fjihsd4vig7rn") (f (quote (("default") ("crypto-subtle") ("crypto-debug") ("content-debug")))) (s 2) (e (quote (("test-utils" "dep:serde_json" "dep:itertools" "dep:openmls_rust_crypto" "dep:rand" "dep:rstest" "dep:rstest_reuse" "dep:openmls_basic_credential"))))))

(define-public crate-openmls-0.5.0-pre.3 (c (n "openmls") (v "0.5.0-pre.3") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_basic_credential") (r "^0.2.0-pre.3") (f (quote ("clonable" "test-utils"))) (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.2.0-pre.3") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0-pre.3") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0-pre.3") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.3.0") (f (quote ("derive" "serde" "mls"))) (d #t) (k 0)))) (h "1b0yn3h0vv5pbwazmkd4idq54wxy6n5g4l91j1p065i3wsbrzgix") (f (quote (("default") ("crypto-subtle") ("crypto-debug") ("content-debug")))) (s 2) (e (quote (("test-utils" "dep:serde_json" "dep:itertools" "dep:openmls_rust_crypto" "dep:rand" "dep:rstest" "dep:rstest_reuse" "dep:openmls_basic_credential"))))))

(define-public crate-openmls-0.5.0 (c (n "openmls") (v "0.5.0") (d (list (d (n "backtrace") (r "^0.3") (d #t) (k 0)) (d (n "backtrace") (r "^0.3") (d #t) (k 2)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "hex") (r "^0.4") (f (quote ("serde"))) (d #t) (k 2)) (d (n "itertools") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "log") (r "^0.4") (f (quote ("std"))) (d #t) (k 0)) (d (n "openmls_basic_credential") (r "^0.2.0") (f (quote ("clonable" "test-utils"))) (o #t) (d #t) (k 0)) (d (n "openmls_rust_crypto") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0") (d #t) (k 0)) (d (n "openmls_traits") (r "^0.2.0") (f (quote ("test-utils"))) (d #t) (k 2)) (d (n "pretty_env_logger") (r "^0.5") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rayon") (r "^1.5.0") (d #t) (k 0)) (d (n "rstest") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.16") (d #t) (k 2)) (d (n "rstest_reuse") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rstest_reuse") (r "^0.4") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "tls_codec") (r "^0.3.0") (f (quote ("derive" "serde" "mls"))) (d #t) (k 0)))) (h "0jwlxwm4jjpqd04qdsqrkg7sqvr104rnlrw0nbkifk3hk4wa1m4m") (f (quote (("default") ("crypto-subtle") ("crypto-debug") ("content-debug")))) (s 2) (e (quote (("test-utils" "dep:serde_json" "dep:itertools" "dep:openmls_rust_crypto" "dep:rand" "dep:rstest" "dep:rstest_reuse" "dep:openmls_basic_credential"))))))

