(define-module (crates-io op en openapi_type) #:use-module (crates-io))

(define-public crate-openapi_type-0.1.0 (c (n "openapi_type") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.1.0") (d #t) (k 0)) (d (n "openapiv3") (r "=0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "13hgcspx06albl6z4n9qllc93664jvzcdwpb0ns3m3d907if3k8s")))

(define-public crate-openapi_type-0.2.0 (c (n "openapi_type") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.2.0") (d #t) (k 0)) (d (n "openapiv3") (r "=0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "15xbff5d5zqf646j5xcdjb5izg2xdrai4k8p52lf7h0i7v0gcdzl")))

(define-public crate-openapi_type-0.2.1 (c (n "openapi_type") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.6") (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.2.3") (d #t) (k 0)) (d (n "openapiv3") (r "=0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "11vrabjsh46hdihrif3h15gvy34drx0mc1v6vfmxj772vm00lyzn")))

(define-public crate-openapi_type-0.2.2 (c (n "openapi_type") (v "0.2.2") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.2.4") (d #t) (k 0)) (d (n "openapiv3") (r "=0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "0hxgjblrdjdjk2fdiy1r0b6ab9lxxlzma6khzdz5lynapxj61md7")))

(define-public crate-openapi_type-0.2.3 (c (n "openapi_type") (v "0.2.3") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.2.4") (d #t) (k 0)) (d (n "openapiv3") (r "=0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^0.7") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "trybuild") (r "^1.0") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "1x8ssjpwmbf4i77r1b1vyrwnd5fwf9anv1yi61hjri8bynr8y3ia")))

(define-public crate-openapi_type-0.2.4 (c (n "openapi_type") (v "0.2.4") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.2.5") (d #t) (k 0)) (d (n "openapiv3") (r "=0.4.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.4") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.53") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "1406k6ds2bgk8rmlra0b1iw62mgknwzpmnbsbfy15b5vgd4c5wly")))

(define-public crate-openapi_type-0.3.0 (c (n "openapi_type") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.3.0") (d #t) (k 0)) (d (n "openapiv3") (r "=1.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.4") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.53") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "1cx05zx7b54xkbc4q5pcyfrs4cdhnxk10a1hrnp0c30v9kc5yjz8") (r "1.56")))

(define-public crate-openapi_type-0.3.1 (c (n "openapi_type") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4.19") (o #t) (k 0)) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "linked-hash-map") (r "^0.5.4") (o #t) (d #t) (k 0)) (d (n "openapi_type_derive") (r "^0.3.0") (d #t) (k 0)) (d (n "openapiv3") (r "^1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time") (r "^0.3.4") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0)) (d (n "trybuild") (r "=1.0.54") (d #t) (k 2)) (d (n "uuid") (r "^0.8.2") (o #t) (d #t) (k 0)))) (h "011hn01z1snm3l6sl87c5fdwbr1kmwk2fl9sc6hws7hmqxdia356") (r "1.56")))

(define-public crate-openapi_type-0.4.0 (c (n "openapi_type") (v "0.4.0") (d (list (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "linked-hash-map05") (r "^0.5") (o #t) (d #t) (k 0) (p "linked-hash-map")) (d (n "openapi_type_derive") (r "^0.4.0") (d #t) (k 0)) (d (n "openapiv3") (r "^1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time03") (r "^0.3") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0) (p "time")) (d (n "trybuild") (r "=1.0.55") (d #t) (k 2)) (d (n "uuid08") (r "^0.8") (o #t) (d #t) (k 0) (p "uuid")))) (h "1b822pib30yj5cpldl58k30wbi270s0niw26p6y902nb0j86z917") (f (quote (("uuid" "uuid08") ("time" "time03") ("linked-hash-map" "linked-hash-map05") ("chrono" "chrono04")))) (r "1.58")))

(define-public crate-openapi_type-0.4.1 (c (n "openapi_type") (v "0.4.1") (d (list (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "linked-hash-map05") (r "^0.5") (o #t) (d #t) (k 0) (p "linked-hash-map")) (d (n "openapi_type_derive") (r "^0.4.1") (d #t) (k 0)) (d (n "openapiv3") (r "^1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time03") (r "^0.3") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0) (p "time")) (d (n "trybuild") (r "=1.0.56") (d #t) (k 2)) (d (n "uuid08") (r "^0.8") (o #t) (d #t) (k 0) (p "uuid")))) (h "1flr22zm44mzifrnns1dpw61r246whfspp3c2xq1vy9bjl8vmhfk") (f (quote (("uuid" "uuid08") ("time" "time03") ("linked-hash-map" "linked-hash-map05") ("chrono" "chrono04")))) (r "1.58")))

(define-public crate-openapi_type-0.4.2 (c (n "openapi_type") (v "0.4.2") (d (list (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "linked-hash-map05") (r "^0.5") (o #t) (d #t) (k 0) (p "linked-hash-map")) (d (n "openapi_type_derive") (r "^0.4.3") (d #t) (k 0)) (d (n "openapiv3") (r "^1.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time03") (r "^0.3") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0) (p "time")) (d (n "trybuild") (r "=1.0.79") (d #t) (k 2)) (d (n "uuid08") (r "^0.8") (o #t) (d #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1") (o #t) (d #t) (k 0) (p "uuid")))) (h "01k01m9x4dq85rkcdpc06vn3kwc1pnsx15k23far1hlgy5ad30qc") (f (quote (("uuid" "uuid08" "uuid1") ("time" "time03") ("linked-hash-map" "linked-hash-map05") ("chrono" "chrono04")))) (r "1.58")))

(define-public crate-openapi_type-0.4.3 (c (n "openapi_type") (v "0.4.3") (d (list (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "indexmap") (r "^1.7") (d #t) (k 0)) (d (n "indexmap2") (r "^2.0") (o #t) (d #t) (k 0) (p "indexmap")) (d (n "linked-hash-map05") (r "^0.5") (o #t) (d #t) (k 0) (p "linked-hash-map")) (d (n "openapi_type_derive") (r "^0.4.4") (d #t) (k 0)) (d (n "openapiv3") (r "=1.0.2") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time03") (r "^0.3") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0) (p "time")) (d (n "trybuild") (r "=1.0.84") (d #t) (k 2)) (d (n "uuid08") (r "^0.8") (o #t) (d #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1") (o #t) (d #t) (k 0) (p "uuid")))) (h "1adgc5z5vj1n3cb7xaq6vb432v99b9id97ma89am3ln93mpr4ckf") (f (quote (("uuid" "uuid08" "uuid1") ("time" "time03") ("linked-hash-map" "linked-hash-map05") ("indexmap" "indexmap2") ("chrono" "chrono04")))) (r "1.60")))

(define-public crate-openapi_type-0.5.0 (c (n "openapi_type") (v "0.5.0") (d (list (d (n "chrono04") (r "^0.4") (o #t) (k 0) (p "chrono")) (d (n "indexmap") (r "^2.0") (d #t) (k 0)) (d (n "indexmap1") (r "^1.0") (o #t) (d #t) (k 0) (p "indexmap")) (d (n "linked-hash-map05") (r "^0.5") (o #t) (d #t) (k 0) (p "linked-hash-map")) (d (n "openapi_type_derive") (r "^0.4.5") (d #t) (k 0)) (d (n "openapiv3") (r "=2.0.0") (d #t) (k 0)) (d (n "paste") (r "^1.0") (d #t) (k 2)) (d (n "pretty_assertions") (r "^1.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.158") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "time03") (r "^0.3") (f (quote ("serde-human-readable"))) (o #t) (d #t) (k 0) (p "time")) (d (n "trybuild") (r "=1.0.95") (d #t) (k 2)) (d (n "uuid08") (r "^0.8") (o #t) (d #t) (k 0) (p "uuid")) (d (n "uuid1") (r "^1") (o #t) (d #t) (k 0) (p "uuid")))) (h "1z4axczp8djzww8rlz379q21my9kfih89df2g57861648465ccwx") (f (quote (("uuid" "uuid08" "uuid1") ("time" "time03") ("linked-hash-map" "linked-hash-map05") ("indexmap" "indexmap1") ("chrono" "chrono04")))) (r "1.70")))

