(define-module (crates-io op en open-vaf) #:use-module (crates-io))

(define-public crate-open-vaf-0.4.0 (c (n "open-vaf") (v "0.4.0") (d (list (d (n "ahash") (r "^0.3.5") (d #t) (k 0)) (d (n "annotate-snippets") (r "^0.8.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "beef") (r "^0.4.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bumpalo") (r "^3.4.0") (f (quote ("collections"))) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (f (quote ("runtime-dispatch-simd"))) (d #t) (k 0)) (d (n "copyless") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 0)) (d (n "index_vec") (r "^0.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.4.0") (d #t) (k 0)) (d (n "intrusive-collections") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rustc-ap-graphviz") (r "^662.0.0") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "yansi-term") (r "^0.1.2") (d #t) (k 0)))) (h "0nfaf11a8i3qcsphyjm79348fmzllf90g3f2v4lprjn6qvc9g9j9") (f (quote (("nightly" "parking_lot/nightly") ("graph_debug" "rustc-ap-graphviz") ("default"))))))

(define-public crate-open-vaf-0.4.1 (c (n "open-vaf") (v "0.4.1") (d (list (d (n "ahash") (r "^0.3.5") (d #t) (k 0)) (d (n "annotate-snippets") (r "^0.8.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "beef") (r "^0.4.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bumpalo") (r "^3.4.0") (f (quote ("collections"))) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (f (quote ("runtime-dispatch-simd"))) (d #t) (k 0)) (d (n "copyless") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 0)) (d (n "index_vec") (r "^0.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.4.0") (d #t) (k 0)) (d (n "intrusive-collections") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rustc-ap-graphviz") (r "^662.0.0") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "yansi-term") (r "^0.1.2") (d #t) (k 0)))) (h "1hh34k5ya5bd8gw4vhzbk59ypwvya1kcvv2q85j08yk3g5jqsh9d") (f (quote (("nightly" "parking_lot/nightly") ("graph_debug" "rustc-ap-graphviz") ("default"))))))

(define-public crate-open-vaf-0.4.2 (c (n "open-vaf") (v "0.4.2") (d (list (d (n "ahash") (r "^0.3.8") (d #t) (k 0)) (d (n "annotate-snippets") (r "^0.8.0") (f (quote ("color"))) (d #t) (k 0)) (d (n "beef") (r "^0.4.4") (d #t) (k 0)) (d (n "bitflags") (r "^1.2.1") (d #t) (k 0)) (d (n "bumpalo") (r "^3.4.0") (f (quote ("collections"))) (d #t) (k 0)) (d (n "bytecount") (r "^0.6.0") (f (quote ("runtime-dispatch-simd"))) (d #t) (k 0)) (d (n "copyless") (r "^0.1.5") (d #t) (k 0)) (d (n "fern") (r "^0.6.0") (f (quote ("colored"))) (d #t) (k 2)) (d (n "fixedbitset") (r "^0.3.0") (d #t) (k 0)) (d (n "float-cmp") (r "^0.8.0") (d #t) (k 0)) (d (n "index_vec") (r "^0.1.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.4.0") (d #t) (k 0)) (d (n "intrusive-collections") (r "^0.9.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.8") (d #t) (k 0)) (d (n "logos") (r "^0.11.4") (d #t) (k 0)) (d (n "more-asserts") (r "^0.2.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.4.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10.2") (d #t) (k 0)) (d (n "pretty_assertions") (r "^0.6.1") (d #t) (k 0)) (d (n "rustc-ap-graphviz") (r "^662.0.0") (o #t) (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "yansi-term") (r "^0.1.2") (d #t) (k 0)))) (h "1zdn77wra5jpz20h5s54jmvhfz0bqi9jwfjcf49phppzwapl2hcw") (f (quote (("nightly" "parking_lot/nightly") ("graph_debug" "rustc-ap-graphviz") ("default"))))))

