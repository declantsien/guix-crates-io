(define-module (crates-io op td optd-sqlplannertest) #:use-module (crates-io))

(define-public crate-optd-sqlplannertest-0.0.0 (c (n "optd-sqlplannertest") (v "0.0.0") (d (list (d (n "anyhow") (r "^1") (f (quote ("backtrace"))) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "datafusion") (r "^32.0.0") (f (quote ("avro" "crypto_expressions" "encoding_expressions" "regex_expressions" "unicode_expressions" "compression"))) (d #t) (k 0)) (d (n "datafusion-optd-cli") (r "^32.0.0") (d #t) (k 0)) (d (n "dirs") (r "^4.0.0") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.11") (d #t) (k 0)) (d (n "mimalloc") (r "^0.1") (k 0)) (d (n "optd-datafusion-bridge") (r "^0.0.0") (d #t) (k 0)) (d (n "optd-datafusion-repr") (r "^0.0.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regex") (r "^1.8") (d #t) (k 0)) (d (n "sqlplannertest") (r "^0.1") (d #t) (k 0)) (d (n "tokio") (r "^1.24") (f (quote ("macros" "rt" "rt-multi-thread" "sync" "parking_lot"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (d #t) (k 0)) (d (n "url") (r "^2.2") (d #t) (k 0)))) (h "1k735rmss0yjnq52hg2m2i58rwbwzjl0hbyzf5mvldnvwb8a59ms")))

