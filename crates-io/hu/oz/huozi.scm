(define-module (crates-io hu oz huozi) #:use-module (crates-io))

(define-public crate-huozi-0.1.0 (c (n "huozi") (v "0.1.0") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.10.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.15") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.15") (d #t) (k 2)) (d (n "wgpu") (r "^0.15") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.28") (d #t) (k 2)))) (h "17rhw309ws60548cgdy611d7mmnngmagixxypcpvsz7c9h1rv6p1") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.2.0 (c (n "huozi") (v "0.2.0") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.11.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.17") (d #t) (k 2)) (d (n "wgpu") (r "^0.17") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.28") (d #t) (k 2)))) (h "02lms6yjbpxfqwwb90vaxwigh8m6ihpm1mlczridvz3qf0ayac62") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.3.0 (c (n "huozi") (v "0.3.0") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 0)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.18") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.18") (d #t) (k 2)) (d (n "wgpu") (r "^0.18") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (f (quote ("rwh_05" "x11" "wayland" "wayland-dlopen" "wayland-csd-adwaita"))) (k 2)))) (h "1xa1zc3f8fpfdxid9jiwq61jd4m36v5lbz9wkqys0zd001vhb5vw") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.4.0 (c (n "huozi") (v "0.4.0") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (d #t) (k 2)))) (h "1377zkhj7kl7nykkv8ljhdvkmb0mcx9x71gi20pfmbrl90lbsfha") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.4.1 (c (n "huozi") (v "0.4.1") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (d #t) (k 2)))) (h "051gcjmiwvxdkna5kqhr31spbpr3981qy9raq85zbf5w4v9kvk74") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.4.2 (c (n "huozi") (v "0.4.2") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (d #t) (k 2)))) (h "158jsy530rgb7hj2g26ip50fdnxwpdp3nj3d710mkzx9rrgsnm1i") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.5.0 (c (n "huozi") (v "0.5.0") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (d #t) (k 2)))) (h "1kx5lzss6j22m45aj80w7nv1xzjskxb4ih4wjspg7dba2a3b139k") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (y #t) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.5.1 (c (n "huozi") (v "0.5.1") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (d #t) (k 2)))) (h "14sbgka4qv4lspv34r7md085w78sgq8zfjah1p87m4yxsanbz43j") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

(define-public crate-huozi-0.5.2 (c (n "huozi") (v "0.5.2") (d (list (d (n "ab_glyph") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "anyhow") (r "^1") (d #t) (k 0)) (d (n "bytemuck") (r "^1.4") (f (quote ("derive"))) (d #t) (k 0)) (d (n "cfg-if") (r "^1") (d #t) (k 2)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "console_log") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "csscolorparser") (r "^0.6") (f (quote ("serde"))) (d #t) (k 0)) (d (n "env_logger") (r "^0.11") (d #t) (k 2)) (d (n "fontdue") (r "^0.7.2") (o #t) (d #t) (k 0)) (d (n "image") (r "^0.24.6") (f (quote ("png"))) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "lru") (r "^0.12.0") (d #t) (k 0)) (d (n "nom") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "pollster") (r "^0.3") (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "web-sys") (r "^0.3") (f (quote ("Document" "Window" "Element"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "wgpu") (r "^0.19.1") (o #t) (d #t) (k 0)) (d (n "wgpu") (r "^0.19.1") (d #t) (k 2)) (d (n "wgpu") (r "^0.19.1") (f (quote ("webgl"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 2)) (d (n "winit") (r "^0.29") (d #t) (k 2)))) (h "138b7brxj6sl1d8wcqgxs83cvhfvjavnbj59x4hy5cc81n39fr4s") (f (quote (("sdf") ("layout") ("default" "fontdue" "wgpu" "charsets" "sdf" "layout" "parser") ("charsets")))) (s 2) (e (quote (("wgpu" "dep:wgpu") ("parser" "dep:nom") ("fontdue" "dep:fontdue") ("ab_glyph" "dep:ab_glyph"))))))

