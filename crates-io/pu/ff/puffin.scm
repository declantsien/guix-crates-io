(define-module (crates-io pu ff puffin) #:use-module (crates-io))

(define-public crate-puffin-0.2.0 (c (n "puffin") (v "0.2.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.10") (d #t) (k 0)))) (h "0i3b828p9lgd50jrrl10xfzn2fvid03424iw3avic6ihchfqqxs6")))

(define-public crate-puffin-0.3.0 (c (n "puffin") (v "0.3.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)))) (h "0n5biifwmmw244xly8zwb969f2r5p1dd96b2q4cxrvd0vcmmg1mj")))

(define-public crate-puffin-0.3.1 (c (n "puffin") (v "0.3.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)))) (h "1c7zswmxqal5bl247m5rzmfrpgfpaaqndnk1gsyxx5by10sanylk")))

(define-public crate-puffin-0.3.2 (c (n "puffin") (v "0.3.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)))) (h "0b955h0a071s2y940chx5k792m4v2pwsbg1cfi8g00dbsn9ihpd6") (y #t)))

(define-public crate-puffin-0.4.0 (c (n "puffin") (v "0.4.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)))) (h "0qpjmikkha98bjac14aka5y72fyyc8k812vaa6lr54wkhljzawgp")))

(define-public crate-puffin-0.5.0 (c (n "puffin") (v "0.5.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)))) (h "0xy9ajhb1fjv7sia38mq8qbv2ipv64cngxv37m1wp0zndf4mv6xf")))

(define-public crate-puffin-0.5.1 (c (n "puffin") (v "0.5.1") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)))) (h "13h45afh0zdw7xyyk2csjm43n4nqjshnghg97h7nhzb9yhq4xfh1")))

(define-public crate-puffin-0.5.2 (c (n "puffin") (v "0.5.2") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)))) (h "1a72nclwc5pca62jpsxgi0qbbpy4ib6ykhd74fq99fib8cpdb3r9") (f (quote (("with_serde" "serde") ("default"))))))

(define-public crate-puffin-0.6.0 (c (n "puffin") (v "0.6.0") (d (list (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "172jg4ncgg3vm6lzil6qk6b6sprw7fc8nn6yb2nwvwv3vf2y1k4b") (f (quote (("with_serde" "serde") ("default"))))))

(define-public crate-puffin-0.7.0 (c (n "puffin") (v "0.7.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)))) (h "0ilvvcxyaqs3in3mg3sy2mlanqzv7pcjbxl05hbb35h1y8li9yc8") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde") ("default"))))))

(define-public crate-puffin-0.8.0 (c (n "puffin") (v "0.8.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0kh5c5fchvfv80w1kkpx22d7783g72dzs93gf7nfc1x0dmqpp6as") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.8.1 (c (n "puffin") (v "0.8.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1gkd5laj4m76ii6bi3jlyq6cfwayibx7v2jg5iz41qz6vi8m16yl") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.9.0 (c (n "puffin") (v "0.9.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0l2712gdbj46swv80kjszn7kwbn5k1l3dabnza0pjqpia8g9s5kw") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.10.0 (c (n "puffin") (v "0.10.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1qjglmqs2xg644kd43nkgkk9xw60bc0jjfk0z8mrpfyvbvf6p3w2") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.10.1 (c (n "puffin") (v "0.10.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1sdvrd4y5p7xxgpz3cn0vkg31bhxqf3c7wvhz6a0686cpm1almbx") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.11.0 (c (n "puffin") (v "0.11.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "lz4_flex") (r "^0.9.0") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0plixnl0a5m08w7ya2msqvfx5n48dhy42h8k47n8fz432y5apiab") (f (quote (("serialization" "anyhow" "bincode" "lz4_flex" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.12.0 (c (n "puffin") (v "0.12.0") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "0r9x83g44rvfggf55205pxdph5m7gsvh350jlp17yqkhfphqrix8") (f (quote (("serialization") ("packing" "anyhow" "bincode" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.12.1 (c (n "puffin") (v "0.12.1") (d (list (d (n "anyhow") (r "^1") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "parking_lot") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.9") (o #t) (d #t) (k 0)))) (h "1qjpfjain74rmrlg3ycdwxxn7r1h9alynz13r2jr18i93vxi8d82") (f (quote (("serialization") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd") ("default"))))))

(define-public crate-puffin-0.13.0 (c (n "puffin") (v "0.13.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.2.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0himbm92n3zlmcr0b5x8qv0l89v5g4dkjr6d05n4pvwaq1r1qcvd") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default"))))))

(define-public crate-puffin-0.13.1 (c (n "puffin") (v "0.13.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.2.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.10.0") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1hksrcbvcj14wr0vl4wh9gbpz5lpn34h956x05r7ir73yb11vk3q") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default"))))))

(define-public crate-puffin-0.13.2 (c (n "puffin") (v "0.13.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.2.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "03n43vvp2k26d9mifbvy4k1745ybp8hpdlq56rnx7l8j8rh5rpdd") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default"))))))

(define-public crate-puffin-0.13.3 (c (n "puffin") (v "0.13.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.2.4") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "00zc6a6mnsar7fl763f59hvm44h9g1lwbndq704nd71bf2r2a1xl") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default"))))))

(define-public crate-puffin-0.14.0 (c (n "puffin") (v "0.14.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1s7r6mqzi9g9zv8xzkfdliz6kp0lpn61f5a6wbfq9j8fgmyinskr") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default"))))))

(define-public crate-puffin-0.14.1 (c (n "puffin") (v "0.14.1") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0g3ammhs2m8x6as3jjxgijcsww80rqgq85mfk3r6zmgnfvl3yqvd") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default")))) (s 2) (e (quote (("web" "instant/wasm-bindgen" "dep:js-sys"))))))

(define-public crate-puffin-0.14.2 (c (n "puffin") (v "0.14.2") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "101nqgkn4fqg95lmjgznrgd8nlfy2zhgsiy1dlnazd0qmi05qxfn") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default")))) (s 2) (e (quote (("web" "instant/wasm-bindgen" "dep:js-sys"))))))

(define-public crate-puffin-0.14.3 (c (n "puffin") (v "0.14.3") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.11.1") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1r1z4b6ly1air9sww8xx8wa0157j6xjkgxgi5wzb17sn3yhcgcm7") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default")))) (s 2) (e (quote (("web" "instant/wasm-bindgen" "dep:js-sys"))))))

(define-public crate-puffin-0.15.0 (c (n "puffin") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.3.1") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "1diik44xhrifc8dpym2si3z35qhrrkl38xqnxgy9hkd4b41vg6ag") (f (quote (("serialization" "packing") ("packing" "anyhow" "bincode" "parking_lot" "serde" "zstd" "ruzstd") ("default")))) (s 2) (e (quote (("web" "instant/wasm-bindgen" "dep:js-sys"))))))

(define-public crate-puffin-0.16.0 (c (n "puffin") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.4") (d #t) (k 2)) (d (n "instant") (r "^0.1") (d #t) (k 0)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lz4_flex") (r "^0.10") (o #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.4.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "08ass1hfdcq86y7dywa1jylzq57la95rgpcmd6yx82hs9symlhkn") (f (quote (("serialization" "packing") ("default")))) (s 2) (e (quote (("zstd" "dep:zstd" "dep:ruzstd") ("web" "instant/wasm-bindgen" "dep:js-sys") ("packing" "dep:bincode" "dep:parking_lot" "lz4" "serde") ("lz4" "dep:lz4_flex"))))))

(define-public crate-puffin-0.17.0 (c (n "puffin") (v "0.17.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.4.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "web-time") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0kmidyqab98v5c0n99nhbg04gx02z940d8klm7zw6iymp5lrs01r") (f (quote (("serialization" "packing") ("default")))) (s 2) (e (quote (("zstd" "dep:zstd" "dep:ruzstd") ("web" "dep:js-sys" "dep:web-time") ("packing" "dep:bincode" "dep:parking_lot" "lz4" "serde") ("lz4" "dep:lz4_flex"))))))

(define-public crate-puffin-0.17.1 (c (n "puffin") (v "0.17.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.4.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "web-time") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "052gggjnw2qxzwksa8vm2p48pji2qc5qyw3l03smxqa1ydy8jpgi") (f (quote (("serialization" "packing") ("default")))) (y #t) (s 2) (e (quote (("zstd" "dep:zstd" "dep:ruzstd") ("web" "dep:js-sys" "dep:web-time") ("packing" "dep:bincode" "dep:parking_lot" "lz4" "serde") ("lz4" "dep:lz4_flex"))))))

(define-public crate-puffin-0.18.0 (c (n "puffin") (v "0.18.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.4.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "web-time") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "05aymd8xs31mzfkjbal6lwvn6yxwzhqc0jv37bd5bdrggd8q82qf") (f (quote (("serialization" "packing") ("default")))) (s 2) (e (quote (("zstd" "dep:zstd" "dep:ruzstd") ("web" "dep:js-sys" "dep:web-time") ("packing" "dep:bincode" "dep:parking_lot" "lz4" "serde") ("lz4" "dep:lz4_flex"))))))

(define-public crate-puffin-0.18.1 (c (n "puffin") (v "0.18.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "ruzstd") (r "^0.4.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "web-time") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0ip8dgmqc6sb6kzpfz09qfw17a0aq4j2cx0ga43j1z5abiwhycq2") (f (quote (("serialization" "packing") ("default")))) (s 2) (e (quote (("zstd" "dep:zstd" "dep:ruzstd") ("web" "dep:js-sys" "dep:web-time") ("packing" "dep:bincode" "dep:parking_lot" "lz4" "serde") ("lz4" "dep:lz4_flex"))))))

(define-public crate-puffin-0.19.0 (c (n "puffin") (v "0.19.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "js-sys") (r "^0.3") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lz4_flex") (r "^0.11") (o #t) (k 0)) (d (n "once_cell") (r "^1.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "ruzstd") (r "^0.4.0") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive" "rc"))) (o #t) (d #t) (k 0)) (d (n "web-time") (r "^0.2") (o #t) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "zstd") (r "^0.12.3") (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)))) (h "0bx0hyifrr2n9fhc718zyk8za7rqnv5p5pvjwpadx7q4pga6mxxr") (f (quote (("serialization" "packing") ("default")))) (s 2) (e (quote (("zstd" "dep:zstd" "dep:ruzstd") ("web" "dep:js-sys" "dep:web-time") ("packing" "dep:bincode" "lz4" "serde") ("lz4" "dep:lz4_flex"))))))

