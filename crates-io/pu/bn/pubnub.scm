(define-module (crates-io pu bn pubnub) #:use-module (crates-io))

(define-public crate-pubnub-0.2.0 (c (n "pubnub") (v "0.2.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.19") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "078y395hs6y36q1ivznjdck6b7b3fbd4h2p0h821fwsaa9dpbmld") (f (quote (("subscribe" "event_engine") ("pubnub_only" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe") ("full_no_std" "serde" "reqwest" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe") ("full" "publish" "access" "serde" "reqwest" "aescbc" "parse_token" "blocking" "std") ("event_engine") ("default" "publish" "serde" "reqwest" "aescbc" "std" "blocking") ("contract_test" "parse_token" "publish" "access") ("access")))) (s 2) (e (quote (("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("blocking" "reqwest?/blocking") ("aescbc" "dep:aes" "dep:cbc" "getrandom"))))))

(define-public crate-pubnub-0.2.1 (c (n "pubnub") (v "0.2.1") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.19") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.13") (d #t) (k 0)) (d (n "hashbrown") (r "^0.13") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1bsqhs2dr661gbqdl1b3x7ri9bffmdjm3zkd4skw7fankflbj5nb") (f (quote (("subscribe" "event_engine") ("pubnub_only" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe") ("full_no_std" "serde" "reqwest" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe") ("full" "publish" "access" "serde" "reqwest" "aescbc" "parse_token" "blocking" "std") ("event_engine") ("default" "publish" "serde" "reqwest" "aescbc" "std" "blocking") ("contract_test" "parse_token" "publish" "access") ("access")))) (s 2) (e (quote (("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("blocking" "reqwest?/blocking") ("aescbc" "dep:aes" "dep:cbc" "getrandom"))))))

(define-public crate-pubnub-0.3.0 (c (n "pubnub") (v "0.3.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.20.0") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "07g4j0qs5c5xnp7n72f8qlf8bh33m47z90jchpx8axvj1fxswzvz") (f (quote (("pubnub_only" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("full_no_std" "serde" "reqwest" "aescbc" "parse_token" "blocking" "publish" "access" "subscribe" "tokio" "presence") ("full" "publish" "subscribe" "presence" "access" "serde" "reqwest" "aescbc" "parse_token" "blocking" "std" "tokio") ("default" "publish" "subscribe" "serde" "reqwest" "aescbc" "std" "blocking" "tokio") ("contract_test" "parse_token" "publish" "access") ("access")))) (s 2) (e (quote (("tokio" "dep:tokio") ("subscribe" "dep:futures") ("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std" "futures?/std" "futures?/async-await" "dep:async-channel") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("presence" "dep:futures") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("blocking" "reqwest?/blocking") ("aescbc" "dep:aes" "dep:cbc" "getrandom"))))))

(define-public crate-pubnub-0.4.0 (c (n "pubnub") (v "0.4.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.20.0") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1bxq12r55mfgmnms5ng2j3n33lf10ab0bx493nhn9liyp50lz1vi") (f (quote (("pubnub_only" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("full_no_std" "serde" "reqwest" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "tokio" "presence") ("full" "publish" "subscribe" "presence" "access" "serde" "reqwest" "crypto" "parse_token" "blocking" "std" "tokio") ("default" "publish" "subscribe" "serde" "reqwest" "std" "blocking" "tokio") ("contract_test" "parse_token" "publish" "access" "crypto") ("access")))) (s 2) (e (quote (("tokio" "dep:tokio") ("subscribe" "dep:futures") ("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std" "futures?/std" "futures?/async-await" "dep:async-channel") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("presence" "dep:futures") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("crypto" "dep:aes" "dep:cbc" "getrandom") ("blocking" "reqwest?/blocking"))))))

(define-public crate-pubnub-0.4.1 (c (n "pubnub") (v "0.4.1") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.20.0") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "0kwrn64sfyqpk641218j8afpnqc5pm5b86dds42a3jap423jsfw5") (f (quote (("pubnub_only" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("full_no_std" "serde" "reqwest" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "tokio" "presence") ("full" "publish" "subscribe" "presence" "access" "serde" "reqwest" "crypto" "parse_token" "blocking" "std" "tokio") ("default" "publish" "subscribe" "serde" "reqwest" "std" "blocking" "tokio") ("contract_test" "parse_token" "publish" "access" "crypto") ("access")))) (s 2) (e (quote (("tokio" "dep:tokio") ("subscribe" "dep:futures") ("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std" "futures?/std" "futures?/async-await" "dep:async-channel") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("presence" "dep:futures") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("crypto" "dep:aes" "dep:cbc" "getrandom") ("blocking" "reqwest?/blocking"))))))

(define-public crate-pubnub-0.5.0 (c (n "pubnub") (v "0.5.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.20.2") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1mf6sl8pshwphnvj08s3l33bpwsrvnbnqrdnm533q9x120nrpcw0") (f (quote (("pubnub_only" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("full_no_std" "serde" "reqwest" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "tokio" "presence") ("full" "publish" "subscribe" "presence" "access" "serde" "reqwest" "crypto" "parse_token" "blocking" "std" "tokio") ("default" "publish" "subscribe" "serde" "reqwest" "std" "blocking" "tokio") ("contract_test" "parse_token" "publish" "access" "crypto" "std" "subscribe" "presence" "tokio") ("access")))) (s 2) (e (quote (("tokio" "dep:tokio") ("subscribe" "dep:futures") ("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std" "futures?/std" "futures?/async-await" "dep:async-channel") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("presence" "dep:futures") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("crypto" "dep:aes" "dep:cbc" "getrandom") ("blocking" "reqwest?/blocking"))))))

(define-public crate-pubnub-0.6.0 (c (n "pubnub") (v "0.6.0") (d (list (d (n "aes") (r "^0.8.2") (o #t) (d #t) (k 0)) (d (n "async-channel") (r "^1.8") (o #t) (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (d #t) (k 2)) (d (n "base64") (r "^0.21") (f (quote ("alloc"))) (k 0)) (d (n "built") (r "^0.6") (d #t) (k 1)) (d (n "bytes") (r "^1.4") (o #t) (k 0)) (d (n "cbc") (r "^0.1.2") (o #t) (d #t) (k 0)) (d (n "ciborium") (r "^0.2.1") (o #t) (k 0)) (d (n "cucumber") (r "^0.20.2") (f (quote ("output-junit"))) (d #t) (k 2)) (d (n "derive_builder") (r "^0.12") (k 0)) (d (n "env_logger") (r "^0.10") (d #t) (k 2)) (d (n "futures") (r "^0.3.28") (o #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "getrandom") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "getrandom") (r "^0.2") (f (quote ("custom"))) (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (f (quote ("serde"))) (d #t) (k 2)) (d (n "hmac") (r "^0.12") (d #t) (k 0)) (d (n "log") (r "^0.4") (k 0)) (d (n "percent-encoding") (r "^2.1") (k 0)) (d (n "phantom-type") (r "^0.4.2") (k 0)) (d (n "portable-atomic") (r "^1.3") (f (quote ("require-cas" "critical-section"))) (o #t) (k 0)) (d (n "rand") (r "^0.8.5") (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (k 0)) (d (n "serde_json") (r "^1.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "snafu") (r "^0.7") (f (quote ("rust_1_46"))) (k 0)) (d (n "spin") (r "^0.9") (d #t) (k 0)) (d (n "test-case") (r "^3.0") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("alloc"))) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros" "time"))) (d #t) (k 2)) (d (n "uuid") (r "^1.3") (f (quote ("v4"))) (k 0)) (d (n "wiremock") (r "^0.5") (d #t) (k 2)))) (h "1r0rjf32svqykb67h89xzv1py7h8pc67ghy72yb8wlrkjdskqsd7") (f (quote (("pubnub_only" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("publish") ("mock_getrandom" "getrandom/custom") ("full_no_std_platform_independent" "serde" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "presence") ("full_no_std" "serde" "reqwest" "crypto" "parse_token" "blocking" "publish" "access" "subscribe" "tokio" "presence") ("full" "publish" "subscribe" "presence" "access" "serde" "reqwest" "crypto" "parse_token" "blocking" "std" "tokio") ("default" "publish" "subscribe" "serde" "reqwest" "std" "blocking" "tokio") ("contract_test" "parse_token" "publish" "access" "crypto" "std" "subscribe" "presence" "tokio") ("access")))) (s 2) (e (quote (("tokio" "dep:tokio") ("subscribe" "dep:futures") ("std" "derive_builder/std" "log/std" "uuid/std" "base64/std" "spin/std" "snafu/std" "hmac/std" "sha2/std" "time/std" "bytes?/std" "getrandom/std" "rand/default" "serde?/std" "serde_json?/std" "ciborium?/std" "futures?/std" "futures?/async-await" "dep:async-channel") ("serde" "dep:serde" "dep:serde_json" "hashbrown/serde") ("reqwest" "dep:reqwest" "dep:bytes") ("presence" "dep:futures") ("parse_token" "dep:ciborium") ("extra_platforms" "spin/portable_atomic" "dep:portable-atomic") ("crypto" "dep:aes" "dep:cbc" "getrandom") ("blocking" "reqwest?/blocking"))))))

