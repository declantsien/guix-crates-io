(define-module (crates-io sn ow snow) #:use-module (crates-io))

(define-public crate-snow-0.0.1-preview.0 (c (n "snow") (v "0.0.1-preview.0") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "1vwg8kqq5qxzsdw9z1zrq2s3pfrd14d30qqigml7myc6i2yj6gcb")))

(define-public crate-snow-0.0.1-preview.1 (c (n "snow") (v "0.0.1-preview.1") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "1hzgymcpyn0bw7ggijp5x92wygvjnprw9pr7nw4dyj7r6fa8cc1w")))

(define-public crate-snow-0.0.1-preview.2 (c (n "snow") (v "0.0.1-preview.2") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "1w0d92h22bxz44wkc457br33v9pvln9wabdkcpxxblpnfxny52i0")))

(define-public crate-snow-0.0.1-preview.3 (c (n "snow") (v "0.0.1-preview.3") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "0x2h6qgadgx5cimhynh3f5yp48ipqzy00w05pkfwj2pnr90mx9c6")))

(define-public crate-snow-0.0.1-preview.4 (c (n "snow") (v "0.0.1-preview.4") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "1kg9iw08a0a4f9nrrxkjdzgvl92hriy71wxljlkx8pn9vg0p8w3j")))

(define-public crate-snow-0.0.1-preview.6 (c (n "snow") (v "0.0.1-preview.6") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "1zjf1z65q5076fyw1zcb70akbgipm5cnj9val6syhjshkj8rgcj9")))

(define-public crate-snow-0.0.1-preview.7 (c (n "snow") (v "0.0.1-preview.7") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "1c59mwpl4s7qij0zvz5s022a6azkqx117422sbjkphdf5wj852yw")))

(define-public crate-snow-0.0.1-preview.8 (c (n "snow") (v "0.0.1-preview.8") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "0q6inl7hf7jfc31a771c9khmm9jr2y7x449jk5m86k5blwm1v1vp")))

(define-public crate-snow-0.0.1-preview.9 (c (n "snow") (v "0.0.1-preview.9") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "08s9xla7gyhdf8kkppw00n8wx7v56r3l7nckw77pyp1h3h2i8m16")))

(define-public crate-snow-0.0.1-preview.10 (c (n "snow") (v "0.0.1-preview.10") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.2") (d #t) (k 0)))) (h "12r8rvlp31s98xc6l48mf49gx0axw8pdn48s1jjnjx1ds5zhjg4r") (f (quote (("vector-tests") ("default"))))))

(define-public crate-snow-0.0.1-preview.11 (c (n "snow") (v "0.0.1-preview.11") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "12zlddq0aba2dklrbk6k7il2ip57a1mrd5iscmz0wgk0kmbi5yzz") (f (quote (("vector-tests") ("default"))))))

(define-public crate-snow-0.0.1-preview.12 (c (n "snow") (v "0.0.1-preview.12") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "1iskgrxy3hdv18v4zfvv4wa53pv9pysg6mpvcp8fhlgm370kn5w2") (f (quote (("vector-tests") ("default"))))))

(define-public crate-snow-0.1.0-preview (c (n "snow") (v "0.1.0-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "0bq8mrsbzwlgx7p6y883znx7m7srgkb4ckk54cf6vlq6yc7hp7ib") (f (quote (("vector-tests") ("default"))))))

(define-public crate-snow-0.1.2-preview (c (n "snow") (v "0.1.2-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "0qlakfp4nprvph8sfaw4qc4xhyshjbavxfl1p1jg9gdy8f99zidf") (f (quote (("vector-tests") ("default"))))))

(define-public crate-snow-0.1.3-preview (c (n "snow") (v "0.1.3-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "1dy0j8ljy7864xc51mw8jxjd1gk4g75v9bg5zg35s88gas19sadd") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("default"))))))

(define-public crate-snow-0.1.4-preview (c (n "snow") (v "0.1.4-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (f (quote ("simd_opt"))) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "1n0gb4jq0fi6rim997m81asjb9a97v646dkbznsl3xz75c04kp9k") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("default"))))))

(define-public crate-snow-0.1.5-preview (c (n "snow") (v "0.1.5-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "15fa3zkff1b2ik54m4ffgjziynr1zqqgpc1w4bmw2fv23vb7fwsy") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt") ("default"))))))

(define-public crate-snow-0.1.6-preview (c (n "snow") (v "0.1.6-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "0znzbswb3z8crm1g17lp4c98kw8cwwqgwlhlxkilmx784iw9p2hd") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt") ("default"))))))

(define-public crate-snow-0.1.7-preview (c (n "snow") (v "0.1.7-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2.17") (d #t) (k 0)) (d (n "byteorder") (r "^1.0") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1.2") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.10") (d #t) (k 0)) (d (n "hex") (r "^0.2.0") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.9.4") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2.36") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "153by6x4z3xm2n4gwn23hd8shvk6npid8py0ayhax3a7llzm5c5a") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt") ("default"))))))

(define-public crate-snow-0.1.8-preview (c (n "snow") (v "0.1.8-preview") (d (list (d (n "arrayvec") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "17nl17fhf1p4xhy9kvp8s9xnqjqzbwaaxd7dpqbnwgki7sf2x37l") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt") ("default"))))))

(define-public crate-snow-0.1.9 (c (n "snow") (v "0.1.9") (d (list (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)))) (h "1wls7hwk9p96jijycbxp2lcg2nsnav2azhdz9a23zmwqb3ksxfb1") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt") ("default"))))))

(define-public crate-snow-0.1.10 (c (n "snow") (v "0.1.10") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "error-chain") (r "^0.11") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (k 0)))) (h "0sca9psg8bhx5p5vy5xqxjnib53pdfa1gkn289v9cn1f6wnmskwy") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-resolver" "hacl-star") ("hacl-accelerated" "hacl-resolver") ("default"))))))

(define-public crate-snow-0.1.11 (c (n "snow") (v "0.1.11") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^0.2") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (k 0)))) (h "11cv0497l8zzaz3afi4zxczad9ngkxnx6p7czdfyfzw8k3n717qa") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-resolver" "hacl-star") ("hacl-accelerated" "hacl-resolver") ("default"))))))

(define-public crate-snow-0.1.12 (c (n "snow") (v "0.1.12") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "arrayvec") (r "^0.4") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (k 0)))) (h "0dw4vdcz1r6dr1gdd2vbbz7l52giv9zlg7w76xs1mbzap66z1j0r") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring" "ring-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-resolver" "hacl-star") ("hacl-accelerated" "hacl-resolver") ("default"))))))

(define-public crate-snow-0.2.0 (c (n "snow") (v "0.2.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha5") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (k 0)))) (h "1vyv0qilz98d36w31nqs0a5bayfa4fgnbc62g8j15kz5i8zy83mg") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto") ("default" "default-resolver"))))))

(define-public crate-snow-0.2.1 (c (n "snow") (v "0.2.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.2") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha5") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "072zlsza2jwb50knlz6hi2lagv9x1gsa7cz06ybpbcxvjb7x2jvh") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.3.0-alpha1 (c (n "snow") (v "0.3.0-alpha1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha5") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "0j88kraz2ad76krj692bpsn18k38p5kvnmims9ps9pcprshc7brb") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.3.0-alpha2 (c (n "snow") (v "0.3.0-alpha2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0-alpha5") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1b2r7q44ar9hqkr4x914q83dkv6ycbgns5lw2hsnbpc7zzanalhq") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.3.0-alpha3 (c (n "snow") (v "0.3.0-alpha3") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "14i714kja14wqyzi2yhqg0j13vpa4kwp7g3y6l5b1k46wc5hmb7b") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.3.0-alpha4 (c (n "snow") (v "0.3.0-alpha4") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "06ilk3f3ik6aisq9y9gl1njvx749x4kd71x6iza0fiscaxb4nxwf") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.3.0-alpha5 (c (n "snow") (v "0.3.0-alpha5") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1rfflb76l0pd00slzhaxx0inq3f9krvkvppnrnb305k3xw9y09s6") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.3.0 (c (n "snow") (v "0.3.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5.0-pre.2") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1bhv21c7nbsiqsxr80kly9bpaiacwh3nv5n9qn1xawn6jf3cf6ia") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.3.1 (c (n "snow") (v "0.3.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.2.1") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1a0ls4bbrhyh35wk8gg9kf50fm3mcj6xlvav098a4m90zdca4gmr") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.4.0-alpha1 (c (n "snow") (v "0.4.0-alpha1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1rrgfjsvh2r6mbs2zblpw4smynjh3j5d8ckwqlgndgwrc5winrd6") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.4.0-alpha2 (c (n "snow") (v "0.4.0-alpha2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "0pvahc2b0ly6227q4a8hwl18p7f75knfa6074fsd91kd3bg3hkkr") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.4.0 (c (n "snow") (v "0.4.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1r5f1wlvikxrm1cqcn2wxmvqw5nya868j27c56k2zscddff0pgxz") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.4.1 (c (n "snow") (v "0.4.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.3") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "0m8pbf7a81xwsh8jk2gvnpjinigrs5g6xibgadc8rbn10fwpmyka") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.4.2 (c (n "snow") (v "0.4.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2.0") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "= 0.0.11") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.0") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "0067rihs5bp51b8cqhwyl7qr32k788jzwxw6v8rwphg1y71mg321") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.5.0-alpha1 (c (n "snow") (v "0.5.0-alpha1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.3") (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1kn6hm8326z8wbynsm1lfr8nph4vh1ah7mvdgzgxxkxw6qi1fp09") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.5.0-alpha2 (c (n "snow") (v "0.5.0-alpha2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1bgl04c3wpz1gl08hxi2xyfaqz3zrraqkzs65zjcd6gd4afmhlgv") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.5.0 (c (n "snow") (v "0.5.0") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "18jsmn8lwrrhpn8vd1wahr8xk8rz8kb1jgx6wnqih6g47s9dvq1c") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.5.1 (c (n "snow") (v "0.5.1") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "^0.0.13") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.4") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "1xmfnvznvbyh9yf2b6bnb8qvhmxj7vnh8v26zrn10hwh1s9ghlbj") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.5.2 (c (n "snow") (v "0.5.2") (d (list (d (n "arrayref") (r "^0.3") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "hacl-star") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.2") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14.0") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "static_slice") (r "^0.0.3") (d #t) (k 0)) (d (n "subtle") (r "^2.0.0") (k 0)) (d (n "x25519-dalek") (r "^0.5") (f (quote ("std" "u64_backend"))) (o #t) (k 0)))) (h "00412cfavbzsr012s9z1a5hl2zkhyhfqcr8s5nyibvq8s8pz0r2s") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.6.0-alpha1 (c (n "snow") (v "0.6.0-alpha1") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hacl-star") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "subtle") (r "^2.0") (k 0)) (d (n "x25519-dalek") (r "^0.5") (o #t) (d #t) (k 0)))) (h "0q64vgrcj3d7xaxsjdx5wpyr2l5sagpi5vibxxsp54x5gp37a2ji") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.6.0-alpha2 (c (n "snow") (v "0.6.0-alpha2") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hacl-star") (r "^0.0.14") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.4") (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "smallvec") (r "^0.6.3") (d #t) (k 0)) (d (n "subtle") (r "^2.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1rgnc7fw45ng71r7vfd9lcns6i84q4qdwr6nh5zhxwwkcy3pzwsr") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("hacl-star-resolver" "hacl-star") ("hacl-star-accelerated" "hacl-star-resolver" "default-resolver") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "rust-crypto" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.6.0 (c (n "snow") (v "0.6.0") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.2") (d #t) (k 2)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.14") (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1hjw0igg7zv1y677fn6q0h5y516q54gsak0ad6m9gjlxbhrl8q75") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.6.1 (c (n "snow") (v "0.6.1") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.5") (o #t) (d #t) (k 0)))) (h "1pf2a3fnz7pig4c7c1nxp3s2pnjvrjibwxksv9mx47j6bgiwmvli") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.6.2 (c (n "snow") (v "0.6.2") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2-rfc") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0bydmh033w8rgck4bvrj2ql24fy17dkhi6qb5whblmyjwzp6gdxg") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("nightly" "blake2-rfc/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("default-resolver" "chacha20-poly1305-aead" "blake2-rfc" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.0-alpha1 (c (n "snow") (v "0.7.0-alpha1") (d (list (d (n "arrayref") (r "^0.3.5") (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chacha20-poly1305-aead") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.3") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.1") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "1x4zx2jygjs45hi7xawy6zl0gg0a5rhlgbx1iqqi0diq3by8hz0i") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "chacha20-poly1305-aead/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("hfs") ("default-resolver" "chacha20-poly1305-aead" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.0-alpha2 (c (n "snow") (v "0.7.0-alpha2") (d (list (d (n "aes-gcm") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0h2yqjmzip0iyq3ckv1gms79rk4rzg6nhv7jjkbvn669f7yphxg4") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.0-alpha3 (c (n "snow") (v "0.7.0-alpha3") (d (list (d (n "aes-gcm") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "09pjmif3jg1agzcr8mjnlyq1jby8igjmqnpiagp4jmpr76q4c7yl") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.0-alpha4 (c (n "snow") (v "0.7.0-alpha4") (d (list (d (n "aes-gcm") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0avkrilfpm5d496pkmn909iiqhi019isf75ckzvsi7y40ah395l2") (f (quote (("vector-tests") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.0-alpha5 (c (n "snow") (v "0.7.0-alpha5") (d (list (d (n "aes-gcm") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "1zg5ni2zq59gpyad9ag8wwx4pbkqx7a6nnz9fc7hhgh0v00f97xg") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.0 (c (n "snow") (v "0.7.0") (d (list (d (n "aes-gcm") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "0m56mzk78vkcixawyky9s5yh69zd4fyp36cxws9dv54l8yz923yf") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.1 (c (n "snow") (v "0.7.1") (d (list (d (n "aes-gcm") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^0.6") (o #t) (d #t) (k 0)))) (h "13hymqzwrnlkyhvfzgrwkscmd4z8fr4xlv14c4b5b5cs2ms89grj") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.2 (c (n "snow") (v "0.7.2") (d (list (d (n "aes-gcm") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.3") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.5") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.2") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.2") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0l6xna7hzcf781v2s6q30bcbwp3vgz9gcq96lgjnhi72xspdfpbr") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.7.3 (c (n "snow") (v "0.7.3") (d (list (d (n "aes-gcm") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.6") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1") (o #t) (d #t) (k 0)))) (h "0hdriazzvi0659j1vzw3jri5vlzpfqqn7zcm7rzfaxc3nbx0714w") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.8.0 (c (n "snow") (v "0.8.0") (d (list (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "clap") (r "^2") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.3") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1.1") (o #t) (d #t) (k 0)))) (h "1dxbdf9k9gf4mk3whn9z8sdi1y8d4gn4hcrclcjzvxllbv1gfhk1") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "x25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "x25519-dalek" "rand") ("default" "default-resolver"))))))

(define-public crate-snow-0.8.1 (c (n "snow") (v "0.8.1") (d (list (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "0kv188pjs3y1kjq8byqdmrvwxfipfly2zqlkba8xdnnc5nc4b5nq") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "curve25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver")))) (y #t)))

(define-public crate-snow-0.9.0 (c (n "snow") (v "0.9.0") (d (list (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4.0.0-pre.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "039x441mp7j77cg5kpg34y4vm6syq3rq8sgad1nww1xfxnihakbp") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "curve25519-dalek/nightly" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

(define-public crate-snow-0.9.1 (c (n "snow") (v "0.9.1") (d (list (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.0") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "0790sdw7vsbi4lmh2cab1d5srq6091y1pmcy2rmdnazi9x6mzfhj") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

(define-public crate-snow-0.9.2 (c (n "snow") (v "0.9.2") (d (list (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "=4.0.0-rc.1") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "0cvpyn07h8d5nm42p0wv12an7mfajxkjj0sws44kwx45p8ks1jsw") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

(define-public crate-snow-0.9.3 (c (n "snow") (v "0.9.3") (d (list (d (n "aes-gcm") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.16.2") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "0md1iczx0k4ahbqvghyll187zmdmr7s5mism4zg232jjxcji978c") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

(define-public crate-snow-0.9.4 (c (n "snow") (v "0.9.4") (d (list (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "clap") (r "^3") (d #t) (k 2)) (d (n "criterion") (r "^0.3") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "0knp9j5sblgs0ag7rln1mssabm548k16rpq87frfwphazmkij0jq") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

(define-public crate-snow-0.9.5 (c (n "snow") (v "0.9.5") (d (list (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "16kqmc22rp59v5s1rpll3ih7p9zd0d6y0q2sww3r1408cs5c31rf") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

(define-public crate-snow-0.9.6 (c (n "snow") (v "0.9.6") (d (list (d (n "aes-gcm") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "blake2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "chacha20poly1305") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "curve25519-dalek") (r "^4") (o #t) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "lazy_static") (r "^1.4") (d #t) (k 2)) (d (n "pqcrypto-kyber") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "pqcrypto-traits") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("std" "getrandom"))) (d #t) (k 0)) (d (n "ring") (r "^0.17") (f (quote ("std"))) (o #t) (d #t) (k 0)) (d (n "rustc_version") (r "^0.4") (d #t) (k 1)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "sodiumoxide") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "subtle") (r "^2.4") (d #t) (k 0)) (d (n "x25519-dalek") (r "^1") (d #t) (k 2)))) (h "119g3wk6pw27h7yj3dn3nim6f2fiqjny23w6mfw17rv8w2z4h2c5") (f (quote (("xchachapoly" "chacha20poly1305" "default-resolver") ("vector-tests") ("risky-raw-split") ("ring-resolver" "ring") ("ring-accelerated" "ring-resolver" "default-resolver") ("pqclean_kyber1024" "pqcrypto-kyber" "pqcrypto-traits" "hfs" "default-resolver") ("nightly" "blake2/simd_opt" "subtle/nightly") ("libsodium-resolver" "sodiumoxide" "byteorder") ("libsodium-accelerated" "libsodium-resolver" "default-resolver") ("hfs") ("default-resolver" "aes-gcm" "chacha20poly1305" "blake2" "sha2" "curve25519-dalek") ("default" "default-resolver"))))))

