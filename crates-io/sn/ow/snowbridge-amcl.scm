(define-module (crates-io sn ow snowbridge-amcl) #:use-module (crates-io))

(define-public crate-snowbridge-amcl-1.0.0 (c (n "snowbridge-amcl") (v "1.0.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0n5hgxrxpr6yw2im84cg85541i14famfypbdab8mskxswyksd77j") (f (quote (("std" "bls381" "codec/std" "scale-info/std") ("secp256k1") ("rsa4096") ("rsa3072") ("rsa2048") ("nums512w") ("nums512e") ("nums384w") ("nums384e") ("nums256w") ("nums256e") ("nist521") ("nist384") ("nist256") ("hifive") ("goldilocks") ("fp512bn") ("fp256bn") ("ed25519") ("default" "std") ("c41417") ("c25519") ("brainpool") ("bn254cx") ("bn254") ("bls48") ("bls461") ("bls383") ("bls381") ("bls24") ("bench" "all") ("anssi") ("all" "anssi" "bls24" "bls48" "bls381" "bls383" "bls461" "bn254" "bn254cx" "brainpool" "c25519" "c41417" "ed25519" "fp256bn" "fp512bn" "goldilocks" "hifive" "nist256" "nist384" "nist521" "nums256e" "nums256w" "nums384e" "nums384w" "nums512e" "nums512w" "rsa2048" "rsa3072" "rsa4096" "secp256k1"))))))

(define-public crate-snowbridge-amcl-1.0.1 (c (n "snowbridge-amcl") (v "1.0.1") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "0l59caq2i3fzr6hcyvalaklyd1icn0abjfdr70n23pk26rlznhd9") (f (quote (("std" "bls381" "codec/std" "scale-info/std") ("secp256k1") ("rsa4096") ("rsa3072") ("rsa2048") ("nums512w") ("nums512e") ("nums384w") ("nums384e") ("nums256w") ("nums256e") ("nist521") ("nist384") ("nist256") ("hifive") ("goldilocks") ("fp512bn") ("fp256bn") ("ed25519") ("default" "std") ("c41417") ("c25519") ("brainpool") ("bn254cx") ("bn254") ("bls48") ("bls461") ("bls383") ("bls381") ("bls24") ("bench" "all") ("anssi") ("all" "anssi" "bls24" "bls48" "bls381" "bls383" "bls461" "bn254" "bn254cx" "brainpool" "c25519" "c41417" "ed25519" "fp256bn" "fp512bn" "goldilocks" "hifive" "nist256" "nist384" "nist521" "nums256e" "nums256w" "nums384e" "nums384w" "nums512e" "nums512w" "rsa2048" "rsa3072" "rsa4096" "secp256k1"))))))

(define-public crate-snowbridge-amcl-1.0.2 (c (n "snowbridge-amcl") (v "1.0.2") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive" "max-encoded-len"))) (k 0) (p "parity-scale-codec")) (d (n "criterion") (r "^0.3.0") (d #t) (k 2)) (d (n "hex") (r "^0.3") (d #t) (k 2)) (d (n "rand") (r "^0.7.2") (d #t) (k 2)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 2)) (d (n "serde_derive") (r "^1.0") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (d #t) (k 2)))) (h "1r97qkbjbgh5grrlm7l6sppw86dsynji52kyhjww20yz7kb9w2j6") (f (quote (("std" "codec/std" "scale-info/std") ("secp256k1") ("rsa4096") ("rsa3072") ("rsa2048") ("nums512w") ("nums512e") ("nums384w") ("nums384e") ("nums256w") ("nums256e") ("nist521") ("nist384") ("nist256") ("hifive") ("goldilocks") ("fp512bn") ("fp256bn") ("ed25519") ("default" "std") ("c41417") ("c25519") ("brainpool") ("bn254cx") ("bn254") ("bls48") ("bls461") ("bls383") ("bls381") ("bls24") ("bench" "all") ("anssi") ("all" "anssi" "bls24" "bls48" "bls381" "bls383" "bls461" "bn254" "bn254cx" "brainpool" "c25519" "c41417" "ed25519" "fp256bn" "fp512bn" "goldilocks" "hifive" "nist256" "nist384" "nist521" "nums256e" "nums256w" "nums384e" "nums384w" "nums512e" "nums512w" "rsa2048" "rsa3072" "rsa4096" "secp256k1"))))))

