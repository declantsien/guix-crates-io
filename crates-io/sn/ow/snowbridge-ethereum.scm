(define-module (crates-io sn ow snowbridge-ethereum) #:use-module (crates-io))

(define-public crate-snowbridge-ethereum-0.0.0 (c (n "snowbridge-ethereum") (v "0.0.0") (h "0cw8ldbdykwqnqz8v6dryn9s555s2g3vfv44m0wz34lalaqm2s5q")))

(define-public crate-snowbridge-ethereum-0.1.0 (c (n "snowbridge-ethereum") (v "0.1.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex") (r "^2.1.0") (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sp-core") (r "^28.0.0") (k 0)) (d (n "sp-io") (r "^30.0.0") (k 0)) (d (n "sp-runtime") (r "^31.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "1hqv27dn8nnhqqna6m87mg69qczx0q2pf7139skvsgjw8rqr8lw8") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "hex/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

(define-public crate-snowbridge-ethereum-0.2.0 (c (n "snowbridge-ethereum") (v "0.2.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex") (r "^2.1.0") (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.195") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.111") (d #t) (k 2)) (d (n "sp-core") (r "^29.0.0") (k 0)) (d (n "sp-io") (r "^31.0.0") (k 0)) (d (n "sp-runtime") (r "^32.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "02786n3709v0jfy539897kncz0rzib8hrccbyi8wnd0p117xfnii") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "hex/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

(define-public crate-snowbridge-ethereum-0.3.0 (c (n "snowbridge-ethereum") (v "0.3.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex") (r "^2.1.0") (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-core") (r "^30.0.0") (k 0)) (d (n "sp-io") (r "^32.0.0") (k 0)) (d (n "sp-runtime") (r "^33.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "12k45y3qd2m23163mwg5x4vvyg40xqx8kqvx4k0avja21yvh0h1s") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "hex/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

(define-public crate-snowbridge-ethereum-0.4.0 (c (n "snowbridge-ethereum") (v "0.4.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex") (r "^2.1.0") (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-core") (r "^31.0.0") (k 0)) (d (n "sp-io") (r "^33.0.0") (k 0)) (d (n "sp-runtime") (r "^34.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "0cyklsz1wnnajp6wj8p46zhgfpz23dn3cb50jvwdx0321wxl87av") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "hex/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

(define-public crate-snowbridge-ethereum-0.5.0 (c (n "snowbridge-ethereum") (v "0.5.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex") (r "^2.1.0") (k 0) (p "rustc-hex")) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-core") (r "^32.0.0") (k 0)) (d (n "sp-io") (r "^34.0.0") (k 0)) (d (n "sp-runtime") (r "^35.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "1kvwi32d0n1j1dq331ifi0x21mcp0a4gj9l9nnbjsa749jll3k1i") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "hex/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-core/std" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

(define-public crate-snowbridge-ethereum-0.6.0 (c (n "snowbridge-ethereum") (v "0.6.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-io") (r "^35.0.0") (k 0)) (d (n "sp-runtime") (r "^36.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "1vzi439s0b8ynfzmmf2i3r4bm5a0bsij84vgbvqmfz788i01q451") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

(define-public crate-snowbridge-ethereum-0.7.0 (c (n "snowbridge-ethereum") (v "0.7.0") (d (list (d (n "codec") (r "^3.6.1") (f (quote ("derive"))) (k 0) (p "parity-scale-codec")) (d (n "ethabi") (r "^1.0.0") (k 0) (p "ethabi-decode")) (d (n "ethbloom") (r "^0.13.0") (k 0)) (d (n "ethereum-types") (r "^0.14.1") (f (quote ("codec" "rlp" "serialize"))) (k 0)) (d (n "hex-literal") (r "^0.4.1") (k 0)) (d (n "parity-bytes") (r "^0.1.2") (k 0)) (d (n "rand") (r "^0.8.5") (d #t) (k 2)) (d (n "rlp") (r "^0.5.2") (k 0)) (d (n "scale-info") (r "^2.9.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde-big-array") (r "^0.3.2") (f (quote ("const-generics"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.114") (d #t) (k 2)) (d (n "sp-io") (r "^36.0.0") (k 0)) (d (n "sp-runtime") (r "^37.0.0") (k 0)) (d (n "sp-std") (r "^14.0.0") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.19") (d #t) (k 2)))) (h "07fd8vy4cnhflim1mdpvk9870yjbcfd6c4nlh7mfaskngn9amlcy") (f (quote (("std" "codec/std" "ethabi/std" "ethbloom/std" "ethereum-types/std" "parity-bytes/std" "rlp/std" "scale-info/std" "serde" "serde-big-array" "sp-io/std" "sp-runtime/std" "sp-std/std") ("expensive_tests") ("default" "std"))))))

