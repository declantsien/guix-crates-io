(define-module (crates-io sn _t sn_testnet) #:use-module (crates-io))

(define-public crate-sn_testnet-0.1.0 (c (n "sn_testnet") (v "0.1.0") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "0jamhghqh34z7c7psng9bhm1ij65z08a70zvsf7bg4hbli8n9qyp") (f (quote (("statemap") ("otlp") ("chaos"))))))

(define-public crate-sn_testnet-0.1.1 (c (n "sn_testnet") (v "0.1.1") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "058gz7p62741zf8ab9mrpdgk914v5y51lngzbiyapiwi1m4dfp83") (f (quote (("statemap") ("otlp") ("chaos"))))))

(define-public crate-sn_testnet-0.1.2 (c (n "sn_testnet") (v "0.1.2") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "1k63idja8vf1s25s5qcak32kv6i8vj7b8mla8wqvgjjx143sd3js") (f (quote (("statemap") ("otlp") ("chaos"))))))

(define-public crate-sn_testnet-0.1.3 (c (n "sn_testnet") (v "0.1.3") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (f (quote ("env-filter" "json"))) (d #t) (k 0)))) (h "19pac9316q6ri37zzdd6kmikdxrwi5kd8pdx2w05h6xcjlw22zi3") (f (quote (("statemap") ("otlp") ("chaos"))))))

(define-public crate-sn_testnet-0.1.4 (c (n "sn_testnet") (v "0.1.4") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "~0.11.8") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "~0.8.3") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.8") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (f (quote ("env-filter" "json"))) (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)) (d (n "xor_name") (r "~5.0.0") (o #t) (d #t) (k 0)))) (h "1nzhrh8bblv5k101d1m1pj6xhf6n8zrfly3a8r74b54hii5xm8px") (f (quote (("verify-nodes" "prost" "tonic" "xor_name" "tonic-build") ("statemap") ("otlp") ("chaos"))))))

(define-public crate-sn_testnet-0.1.5 (c (n "sn_testnet") (v "0.1.5") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0d5gmy5bqrjylv8ss3knbxpfz8lca0kni5i7r53vmq93xsmy737i") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.6 (c (n "sn_testnet") (v "0.1.6") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1rd7hyx5m6aqkvypva5zvmsqjsxvsdri8d8bxsq92g08z48flalk") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.7 (c (n "sn_testnet") (v "0.1.7") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "05pbibw6cy7pqg8ir7zqqq0lh0ba65nd53j2k5m03h96hj51bbc3") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.8 (c (n "sn_testnet") (v "0.1.8") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1aza7lggp7a87kh839y956zv26jap7k7n98dyh4mmyqj9ank0ybk") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.9 (c (n "sn_testnet") (v "0.1.9") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "07gd6m1k3id4zs9im09n3b7y4ryrjdba666vpwjk23iwhqlrahv4") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.10 (c (n "sn_testnet") (v "0.1.10") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0qva98fj20m4i84shwk3w46zj7hfm55zjkbq0m5vz7sl1gbwsgq6") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.11 (c (n "sn_testnet") (v "0.1.11") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1lqd4z6bb6jwka2a7hamrp8v5r77k4761d9fa9icj0ss607nyfjm") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.12 (c (n "sn_testnet") (v "0.1.12") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0d5i97mj009jar8i7ikdbw9jrw6lcc76p6kw6jq9flnpxf7qlg06") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.13 (c (n "sn_testnet") (v "0.1.13") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0f1gz2n1wk1fqqdpwybrcj4rvl9khh04mcwrjlzcml245nc1p2rl") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.14 (c (n "sn_testnet") (v "0.1.14") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0m0xzgi95wiqiz6lgih5zikfmmq9dadp29znnralar5bp50024bj") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.15 (c (n "sn_testnet") (v "0.1.15") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0wy7sx6dfl7by26v49km2ms3rsfjpj4bcqmfpkviv8adi2x62rni") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.16 (c (n "sn_testnet") (v "0.1.16") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16vkndj75dg8v3klbfm461yz42hmvf74mg0hahaalxlgig7lx6r0") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.17 (c (n "sn_testnet") (v "0.1.17") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "122pfmls48lj8s9vddjl9hixkl5bk07m5bjs8ckjh3bk0gzhnfhy") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.18 (c (n "sn_testnet") (v "0.1.18") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "07h0rkzjhi8f0za1bcimpal8a5724v57fay3nx76yfxaw27d8xn4") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.19 (c (n "sn_testnet") (v "0.1.19") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0qywy20kas0smh3byjys0sb1ijcw2yghgj97czdad5k4wqj1m2q7") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.20 (c (n "sn_testnet") (v "0.1.20") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0l79m26kyvjb8nkcnyg6cbkp9xm4gl7ilr2gpvas22rphz16f2bd") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.21 (c (n "sn_testnet") (v "0.1.21") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "107aa6mm5afwb0r5g2y586lwi28bxfxr8b0sqp7c2ncc7knpjj3z") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.22 (c (n "sn_testnet") (v "0.1.22") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "08pvwr4h204l1lx6v81c14kaihdyws0h02wv012w8xmjmybrpcbc") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.23 (c (n "sn_testnet") (v "0.1.23") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zwvc0v30pf33y2almrlrk939j6fn2xhnfffp3n42732iwxzyd25") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.24 (c (n "sn_testnet") (v "0.1.24") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "18nfwx932xgfdylzd28l9ap31vl3h27nn2ydxkca9kdvq9kz8a2j") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.25 (c (n "sn_testnet") (v "0.1.25") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "03k3lhxg7pyr8b6j329fr8clx72241hgdjs88vnm9c5jvkmcwg37") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.26 (c (n "sn_testnet") (v "0.1.26") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0pgawyxg5q226qpn2qyaz34lv44qj34h9lsb743xdw5nwsmcd7pp") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.27 (c (n "sn_testnet") (v "0.1.27") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0pa3wkmk5gz1yxrgkj3zn2nyj9pynrf784nkffj1h8qp0q21qdg7") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.28 (c (n "sn_testnet") (v "0.1.28") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1rzl5cfpwrb2qh99xlfkxdrqpvvavp1k7fn08ga2s0j3vw0jmcys") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.29 (c (n "sn_testnet") (v "0.1.29") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "04wgc17i6fb2cs2h9xvlivy4nr9xi7rdjvlmpvb56wsym1nd4hvh") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.30 (c (n "sn_testnet") (v "0.1.30") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0hwymlkmlf3glbmlykdhi50lxzgmyf4llx5kxsz4hpsg4jr8r7cb") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.31 (c (n "sn_testnet") (v "0.1.31") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1iih0sg40g1vb85pj8ajdfkyadh2mqi7c3i8zl7h0l47ay7lxpzc") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.32 (c (n "sn_testnet") (v "0.1.32") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0sq7kiz42as9s4d8jlrfm7w8d6cf2s6s180gxrvfqw8fbifp5pr7") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.33 (c (n "sn_testnet") (v "0.1.33") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1id818mh896k608bmym31azgk82a2c998bcbvzi01dcz7159jky7") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.34 (c (n "sn_testnet") (v "0.1.34") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zv98bazwb2lvvyhb0pvp9q1jy3jgifzk4z82awbx7xm1amasizi") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.35 (c (n "sn_testnet") (v "0.1.35") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0r1cvg0a6rxvzkrgvh6li7azbgn195f1l54bhlisn3aqbyxj242y") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.36 (c (n "sn_testnet") (v "0.1.36") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "076m0hjxij1n177w4b7kcsrx60lclvsi38c0m9kzvjmcsq9wi7fr") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.37 (c (n "sn_testnet") (v "0.1.37") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16qdzrvbwnq9kczra1fv0bbrh110ng20lpkzyciivh1y66xaz1r2") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.38 (c (n "sn_testnet") (v "0.1.38") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zbb13x2g6q6ry7klijgp1ir5cfp39d43lfkchfgh7jq77afqdyb") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.39 (c (n "sn_testnet") (v "0.1.39") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0w4ny3iz6i3qk4bi0jrglijrwgpbvqzyrxyb21ll6jjinql3rfiz") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.40 (c (n "sn_testnet") (v "0.1.40") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "02sahkbxa7b81zi97ms6mv0673n05yfkjsg7ql89rxwjybkh934p") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.41 (c (n "sn_testnet") (v "0.1.41") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0z9z1ii46g79fix6qrfapja8iy3z43mipj8kjvx5zwh0d5l7zyhi") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.42 (c (n "sn_testnet") (v "0.1.42") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0pqdyfpbhkfq4dmh94gdwbbjyiybv9kxxkmmw9qk8d8lpaaqawyp") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.43 (c (n "sn_testnet") (v "0.1.43") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16agkj68s44yvxjlmq1p86kw0b62y8x3b2kc43ri5g429gzphwbq") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.44 (c (n "sn_testnet") (v "0.1.44") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0gx332hj30mwsilzawhkdmwzh264mcv7ak7icgrj6ppyzzs5np1m") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.45 (c (n "sn_testnet") (v "0.1.45") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1nmdb3y1fr72mis3ff6b01ql47hmwdv0b7i19cldb4psybz210bl") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.46 (c (n "sn_testnet") (v "0.1.46") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zf2hiid4f23p7731qm9aqqh2vdsxgfc6a62dc3h61qrbbimz7jc") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.47 (c (n "sn_testnet") (v "0.1.47") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0w6zf7ihqpbzc5x0jp2gm6xsp957jfyqq3x493mjvdaq7mzf1sc5") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.48 (c (n "sn_testnet") (v "0.1.48") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zfz95xfwx4wbwi2jgq18rfp40dgiv223bx484g5pmsr89baq7g8") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.49 (c (n "sn_testnet") (v "0.1.49") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1qc0nhy666wx4a1dsnjyzg3c5mcshq49mzwdnz7pvs479qqbslx5") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.50 (c (n "sn_testnet") (v "0.1.50") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "160v8db8g4vvqgvpfh7ilwpb2q8gqsbyl67q1hm85lhzywr1nffd") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.51 (c (n "sn_testnet") (v "0.1.51") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "19v5ikr6368k9222jd58lc8yalv8ighmsi1caa22p76zg75yda9z") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.52 (c (n "sn_testnet") (v "0.1.52") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "075gvf8s9mfj59hwyk3yd88xmnh1115l7xi8adhklyhhch9hq0cz") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.53 (c (n "sn_testnet") (v "0.1.53") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hyin1wmpkyajsgkz6mz2cs7v77pzdy3aq4mid27qmdbd4slky9r") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.54 (c (n "sn_testnet") (v "0.1.54") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1556crk7yqr91cmrgflp56bn80wx6dasdgq5zajc7gnh77hr5a6b") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.55 (c (n "sn_testnet") (v "0.1.55") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1yp1wmzcqs5lvdbgar02fxxqpy7b8yms7zc5wfp05j46csbypl1k") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.56 (c (n "sn_testnet") (v "0.1.56") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "06lhwas8qv3n9h06w97jcm1d48kxy9fcsjzjl7dbijgiggwfkraz") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.57 (c (n "sn_testnet") (v "0.1.57") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zsh80sph3wwqkaxc2cchqv0l3kn6xjl3jkh0b35fflaki1nljx1") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.58 (c (n "sn_testnet") (v "0.1.58") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1srvmr537yrg0af9kj6bbdg3hx7w1bz6y0bad2ms3x346aw5ng82") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.59 (c (n "sn_testnet") (v "0.1.59") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "11v8qjbzm9w73jdrq1cwll64gr6nvyy6q233sj6c5lhbxqzh2fl1") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.60 (c (n "sn_testnet") (v "0.1.60") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "005jl4hnh99z1ysa1sqx8v5jwi59sdj0pbf8crqffy5r691m5sls") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.61 (c (n "sn_testnet") (v "0.1.61") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0wwc7jb6rmhjxxp93m8fjzjkjb9w9yz5fkl5d7j7yqxljlgi8vcs") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.62 (c (n "sn_testnet") (v "0.1.62") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "12d2w6cxzjwpy8x0kk6acdfpb2w2jkgkkkcrh3xpjx4fb1p79531") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.63 (c (n "sn_testnet") (v "0.1.63") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1w9wzkjrg761l18x3lk4m4gcx7p4jzzm6nvx6v0k8c6wwrkc00gk") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.64 (c (n "sn_testnet") (v "0.1.64") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "13czqh4sxwkzgq0d8fb7ds7qw07f1v1sr16m1kssc21nzlgdvbs4") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.65 (c (n "sn_testnet") (v "0.1.65") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1d0ibfrspfyvgkg9qalchnxckykfc607rnsm7a1d8d4nfl6iz49s") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.66 (c (n "sn_testnet") (v "0.1.66") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "122xkvf2afnxvzdsi79zzahjnihzq3ccwp76z0xfh3j1j4qdxqxf") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.67 (c (n "sn_testnet") (v "0.1.67") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0mv3b4s7yajrk82m6fxvb99f388icazl4x2igs7ky6yw9wyjw5bw") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.68 (c (n "sn_testnet") (v "0.1.68") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1abq2s4ny965z7fqvshaw8iisyn1slz6wcgzc3z17ryl8c6b82ql") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.69 (c (n "sn_testnet") (v "0.1.69") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0hv6i8xpfz7p8xn4wbzni87s0cd13mrv5vkgrhxj60r52w4hh713") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.70 (c (n "sn_testnet") (v "0.1.70") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "03q7lvmf6jmq98pxi25w27gydnb6pq77x6czgnbcx46xpwx7wfdi") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.71 (c (n "sn_testnet") (v "0.1.71") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0pbdmx024ag9wdx0gzl8gnsb69criyxvfva18mn33g4dlq6f6v0g") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.72 (c (n "sn_testnet") (v "0.1.72") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1wgjpj0mzb2xzgpbwmavakb90l47cgjhpplnr9a4y2g0p0svgvd0") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.73 (c (n "sn_testnet") (v "0.1.73") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0yp6sf28n6m4dzp631102sqz0cs53fq21q3qyrdzjkgzd0zl36jg") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.74 (c (n "sn_testnet") (v "0.1.74") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "06zd84fj1svvv2xb349by215vcfnf0a7qh3140dklwcprpf81i85") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.75 (c (n "sn_testnet") (v "0.1.75") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "03ldzjr5aaa3gc2z2v21gfzz34ppkfzvq1qjn31lmpk7f2lwr5ja") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.76 (c (n "sn_testnet") (v "0.1.76") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0l3767w4ajlsqbj2hc467izm4j4cbaxq71ndy12dp9vvxvna0zfs") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.77 (c (n "sn_testnet") (v "0.1.77") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "03w0wn6lvs80n4r1y4c98m7xnj6a9kkqiqgld396swqkfp2bqv1l") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.1.78 (c (n "sn_testnet") (v "0.1.78") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (o #t) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (o #t) (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (o #t) (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1bzhrsd9x1kclbn1d83ln6w7rnnks4i16krvkwx9615y3sdx6lr5") (f (quote (("verify-nodes" "prost" "tonic" "tonic-build" "libp2p") ("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.0 (c (n "sn_testnet") (v "0.2.0") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16gsn8b6shhjcl7bzhzazfalf908yryn59q4db78q3h7nr3i3cfr") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.1 (c (n "sn_testnet") (v "0.2.1") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "003r0hxqsh8n6xmfp6k05amvm473npl9y7hjx8h2z83zx11lzn3g") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.2 (c (n "sn_testnet") (v "0.2.2") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1kbvi5qw02b5nqyji6s8ic37vjrydhsxqi8rhzyrpp6llbkj3dzs") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.3 (c (n "sn_testnet") (v "0.2.3") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1l0hdd8f4ch8a9wh93sa57pavndhqi7g335babwcb8y1j24kxm0r") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.4 (c (n "sn_testnet") (v "0.2.4") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0ibwkmpsyw83gljlg3rw8xs9fypdk2qam6r4ah9q4k0297zm8z8a") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.5 (c (n "sn_testnet") (v "0.2.5") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0bbywa0iqsdi4li7ikzw0p02migykny46nchbggxfazhzy55rf72") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.6 (c (n "sn_testnet") (v "0.2.6") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1iaak2kyvf25c874sw39dlzspscm4mljghh5gkb56rhzqlg9xalp") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.7 (c (n "sn_testnet") (v "0.2.7") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1h4pxqmgn1bx0w73yjw41xjzkw9qpzsqb02ah1sk8frcff6qhb73") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.8 (c (n "sn_testnet") (v "0.2.8") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0nw4kgck2601v78ldl8yqx5swsmyv7ng8pqx5zfa4nhlipi4r03l") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.9 (c (n "sn_testnet") (v "0.2.9") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "127m0fnpp0yfvahl8ninhlza8zqfbqxhfmvd087xgb48bcsnf2ms") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.10 (c (n "sn_testnet") (v "0.2.10") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0m0zdpsc999zi63wp9z1s0800s5xicipzb8qfwf75iq42bz23qp8") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.11 (c (n "sn_testnet") (v "0.2.11") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1ykkwj68i4d2sxj32zay6vgsqgl2mhydja4iam02z60j84bzq3nz") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.12 (c (n "sn_testnet") (v "0.2.12") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0hclckpam0skxiswh0zmzbz1z05yyk1yknn2fpyiz92qjfahw1g6") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.13 (c (n "sn_testnet") (v "0.2.13") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.51") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1ha8d4jr9dn54qba321l66n1bdicmm2k5j8lhy8r7f1ry08pnwnw") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.14 (c (n "sn_testnet") (v "0.2.14") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0ilcpnq0gkma6b7qscz2gjh0swakxabnkdigp7l0p4q64knc4wxs") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.15 (c (n "sn_testnet") (v "0.2.15") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1qd5v3zzfb14qjahlz5y9b8ga5diyvykhyakwff710i6hbi46s9i") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.16 (c (n "sn_testnet") (v "0.2.16") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1i8wdxcjpzafgmhmpkqc1q87n3kpakmxvcybndyy0zxf1cnlk254") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.17 (c (n "sn_testnet") (v "0.2.17") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0w7jh0y3l4gj2hwwlhrjvqqipbbw5vawwvdr455d8plzxj6ii3w2") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.18 (c (n "sn_testnet") (v "0.2.18") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1vhbp38l6gqrj3imli7km7ggd1ml4rdnfxdbizc54lz67fddf6p9") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.19 (c (n "sn_testnet") (v "0.2.19") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1b2y5f8jksr0hw8avjng0jvjxbjxrq7c04ncqcc9v1b3mpd5lgxr") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.20 (c (n "sn_testnet") (v "0.2.20") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0dasyz0cafgxil572qnn0i0h7dk55cf75y94d36plzi9f8xwcjjd") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.21 (c (n "sn_testnet") (v "0.2.21") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1sl18h0x929q3nqv48g1wp11cswa6d9dkvp40mwn1s6hiw9hiid8") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.22 (c (n "sn_testnet") (v "0.2.22") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1bcrdkdy9xzwnxbn7jlpnpvbki5c14x7rfvs4zrvq84s37ncrydz") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.23 (c (n "sn_testnet") (v "0.2.23") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0i6ywnsww3lfw4kyrp5f53lgrlip9sxhb8qy5n4ix5761cnhcy8j") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.24 (c (n "sn_testnet") (v "0.2.24") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0h0l3kc62xr46prv60rx9qvmm6pkyxf1lm15zb5806bcylxqga9r") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.25 (c (n "sn_testnet") (v "0.2.25") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0kblpd9qzjbf7mn0llmrkmjg1s8zyqcwxjsd66p5678ycayfmmk1") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.26 (c (n "sn_testnet") (v "0.2.26") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "17nh6z8snrr61d0anv59959mbmdgdvav18r45zh5nmlsxn0159k0") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.27 (c (n "sn_testnet") (v "0.2.27") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0cns1jjc961310jskz8v4q5142xk6bslvvd92mc9ci7zvssfvzkz") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.28 (c (n "sn_testnet") (v "0.2.28") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0jbdbbb3mrlrq5xxx2s1p2rprjn4wzjlfkzv745i6v6ldqb9gxls") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.29 (c (n "sn_testnet") (v "0.2.29") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "17ci58lj4j6jzqhg661z09mgh515ijsx9fvc097l8kzbrb69v9mz") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.30 (c (n "sn_testnet") (v "0.2.30") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1krpw0rshgkqrig295bpvs8pzhrgax5ja5ja2cl0j8vc0410wkzn") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.31 (c (n "sn_testnet") (v "0.2.31") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "05q2s3r0farp47v8kimgnpv8s99rx733h19r7aqp2g67ml18vxgz") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.32 (c (n "sn_testnet") (v "0.2.32") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hr5r3hfav1r7pfl0ga4k0sgjla5zqpiadm58zjbck8d8qk1pxx1") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.33 (c (n "sn_testnet") (v "0.2.33") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16qwp2zywmpwvi17n4gl9mwpyb77zl3fc6w8a38572hk7rf1s71d") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.34 (c (n "sn_testnet") (v "0.2.34") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0rwndfgp4va8j73vv7jb7gr7xvw79zpf0q6dijxrckmxkmn3j6z0") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.35 (c (n "sn_testnet") (v "0.2.35") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0m8raj5dinazmsg8k7y92v1bnc7d3hgjlvcmxzmvd4b0icaffsq0") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.36 (c (n "sn_testnet") (v "0.2.36") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0dblls0fgnzyzm0049hqq77rwjbca94ispgl3j0qgf857awkyhxa") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.37 (c (n "sn_testnet") (v "0.2.37") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0jx36f8pv69vws2b52a9db2ziw1gjwal4d8cmdk379fw6cf65mlq") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.38 (c (n "sn_testnet") (v "0.2.38") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hlbsbiacx7bgfxbz5v7hf8b5pc7vskp0rnnxa1lzssha22ysxzn") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.39 (c (n "sn_testnet") (v "0.2.39") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0xn4vdbh10c14gqznbfh4jvjf8zbq65jc7d91n1zdlf5mzzd5l6m") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.40 (c (n "sn_testnet") (v "0.2.40") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "05l4zjn4pkr5b9qabmxsnv8pr4d17wdjzbb0kam2knnfsn4n9frk") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.41 (c (n "sn_testnet") (v "0.2.41") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "044h3q71vxrhr7cxj473hclkhal6pb4pr6y7qq01wn06xam4n5lq") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.42 (c (n "sn_testnet") (v "0.2.42") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16gwjvaynazgms4ryzf05d8s5j901szgacxi5nkvj7gzwrc8zhmm") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.43 (c (n "sn_testnet") (v "0.2.43") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "19ab4acd9d6yvk6lc69kvyia6d9zbv56qh03h000zpi11yp3ylax") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.44 (c (n "sn_testnet") (v "0.2.44") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "070v3nfskkhyjhrx0mrs2zvb897azfm7n40f5d81am56fspc6zsf") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.45 (c (n "sn_testnet") (v "0.2.45") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "08q15s2qhckyhp14yyzycpyy4jlbyrj3ml82zxfhflhk9980xj8i") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.46 (c (n "sn_testnet") (v "0.2.46") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0dj62b687s49lbscj3aybzrmyqgdxh9kbg4g0bzwjh53ln4l9ci0") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.47 (c (n "sn_testnet") (v "0.2.47") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1v1k6np84kx3gpsb25xvkj7jqgc44sv3spa7amwryxrqa6b83kdf") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.48 (c (n "sn_testnet") (v "0.2.48") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1fkkrl0f5md5chynq4qpazqglfl4i6nnz3hjb7bvka0lbppibnyi") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.49 (c (n "sn_testnet") (v "0.2.49") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1drz4h14lfr02q3l4p6s1xc8n22fgz9am04hsxnvx93zlandsm4r") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.50 (c (n "sn_testnet") (v "0.2.50") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "10580kgpi9frybz6ssghw2xh07a1b7wb9hf16h8ryqx8b1i2pr7h") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.51 (c (n "sn_testnet") (v "0.2.51") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0p82bmgf3hwq97lxa9wkm756nd1mzh5bzlj96h09vwc7d28prvy6") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.52 (c (n "sn_testnet") (v "0.2.52") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "06120a4vpn9mjk6v2yhp3wxdl3jvr18c10lqw3gfgnh06vk3abxj") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.53 (c (n "sn_testnet") (v "0.2.53") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "19ij9p2yd8d1mccjgs53yy9xpmiqvk9p41hg0dl6wyhd4z6g9xgi") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.54 (c (n "sn_testnet") (v "0.2.54") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0wf682i4yn9cyiw82iylalyqpkhi6w5lm540zjx165jssysdmx6j") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.55 (c (n "sn_testnet") (v "0.2.55") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1cynlvgf4c1iqwpb9hbkr5xz535r4brck92jg4py2m8p5rx6hj2g") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.56 (c (n "sn_testnet") (v "0.2.56") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "192pxqx1l4dkfbkxy3wap9d0ijdvr047n1lqiy0dacp1l912vsfm") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.57 (c (n "sn_testnet") (v "0.2.57") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "09r02z0iji6b5zil58hw5awxg0w7amkh1hij3vsdscrsav4nv0gr") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.58 (c (n "sn_testnet") (v "0.2.58") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0xwhfz9lsbxqnv69n12ghkhc3pqcxvzrja1zxf43k0vyhczdmzah") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.59 (c (n "sn_testnet") (v "0.2.59") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "11hkvr1rlh9wc8am2yqs9vvwm6zi34qhlj7why89pgrrkvpispcj") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.60 (c (n "sn_testnet") (v "0.2.60") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "005ha2lshdj6cmgfnggrsslzlxm5yw2m8mghp4k8w6gn95ywl15x") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.61 (c (n "sn_testnet") (v "0.2.61") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1fn3s13xv70r0rcyzyb1gqx796g1vh690vj05jb3my264mv6y6lj") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.62 (c (n "sn_testnet") (v "0.2.62") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "19kjg6ch9w7h3m1cp6y74rsd1ly2hk15vlx44dk81rlfc6p68sw3") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.63 (c (n "sn_testnet") (v "0.2.63") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "02c2a5wswadxncy3ld7j5348lgjg3fds9z25akd21r2mj7lvld7v") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.64 (c (n "sn_testnet") (v "0.2.64") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "10qas55r7n1yhqpihf4shfgy6vy1kbawd1x44v2hrcha5vsafhyn") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.65 (c (n "sn_testnet") (v "0.2.65") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0xng23fizaggb7qv1zx088zgjkh5155xfn2wlrl68nk8x8x8acc5") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.66 (c (n "sn_testnet") (v "0.2.66") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zj0wlx0iz6ifxzj2kbfbv33lx81bqxhx2zjpdavf9bld68wzzpl") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.67 (c (n "sn_testnet") (v "0.2.67") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0lyxvr2pr0gzf2cd7dd23pzsq9ki2s7s4z9xck4q26vjy9f0k7i2") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.68 (c (n "sn_testnet") (v "0.2.68") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "15asvf3n0mm375js9yvmab8bsd51awn51p50knmc1ah6b1fvh7fz") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.69 (c (n "sn_testnet") (v "0.2.69") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "089xddl5x9xs9yqy42w710kl93svar74bq7maj50nsid99jidcpq") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.70 (c (n "sn_testnet") (v "0.2.70") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1fbh59w430lxya4pgqrhwmi827icrnpf3gf0gj5vqnrg63x37v38") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.71 (c (n "sn_testnet") (v "0.2.71") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1jxqjk72qz73jb8ydzkhxa6kn21jvkklmvllgs6gl5j36x0c0g63") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.72 (c (n "sn_testnet") (v "0.2.72") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0qlfh5zdb6yiglbsysrnqzbw99lgbcj8plai6kjwin0kghb9yhjp") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.73 (c (n "sn_testnet") (v "0.2.73") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "180cziqbjlgcjl1kpf7i6rkbd4wp70sndy64wc22zcxy23b97pfw") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.74 (c (n "sn_testnet") (v "0.2.74") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0a26gkypwk9y0lvjz8nybdmyncris7php5947r6b797yv6q55jy4") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.75 (c (n "sn_testnet") (v "0.2.75") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "04bpm96z828vpw1mz01yi3chhwa1fzhfwcpfrh0qrfblw8qij2v9") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.76 (c (n "sn_testnet") (v "0.2.76") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1bmqpypd754afxg4dhgab3czz4n6h0492yj2xk45vzbc5c28y9k6") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.77 (c (n "sn_testnet") (v "0.2.77") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zpa6by5qifd577b0wng0rbsqpf8rb7nhpcsq5fqwsiml3yqh7lh") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.78 (c (n "sn_testnet") (v "0.2.78") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1xx3vw4jlvx1ycb8qc106xlblm2graxh6b169nlmyinfibak3g61") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.79 (c (n "sn_testnet") (v "0.2.79") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1nd9bnw8bnlr31rzkhjzhkhcrlpv5w3vzmksd05wlysrki199nnh") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.80 (c (n "sn_testnet") (v "0.2.80") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "04l2fx5m46a963xgxknszrbdg6rqgyvf27j80yz7rl0ya81hiawr") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.81 (c (n "sn_testnet") (v "0.2.81") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1cya1apk60g51bxmncpjbj2gdg76v027n60qmillzfhz4b4cjjsq") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.82 (c (n "sn_testnet") (v "0.2.82") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "00hkyn93qs2fb5c2p7l3x54fnrzz8kvq8m9hqsk3dbiw8kixn136") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.83 (c (n "sn_testnet") (v "0.2.83") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0hg8csvjlcd78dis078ixvq5z305rax6wnn6n2vfyhrxq1rlkp54") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.84 (c (n "sn_testnet") (v "0.2.84") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1clpk5wifabb8006c3rnc0dg4ihic7h7s23gxiagkywmvq213l8l") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.85 (c (n "sn_testnet") (v "0.2.85") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0vy3c0vv38dzmhsfclzxz837ngd4wwi8fwhy5akvwmxkg4fx7a36") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.86 (c (n "sn_testnet") (v "0.2.86") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1iy2504b5bka8j9g1hh2k2g0xs6ryqag327h35fzxfg71y1cja1n") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.87 (c (n "sn_testnet") (v "0.2.87") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0sahjbhv6fbydxj2n5is9lmci8xjwdgjbmqwm3c9s90wgsc77s7p") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.88 (c (n "sn_testnet") (v "0.2.88") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0g91rkhry2ysmh7sga48r4bfa190k6q1wznba5q6wbwjcwqwzcr8") (f (quote (("statemap") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.89 (c (n "sn_testnet") (v "0.2.89") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "05ar6pr8hmklj0vi6bg87j40lh35rqdcn25hinf5xydbaf3f7jib") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.90 (c (n "sn_testnet") (v "0.2.90") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0qnsjkf5lgxzm32h2mny5vvimvg4xm2kwkjj966i3jrzgn0s68cn") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.91 (c (n "sn_testnet") (v "0.2.91") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "14qarljpns4s40k9pxcqg7bhj35dz07qc2dm153rf7sg8zdsa83j") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.92 (c (n "sn_testnet") (v "0.2.92") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1i8sy955816zjs3n6ci769fdzj7d6pgmd5kzrb50x3rxzld48yp0") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.93 (c (n "sn_testnet") (v "0.2.93") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1wwmighghsnfchhj4y8gpgv0lyvsa8x00gdxd2x1sg6b72kf9hnb") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.94 (c (n "sn_testnet") (v "0.2.94") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0m77qyzhdvb0xnqzlcqnna3g0fbc14f8y9w1r8h0yrccp2p6gviq") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.95 (c (n "sn_testnet") (v "0.2.95") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0mk7c5sg7bcsgy2vn427q8y8fnpq0r4lnr0d9snwjqdf63n6b020") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.96 (c (n "sn_testnet") (v "0.2.96") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0sbr66hpfngn58dy3rk257xx4mnvgkn38i69fcx6gxba020qgpjy") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.97 (c (n "sn_testnet") (v "0.2.97") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zymxx4lakfvgrzcprm9cdmyn0zpfg2qrh8gjy55km0pwwhff401") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.98 (c (n "sn_testnet") (v "0.2.98") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "158yzq8q9qvlkfass35qjjzwmr8q622n5rzxvcjsx6k300fmqxww") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.99 (c (n "sn_testnet") (v "0.2.99") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1mssz287sggn37lw1sirsjgicqbzbcy9harg35sn287vikj7y6nq") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.100 (c (n "sn_testnet") (v "0.2.100") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "12ii8ml1qvmks4dcfl53w3fs4ik64yq3k0cm2dn8xn972922j63b") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.101 (c (n "sn_testnet") (v "0.2.101") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "189b4fdawv3wbazix4d92hfznxd8b8zgy1f2pn516jyg9iqq06yk") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.102 (c (n "sn_testnet") (v "0.2.102") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1rp55yy495rgj52y3azzqr3wjgs4f2bafdl0ns8wj1dmwjffwbfk") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.103 (c (n "sn_testnet") (v "0.2.103") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1qa63crib468sq12ipg006mimfd61y8vs2ps6m5411gyxp4bnxj4") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.104 (c (n "sn_testnet") (v "0.2.104") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0n9ayhikdfn8rnkm7xw6bcnqxdh60sw0s40j8y4ivjrchcq9jvav") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.105 (c (n "sn_testnet") (v "0.2.105") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0kqqgrva54w92mx7ab4s24fzq8jyc9qphr9q6jgm5i16qz4hwpgh") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.106 (c (n "sn_testnet") (v "0.2.106") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "18a5rxls69cvs3vs11d1h6xa39q5klw20wq8dd5mfp1mmkkl6drh") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.107 (c (n "sn_testnet") (v "0.2.107") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0blpg70njb1npsar9mpirn7rkn68d7yf35q29hhgzc7b5y2jdwkk") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.108 (c (n "sn_testnet") (v "0.2.108") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0b9p2bmj5kfmdl5vkfq3cr7ml5rhf8963kgbyw2bkn5gmsk9bns0") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.109 (c (n "sn_testnet") (v "0.2.109") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "062z8jhlqx9m475arld2rmwkybsv3nq2ig0faxvza9p8434vkqkg") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.110 (c (n "sn_testnet") (v "0.2.110") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1ifk86yvchdzsfnr90qgixz56vfy7z25zp7s278ga1papa9f10f2") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.111 (c (n "sn_testnet") (v "0.2.111") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0k5d21anv0qxhw7inwrjmhl7cvm660wgd72slflylb66a22xbkyg") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.112 (c (n "sn_testnet") (v "0.2.112") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0h16bx6v7fcxk0jjqpdbj2aa7rc3x0c81sd2imgz8wa7fglkqwpl") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.113 (c (n "sn_testnet") (v "0.2.113") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0w66dkhs58120w0183h6p31nyvi2dbn9sj8i469854m5ngf6q4l1") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.114 (c (n "sn_testnet") (v "0.2.114") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1lx30cv3bfgfji0dkw0iy7pqv3np0m7pw0hpykffbiwj8yp5wimj") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.115 (c (n "sn_testnet") (v "0.2.115") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "043fghags2sjmvq0ascd814mhd5pgx02xk0qiijr388mcgwimk79") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.116 (c (n "sn_testnet") (v "0.2.116") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "05l8lnjlcg66psgwd1hnsz4xlld7fsbb87imvkzb5i4jd706rpgv") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.117 (c (n "sn_testnet") (v "0.2.117") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "04iib1lv9rvq2qz9c153q50ng6xv0hqnx9r3sa7jasanqwalmpsl") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.118 (c (n "sn_testnet") (v "0.2.118") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1i3x7l7k472pyi6s61zdkqipyhhsxw9q2s4bxjp6fd4ndm5kf0yr") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.119 (c (n "sn_testnet") (v "0.2.119") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "02vc66cf7vykg81ir7bf7wgw75wndljw5vyiwvrajhiqq12ngmxk") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.120 (c (n "sn_testnet") (v "0.2.120") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "140v1q3j1m9ahnrf78knh3ydb2k8g95hnl5bxdm1hggqmz5448s7") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.121 (c (n "sn_testnet") (v "0.2.121") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16cfkgmvfwqr3x2wynqzqi6cy1ifxgcymhbwf649p5cqgh6l4rm5") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.122 (c (n "sn_testnet") (v "0.2.122") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0r33f5v3cyfmbvhmpwl1xk75kcsci7l825crwmgvbrhpngdynk8n") (f (quote (("statemap") ("quic") ("otlp") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.123 (c (n "sn_testnet") (v "0.2.123") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1nbam83xlklavzm0g837jjylyj99lis7gbnvzsaalnr7h2v825w5") (f (quote (("statemap") ("quic") ("otlp") ("network-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.124 (c (n "sn_testnet") (v "0.2.124") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0zz4v67371365kssls03c3q7xlpsw3m4nnrn9gyldl4caf4a270j") (f (quote (("statemap") ("quic") ("otlp") ("network-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.125 (c (n "sn_testnet") (v "0.2.125") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "12p7jwxxksd67bis63n21p5d1sk7z8ljllq1yga3a4sx7xk66mg0") (f (quote (("statemap") ("quic") ("otlp") ("network-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.126 (c (n "sn_testnet") (v "0.2.126") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1341xqal62w4iismag6qlpwfcbrn9hl1d5crfbhw51gapyaajrj4") (f (quote (("statemap") ("quic") ("otlp") ("network-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.127 (c (n "sn_testnet") (v "0.2.127") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0f7qf87jsf7i7q3im50w1glp9sw91zrjzmxvsca7va0mpbwjmspx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.128 (c (n "sn_testnet") (v "0.2.128") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1k72rx7lk7hhdrb5casy9fpdcwwpbigznb3rmqsprr4gpsz83rcr") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.129 (c (n "sn_testnet") (v "0.2.129") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "04cmi1nlwypc68kciarhkrrj5bky0rmcs4mr2bp20ycsy2c92w1y") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.130 (c (n "sn_testnet") (v "0.2.130") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0q3lc8bvlldab956a32phmmbcb7npbrhwaxca3m2ww1x77bzzsm6") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.131 (c (n "sn_testnet") (v "0.2.131") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1yr3ic8d7naprw2gqwqxvizmms5chwwhhf0gyqiiphrihxgwb1s2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.132 (c (n "sn_testnet") (v "0.2.132") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "14jzb597q94gqy6kin2qnplvv6c1kcd4pp3iwpv3c91q6kan46d1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.133 (c (n "sn_testnet") (v "0.2.133") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0p5laxhjy49j2d3c91m7bccaifvq7d4nqb3qzf4f5k689188vl0i") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.134 (c (n "sn_testnet") (v "0.2.134") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0xy94fi8mgakhgg2pyd8xdjrnimzaik117mbrc7z45y5kxjfi9yp") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.135 (c (n "sn_testnet") (v "0.2.135") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1jcrwvsd8d8fmzp9776rdkws7g8396axp35szp6hc966ya2992rl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.136 (c (n "sn_testnet") (v "0.2.136") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "079r6h27204d2wkm297hd1hf8h60wjbplawjvp641l3yd053zcsb") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.137 (c (n "sn_testnet") (v "0.2.137") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1j1cz5hd8b0526nsw7hk6ckdxnhrgn2f4shwdi3adcdnlgvymgw5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.138 (c (n "sn_testnet") (v "0.2.138") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0bri3aln2s2n24lgim0csickqnnppcqyhq7w8yj7di3x2ndz504f") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.139 (c (n "sn_testnet") (v "0.2.139") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1ns44yj8f7b270vr0c3y915n3qcvs9pnk13pi7cp8c1lzm1ia5cj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.140 (c (n "sn_testnet") (v "0.2.140") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0ypv13dxqqj1y2jzr913c8j6aqxw3vab2qcy4g5xxadninb6wchl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.141 (c (n "sn_testnet") (v "0.2.141") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1lf5mph1sbvgw5xl05ahyhkmh8hafljnjp1fsa5d5vj2rddvd7ld") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.142 (c (n "sn_testnet") (v "0.2.142") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1qhjcsp55mldb9863znb7x8h5hm0g2gkx0h8jrsy6d1zv4lp30gx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.143 (c (n "sn_testnet") (v "0.2.143") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "18qij97z6gaj257qkay420f6dmbyd7m4a6982r33wxp269dg1asq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.144 (c (n "sn_testnet") (v "0.2.144") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.0.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^2.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "^0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0yppxns6nfr5s1h6didv5zpwzc1qfg5r9kks94wfy4lh96pmzl67") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.145 (c (n "sn_testnet") (v "0.2.145") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "~0.10") (d #t) (k 0)) (d (n "tonic-build") (r "~0.10") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "08mc7qcnzizgi4rsrrnm2iwning762f54jngxb82m4f2xyr58v9j") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.146 (c (n "sn_testnet") (v "0.2.146") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "~0.10") (d #t) (k 0)) (d (n "tonic-build") (r "~0.10") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "06zmj8rf17r63chycpz9plfv919ccsf2vq6qrbri7d7xkmaw9g0f") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.147 (c (n "sn_testnet") (v "0.2.147") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "~0.10") (d #t) (k 0)) (d (n "tonic-build") (r "~0.10") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0vf1g9v4zx33374mymw82ngq095f3im9af9iqxfmv4zhw8y4facm") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.148 (c (n "sn_testnet") (v "0.2.148") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.12") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "~0.10") (d #t) (k 0)) (d (n "tonic-build") (r "~0.10") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "15g6hcc6c3qcv02pkh40anzcfkhn5x5ayswqjyw2fz2s1c8x52kx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.149 (c (n "sn_testnet") (v "0.2.149") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "12623bqxnbhj40nbv1xw5mdjf7agf7n11lv2rzfiicc4i20snsas") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.150 (c (n "sn_testnet") (v "0.2.150") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1dvfi7vrkg8jyihm2yghrv7f88j7x64y50ay85y7dnscpqpa5vk7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.151 (c (n "sn_testnet") (v "0.2.151") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0z3my4minn51107gdxalf5gx4zpbvgglirpqj7s5pvs6wmr5m288") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.152 (c (n "sn_testnet") (v "0.2.152") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1fc4qabvi0zhi4bdzfr9mbzfrazwnc8f3k0zg1k2vfag7rnk9nay") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.153 (c (n "sn_testnet") (v "0.2.153") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0pa3ypd1fmdf151y1lk67914v45hhlji8xn4nxgj9p385pwpbayh") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.154 (c (n "sn_testnet") (v "0.2.154") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0fhvhzr77zbphpjrli7vy5r05kjw9wg39y2wm3b0b789kxbawsd0") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.155 (c (n "sn_testnet") (v "0.2.155") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0gxhgll5v22db312576lcvjzz1s5y91g33avg7smyfwkaysqs5yl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.156 (c (n "sn_testnet") (v "0.2.156") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0h59ci26rjilbaabsdyrbkkiwqs76vypv65rwnhz8h9y0wa6q4kk") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.157 (c (n "sn_testnet") (v "0.2.157") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "03zg57m7l7sq60s9pjv5yrqlqhqxh334j6620v951bv1k6sickmr") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.158 (c (n "sn_testnet") (v "0.2.158") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1cdbxvl859m48avvqgdkczj0rbv9vm9vbmraxyhmlvk8pc6l439y") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.159 (c (n "sn_testnet") (v "0.2.159") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1n7ha9583zz84rxy3mfl2rnd28f7q357z1k9yhkppqnmqxvxf85a") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.160 (c (n "sn_testnet") (v "0.2.160") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1k6bhhyx09p5c7s0lgwsdqgsfdcldac0dd42z5wj226wcgpyrccy") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.161 (c (n "sn_testnet") (v "0.2.161") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0vz5805szyyc4mrjpnh628vxmhsycif53n3ib0qvbgbqx8h5h0kp") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.162 (c (n "sn_testnet") (v "0.2.162") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1ljy6irlylcdry5hsdlx050xhdr48g4ffa510qcagsqsdracdgym") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.163 (c (n "sn_testnet") (v "0.2.163") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0xsn9mj7imvz4nz82k2frbb1sldd4nqhl096ysvl4wnl7jnd6i9x") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.164 (c (n "sn_testnet") (v "0.2.164") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "163kfls90lhnfw7d14nkinbhnrk334rl8qhsmxizzar3bmyih32y") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.165 (c (n "sn_testnet") (v "0.2.165") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0blwf2s89mmsp85lffgvz95dimfk0ns19vljxp90hyz8r3xka4dv") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.166 (c (n "sn_testnet") (v "0.2.166") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0jz3ff9prrzrcwl9b4qiy600b6wkkwzair46s140g7yvfmrqka3y") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.167 (c (n "sn_testnet") (v "0.2.167") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "02fbc16y4sip7yzn7v8i37ixjv2adlpz7pld2xgfwm6s84rw7q6k") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.168 (c (n "sn_testnet") (v "0.2.168") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1zjs5565bf7gp5mz9pi963321957x2aqcj25xjaas7i41y43gx7f") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.169 (c (n "sn_testnet") (v "0.2.169") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "000x3k2zqdkxi41i7af685j2jbzcqjjzy3pry37fasb4iaj6aqv6") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.170 (c (n "sn_testnet") (v "0.2.170") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0q9l7zwdwxv5wmwzdnavds53lxid00h63bgcvz828bw09dpp2gyz") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.171 (c (n "sn_testnet") (v "0.2.171") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "00s8h2bkcfgvn52af1d0zd1hjs314vw2ap01ww6bl2rbxvxlhwdh") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.172 (c (n "sn_testnet") (v "0.2.172") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0rskkppckplfi3m6x6rwyaq2lmkw6js21frp8z7z59a1y1prvkpm") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.173 (c (n "sn_testnet") (v "0.2.173") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "03grxbz2kriivlbyflj9mql5zzpzr34gs1a8w0whjqni73nkrlvv") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.174 (c (n "sn_testnet") (v "0.2.174") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "089kfcqw69xn1ll63a9ga4fnx0ypqx86r7933wlli4wmd0bqpcmw") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.175 (c (n "sn_testnet") (v "0.2.175") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1z8vz68g18jv0vgjafrk5xc1dl0gd2h5rvabjnxay1mmbfjsqlgl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.176 (c (n "sn_testnet") (v "0.2.176") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "16szxh2z610819kvrd5la3s3ml16l88szv4xccmp44b17n8yd0z0") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.177 (c (n "sn_testnet") (v "0.2.177") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "09dyr4zic1lhdrj9if57awghz56mps9j6zn4qsvqgr1b61fbz1j0") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.178 (c (n "sn_testnet") (v "0.2.178") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0mwcr4x4zzgbxa4igx4gq53csdkzp42bndasd21raav850sfwz08") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.179 (c (n "sn_testnet") (v "0.2.179") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0f0v6acsf511r0vfwykwxfmaam4gl9dm85m2qlx3086irrcy10k3") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.180 (c (n "sn_testnet") (v "0.2.180") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1415c3jiw3dw8zkmwc2ag0z1zdbp6n7f1xzx1f6mbyldmc6xb0gw") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.181 (c (n "sn_testnet") (v "0.2.181") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0sa23bv7p6ndg8h8fg824dv5414fag61hhc3x1n8icc810jv2v50") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.182 (c (n "sn_testnet") (v "0.2.182") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0fkk3ing8rbx1p05ccr38mmlpv95ji2gi6w9a1r8m8a2c1p6pgxk") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.183 (c (n "sn_testnet") (v "0.2.183") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1hnb14nf1cd51f3yi28cli0jgzcvbqxn0cb0r0cq6j4qkwgy3v7k") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.184 (c (n "sn_testnet") (v "0.2.184") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "1k8cq1rz484j7zlqxx6hb2n6f8d7b6dzn0ywi58sghx8vhdamj8i") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.185 (c (n "sn_testnet") (v "0.2.185") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "13q1vdq8xlx6rm62kv62v086kchkr07ri0sv1qsg9f67fi5pg7bh") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.186 (c (n "sn_testnet") (v "0.2.186") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "114jk07gcrk0bpgd15hkpcmpslsq9cmxblx1hp66cm63d0xbp24k") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.187 (c (n "sn_testnet") (v "0.2.187") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0p2s32z2m7k9bnyyaqv0glnngrnqfladrcflwpwybrgf3gc93ly8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.188 (c (n "sn_testnet") (v "0.2.188") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.7.1") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "^2") (d #t) (k 0)))) (h "0r7navcffpmlrg8pk9gwrllksh777zr52sxgclzr4g69rml0iaab") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.189 (c (n "sn_testnet") (v "0.2.189") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1z32yvbd442vxv11wnxa898r2qlhp363zk720lycwgvr9l7hnznz") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.190 (c (n "sn_testnet") (v "0.2.190") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0qyspcdj65pxrw2pif69rrsw3q01nqk8khz0ai8c2m4023gzavp9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.191 (c (n "sn_testnet") (v "0.2.191") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "056xql1lqpp3yxx7g7s2nx4hn96pf88sx7jq1nd9f5hwxiwzvv43") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.192 (c (n "sn_testnet") (v "0.2.192") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1p094j76lchvndwl4gzg34092l3mb0rsl5zlayqkk3mh93pmr1b6") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.193 (c (n "sn_testnet") (v "0.2.193") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "12954d7m0jsp6yi3vnlvbzjfhg714mgbg6xy0adi9mrzhdyhp5j5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.194 (c (n "sn_testnet") (v "0.2.194") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1hac3c6iaskys95g654rhhbgf57b3l8jrxddjrh0j9jvdv7clmjr") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.195 (c (n "sn_testnet") (v "0.2.195") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "157xl82fqd2m13m470a9i8d98klcpgzhy9725gzg2nfchwqwchxq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.196 (c (n "sn_testnet") (v "0.2.196") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0aqmcvla1kwa3n0ik0p6r738zisypx2cay3hifamwd44f5clrv7z") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.197 (c (n "sn_testnet") (v "0.2.197") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "16haag34ywrjz1738n9p9w5445kwk3c8q0z29c605jr4cdg3rxq7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.198 (c (n "sn_testnet") (v "0.2.198") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0ycfzxakacc367vr2s5ig1qij640d2gvd7pvqrlcvxrlm5zl7vxm") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.199 (c (n "sn_testnet") (v "0.2.199") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1xg928mp8cj19mjy4cr105a3ry6v0djn81qkw4rmjrxd2jbvpa2i") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.200 (c (n "sn_testnet") (v "0.2.200") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "14rf8fg2g9l7v2mahgrby0qg66j7yw42bbbg8aj1a1z8iaqp6f9b") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.201 (c (n "sn_testnet") (v "0.2.201") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1c78l80hc99qc33xnlxcmvwy59gsdx205nhjqq9mcns5cd6djj8f") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.202 (c (n "sn_testnet") (v "0.2.202") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1m6i0yj1w0zi402988pyrvjcz2fy96bwvs9721wn1h8x8zr4fl2y") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.203 (c (n "sn_testnet") (v "0.2.203") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0lp1bh3li142s312pih6k5siva0bi20gisn38z8f9smfvjhcbwgm") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.204 (c (n "sn_testnet") (v "0.2.204") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "10lcd4fly8nkvk9rk45rgwm32qsf45dhax437rdh8x3kyhdlb281") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.205 (c (n "sn_testnet") (v "0.2.205") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0d0ph2kaqsxrbjjvr4k101v277asq96jf6l164ra2v90gzp8kpsd") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.206 (c (n "sn_testnet") (v "0.2.206") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0wd9vwdcafrd5kvmdrpijmwq9dh5yqi75i8hsxhxxnjiaric4xvw") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.207 (c (n "sn_testnet") (v "0.2.207") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1cpnrfv14ibdxiv04976amv5w7y3dlpf0bmpf09nl5zv0hvk2way") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.208 (c (n "sn_testnet") (v "0.2.208") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0mp0gl5vjs9lhh2pkh1nc4sn349lbclh9gbpyanjz8c4iqj0ksmk") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.209 (c (n "sn_testnet") (v "0.2.209") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0y9h5bvkavrlnhk96cjh1lf7qg5n2w9xa1a3463dr8nhp9w8wqn1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.210 (c (n "sn_testnet") (v "0.2.210") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0pljkbd7wixnxa1pq0r0s7h3arinvsbszk1g79v94gbk1zgb2bhn") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.211 (c (n "sn_testnet") (v "0.2.211") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1n324z00rg7hpx2q19i0a0clvqypzjxsq9yy4bnsxqm9sg2mjr5q") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.212 (c (n "sn_testnet") (v "0.2.212") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "13dqhalwxgzaz2ynz8kkpk9v8kprqq96rdv9l6zwkghgfmk56fw7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.213 (c (n "sn_testnet") (v "0.2.213") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1xgh0qq4dh639gadbq02lgnariwjs6cb24mdfbbgmsi7yklm47q4") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.214 (c (n "sn_testnet") (v "0.2.214") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "07kdzb5jljdcdpn4q80h53d689ivyqljvbksmxa0bcr40av8m0sd") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.215 (c (n "sn_testnet") (v "0.2.215") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0c1cixxfgxgfhpwxjzm9979kvzsky3lggbx826pzxn1ckbpy31q8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.216 (c (n "sn_testnet") (v "0.2.216") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0rrgfr1949yx07ic9f87lm0qwjmhjd1ad81r56wjk9cy182cd08f") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.217 (c (n "sn_testnet") (v "0.2.217") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0nrlkdndpy8zx98b3whhgsy16v1pzvian1wxkmxci3kbnd82d606") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.218 (c (n "sn_testnet") (v "0.2.218") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0l5rmvhzqxq6nrvd79fff43rrl8vjilrpn7v77bcwa0fbficrkl5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.219 (c (n "sn_testnet") (v "0.2.219") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1lfmdf7f6pnhmi1lyfc36p2vw5pzsizvb6mzmx578p4i8njil9jd") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.220 (c (n "sn_testnet") (v "0.2.220") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0hwbspb9b2mk02x5hywl819jxqsl15iaf92q37bqchc8yad4qvi8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.221 (c (n "sn_testnet") (v "0.2.221") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cmilr4a89r37ng0js3x29wkrx2rg1301m44qsv30fcza14clmd5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.222 (c (n "sn_testnet") (v "0.2.222") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0fjmnvcimcgmy8szfb4yddq9y3mbcbdly0vcpzh4y5h52jfak6mg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.223 (c (n "sn_testnet") (v "0.2.223") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1rwpzpb0rlac9qiw6vby31xkapcv73960iwp8ay7n7yc1ykwwnvv") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.224 (c (n "sn_testnet") (v "0.2.224") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "147ia5jxdgpjncy2k1rcqj7ijc1jx2irnclzppwcpwj3psi3siny") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.225 (c (n "sn_testnet") (v "0.2.225") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1bnwkjlzzcl21sb845bq7m3gbgayzjssa3mcivvy6h82v4hs0jn8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.226 (c (n "sn_testnet") (v "0.2.226") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "06chf14r5xd3j768ipd211bwwfy6bl1br1mwx65gzzq7rfml79c8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.227 (c (n "sn_testnet") (v "0.2.227") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0bbvi37bhjncvgj6rvyn9nr304qay12f0nrfch57c418cgp20b32") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.228 (c (n "sn_testnet") (v "0.2.228") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1ysc1j6h9zb1bfdgggrzkj7pqqkmv0s33c9pa7k3za0gmbccp96v") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.229 (c (n "sn_testnet") (v "0.2.229") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0gm8037k748kmzill1x6x5cv6b5slml5viab9k4dx3w1vxmhpvcj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.230 (c (n "sn_testnet") (v "0.2.230") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "04nyi14bqj3ldljwgfmljda675rgqglkx84iiz4ysjla2hw57vdh") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.231 (c (n "sn_testnet") (v "0.2.231") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1fyzg4j2l0kg29rczvrjgh2pnzd3wb9ygy9ygsm9rn4b7ypfrjra") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.232 (c (n "sn_testnet") (v "0.2.232") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1nd8zidj5dn1744zavb2b99g6dxplmz0fqdn92jmcm99swaw63rn") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-royalties-notif") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.233 (c (n "sn_testnet") (v "0.2.233") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1jqbb2fkrk4j3a01axy03s9spq5g564hb5y68z42yf7lzdcisws6") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.234 (c (n "sn_testnet") (v "0.2.234") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "11fpq9y1d7yb43kzswqkr5g249jd8rw65mxcylgdgmlwrfrh16xv") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.235 (c (n "sn_testnet") (v "0.2.235") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1h0k5x1qphp7vxfr8nqnf3fbh805hxvihkgbpb0ijizg04fsnx2m") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.236 (c (n "sn_testnet") (v "0.2.236") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0nv5k1p2vagkimmz23gyx0j0qgpbnlgvqk9rsy7xb5gcfm37ci6k") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.237 (c (n "sn_testnet") (v "0.2.237") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "065pxiinllcxf2azci3shyply63p7kbg947hsxssn363afnnqg28") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.238 (c (n "sn_testnet") (v "0.2.238") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1vxv3jq5p655y0z50l56kc9q8i5w6arm5gjyw2y0yrgfvwhvkz93") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.239 (c (n "sn_testnet") (v "0.2.239") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0bhy13jig7319hf1ba5m5ywx9ym2wqf7z9y4730rr29ngr9c46mi") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.240 (c (n "sn_testnet") (v "0.2.240") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0d8l2h6fm498lfffpmwrvwdv6xcw72jgfdp8v6dk9w7m2l3b8kxl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.241 (c (n "sn_testnet") (v "0.2.241") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "07karkkhq8axba55s6lknmg6m7kyqbiagss1g8yv0jakaaci9vvf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.242 (c (n "sn_testnet") (v "0.2.242") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0l2cc8i530m3z20k24gk0amxsjsanwpx81h0536f9g87xyq6p4xb") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.243 (c (n "sn_testnet") (v "0.2.243") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1x7cfwzkssa76w7vp9fvill1jr8pip4fy2indxjml0lvwbgaqvlc") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.244 (c (n "sn_testnet") (v "0.2.244") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1r2k2841i8g1x3wr42xmi7hrlhq0m4vi06sclkgw51nfj9sjl9dq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.245 (c (n "sn_testnet") (v "0.2.245") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "126pv54qyqfrpx3zx6vj1kw0yim3xkz4ll4sy8jjqx6xrcpm2p4a") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.246 (c (n "sn_testnet") (v "0.2.246") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0qp8khj3y12smqpaxiyk6flm7p6fcs04yayikq9r2jmqr6r28vcg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.247 (c (n "sn_testnet") (v "0.2.247") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1hnc4ip3jp54q4zqbm3jl2n70g50zrq8cq0f8ldwp1h0frpkrrf1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.248 (c (n "sn_testnet") (v "0.2.248") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "13810zl2723b4aivz34b92fni0zm9bmkyl9lpvkw2pliry3m7ymw") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.249 (c (n "sn_testnet") (v "0.2.249") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1f24xl978h5y0wa4rd9jfrdn2k4w10wzjnfs3vdw4ysa9z8982m5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.250 (c (n "sn_testnet") (v "0.2.250") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0vx7831ggcx1vk4d0kch12jc054yazg0ykq5s4z7cb6qx10jizqa") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.251 (c (n "sn_testnet") (v "0.2.251") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0bikbfx1d8409xl98szv4g57bkl4qpzy8n8s2vlg09sw8616gnhk") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.252 (c (n "sn_testnet") (v "0.2.252") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0989ysm8qrcphrm7dcdqv26agbqfgay7vyjs01cl4h83nzd94063") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.253 (c (n "sn_testnet") (v "0.2.253") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "163f50sffw1q8ah79gldj97sk4bn7z0wx3c7xr7w57v83jvnkxs2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.254 (c (n "sn_testnet") (v "0.2.254") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "14x8kpqrghbwf6bikbk4d7kdyfxygff92jg0azlfh3qhrnvs8g5s") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.255 (c (n "sn_testnet") (v "0.2.255") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0kb08f7zjabvm18nhfwy426cg45y26wfbyjs3s4ddlg8c0s3gq1m") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.256 (c (n "sn_testnet") (v "0.2.256") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "05fhrvlh8bszsv7r1k05hhlw8zjz5qi9pb8gdddqrpriymi88a9l") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.257 (c (n "sn_testnet") (v "0.2.257") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.52") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "~1.9.6") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0bkypi2kla3v0rh8m2z3sgvzghxr672bmjywl08vrvkmwqggwzm5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.258 (c (n "sn_testnet") (v "0.2.258") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1kafj0bii5llmi0sjidnimnfkfb943kw2sccvvsn4s1p0bka5jk9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.259 (c (n "sn_testnet") (v "0.2.259") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1byky647kg7zvq52cz79m7hs7ia0zn7cb6w9jy3scj4kmfvk3n31") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.260 (c (n "sn_testnet") (v "0.2.260") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0axfznyphc1ncgd3kjg2dpavr8l0iimkk4lg3q7mw00ghlf7g6cb") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.261 (c (n "sn_testnet") (v "0.2.261") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1awi0zscclaim0vzi2h9r64jrg0wavczs616b7mc14hqnz10n0k8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.262 (c (n "sn_testnet") (v "0.2.262") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "029jxw1jx9v1z8n3iim2kd6p6zdkkr7j2r3zznzmk208fzphcvdn") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.263 (c (n "sn_testnet") (v "0.2.263") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0fq2ci7bzg1qm57hxja9cw9dmj2mrg4j076fhn9s4bhh3i9dv4gq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.264 (c (n "sn_testnet") (v "0.2.264") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0kx2wwbn0r7ihkvpvbpd1kqyaw6ngpmz7v4cg0cq56lca1gla2n0") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.265 (c (n "sn_testnet") (v "0.2.265") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0xff1m2sgsqi9ghy284bc3i8z4153nvpwff0yr5y1w8kk78h2k05") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.266 (c (n "sn_testnet") (v "0.2.266") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1bv5wpjby42iq7mxa6rzjsqllk1kjaabkpkk9s1avnsg2ynyp7rq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.267 (c (n "sn_testnet") (v "0.2.267") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0qbl9g4l70ngahyvmm099g4jxvvaxabbimvlrfm9gy7mn16k2vh6") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.268 (c (n "sn_testnet") (v "0.2.268") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1vfnjcjrvnbj2jgfkli44i209aiys3z1zdnxddmgdp2k1lhg84jj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.269 (c (n "sn_testnet") (v "0.2.269") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1icx8mc6181ls8xfysbbfwp26y8wnidzx90mpm45nwbfablq9f91") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.270 (c (n "sn_testnet") (v "0.2.270") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0fwpymh0k17y4qhs6ld492a1d3ll7jwgmzdd5pkiq7dkym2l49aq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.271 (c (n "sn_testnet") (v "0.2.271") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0m490idkqg44vjs406zacnlx7v37ybhgxl9fdjs9f6dqv3inii26") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.272 (c (n "sn_testnet") (v "0.2.272") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1hjldkm0m1awd6k0n72f9i84axgvfkv8gifa4ndhpdy7s78m7mgl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.273 (c (n "sn_testnet") (v "0.2.273") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1fbdqa01sc7pl68r9q0y663y1r9cs53ia6p3cz31jdkzp1pcp2ch") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.274 (c (n "sn_testnet") (v "0.2.274") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1809r0fs9bcb7hpa3hwm05x7qm8lq73k5gcl9d1slqw3xr2phdaq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.275 (c (n "sn_testnet") (v "0.2.275") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0kbd8hvsgldi4im009kkzk8838ckszfsclzzyfyjc2afh2v16qz5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.276 (c (n "sn_testnet") (v "0.2.276") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "04q0p7aibilmwslm2r5vbdrq4fmb5bsvvcq8ps7v2mg953308fq2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.277 (c (n "sn_testnet") (v "0.2.277") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cqxbcnf3abi6d975fnvl2whlc1hrqpk9k2i44pq44c84pa6r8zi") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.278 (c (n "sn_testnet") (v "0.2.278") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1mfaxhjab8bxkihhwpl18x37hd2h5z4p91bh2z16x4zaf78lhsil") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.279 (c (n "sn_testnet") (v "0.2.279") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "01318zd248nf7bg3xxg76wz1ixljkmcyan7s05k2h63x3lr0rn6p") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.280 (c (n "sn_testnet") (v "0.2.280") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0d31v11g4hnbckvk3xjq30r5c1pp7sbyi6m795s693nrxvqwmpwj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.281 (c (n "sn_testnet") (v "0.2.281") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1vcmsmrn8f0icq4cwsmascarwni784mvi52njpd6syhsa24k98m2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.282 (c (n "sn_testnet") (v "0.2.282") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0rvk5dld1sk3wvfhfb4ir16w9hvavkd622w776fxag719339p1q4") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.283 (c (n "sn_testnet") (v "0.2.283") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1j6g4h5yl0vr4hakk7q1y48wng1s3sdqa1bary35pbcw95hcsy31") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.284 (c (n "sn_testnet") (v "0.2.284") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "11a58p8088lzgiyh286lf53xg3sp8zm752idck62986z2yh34vz7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.285 (c (n "sn_testnet") (v "0.2.285") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0ia646ag17rfzz11rskcf0j86w914c9sxp2pxydd19v758i2876n") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.286 (c (n "sn_testnet") (v "0.2.286") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "106qrdq0kbq9nwffp6zn9483zbap7yl861sdr1qkiplwmrv71xk9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.287 (c (n "sn_testnet") (v "0.2.287") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1ndj16qm78i6yndp272gjnwypzfsy51l8x3g48ipycbzjdqx5dw1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.288 (c (n "sn_testnet") (v "0.2.288") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1q8kkbdrriib9nx2zrj6d9g9zvzqxnd6nq5q2a19v7g6b9a9fp1l") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.289 (c (n "sn_testnet") (v "0.2.289") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "16ngpz2bj88lfz35sxhhazxl0r4cswk25zffngakiaa1bz9pwv0d") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.290 (c (n "sn_testnet") (v "0.2.290") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "18ghb74y2h4avl410c8aflfcj7ww3ihaxcm4vpdh71f3bg5vk4vp") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.291 (c (n "sn_testnet") (v "0.2.291") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1vjdhg7cynhnv6g6y0b8hi1dmqrwdl2l6xk6aihr2qgqisi2kgsj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.292 (c (n "sn_testnet") (v "0.2.292") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1w3rzwpvhgcd6n115ch41v019aaan038pz2z62gyj52bl3kb73qg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.293 (c (n "sn_testnet") (v "0.2.293") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "02mf4q58ik4d40hkqhi48dz115sj9pfwr4yak23wy5nc8s6d3kfk") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.294 (c (n "sn_testnet") (v "0.2.294") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "00bk78d2dbkrbk4jpl7c38si0wkacslbq911n2z2zc1arzyqb95m") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.295 (c (n "sn_testnet") (v "0.2.295") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "09ih14qaa2lpn1g61792c6b4yal0gzxibmj92h3skc100dfm3bfs") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.296 (c (n "sn_testnet") (v "0.2.296") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0zyr9ck7amhwqbmkjfav2yfi8lbkjlv4vc00z131h9c9b3y9pnaj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.297 (c (n "sn_testnet") (v "0.2.297") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0109a9ik4p475lm388andsrplq9zcazr69iw07vhvscbc60s51s7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.298 (c (n "sn_testnet") (v "0.2.298") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "03i6g6p7hxdj5ca0xji7n4z80zmkfdafmgzv71wwrm2y0n71wcja") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.299 (c (n "sn_testnet") (v "0.2.299") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "13mdsabg653pzhvswhiiakhiyjgn3lkn735qlcp2zmxypp09r0fn") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.300 (c (n "sn_testnet") (v "0.2.300") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0lhgiai3r34yq81jihrwz0yf9mvp06w9qn7qw7l2i8ypfy9m5y9k") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.301 (c (n "sn_testnet") (v "0.2.301") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "01ndwph9ryw31sbrhpvd9hpmcwrfrhfixyxjarm9s6nrzsanplsg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.302 (c (n "sn_testnet") (v "0.2.302") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0q6yh5f0qhc38d9x1jzpag8n2d7aih27w5cwj4h1rcijmgskzbbb") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.303 (c (n "sn_testnet") (v "0.2.303") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "17pgf92ywy4as1npw5cj6d7m1giq73lmy1sbrx5q6cj0pjvyqfsa") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.304 (c (n "sn_testnet") (v "0.2.304") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0wgzfkk8xr0pxi3isp0q1x5jxzgia7r1x5z5wvpakbv0j970887b") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.305 (c (n "sn_testnet") (v "0.2.305") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1bfk0cdfmma7qhvy0rkcqc2vnbdg4as28k9nbpcii88wwsp7y1f2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.306 (c (n "sn_testnet") (v "0.2.306") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0v9afphdqg4yjxl83j005kp929r8i9yyhx2g2jl6pcranfwdvd1c") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.307 (c (n "sn_testnet") (v "0.2.307") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0yp8wr592ib0x2j4nn443pd00cdwj416m3kbai5b7k4lx8j3zm96") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.308 (c (n "sn_testnet") (v "0.2.308") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0j7jasgz32wrxav5j27lvy2m3ijh94zy5x75rskrh5bl4xwa4p82") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.309 (c (n "sn_testnet") (v "0.2.309") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "06xpzxzdhkj2mb6dykrsy278xrx0kmwp8v061liq08fi3pi0qh1d") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.310 (c (n "sn_testnet") (v "0.2.310") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "10sn4bl09ln4jcimnrj93n8vq5xfr82b9ymf9a82w2rprkkfqpkr") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.311 (c (n "sn_testnet") (v "0.2.311") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1sipjb1z35z1lrwazyihzhp8yxp3wpdnz1qgyiigmgglqlssy798") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.312 (c (n "sn_testnet") (v "0.2.312") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1v4nzda9ngdh2fhv7nm7ab8gjjn7b9107ny9iqdimkiha3sf2nfv") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.313 (c (n "sn_testnet") (v "0.2.313") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0hcl33jbmgzd4874pyxwxmd2mcaj9fda1s0hrni4dk5p0482icaq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.314 (c (n "sn_testnet") (v "0.2.314") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1b0lxkp7qk5m2chc3455fil60bk6bw2rlq5z3pwrc4ig08i9yzvj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.315 (c (n "sn_testnet") (v "0.2.315") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0ryasbh1pjlr0g6yx4p225r59c2518bnyxic6hyrvmfcqapvhaz4") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.316 (c (n "sn_testnet") (v "0.2.316") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "05gy2f0skmcczz8b7kkhpfzs3s48pm9r5f2qss1r8hh21ii1b121") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.317 (c (n "sn_testnet") (v "0.2.317") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "10qwpspsprlaxb2saxvfszzx7n80b4fk6ralgkarhsqjyx4qgaxp") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.318 (c (n "sn_testnet") (v "0.2.318") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1qmdhzlc44x4q5h47602rmlmvp07g32ma4chibkkb95x7j2qd8r2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.319 (c (n "sn_testnet") (v "0.2.319") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1jjkzd2k5kg7iz54xrbzrvw5vr1kkb34aavb2xv8fk1dbvk76ldw") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.320 (c (n "sn_testnet") (v "0.2.320") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0yy98h6wnm5hv2kiiyzn31n3nkanbk3hl6k5l0y1r4589a1m0bdf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.321 (c (n "sn_testnet") (v "0.2.321") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "19kwvzcqvn7ia2wapa2z8zxqs606av7kcrmw93kvd46ccvgvnd3n") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.322 (c (n "sn_testnet") (v "0.2.322") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "03322gq2iz8fgv30pr10qw1329c9k4bw96xw9vvvvlbdcgvfyb3r") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.323 (c (n "sn_testnet") (v "0.2.323") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1h8c8mysjhij5lvwn6swfbldzggcvn6sp7d1ww21p55ll4cm3yqq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.324 (c (n "sn_testnet") (v "0.2.324") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1mxq785r0fs5x5zyqry83z4ma8qsxgp4kn6ngjpmq94zzzgzrnqr") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.325 (c (n "sn_testnet") (v "0.2.325") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "17ch73gjg82y15k3j2yxs8biy0g5fykv0bxbdf4kqd0bmgb546ax") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.326 (c (n "sn_testnet") (v "0.2.326") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0vj73vfzpnbk1g4n8wghfrn3jla9mhl072acwi3p4dpcajzx8qcf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.327 (c (n "sn_testnet") (v "0.2.327") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0i95mhvk9c7qapwk59na4a4wnwhjawj9ldn5cwfg5fra0188s9sk") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.328 (c (n "sn_testnet") (v "0.2.328") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1cd5k82dsc7ixxvqncmhwc97cn4m1c8q9iby3pa7cfq9jn9mr032") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.329 (c (n "sn_testnet") (v "0.2.329") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "06h3l52yw3y77y0k76ps23q4i6qdmqkmhfbn0q87ha20yxqwx4d1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.330 (c (n "sn_testnet") (v "0.2.330") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "177zjsr12i7kwi8m0r5g91s5k5m3iwbm0bghamjylzb40icp22d8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.331 (c (n "sn_testnet") (v "0.2.331") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0pzaj4i0f9m8vm3ggs9cvrcqqvpqn62v6zr51viyiczww12rcbyf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.332 (c (n "sn_testnet") (v "0.2.332") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0kmmnl7rvrzy58l4pv2s6cahcq2bfgy2q1b3mpcpfpz76fq04hpf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.333 (c (n "sn_testnet") (v "0.2.333") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0hwc43g40psmjf1nkc0iipv2ly62zzk8srpq14zhpgrl410yfzfx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.334 (c (n "sn_testnet") (v "0.2.334") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "057fpk37kkpzx5i5kcirbacx6qlbjirlxpmx3fp0967qljxjlbx2") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.335 (c (n "sn_testnet") (v "0.2.335") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0hcd7sggl9zwr1qk7h5pvc619v7s3lkhp01c7m9nnj34lrhf9334") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.336 (c (n "sn_testnet") (v "0.2.336") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "18gb36pzl03yxfsh4v61sjspc4k3879q496giqf0190lr60hbkby") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.337 (c (n "sn_testnet") (v "0.2.337") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1jfgif992l2rdli6n2hw92zffmil9kb3c72lyj05pp1qlyxcy2xf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.338 (c (n "sn_testnet") (v "0.2.338") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0lwhg8nlivzbqpqx6dgwsgxa97mi5bqw9vfc3nrxl5r6m3ax7h06") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.339 (c (n "sn_testnet") (v "0.2.339") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "08qxm2sh0lkm6w5lvd47nhpd3vf84537mdx6ip031ssma18m1cci") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.340 (c (n "sn_testnet") (v "0.2.340") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0rnh20xza3i8cyp0hl1ahcba5swn7blcmgs0amkbif450f2bddyv") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.341 (c (n "sn_testnet") (v "0.2.341") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "19cdz4kzm3q4l7qxnkb8qbibb0kxdsc871yl8h0lph2bhjfj49r9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.342 (c (n "sn_testnet") (v "0.2.342") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0gm6jrrj821qf3mxbrd3vvl052ifnd00yzymf3h4qj1z7a9w2j2m") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.343 (c (n "sn_testnet") (v "0.2.343") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0kk4pxbbcilgwlm21dc6gs2d5l1qcp1hzwlpp0d2jv8gji7sg823") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.344 (c (n "sn_testnet") (v "0.2.344") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cp7wsis9qgml69w1xifszm40zy2d8r5s3qf8mib212smw62zlhs") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.345 (c (n "sn_testnet") (v "0.2.345") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0xyikk5hdqzknfg170x8lf64dlni452gyfwckpsl0adlfhh3jhi1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.346 (c (n "sn_testnet") (v "0.2.346") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0p8ihbilgh43pd3dxl9bafjfznwf6bz0fkk8vqsqiv13qyin7gpq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.347 (c (n "sn_testnet") (v "0.2.347") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1cbir6pzzj5q0s3kd2aah5dnlchya2yxz5hw50aqyvhyqn86ri32") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.348 (c (n "sn_testnet") (v "0.2.348") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0wvc504bq6xk0d3cr2s752l7ra4djj91ff27wnz9h90cjjg50lky") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.349 (c (n "sn_testnet") (v "0.2.349") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1436zd46cvl31d6gw6cfr474vx8d9wir7b5gparsyl09skp49qwx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.350 (c (n "sn_testnet") (v "0.2.350") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0fc6agkj5plzymxk29h6a42xavz3jw42w80zk62fpcvszdyns978") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.351 (c (n "sn_testnet") (v "0.2.351") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0raqzz40sq7lj6v27w5q4ara3w3915sbk01rgw102hf7jl0g2bc7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.352 (c (n "sn_testnet") (v "0.2.352") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1z9fikkz41nvjashrs84nfb7xk9kksyc25478igh3l2y04ny7dpi") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.353 (c (n "sn_testnet") (v "0.2.353") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cjnm19smg1005472mqkbp29625jcwlaq3hjwabadcx9g5i17ng5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.354 (c (n "sn_testnet") (v "0.2.354") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1vza4klva5c4lgx9r9ym4xy4lh44z8w8pv0bxc54av9mpnf4kkan") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.355 (c (n "sn_testnet") (v "0.2.355") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "08mg5v4k5p4a0j5w097504ni8472cqjwc4c0wwdr41j30wcbh6dx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.356 (c (n "sn_testnet") (v "0.2.356") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1qhbzynlkhjbjym82421hwdwg1w79imdih18f1gi13y1syqvqadj") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.357 (c (n "sn_testnet") (v "0.2.357") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "08lk80a0q3yg3zh40yxqkahymngy8sbrbjh2xaqm7dn5dg0k6hdl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.358 (c (n "sn_testnet") (v "0.2.358") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "19k31nbz9qlmxq5j9kyqkmg3y0a55waiflv8xd08y5al1c591d8s") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.359 (c (n "sn_testnet") (v "0.2.359") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1c9sb678d0qas705k68iqi5zi79xmq51zzdwmmc9azdp4jdigq1c") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.360 (c (n "sn_testnet") (v "0.2.360") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1i7qkjf32n337cc3ndfadq62khs1028s7l0nagw6bb5hdn10vvl9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.361 (c (n "sn_testnet") (v "0.2.361") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0zjzid47ajjv367wpn1k5d8yfqny6h752y4q0v389jdff9x8lblm") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.362 (c (n "sn_testnet") (v "0.2.362") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0jm8d3z7n3hzw49jppphxsryicrq3ndpfngjd0279jn1n05gwldg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.363 (c (n "sn_testnet") (v "0.2.363") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1igjbgzra0aaqqzik4knvfw5qvpklj2zsxa1wn5xv5ajl2rbccb4") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.364 (c (n "sn_testnet") (v "0.2.364") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0wfqvc5nln7r8cww92qqdws4cs802m5r5dggs0d3p7r9dx51b558") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.365 (c (n "sn_testnet") (v "0.2.365") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cdn34bvh2fzmp44hfxj48zkhc59hjq7y7jlf5rhnpmig1pfm5z9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.366 (c (n "sn_testnet") (v "0.2.366") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "13b7zwwdb0scw3a9rdnll4f0r1ml54034bjwf5zvpdhx7s4zjxys") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.367 (c (n "sn_testnet") (v "0.2.367") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "06ic0hbn2c8ri0mgsw1adnxnlalv517z8qwkxkid15bvnc11qk8i") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.368 (c (n "sn_testnet") (v "0.2.368") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1bqzgagq4gd9xndpylj78mvphwjdgzmdzbfqwr98msmxr8w0k4n9") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.369 (c (n "sn_testnet") (v "0.2.369") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0nif038mm3f8z6wa9lx2p00mxbdjjjyqsmv4ypgxjwh6fzlqllh4") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.370 (c (n "sn_testnet") (v "0.2.370") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0j07a4r2g0jnp6g8p6z7m5fdy8b47ncgx3q2121sb6pd533iwlp3") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.371 (c (n "sn_testnet") (v "0.2.371") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1m8qkrx07v6v6qzsyd0dy04a0w8yrlgdcxsvz4rgkjc0vdm5psv5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.372 (c (n "sn_testnet") (v "0.2.372") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "02zr4mig1cmnhpkq6hl8whc7gf3kwd9caqixf018p7lnm3iikv34") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.373 (c (n "sn_testnet") (v "0.2.373") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1b7gzdgprnb3wxs4qm2rdzjjrrzhr3vpyjymsi0vcd7b21x8w2qn") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.374 (c (n "sn_testnet") (v "0.2.374") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1g8qs836q8y0c2yj300g0l6gzpcnk1yxz0sh8l7hz4kihmvnqsla") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.375 (c (n "sn_testnet") (v "0.2.375") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "18pcd72dfdzp6z7zw0jn5q7khjzd8hblklgxny9dly0zh24z3vnx") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.376 (c (n "sn_testnet") (v "0.2.376") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0qy46vyf05mnxwv6xxrslsjg7akm476g9c79ky2rrf11s32d5hdq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.377 (c (n "sn_testnet") (v "0.2.377") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "019hbvgqg2lwa1d5qj3gk0cli2pva61ajrxwk2bvn3y02pzf2ckq") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.378 (c (n "sn_testnet") (v "0.2.378") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0y7x9hkb9r4bx6ibwkg9wk1cvxsgz2h9k092c7nam7xi1hvsq1j8") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.379 (c (n "sn_testnet") (v "0.2.379") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0h1f35rdmj4szn32bmyjky33fxn58ykrl5sinbmq39qkvcwl9j0x") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.380 (c (n "sn_testnet") (v "0.2.380") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "10i70x73i1g1dll81xnx83mag4x2h72416ii91j7p64992ipg63z") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.381 (c (n "sn_testnet") (v "0.2.381") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0w971kwf54g0cj1391k09zbcimk2dnanzkdhprcwnp1bs0f6cyq1") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.382 (c (n "sn_testnet") (v "0.2.382") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1dgfa25rjpyrrp5nxw6pnrfxvx7r7nz1hajhhqcvzwg7mfmyqr6r") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.2.383 (c (n "sn_testnet") (v "0.2.383") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1rydb37s48wxgc0073svlw7ps7pqf4n3cwsrlv9qj0zn41ji3z4z") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.0 (c (n "sn_testnet") (v "0.3.0") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "03sc9j29y1xlxq9adqmcrcza4y7b1afn1vipby6djysz5siv3lgc") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.1 (c (n "sn_testnet") (v "0.3.1") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "12xr9ac5lynrk6z3w8pi5m7j73cm8ygz93vmsjnbfy5j9hkjbnsd") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.2 (c (n "sn_testnet") (v "0.3.2") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0nv5j15z05kx6d2vnvdgfp8sn6zv493hw5avcaqvnq4l41w0066b") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.3 (c (n "sn_testnet") (v "0.3.3") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0rkfp4l5mmb7gb0gw3lysx2mq1vx1hqzim9dnszvr4sqz2ca3lqa") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.4 (c (n "sn_testnet") (v "0.3.4") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "03a27wjvy95dlw4i9c0jpr6hmkmjf421wskrgzzmlnb0l4axnxwz") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.5 (c (n "sn_testnet") (v "0.3.5") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1hd18sbr7fpgjy3ggqhmjq260yiwdyr13i527lrvaiv6l09gdzaa") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.6 (c (n "sn_testnet") (v "0.3.6") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0s8v1mry621hwg3z4pnndr24pgjbiazvm6cfwa7jpcc32fmjl5z3") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.7 (c (n "sn_testnet") (v "0.3.7") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1w5m2335grj8b0120d90p5q5nccsvd3nflyj44jn8c9v0qshsz62") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.8 (c (n "sn_testnet") (v "0.3.8") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "14ahy7wfhhhps75l0h9x6q0716yzgl9kqnf2cf2052bnhczqf91s") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.9 (c (n "sn_testnet") (v "0.3.9") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "10f24dhmawryd56z11hca0m3nhly67lz85jfagaxri24my0gz5ab") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.10 (c (n "sn_testnet") (v "0.3.10") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "09jpr439bbwq57v84v7xpxzmbxpzgvkl3csqmk5spl1armm6y4yn") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.11 (c (n "sn_testnet") (v "0.3.11") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "01ahh1x0zwccvxlgzy5yh9p43z6rm40hd2yhz028n117c8sixinc") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.12 (c (n "sn_testnet") (v "0.3.12") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "012frmngyq321alzhz5ck31bww75pjbvgj0k978md1f15pl6hqc5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.13 (c (n "sn_testnet") (v "0.3.13") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cilv2bchb1mnikrnqgyv8a129ad48kyjh6r75wzz0lm8scxqybc") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.14 (c (n "sn_testnet") (v "0.3.14") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1ma2l96zwwvmwdfdjpywggrz033b6qjl10idigk1636c280df2gf") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.15 (c (n "sn_testnet") (v "0.3.15") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0zm4vgncn94xxqc1d7hb460vnxx98rbgfzdblavrj79480q9f8nc") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.16 (c (n "sn_testnet") (v "0.3.16") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "01zpbgwa6l1nrq230ksf8idr1y3cqb5i6f1y2jphh7mq53sq9ahd") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.17 (c (n "sn_testnet") (v "0.3.17") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1rrskhxmy1fr88kabywgfib423r4xbfij8xcyrz0hfj6pdil94am") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.18 (c (n "sn_testnet") (v "0.3.18") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0np4c5vx6klrwnszqxbvpm334bsy5905y15qr4lixlfip0vnbicl") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.19 (c (n "sn_testnet") (v "0.3.19") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1prxl39vizycn1hh4xfr31vp7p6miaprrfwql0lqillpq2bqngqi") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.20 (c (n "sn_testnet") (v "0.3.20") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "15k73xwq7fvgavf896vz0k67rr2985gfq9i7qh2xiwb6vaki8sil") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.21 (c (n "sn_testnet") (v "0.3.21") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0dlaifqirc5jz19jby0dgh9aidpx95zd6mvwhq0d78ypf5p52smp") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.22 (c (n "sn_testnet") (v "0.3.22") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1iaq5wh8nnzvihh8fxm6hwd81958zngv2pp17fh732namnqxn94y") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.23 (c (n "sn_testnet") (v "0.3.23") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0vjaknv0injmwj49kada76p4i9wqv7f26jyc7z84zyyymb0mc52s") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("chaos"))))))

(define-public crate-sn_testnet-0.3.24 (c (n "sn_testnet") (v "0.3.24") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "06rbgm1p6vbqcpyn75hs8bf1wzlfnlq4cjmvv98alzzys2y6kpp5") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.25 (c (n "sn_testnet") (v "0.3.25") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1nfgz84m0blgdypsbga8rz9xvn55k6km46lc8pdzv95c96fla6r7") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.26 (c (n "sn_testnet") (v "0.3.26") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0i30cv1r6963gjravja1bxs2hk0xxc1kn38wjqnwn7bvmyxqnrzr") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.27 (c (n "sn_testnet") (v "0.3.27") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1r9ysabjnvw2nrqjn4pnl3w4s3x93qb3qc6z0907vcn1l5f3mr44") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.28 (c (n "sn_testnet") (v "0.3.28") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "10vvla97xyh78qn0x37h8jcpgpxw3arzvgsqw3zc08njajz1gvrg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.29 (c (n "sn_testnet") (v "0.3.29") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1ys88wac5nailkl34rjwwy128gn85hydzv161n0s0lbip65rdll0") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.30 (c (n "sn_testnet") (v "0.3.30") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0ywn8rl200bgq27p84c71w3394g02mzgxb5q3gl3ax9fdyzr7wdw") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.31 (c (n "sn_testnet") (v "0.3.31") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0cqx2df3wgkgchv5lsm45hf7hq5sl8xnzl01is85yq95k007a29h") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.32 (c (n "sn_testnet") (v "0.3.32") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0x0w5d64wr1kwy9g6bsva1j0d0iwb65i60vs288lnwfg5dmbx4zm") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.33 (c (n "sn_testnet") (v "0.3.33") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1311nmqh4vicsx6b6ix3msyx9nskbj69rfmbnqbxb750l1bfy3zg") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.34 (c (n "sn_testnet") (v "0.3.34") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.17.0") (f (quote ("fs" "io-util" "macros" "rt" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0lx8rrgiap9mdxz2a39p5wclpkj75c28dw3nxsb8z1mif92pfz97") (f (quote (("statemap") ("quic") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default" "quic") ("chaos"))))))

(define-public crate-sn_testnet-0.3.35 (c (n "sn_testnet") (v "0.3.35") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1g02pyy18idsvkxnfc0iv15i37nqc2aalzzv7mh143dbwz63fgrr") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.36 (c (n "sn_testnet") (v "0.3.36") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0a27sahwh4jai5mgmhj7zha2qaqgnll2dqbk4irv0cbhh1z283kr") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.37 (c (n "sn_testnet") (v "0.3.37") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1hk1cc1w6vdy54gsg6f18gqblchaclrzdv2wgnv97lg1xqgkcj3w") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.38 (c (n "sn_testnet") (v "0.3.38") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "01d8vpk8n5x9058gvp209zf6dls4gv80q5yjalwyavnnb1713lwj") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.39 (c (n "sn_testnet") (v "0.3.39") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "06lh6q2ah8rl8y5hh8599vxj6jdyy46qfli9x4c62kb0pjzxachj") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.40 (c (n "sn_testnet") (v "0.3.40") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0s3apv06nwarxzsckz4qmsncff9p8xngd5h7q8ilwhfcnml7qca9") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.41 (c (n "sn_testnet") (v "0.3.41") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1v7ckzkwfmbnhd999n4wkmx1c6r8i2jqryrc35ljhirh1s6y3lrr") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.42 (c (n "sn_testnet") (v "0.3.42") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "160xn1nzlmfz5qpnrly50b3q85n690m90523wis0jrzd47d7b7jp") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.43 (c (n "sn_testnet") (v "0.3.43") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "117bjp7f35yfcijdx53vqwhpy4sfdakgnifaz6f9cqp3q8cqmrf1") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.44 (c (n "sn_testnet") (v "0.3.44") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1sz5a3lc4l7dgp1hdrajqkd652w0s2sb7q1gjbfzv6dly176xaw9") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.45 (c (n "sn_testnet") (v "0.3.45") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1dd766xddps8rfgc6ddjanp7bdshikms2zzx2nr96q3spifhppbg") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.46 (c (n "sn_testnet") (v "0.3.46") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "13rs32lzwy5y8gq0flfbs419aa5fljmgbcjw4j1x0qrrddbnvx74") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.47 (c (n "sn_testnet") (v "0.3.47") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "0dpcj96j4zzkyc25fl1bv0inciz340f7krgm5v46cvy6lmypw031") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.48 (c (n "sn_testnet") (v "0.3.48") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "082lk7ir1kx26ygf9ci5jnssb0g5mbq25yzmab6v4kn2xhd0gl2h") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.49 (c (n "sn_testnet") (v "0.3.49") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1v91gg6zpq6myc8lahg7b86qglh72dagd7r2hhyyq4bwsyb7mynj") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

(define-public crate-sn_testnet-0.3.50 (c (n "sn_testnet") (v "0.3.50") (d (list (d (n "assert_fs") (r "~1.0") (d #t) (k 2)) (d (n "clap") (r "^3.2.0") (f (quote ("derive" "env"))) (d #t) (k 0)) (d (n "color-eyre") (r "~0.6.0") (d #t) (k 0)) (d (n "dirs-next") (r "^2.0.0") (d #t) (k 0)) (d (n "eyre") (r "~0.6.5") (d #t) (k 0)) (d (n "libp2p") (r "^0.53") (d #t) (k 0)) (d (n "libp2p-identity") (r "^0.2.7") (f (quote ("rand"))) (d #t) (k 0)) (d (n "mockall") (r "^0.11.3") (d #t) (k 2)) (d (n "predicates") (r "^3.0") (d #t) (k 2)) (d (n "prost") (r "^0.9") (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "tokio") (r "^1.35.0") (f (quote ("io-util" "macros" "rt-multi-thread" "sync"))) (d #t) (k 0)) (d (n "tonic") (r "^0.6.2") (d #t) (k 0)) (d (n "tonic-build") (r "~0.6.2") (d #t) (k 1)) (d (n "tracing") (r "~0.1.26") (d #t) (k 0)) (d (n "tracing-core") (r "~0.1.21") (d #t) (k 0)) (d (n "tracing-subscriber") (r "~0.3.1") (d #t) (k 0)) (d (n "walkdir") (r "~2.4.0") (d #t) (k 0)))) (h "1hw6hx7cynhsq5kiqvcya1fsfwp8by9jynij55zpdq7nd0pab1p0") (f (quote (("websockets") ("statemap") ("otlp") ("open-metrics") ("network-contacts") ("local-discovery") ("default") ("chaos"))))))

