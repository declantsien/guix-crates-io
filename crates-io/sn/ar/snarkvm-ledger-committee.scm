(define-module (crates-io sn ar snarkvm-ledger-committee) #:use-module (crates-io))

(define-public crate-snarkvm-ledger-committee-0.15.0 (c (n "snarkvm-ledger-committee") (v "0.15.0") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.15.0") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1sfr54qllssvnsrlm7hdb3a86w13fhj1lzsv59anx5pak0vcavyr") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.15.1 (c (n "snarkvm-ledger-committee") (v "0.15.1") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.15.1") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "137gb8wxhbzpq1s5c91p10qfvb5biz79lb471w8v06xvd00jzg90") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.15.2 (c (n "snarkvm-ledger-committee") (v "0.15.2") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.15.2") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1cb50199j3z44p7b1117b01mz41basba4f5nbhr3cz2nkkxzms4h") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.15.3 (c (n "snarkvm-ledger-committee") (v "0.15.3") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.15.3") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1hdsyx63ndb9rn1bh0hgg24ny7ar76afgcd8z3zpas9qsikngf8m") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.15.4 (c (n "snarkvm-ledger-committee") (v "0.15.4") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.15.4") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0hswk9h4hidfq0hab37w1bblb66v74fknf9wqik33spx4ah9zmpn") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.0 (c (n "snarkvm-ledger-committee") (v "0.16.0") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.0") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0khxb0nl8k2h31x3ig0nxgkrl32ybqyssah9bkgxb8gpfy3151kw") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.1 (c (n "snarkvm-ledger-committee") (v "0.16.1") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.1") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0cp5mxdlggjaaai1i7a725yhn4yygavm5babv8q169hb627ws27n") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.2 (c (n "snarkvm-ledger-committee") (v "0.16.2") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.2") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "18q38mj0b224d25ph5hq3fyfrmr7jw42gj0fn2n22k8x4zhqy6ys") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.3 (c (n "snarkvm-ledger-committee") (v "0.16.3") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.3") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "13fg3bji9kp0laaylw7y6rhkkxriady2ncp5qdh15c6gqs5nwvxa") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.4 (c (n "snarkvm-ledger-committee") (v "0.16.4") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.4") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "149m5k6lf5hiaz34svjcm2z769sh77z5kc3r2vv14hp07ixi34ci") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.5 (c (n "snarkvm-ledger-committee") (v "0.16.5") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.5") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1sdn1h31p3v7f8k3ad3zfzrp1rfwmc1p05ygvbxys2gzmrcympzm") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.6 (c (n "snarkvm-ledger-committee") (v "0.16.6") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.6") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0lsww5swkgzaphhmpv8099jz33y20hxwya77dy0wdw4mwf71gl5q") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.7 (c (n "snarkvm-ledger-committee") (v "0.16.7") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.7") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1fh2mnpcgcvxx494pzgdc8sdsxmjiqqr1pv4ycrz81gxd6398gag") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.8 (c (n "snarkvm-ledger-committee") (v "0.16.8") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.8") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "17m5xfz6gypcm802cjp830qqdc11a8sw2x8byiba94jkg9j72h0z") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.9 (c (n "snarkvm-ledger-committee") (v "0.16.9") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.9") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1ixqkddy35m10kvwkx66x486184ijd4in6m3l3g2ns0mvchi9xaq") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.10 (c (n "snarkvm-ledger-committee") (v "0.16.10") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.10") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0rsrhs7abimq0b16ixhscqy4azi7xz4n1j2y2az5r1d4jzrkr99m") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.11 (c (n "snarkvm-ledger-committee") (v "0.16.11") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.11") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1yg66pn5hddm637phc3f9i85xgdshdfz743c2v093r3zf5izjd3p") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default"))))))

(define-public crate-snarkvm-ledger-committee-0.16.12 (c (n "snarkvm-ledger-committee") (v "0.16.12") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.12") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.12") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1nq914jxrgix2ldrl0cy7n0bpr1w3iaa9grvzxiy764q0mfhi31q") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.13 (c (n "snarkvm-ledger-committee") (v "0.16.13") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.13") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.13") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "181w1jnsvdsia93ndmymwnja3qfqqbqx90mj1gckv5gifbi935l2") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.14 (c (n "snarkvm-ledger-committee") (v "0.16.14") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.14") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.14") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "1l37raakwdzp6c8jxk8b388zr6541nkri09jn8l0i71fh9ckkri6") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.15 (c (n "snarkvm-ledger-committee") (v "0.16.15") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.15") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.15") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0i1d09asi6zf78qnbx96nf0jx4jcfinz5xi2pfnpbd8a4r0fxhnz") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.16 (c (n "snarkvm-ledger-committee") (v "0.16.16") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.16") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.16") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0ccnfwhknnjbndyqyks0rfwlfrh0pi42dsp62854i61jmalla78k") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.17 (c (n "snarkvm-ledger-committee") (v "0.16.17") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.17") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.17") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "04wck4vqzxqpvv074lb9bmwwzn45h9cy6wf0dpj5vaz9026jpg5j") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.18 (c (n "snarkvm-ledger-committee") (v "0.16.18") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.18") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.18") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0g1qxx7nm040r1r08h9rapvapk599zs0f9cwgspm76wwnpd28jx7") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

(define-public crate-snarkvm-ledger-committee-0.16.19 (c (n "snarkvm-ledger-committee") (v "0.16.19") (d (list (d (n "anyhow") (r "^1.0.73") (o #t) (d #t) (k 0)) (d (n "bincode") (r "^1.3") (d #t) (k 2)) (d (n "console") (r "=0.16.19") (d #t) (k 0) (p "snarkvm-console")) (d (n "indexmap") (r "^2.0") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "metrics") (r "=0.16.19") (o #t) (d #t) (k 0) (p "snarkvm-metrics")) (d (n "parking_lot") (r "^0.12") (d #t) (k 2)) (d (n "proptest") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "rand_distr") (r "^0.4") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1.0") (f (quote ("preserve_order"))) (d #t) (k 0)) (d (n "test-strategy") (r "^0.3.1") (o #t) (d #t) (k 0)))) (h "0a2zmqs2wk3cf2lhxacgi0s0dbmgix856w8wy4j69k31sai6xidn") (f (quote (("wasm" "console/wasm") ("test-helpers" "prop-tests" "rand_distr") ("serial" "console/serial") ("prop-tests" "rand" "rand_chacha" "test-strategy" "proptest" "anyhow") ("default")))) (s 2) (e (quote (("metrics" "dep:metrics"))))))

