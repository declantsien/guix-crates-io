(define-module (crates-io sn ar snarkos-node-bft-storage-service) #:use-module (crates-io))

(define-public crate-snarkos-node-bft-storage-service-2.2.5 (c (n "snarkos-node-bft-storage-service") (v "2.2.5") (d (list (d (n "indexmap") (r "^2.1") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snarkvm") (r "=0.16.11") (f (quote ("circuit" "console" "rocks"))) (d #t) (k 0)) (d (n "snarkvm") (r "=0.16.11") (f (quote ("circuit" "console" "rocks" "test"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "0x7zqlv9cbdsya9n6nwiha98qq7jvxahapvxyrr6invinkp9k8cy") (f (quote (("test" "memory") ("persistent") ("memory" "parking_lot" "tracing") ("default"))))))

(define-public crate-snarkos-node-bft-storage-service-2.2.6 (c (n "snarkos-node-bft-storage-service") (v "2.2.6") (d (list (d (n "indexmap") (r "^2.1") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snarkvm") (r "=0.16.13") (f (quote ("circuit" "console" "rocks"))) (d #t) (k 0)) (d (n "snarkvm") (r "=0.16.13") (f (quote ("circuit" "console" "rocks" "test"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "14bhcnhjhgy8m7bk00fz33i7alwbdn3q7vdbkkvqzhpc0dz6mlqz") (f (quote (("test" "memory") ("persistent") ("memory" "parking_lot" "tracing") ("default"))))))

(define-public crate-snarkos-node-bft-storage-service-2.2.7 (c (n "snarkos-node-bft-storage-service") (v "2.2.7") (d (list (d (n "indexmap") (r "^2.1") (f (quote ("serde" "rayon"))) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (o #t) (d #t) (k 0)) (d (n "snarkvm") (r "=0.16.15") (f (quote ("circuit" "console" "rocks"))) (d #t) (k 0)) (d (n "snarkvm") (r "=0.16.15") (f (quote ("circuit" "console" "rocks" "test"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)))) (h "19pxa54szl7p5mps01dcc9jr9jd5jpfpr8715v2qynp5gmlf7s2b") (f (quote (("test" "memory") ("persistent") ("memory" "parking_lot" "tracing") ("default"))))))

