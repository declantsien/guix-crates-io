(define-module (crates-io sn ar snarkvm-algorithms) #:use-module (crates-io))

(define-public crate-snarkvm-algorithms-0.0.2 (c (n "snarkvm-algorithms") (v "0.0.2") (d (list (d (n "blake2") (r "^0.8.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.3") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.9.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.4") (d #t) (k 0)) (d (n "snarkvm-errors") (r "^0.0.2") (k 0)) (d (n "snarkvm-models") (r "^0.0.2") (k 0)) (d (n "snarkvm-profiler") (r "^0.0.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.0.2") (k 0)))) (h "1wz5vcv1j65kxrm8gd4bqg061ymcszb3vjwwis2v3id3hhw2gi5x") (f (quote (("print-trace" "snarkvm-profiler/print-trace") ("pedersen-parallel") ("default" "pedersen-parallel" "snarkvm-errors/default" "snarkvm-models/default" "snarkvm-utilities/default"))))))

(define-public crate-snarkvm-algorithms-0.0.3 (c (n "snarkvm-algorithms") (v "0.0.3") (d (list (d (n "blake2") (r "^0.8.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-errors") (r "^0.0.3") (k 0)) (d (n "snarkvm-models") (r "^0.0.3") (k 0)) (d (n "snarkvm-profiler") (r "^0.0.3") (k 0)) (d (n "snarkvm-utilities") (r "^0.0.3") (k 0)))) (h "0vizl3c539h7dk36vhksr00bdrx4vqqz27bxa2avndlw0ll15c6f") (f (quote (("print-trace" "snarkvm-profiler/print-trace") ("pedersen-parallel") ("default" "pedersen-parallel" "snarkvm-errors/default" "snarkvm-models/default" "snarkvm-utilities/default"))))))

(define-public crate-snarkvm-algorithms-0.0.4 (c (n "snarkvm-algorithms") (v "0.0.4") (d (list (d (n "blake2") (r "^0.8.1") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.8.1") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.7") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.2.2") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.2") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-errors") (r "^0.0.4") (k 0)) (d (n "snarkvm-models") (r "^0.0.4") (k 0)) (d (n "snarkvm-profiler") (r "^0.0.4") (k 0)) (d (n "snarkvm-utilities") (r "^0.0.4") (k 0)))) (h "1sf3pllqgkjidvnngq8gr30zsmczqwlcsq34k0jx89xilp7xs4wd") (f (quote (("print-trace" "snarkvm-profiler/print-trace") ("pedersen-parallel") ("default" "pedersen-parallel" "snarkvm-errors/default" "snarkvm-models/default" "snarkvm-utilities/default"))))))

(define-public crate-snarkvm-algorithms-0.0.5 (c (n "snarkvm-algorithms") (v "0.0.5") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-errors") (r "^0.0.5") (k 0)) (d (n "snarkvm-models") (r "^0.0.5") (k 0)) (d (n "snarkvm-profiler") (r "^0.0.5") (k 0)) (d (n "snarkvm-utilities") (r "^0.0.5") (k 0)))) (h "134fr1722idfzspvi88d8qr8yibxm0wrgfqblk9j4qxzbnpjm73k") (f (quote (("print-trace" "snarkvm-profiler/print-trace") ("pedersen-parallel") ("default" "pedersen-parallel" "snarkvm-errors/default" "snarkvm-models/default" "snarkvm-utilities/default"))))))

(define-public crate-snarkvm-algorithms-0.0.6 (c (n "snarkvm-algorithms") (v "0.0.6") (d (list (d (n "blake2") (r "^0.9") (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (d #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (d #t) (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-errors") (r "^0.0.6") (k 0)) (d (n "snarkvm-models") (r "^0.0.6") (k 0)) (d (n "snarkvm-profiler") (r "^0.0.6") (k 0)) (d (n "snarkvm-utilities") (r "^0.0.6") (k 0)))) (h "049shjz43741yxkwxsyadbhdx0l4m3l3cancxfbzh7r2s1bfjgbx") (f (quote (("print-trace" "snarkvm-profiler/print-trace") ("pedersen-parallel") ("default" "pedersen-parallel" "snarkvm-errors/default" "snarkvm-models/default" "snarkvm-utilities/default"))))))

(define-public crate-snarkvm-algorithms-0.2.0 (c (n "snarkvm-algorithms") (v "0.2.0") (d (list (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.2.0") (k 0)) (d (n "snarkvm-fields") (r "^0.2.0") (k 0)) (d (n "snarkvm-profiler") (r "^0.2.0") (k 0)) (d (n "snarkvm-r1cs") (r "^0.2.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.2.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1c7j6iw505nxlvqw7mp4jns1qq3f6v3i3cnb9k2qx1apawfyrdpv") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.2.1 (c (n "snarkvm-algorithms") (v "0.2.1") (d (list (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.2.1") (k 0)) (d (n "snarkvm-fields") (r "^0.2.1") (k 0)) (d (n "snarkvm-profiler") (r "^0.2.1") (k 0)) (d (n "snarkvm-r1cs") (r "^0.2.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.2.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "004hiqvbvfxmyi2r080j1k48bmbbnmglxlrd65v41xfirmid0bj7") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.2.2 (c (n "snarkvm-algorithms") (v "0.2.2") (d (list (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.2.2") (k 0)) (d (n "snarkvm-fields") (r "^0.2.2") (k 0)) (d (n "snarkvm-profiler") (r "^0.2.2") (k 0)) (d (n "snarkvm-r1cs") (r "^0.2.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.2.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1chpdpg4m62l0b7g3w97qlj9ylvywd31hxbgp68410i9sirwmy5x") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.2.3 (c (n "snarkvm-algorithms") (v "0.2.3") (d (list (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.2.3") (k 0)) (d (n "snarkvm-fields") (r "^0.2.3") (k 0)) (d (n "snarkvm-profiler") (r "^0.2.3") (k 0)) (d (n "snarkvm-r1cs") (r "^0.2.3") (k 0)) (d (n "snarkvm-utilities") (r "^0.2.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1r0fd3f6qfq70mrz2kbj5fdharvb9i62biv9klgy2fibk24w0anx") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.3.1 (c (n "snarkvm-algorithms") (v "0.3.1") (d (list (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.3.1") (k 0)) (d (n "snarkvm-fields") (r "^0.3.1") (k 0)) (d (n "snarkvm-profiler") (r "^0.3.1") (k 0)) (d (n "snarkvm-r1cs") (r "^0.3.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.3.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1bd0k1kw5z8lh49200zir8pm9n5ak6m6ppjgmc2rlkjgmngk9y4r") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.3.2 (c (n "snarkvm-algorithms") (v "0.3.2") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.3.2") (k 0)) (d (n "snarkvm-fields") (r "^0.3.2") (k 0)) (d (n "snarkvm-profiler") (r "^0.3.2") (k 0)) (d (n "snarkvm-r1cs") (r "^0.3.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.3.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1prighmvs9nzr6czz18za0x1rzs8cldpkriq52c7hv26zhw1rsg6") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.4.0 (c (n "snarkvm-algorithms") (v "0.4.0") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.4.0") (k 0)) (d (n "snarkvm-fields") (r "^0.4.0") (k 0)) (d (n "snarkvm-profiler") (r "^0.4.0") (k 0)) (d (n "snarkvm-r1cs") (r "^0.4.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.4.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "05ad1bbmz8ncanp057rsmydnsyzklp73p66274n9dqmhfsl8dzf3") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.5.0 (c (n "snarkvm-algorithms") (v "0.5.0") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.5.0") (k 0)) (d (n "snarkvm-fields") (r "^0.5.0") (k 0)) (d (n "snarkvm-profiler") (r "^0.5.0") (k 0)) (d (n "snarkvm-r1cs") (r "^0.5.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.5.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rifrvba8yabpd63jrp38bk40m35s7rbgnf3avls3794b5ald3sv") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.5.1 (c (n "snarkvm-algorithms") (v "0.5.1") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.5.1") (k 0)) (d (n "snarkvm-fields") (r "^0.5.1") (k 0)) (d (n "snarkvm-profiler") (r "^0.5.1") (k 0)) (d (n "snarkvm-r1cs") (r "^0.5.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.5.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "087yxh0gahkr179q77003jvi95xwhpzjicz9hpbmn7dcls9kshz8") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.5.2 (c (n "snarkvm-algorithms") (v "0.5.2") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.5.2") (k 0)) (d (n "snarkvm-fields") (r "^0.5.2") (k 0)) (d (n "snarkvm-profiler") (r "^0.5.2") (k 0)) (d (n "snarkvm-r1cs") (r "^0.5.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.5.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "18ivpp178y4bf4p9hrwgin9csv9n4a2647f1hsclkrfz9yw8m049") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.5.3 (c (n "snarkvm-algorithms") (v "0.5.3") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.5.3") (k 0)) (d (n "snarkvm-fields") (r "^0.5.3") (k 0)) (d (n "snarkvm-profiler") (r "^0.5.3") (k 0)) (d (n "snarkvm-r1cs") (r "^0.5.3") (k 0)) (d (n "snarkvm-utilities") (r "^0.5.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1d9j03xxb9f4yh9rqc6fhv7vb9rvb18pq6bs7rjzq9y4y3lbl6h2") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.5.4 (c (n "snarkvm-algorithms") (v "0.5.4") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.0") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.5.4") (k 0)) (d (n "snarkvm-fields") (r "^0.5.4") (k 0)) (d (n "snarkvm-profiler") (r "^0.5.4") (k 0)) (d (n "snarkvm-r1cs") (r "^0.5.4") (k 0)) (d (n "snarkvm-utilities") (r "^0.5.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1dnkamv8xhjfbhssl5sdr270njkfp33dpvjsl8mkhwnsggf3yq3g") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.5.5 (c (n "snarkvm-algorithms") (v "0.5.5") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.5.5") (k 0)) (d (n "snarkvm-fields") (r "^0.5.5") (k 0)) (d (n "snarkvm-profiler") (r "^0.5.5") (k 0)) (d (n "snarkvm-r1cs") (r "^0.5.5") (k 0)) (d (n "snarkvm-utilities") (r "^0.5.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rjzmw6dvk6zsk4a4w53hzh7jz8cfn8qwi7d3ys5vwic06x5cwqv") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.6.0 (c (n "snarkvm-algorithms") (v "0.6.0") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.6.0") (k 0)) (d (n "snarkvm-fields") (r "^0.6.0") (k 0)) (d (n "snarkvm-profiler") (r "^0.6.0") (k 0)) (d (n "snarkvm-r1cs") (r "^0.6.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.6.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1gg0dbd8sbmp1jhlyirb24gblanhi6barhg6ijdhq5y99smq4r5s") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.0 (c (n "snarkvm-algorithms") (v "0.7.0") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.0") (k 0)) (d (n "snarkvm-fields") (r "^0.7.0") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.0") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "08qcbv789kjn4jradiakkknq34acgv5vfa96za7837g9v9qgrh5h") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.1 (c (n "snarkvm-algorithms") (v "0.7.1") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.1") (k 0)) (d (n "snarkvm-fields") (r "^0.7.1") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.1") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1ymx2xmsyskjj1z1w6d9ql1yxg1f6glkvjvi2kpj5nlndby1zcmf") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.2 (c (n "snarkvm-algorithms") (v "0.7.2") (d (list (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.2") (k 0)) (d (n "snarkvm-fields") (r "^0.7.2") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.2") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zzkq3ab3mipnld5n8k0vs2f4j1vhnyrg1ysm2i9m0d6liqkzkmr") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.3 (c (n "snarkvm-algorithms") (v "0.7.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.3") (k 0)) (d (n "snarkvm-fields") (r "^0.7.3") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.3") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.3") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0rc8pdsk1r2pb78id9ygbh7iyi8iyk67vn12gj44fgdcj8a5k2ym") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.4 (c (n "snarkvm-algorithms") (v "0.7.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.22") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.4") (k 0)) (d (n "snarkvm-fields") (r "^0.7.4") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.4") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.4") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0whcnymk2l408fxbxs46qri21bj8kd2gcndlaha8q9dssi2k6aim") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.5 (c (n "snarkvm-algorithms") (v "0.7.5") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.4") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.5") (k 0)) (d (n "snarkvm-fields") (r "^0.7.5") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.5") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.5") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1llwm4hpm7lwbbmdrahskc8ks3l30b2cp3iz0yxqbvajcbzbx2yx") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.6 (c (n "snarkvm-algorithms") (v "0.7.6") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.6") (k 0)) (d (n "snarkvm-fields") (r "^0.7.6") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.6") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.6") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "17r2j01xwig8qkfcvqb6c6q4ifnrrjdyiji7izqgbi1hplw27nyq") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.7 (c (n "snarkvm-algorithms") (v "0.7.7") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.7") (k 0)) (d (n "snarkvm-fields") (r "^0.7.7") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.7") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.7") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.7") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0xnn1jjkmfiqx44308654w9vlyc1x9z5ypq2xxfb0q18wp0srskw") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.8 (c (n "snarkvm-algorithms") (v "0.7.8") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.8") (k 0)) (d (n "snarkvm-fields") (r "^0.7.8") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.8") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.8") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.8") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "1drh6j0djc7ham0a3nknm5gzn810arrnlkc47l04m1qapn5akjj0") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.7.9 (c (n "snarkvm-algorithms") (v "0.7.9") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitvec") (r "^0.19.4") (d #t) (k 0)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "cuda-oxide") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "itertools") (r "^0.10.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.8") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.9") (k 0)) (d (n "smallvec") (r "^1.6") (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.7.9") (k 0)) (d (n "snarkvm-fields") (r "^0.7.9") (k 0)) (d (n "snarkvm-profiler") (r "^0.7.9") (k 0)) (d (n "snarkvm-r1cs") (r "^0.7.9") (k 0)) (d (n "snarkvm-utilities") (r "^0.7.9") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0h8nigzz5a0rck4fdb640ick352wkjgszp65516lx2biz8ndld1m") (f (quote (("wasm" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("snark" "fft" "msm") ("signature" "encryption") ("print-trace" "snarkvm-profiler/print-trace") ("prf" "blake2") ("parallel") ("msm") ("merkle_tree") ("full" "commitment" "commitment_tree" "crh" "encoding" "encryption" "fft" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("encoding") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "cuda-oxide") ("crh") ("commitment_tree") ("commitment" "blake2" "crh"))))))

(define-public crate-snarkvm-algorithms-0.8.0 (c (n "snarkvm-algorithms") (v "0.8.0") (d (list (d (n "aleo-std") (r "^0.1.8") (d #t) (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "blake2s_simd") (r "^1.0") (d #t) (k 0)) (d (n "criterion") (r "^0.3.5") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "derivative") (r "^2") (d #t) (k 0)) (d (n "digest") (r "^0.9") (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.5") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.8.0") (k 0)) (d (n "snarkvm-fields") (r "^0.8.0") (k 0)) (d (n "snarkvm-profiler") (r "^0.8.0") (k 0)) (d (n "snarkvm-r1cs") (r "^0.8.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.8.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0b23wwz1rwb3sl52p2b95b6mzs7pn75b3as387zr9b0s0flrck19") (f (quote (("wasm" "commitment" "crh" "crypto_hash" "encryption" "fft" "hash_to_curve" "merkle_tree" "msm" "prf" "signature" "snark" "getrandom") ("snark" "fft" "msm") ("signature" "encryption" "crypto_hash") ("print-trace" "snarkvm-profiler/print-trace") ("prf") ("parallel" "rayon" "num_cpus" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("merkle_tree") ("hash_to_curve") ("full" "commitment" "crh" "encryption" "fft" "hash_to_curve" "merkle_tree" "msm" "prf" "signature" "snark") ("fft") ("encryption" "signature") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "rust-gpu-tools") ("crypto_hash" "blake2") ("crh") ("commitment" "crh"))))))

(define-public crate-snarkvm-algorithms-0.9.0 (c (n "snarkvm-algorithms") (v "0.9.0") (d (list (d (n "aleo-std") (r "^0.1.14") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 0)) (d (n "blake2") (r "^0.10") (k 2)) (d (n "criterion") (r "^0.3.6") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (d #t) (k 0)) (d (n "csv") (r "^1") (d #t) (k 2)) (d (n "curl") (r "^0.4.43") (d #t) (t "cfg(not(target_family = \"wasm\"))") (k 0)) (d (n "derivative") (r "^2") (f (quote ("use_core"))) (d #t) (k 0)) (d (n "digest") (r "^0.10") (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "getrandom") (r "^0.2") (f (quote ("js"))) (o #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "num_cpus") (r "^1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.13") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rand_xorshift") (r "^0.3") (d #t) (k 2)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.8") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.0") (k 0)) (d (n "snarkvm-fields") (r "^0.9.0") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.0") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "031h43rpkflw2xixcsdr0j03plpqfaf0293zdx78dpb6hcpjcgjd") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "getrandom" "wasm-bindgen-futures" "reqwest") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "rand_core" "fft" "msm") ("parallel" "rayon" "num_cpus" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.1 (c (n "snarkvm-algorithms") (v "0.9.1") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.1") (k 0)) (d (n "snarkvm-fields") (r "^0.9.1") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.1") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0jf991hkkzw2yzmr9b77jyxzlh2hcgma24xfaj7a0akn3g6h73sl") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "rand_core" "fft" "msm") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.2 (c (n "snarkvm-algorithms") (v "0.9.2") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.2") (k 0)) (d (n "snarkvm-fields") (r "^0.9.2") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.2") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1byyiidq2z64byv79b0d0iaq94lf964g08dmqpzbh5hjddc9pn8f") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "rand_core" "fft" "msm") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.3 (c (n "snarkvm-algorithms") (v "0.9.3") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.3") (k 0)) (d (n "snarkvm-fields") (r "^0.9.3") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.3") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.3") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0dnmm76kxxrv5pj6b771sq2fc93l1s5a9xihmaw8kphzf4kkpq3q") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.4 (c (n "snarkvm-algorithms") (v "0.9.4") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.4") (k 0)) (d (n "snarkvm-fields") (r "^0.9.4") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.4") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.4") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1k3rnl1nn9i0pazkafbb3k094xadbymmazhzqlsnfsan759a6yac") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.5 (c (n "snarkvm-algorithms") (v "0.9.5") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.5") (k 0)) (d (n "snarkvm-fields") (r "^0.9.5") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.5") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.5") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1mvwik3ynbk1bmmxrrbig62d99fqjfh1zn3r7sh8q1yyc284sdaw") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.6 (c (n "snarkvm-algorithms") (v "0.9.6") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.6") (k 0)) (d (n "snarkvm-fields") (r "^0.9.6") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.6") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.6") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1alwpiw6jqxzj16rc4bm8m1qs19ajbc2514njskxls7ak4ymc17g") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.7 (c (n "snarkvm-algorithms") (v "0.9.7") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.7") (k 0)) (d (n "snarkvm-fields") (r "^0.9.7") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.7") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.7") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.7") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1cv05dzvwwgj28vl6zhambcriyzfrnhvqqfyx5j9zcfifzsin36q") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.8 (c (n "snarkvm-algorithms") (v "0.9.8") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.8") (k 0)) (d (n "snarkvm-fields") (r "^0.9.8") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.8") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.8") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.8") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0qbz2dd74kzjpq6hhv1hm454gl078sz82wf0kxra4xlslk1ic9jz") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.9 (c (n "snarkvm-algorithms") (v "0.9.9") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.9") (k 0)) (d (n "snarkvm-fields") (r "^0.9.9") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.9") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.9") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.9") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1c70j7kn8ih2k1z9g4qjlpr6w397q5j9pdiwj97gapncpyiifvxb") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.10 (c (n "snarkvm-algorithms") (v "0.9.10") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-curves") (r "^0.9.10") (k 0)) (d (n "snarkvm-fields") (r "^0.9.10") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.10") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.10") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.10") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0fvajxwb6dy78kcbj9gh1g1spc2c73cl71r2wkq9izjjhzvpnwa4") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "crossbeam-channel" "lazy_static" "rust-gpu-tools") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.11 (c (n "snarkvm-algorithms") (v "0.9.11") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.1") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serial_test") (r "^0.9") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.9.11") (o #t) (k 0)) (d (n "snarkvm-curves") (r "^0.9.11") (k 0)) (d (n "snarkvm-fields") (r "^0.9.11") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.11") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.11") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1i11xm0siix9a6lq7k37vmwczj8zgfcm7ynwv4fc8j104v0y43yx") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.12 (c (n "snarkvm-algorithms") (v "0.9.12") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.9.12") (o #t) (k 0)) (d (n "snarkvm-curves") (r "^0.9.12") (k 0)) (d (n "snarkvm-fields") (r "^0.9.12") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.12") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.12") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.12") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "08rzpcfww43dbph1kcssdnb7n34db8i5dy36i9llap0dbg9rp8mf") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.13 (c (n "snarkvm-algorithms") (v "0.9.13") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.1.0") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.9.13") (o #t) (k 0)) (d (n "snarkvm-curves") (r "^0.9.13") (k 0)) (d (n "snarkvm-fields") (r "^0.9.13") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.13") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.13") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.13") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "03gykj1ha35rbwjjy7h2qnnk7ismdl7vsn26bkl9a3hmwncb4swg") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.14 (c (n "snarkvm-algorithms") (v "0.9.14") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^1.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.9.14") (o #t) (k 0)) (d (n "snarkvm-curves") (r "^0.9.14") (k 0)) (d (n "snarkvm-fields") (r "^0.9.14") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.14") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.14") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.14") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0j0cgj4wwmvp6943qmaiw2yvmj76vz5sacc53y431a19pycdzlrz") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.15 (c (n "snarkvm-algorithms") (v "0.9.15") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (o #t) (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.9.15") (o #t) (k 0)) (d (n "snarkvm-curves") (r "^0.9.15") (k 0)) (d (n "snarkvm-fields") (r "^0.9.15") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.15") (o #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.15") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.15") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1zyfk5b4n5l347fi4d266i9jdkxpsq2bdyfvsp6k9a5xpcnn4hfk") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("parallel" "rayon" "snarkvm-fields/parallel" "snarkvm-utilities/parallel") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "parallel" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-r1cs/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.9.16 (c (n "snarkvm-algorithms") (v "0.9.16") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.6.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.9.16") (k 0)) (d (n "snarkvm-fields") (r "^0.9.16") (k 0)) (d (n "snarkvm-parameters") (r "^0.9.16") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.9.16") (k 0)) (d (n "snarkvm-utilities") (r "^0.9.16") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1acmf5k6b31hc1ydnkqzf6wyg0d58p2waav1mlcyqkxsjc7sl1xc") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.10.0 (c (n "snarkvm-algorithms") (v "0.10.0") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.10.0") (k 0)) (d (n "snarkvm-fields") (r "^0.10.0") (k 0)) (d (n "snarkvm-parameters") (r "^0.10.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.10.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.10.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1vsilm8vmis184vypkjfc1qcp764kvv88mnr2c83d1476ca00pf4") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.10.1 (c (n "snarkvm-algorithms") (v "0.10.1") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.10.1") (k 0)) (d (n "snarkvm-fields") (r "^0.10.1") (k 0)) (d (n "snarkvm-parameters") (r "^0.10.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.10.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.10.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1zwg5rsjnnln3icf40z8nx3yi4iznf33rbf8rhc36xfw3kwvra1i") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.10.2 (c (n "snarkvm-algorithms") (v "0.10.2") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.10.2") (k 0)) (d (n "snarkvm-fields") (r "^0.10.2") (k 0)) (d (n "snarkvm-parameters") (r "^0.10.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.10.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.10.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1jgi2y2hwl86bllq44lr13bairv0jxvq6iy7985flkd32mf0b853") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.10.3 (c (n "snarkvm-algorithms") (v "0.10.3") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.10.3") (k 0)) (d (n "snarkvm-fields") (r "^0.10.3") (k 0)) (d (n "snarkvm-parameters") (r "^0.10.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.10.3") (k 0)) (d (n "snarkvm-utilities") (r "^0.10.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0h3ws72q29pdm1i3m6v7p6by698g71idiyvkfn0ayr5774klzv6s") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.0 (c (n "snarkvm-algorithms") (v "0.11.0") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.11.0") (k 0)) (d (n "snarkvm-fields") (r "^0.11.0") (k 0)) (d (n "snarkvm-parameters") (r "^0.11.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.11.0") (k 0)) (d (n "snarkvm-utilities") (r "^0.11.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0zx5x85irqzq6kz9nclyhdcixrphw5hf73qmf8vzfikram19nly4") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.1 (c (n "snarkvm-algorithms") (v "0.11.1") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.11.1") (k 0)) (d (n "snarkvm-fields") (r "^0.11.1") (k 0)) (d (n "snarkvm-parameters") (r "^0.11.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.11.1") (k 0)) (d (n "snarkvm-utilities") (r "^0.11.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0m6w89k9i36n8vpv8nxx8ak2cyhpds5gmhim650km6v8vm1awnap") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.2 (c (n "snarkvm-algorithms") (v "0.11.2") (d (list (d (n "aleo-std") (r "^0.1.15") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.4.0") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "^0.11.2") (k 0)) (d (n "snarkvm-fields") (r "^0.11.2") (k 0)) (d (n "snarkvm-parameters") (r "^0.11.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "^0.11.2") (k 0)) (d (n "snarkvm-utilities") (r "^0.11.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "12vspxl99944x6927iqh8qdmwjrb8js9a95wspycsy82j3wapjmh") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.3 (c (n "snarkvm-algorithms") (v "0.11.3") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.11.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.11.3") (k 0)) (d (n "snarkvm-fields") (r "=0.11.3") (k 0)) (d (n "snarkvm-parameters") (r "=0.11.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.11.3") (k 0)) (d (n "snarkvm-utilities") (r "=0.11.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1sr1rx1hr324nwfwdsnbd5ss4j1zlgg6vn2bqlrznyj3pzzk8w5r") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.4 (c (n "snarkvm-algorithms") (v "0.11.4") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.11.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.11.4") (k 0)) (d (n "snarkvm-fields") (r "=0.11.4") (k 0)) (d (n "snarkvm-parameters") (r "=0.11.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.11.4") (k 0)) (d (n "snarkvm-utilities") (r "=0.11.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0fzqxc9ssimllb45wl96pjha9f1l5fr9zw3nximdkxiilv9mg0fs") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.5 (c (n "snarkvm-algorithms") (v "0.11.5") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.11.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.11.5") (k 0)) (d (n "snarkvm-fields") (r "=0.11.5") (k 0)) (d (n "snarkvm-parameters") (r "=0.11.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.11.5") (k 0)) (d (n "snarkvm-utilities") (r "=0.11.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1nq5zp2x5hhidw3ykcynxm03wvr04k9nxl2v76ma29866v80r6kb") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.6 (c (n "snarkvm-algorithms") (v "0.11.6") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.11.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.11.6") (k 0)) (d (n "snarkvm-fields") (r "=0.11.6") (k 0)) (d (n "snarkvm-parameters") (r "=0.11.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.11.6") (k 0)) (d (n "snarkvm-utilities") (r "=0.11.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "194w60sqbf6jv6whwwm1d90ry911apm816cmlsiibyrbwh6vfjij") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.11.7 (c (n "snarkvm-algorithms") (v "0.11.7") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.13.2") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.11.7") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.11.7") (k 0)) (d (n "snarkvm-fields") (r "=0.11.7") (k 0)) (d (n "snarkvm-parameters") (r "=0.11.7") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.11.7") (k 0)) (d (n "snarkvm-utilities") (r "=0.11.7") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1byyzvdaj9zh9bji5jmz8h21cldnvwg19n49irsjdcw28p014qr2") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.0 (c (n "snarkvm-algorithms") (v "0.12.0") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.0") (k 0)) (d (n "snarkvm-fields") (r "=0.12.0") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.12.0") (k 0)) (d (n "snarkvm-utilities") (r "=0.12.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0s2hg2h9cr831m7jakawqqhfi90wqwzd4kxa759f954fbghng4gw") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.1 (c (n "snarkvm-algorithms") (v "0.12.1") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.1") (k 0)) (d (n "snarkvm-fields") (r "=0.12.1") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.12.1") (k 0)) (d (n "snarkvm-utilities") (r "=0.12.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1z6hv66951a9svqkfdahilklvkwacxi92qmrh1zq4y9fwixvrxi4") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.2 (c (n "snarkvm-algorithms") (v "0.12.2") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.2") (k 0)) (d (n "snarkvm-fields") (r "=0.12.2") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-r1cs") (r "=0.12.2") (k 0)) (d (n "snarkvm-utilities") (r "=0.12.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0lgrazbyjcs59nql5wbknll850y0f4lxiccimkqlpv8p7msrk97g") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.3 (c (n "snarkvm-algorithms") (v "0.12.3") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.3") (k 0)) (d (n "snarkvm-fields") (r "=0.12.3") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.12.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0cbzi7als8pwar0mr2mxjkr8gav1b1k9pdvda5myfcprhv06pyfp") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.4 (c (n "snarkvm-algorithms") (v "0.12.4") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.4") (k 0)) (d (n "snarkvm-fields") (r "=0.12.4") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.12.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1n3nqsvbiqwxj5mii5as4rm8na67zmfyi4r94i6biwx96ib90421") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.5 (c (n "snarkvm-algorithms") (v "0.12.5") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.10.3") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.5") (k 0)) (d (n "snarkvm-fields") (r "=0.12.5") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.12.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1kq324fmyw26wkw2i4g71yn01h822a2vsiv7rp7klyj2c9dqsp1k") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.12.6 (c (n "snarkvm-algorithms") (v "0.12.6") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.12.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.12.6") (k 0)) (d (n "snarkvm-fields") (r "=0.12.6") (k 0)) (d (n "snarkvm-parameters") (r "=0.12.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.12.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1d73wyg44i4qzny9hnnyc3rjdkxwfaqpfg3mcddda3m11rx14fhf") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.13.0 (c (n "snarkvm-algorithms") (v "0.13.0") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.13.0") (k 0)) (d (n "snarkvm-fields") (r "=0.13.0") (k 0)) (d (n "snarkvm-parameters") (r "=0.13.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.13.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1nn4wn2r337jjwb3q051f515dqfv5lfj6xmq091gah9k44yzp4hg") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.0 (c (n "snarkvm-algorithms") (v "0.14.0") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.10") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.0") (k 0)) (d (n "snarkvm-fields") (r "=0.14.0") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "13ivswzghggf20lh2g7zgp03gcfv5mx7gmd4q4q19p63wqdxkvxm") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.1 (c (n "snarkvm-algorithms") (v "0.14.1") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.1") (k 0)) (d (n "snarkvm-fields") (r "=0.14.1") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0k61hg6ad6wc5qf0hhx3l227zm3k55w1pzhy5861k8hn9a4r3gam") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.2 (c (n "snarkvm-algorithms") (v "0.14.2") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.2") (k 0)) (d (n "snarkvm-fields") (r "=0.14.2") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "01i7d8k3hvry2pg6b6y934bgk9nrzlcbrv7sq84v2g5dfkbg4x2j") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.3 (c (n "snarkvm-algorithms") (v "0.14.3") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.3") (k 0)) (d (n "snarkvm-fields") (r "=0.14.3") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1xqz6kh23ilp0k7garg7wjdgpnxjxzjpd1gx6fhsl7j3pbdkk4yh") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.4 (c (n "snarkvm-algorithms") (v "0.14.4") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.4") (k 0)) (d (n "snarkvm-fields") (r "=0.14.4") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1iqrpqpq2xadc2v719nl4r2s0nschyx5h3yyc5lv4x7mjqjlap11") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.5 (c (n "snarkvm-algorithms") (v "0.14.5") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.5") (k 0)) (d (n "snarkvm-fields") (r "=0.14.5") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "105azyzmd2s510zaqk88w2ir50p3r6a549zba5asq3miwicv48pg") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.14.6 (c (n "snarkvm-algorithms") (v "0.14.6") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.14.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.14.6") (k 0)) (d (n "snarkvm-fields") (r "=0.14.6") (k 0)) (d (n "snarkvm-parameters") (r "=0.14.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.14.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0rd2zv5a0x3njam8dip50r2srfiddmfq5lglhpkfkc1gxzwfhxyp") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.15.0 (c (n "snarkvm-algorithms") (v "0.15.0") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.15.0") (k 0)) (d (n "snarkvm-fields") (r "=0.15.0") (k 0)) (d (n "snarkvm-parameters") (r "=0.15.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.15.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1g3n8kfsg8ns103mkr29nzva2gjka6pxp22x71xf2wkgz6sdvczg") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.15.1 (c (n "snarkvm-algorithms") (v "0.15.1") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.15.1") (k 0)) (d (n "snarkvm-fields") (r "=0.15.1") (k 0)) (d (n "snarkvm-parameters") (r "=0.15.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.15.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0w1gnzm43yyzmv7vc3awraj6xjv18pjwv2v7ka5ifwmgsi7ir1rh") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.15.2 (c (n "snarkvm-algorithms") (v "0.15.2") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.15.2") (k 0)) (d (n "snarkvm-fields") (r "=0.15.2") (k 0)) (d (n "snarkvm-parameters") (r "=0.15.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.15.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "10qhigzzqfxhdfhhry0ys1zq0y3baapy5xljwbgvx2plxl4xbwbx") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.15.3 (c (n "snarkvm-algorithms") (v "0.15.3") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.15.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.15.3") (k 0)) (d (n "snarkvm-fields") (r "=0.15.3") (k 0)) (d (n "snarkvm-parameters") (r "=0.15.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.15.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0z7rzaa5vq5hsdsy7ddh3f1alyjsf1wcwbiknz4sbh37wd3hf5n8") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.15.4 (c (n "snarkvm-algorithms") (v "0.15.4") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.15.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.15.4") (k 0)) (d (n "snarkvm-fields") (r "=0.15.4") (k 0)) (d (n "snarkvm-parameters") (r "=0.15.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.15.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1a18jjlnlcjkk9ik8af2ll7hb15bi4dmxllypsiy54fqf075al00") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.0 (c (n "snarkvm-algorithms") (v "0.16.0") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.0") (k 0)) (d (n "snarkvm-fields") (r "=0.16.0") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.0") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.0") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0m2x5pskarjdpdr1wc7qwxc9nh9pg7q7wqzkzayzrss1ryvfxmgh") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.1 (c (n "snarkvm-algorithms") (v "0.16.1") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.1") (k 0)) (d (n "snarkvm-fields") (r "=0.16.1") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.1") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.1") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1gywldzq7wdrrsi7wzfvf7bbwvmnhdyw4yqxn3sgxp4j3fxdv0rz") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.2 (c (n "snarkvm-algorithms") (v "0.16.2") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.2") (k 0)) (d (n "snarkvm-fields") (r "=0.16.2") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.2") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.2") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "128kb45af8k4p495y67pk6vcci5p0n5z9475vza49jj3sjs2lmya") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.3 (c (n "snarkvm-algorithms") (v "0.16.3") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.3") (k 0)) (d (n "snarkvm-fields") (r "=0.16.3") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.3") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.3") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0x3ypfvf31bp0jj2gw0xnhybkmj6pxnzfjp0smqznibyxywlc52n") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.4 (c (n "snarkvm-algorithms") (v "0.16.4") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.4") (k 0)) (d (n "snarkvm-fields") (r "=0.16.4") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.4") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.4") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "10rwf2nvwn8a92ql3hrn9x756nzk36pkvnb2q9rf4j3j27yg12xc") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.5 (c (n "snarkvm-algorithms") (v "0.16.5") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.5") (k 0)) (d (n "snarkvm-fields") (r "=0.16.5") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.5") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.5") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1nhfdzxgaiphhs6kbjgj84frg8bdfvrljw14kilpl1y8rv74drbf") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.6 (c (n "snarkvm-algorithms") (v "0.16.6") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.6") (k 0)) (d (n "snarkvm-fields") (r "=0.16.6") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.6") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.6") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1d7v15rrz3lz4c1ybpkznspr28jp4s1gmg2v5glikw0yskmd0g1a") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.7 (c (n "snarkvm-algorithms") (v "0.16.7") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.7") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.7") (k 0)) (d (n "snarkvm-fields") (r "=0.16.7") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.7") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.7") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "14pf6mw7db068grkp6q6af50ny6i0fzyrqmw3997i49q18l9ag67") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.8 (c (n "snarkvm-algorithms") (v "0.16.8") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.8") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.8") (k 0)) (d (n "snarkvm-fields") (r "=0.16.8") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.8") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.8") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0822hcrbqj81cdjd7ynxj94jbn7bdzcgpdfp8p3wjan56r0xfyz2") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.9 (c (n "snarkvm-algorithms") (v "0.16.9") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.9") (k 0)) (d (n "snarkvm-fields") (r "=0.16.9") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.9") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.9") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1cjfw4xh90ajm7rcdy6kmdnbk9c98m6plqisd520qycp2d1sm1k3") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.10 (c (n "snarkvm-algorithms") (v "0.16.10") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.10") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.10") (k 0)) (d (n "snarkvm-fields") (r "=0.16.10") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.10") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.10") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "03gb9fwkkbcmbgnk8b04nynrwgyhrz373wwxy1nscvq0d1k8nczs") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.11 (c (n "snarkvm-algorithms") (v "0.16.11") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.11") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.11") (k 0)) (d (n "snarkvm-fields") (r "=0.16.11") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.11") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.11") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0hfk511h18sa2acpazn0hkpsrn58qx8kzlmg3cf816lnj0ibvksb") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.12 (c (n "snarkvm-algorithms") (v "0.16.12") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.12") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.12") (k 0)) (d (n "snarkvm-fields") (r "=0.16.12") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.12") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.12") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0gv6jhgf8jdb9h7pkhbcjvbkf0zm1x48vm9n79msx66c7h1ixnh8") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.13 (c (n "snarkvm-algorithms") (v "0.16.13") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.13") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.13") (k 0)) (d (n "snarkvm-fields") (r "=0.16.13") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.13") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.13") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0wc4k8fgx6cgclwpn6f1d4rlag48j9isfvwv26ghn7rp0mbqkgwi") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.14 (c (n "snarkvm-algorithms") (v "0.16.14") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.14") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.14") (k 0)) (d (n "snarkvm-fields") (r "=0.16.14") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.14") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.14") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1f52a701084cxszgn1qnjx6b3mwh1nqn29lclmx2b1pkp9rgjxwk") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.15 (c (n "snarkvm-algorithms") (v "0.16.15") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.15") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.15") (k 0)) (d (n "snarkvm-fields") (r "=0.16.15") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.15") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.15") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0n69hyrlm7aivjnjbncgd71f6hlf0l7pyg6w4yb7x57v2jwxafgk") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.16 (c (n "snarkvm-algorithms") (v "0.16.16") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.16") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.16") (k 0)) (d (n "snarkvm-fields") (r "=0.16.16") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.16") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.16") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "161z5h9i2ls5xn6n96kqi12bl2547bgwyhzdvglsr6vxprhgdax4") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.17 (c (n "snarkvm-algorithms") (v "0.16.17") (d (list (d (n "aleo-std") (r "^0.1.18") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.17") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.17") (k 0)) (d (n "snarkvm-fields") (r "=0.16.17") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.17") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.17") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0g611hsvwfz4dz6ckykh6arih0lif96x3rmwhy23wil6d32rlri6") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.18 (c (n "snarkvm-algorithms") (v "0.16.18") (d (list (d (n "aleo-std") (r "^0.1.24") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.18") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.18") (k 0)) (d (n "snarkvm-fields") (r "=0.16.18") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.18") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.18") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "1zff47ab6jrjpqnma5wlrvj5k8an5wypmqrc7gpx9imvvvq1sy97") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

(define-public crate-snarkvm-algorithms-0.16.19 (c (n "snarkvm-algorithms") (v "0.16.19") (d (list (d (n "aleo-std") (r "^0.1.24") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bincode") (r "^1") (d #t) (k 2)) (d (n "blake2") (r "^0.10") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "criterion") (r "^0.5.1") (d #t) (k 2)) (d (n "crossbeam-channel") (r "^0.5") (o #t) (d #t) (k 0)) (d (n "expect-test") (r "^1.4.1") (d #t) (k 2)) (d (n "fxhash") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "hashbrown") (r "^0.14.0") (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (o #t) (d #t) (k 0)) (d (n "itertools") (r "^0.11.0") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4") (o #t) (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (d #t) (k 0)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "rand_chacha") (r "^0.3") (k 0)) (d (n "rand_core") (r "^0.6") (o #t) (k 0)) (d (n "rayon") (r "^1") (d #t) (k 0)) (d (n "rust-gpu-tools") (r "^0.7.0") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (k 0)) (d (n "serde_json") (r "^1") (f (quote ("preserve_order"))) (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha2") (r "^0.10") (k 0)) (d (n "smallvec") (r "^1.11") (f (quote ("const_generics" "const_new"))) (k 0)) (d (n "snarkvm-algorithms-cuda") (r "=0.16.19") (o #t) (d #t) (k 0)) (d (n "snarkvm-curves") (r "=0.16.19") (k 0)) (d (n "snarkvm-fields") (r "=0.16.19") (k 0)) (d (n "snarkvm-parameters") (r "=0.16.19") (o #t) (d #t) (k 0)) (d (n "snarkvm-utilities") (r "=0.16.19") (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (o #t) (d #t) (k 0)))) (h "0as0w0ivsmgc6c9k914q582mlv2ppq51p7d28f9mg8nayhb97b04") (f (quote (("wasm" "crypto_hash" "fft" "msm" "polycommit_wasm" "r1cs" "snark" "wasm-bindgen-futures") ("test") ("snark" "crypto_hash" "fft" "msm" "polycommit" "r1cs") ("serial" "snarkvm-curves/serial" "snarkvm-fields/serial" "snarkvm-utilities/serial") ("r1cs" "cfg-if" "fxhash" "indexmap") ("profiler" "aleo-std/profiler") ("polycommit_wasm" "polycommit" "snarkvm-parameters/wasm") ("polycommit_full" "polycommit" "snarkvm-parameters/default") ("polycommit" "crypto_hash" "fft" "msm" "rand_core") ("msm") ("full" "crypto_hash" "fft" "msm" "polycommit_full" "r1cs" "snark") ("fft") ("default" "full" "snarkvm-curves/default" "snarkvm-fields/default" "snarkvm-utilities/default") ("cuda" "snarkvm-algorithms-cuda") ("crypto_hash"))))))

