(define-module (crates-io sn if sniffnet) #:use-module (crates-io))

(define-public crate-sniffnet-0.1.0 (c (n "sniffnet") (v "0.1.0") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.9.2") (d #t) (k 0)))) (h "0h1fnmmbs054jw3yrahvd7pxlpfj1wdk9ls9chngcbf8k7nw035c")))

(define-public crate-sniffnet-0.1.1 (c (n "sniffnet") (v "0.1.1") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.9.2") (d #t) (k 0)))) (h "1h4yh9a7wm7syw49qnww5d5wcy1qyrnamgkd8c4l29rnr9dn37cz")))

(define-public crate-sniffnet-0.1.2 (c (n "sniffnet") (v "0.1.2") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.9.2") (d #t) (k 0)))) (h "1d14xijjynjyrm12n1k6x244dy530b4b2bld7jdqjjrykkwq0zb1")))

(define-public crate-sniffnet-0.2.0 (c (n "sniffnet") (v "0.2.0") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.9.2") (d #t) (k 0)))) (h "0jdsvg18ilhrcw9fgddr8ncj27psb0frpkfbkkrvf7k90m2321f7")))

(define-public crate-sniffnet-0.2.1 (c (n "sniffnet") (v "0.2.1") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.9.2") (d #t) (k 0)))) (h "0vyd8isgzqgp6hfxifbcc09cpsvgy7375izg7d7wcjxpqf2ndzm5")))

(define-public crate-sniffnet-0.3.0 (c (n "sniffnet") (v "0.3.0") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.9.2") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "1dx2k1f816wvjhf3hbk7j6kdff10lz909fni5kda4yjdmca7m0kb")))

(define-public crate-sniffnet-0.3.1 (c (n "sniffnet") (v "0.3.1") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.10.1") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0cnid8jg2cicnhvrndbjgqkhyc5a4dpxsx4zpfkaivrrq0ikfdrf")))

(define-public crate-sniffnet-0.3.2 (c (n "sniffnet") (v "0.3.2") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.10.1") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "13ifp0qx6g17ri39g2w8yw7sw2g8dj85shm20hfyx5rz6r1mpqny")))

(define-public crate-sniffnet-0.4.0 (c (n "sniffnet") (v "0.4.0") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.10.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "1l9fk8k0cqpv7q08flcyvwdarzmmpqfk8j2aa6fjjhcalpc79pcz")))

(define-public crate-sniffnet-0.4.1 (c (n "sniffnet") (v "0.4.1") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "pcap") (r "^0.10.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0mlfhmnbc3l8dhl94lih8wvzg0acsljam6q5sihc9a22ckixrr0d")))

(define-public crate-sniffnet-0.5.0 (c (n "sniffnet") (v "0.5.0") (d (list (d (n "chrono") (r "^0.4.20") (d #t) (k 0)) (d (n "clap") (r "^3.2.6") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colored") (r "^2.0.0") (d #t) (k 0)) (d (n "crossterm") (r "^0.13.3") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "pcap") (r "^0.10.1") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0z2j9czn0hj5wkwyi7jj7c1hwvybx98n11jm2hs4l98fqkdnmmm9")))

(define-public crate-sniffnet-1.0.0 (c (n "sniffnet") (v "1.0.0") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "iced") (r "^0.4.2") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.4.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "pcap") (r "^0.11.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 0)) (d (n "plotters-iced") (r "^0.3.3") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "1gdsicwhl628zb0qmbqm54b8pbl2c73npkfvk844dlr7bqk2s5rb")))

(define-public crate-sniffnet-1.0.1 (c (n "sniffnet") (v "1.0.1") (d (list (d (n "chrono") (r "^0.4.22") (d #t) (k 0)) (d (n "etherparse") (r "^0.12.0") (d #t) (k 0)) (d (n "iced") (r "^0.4.2") (f (quote ("tokio"))) (d #t) (k 0)) (d (n "iced_style") (r "^0.4.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.1") (d #t) (k 0)) (d (n "pcap") (r "^0.11.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (d #t) (k 0)) (d (n "plotters-iced") (r "^0.3.3") (d #t) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0k84jf6xaacc4zyhkw4ik74cc7fhcy3kig03cp5fzfhknva4r010")))

(define-public crate-sniffnet-1.1.0 (c (n "sniffnet") (v "1.1.0") (d (list (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.7.0") (f (quote ("tokio" "image"))) (d #t) (k 0)) (d (n "iced_native") (r "^0.8.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.0.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.6.0") (d #t) (k 0)) (d (n "rodio") (r "^0.16.0") (f (quote ("mp3"))) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0djmzyz3p3y2p79k4vhii9r2va7rq2c505f1lyifsg3zgl4g3vdc")))

(define-public crate-sniffnet-1.1.1 (c (n "sniffnet") (v "1.1.1") (d (list (d (n "chrono") (r "^0.4.23") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.8.0") (f (quote ("tokio" "image"))) (d #t) (k 0)) (d (n "iced_native") (r "^0.9.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.0.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.7.0") (d #t) (k 0)) (d (n "rodio") (r "^0.17.0") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.152") (f (quote ("derive"))) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "04a4ff1if5f151cfc2inn0w18xssfyxzr82mz34wpk4aib9gy03w")))

(define-public crate-sniffnet-1.1.2 (c (n "sniffnet") (v "1.1.2") (d (list (d (n "chrono") (r "^0.4.24") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.8.0") (f (quote ("tokio" "image"))) (d #t) (k 0)) (d (n "iced_native") (r "^0.9.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.2") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.0.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.7.0") (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.16.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.157") (f (quote ("derive"))) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0xd88184fb10xrc2rn08mxvgm2fm2b5gg74c25dh60scfk8d8van")))

(define-public crate-sniffnet-1.1.3 (c (n "sniffnet") (v "1.1.3") (d (list (d (n "chrono") (r "^0.4.24") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.8.0") (f (quote ("tokio" "image"))) (d #t) (k 0)) (d (n "iced_lazy") (r "^0.5.0") (d #t) (k 0)) (d (n "iced_native") (r "^0.9.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.0.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.159") (f (quote ("derive"))) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0fs1f2lnkgm7c3gdl5cd28z11618bcx9k2gxby0aqa1md81mpmjv")))

(define-public crate-sniffnet-1.1.4 (c (n "sniffnet") (v "1.1.4") (d (list (d (n "chrono") (r "^0.4.24") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.9.0") (f (quote ("tokio" "image"))) (d #t) (k 0)) (d (n "iced_lazy") (r "^0.6.1") (d #t) (k 0)) (d (n "iced_native") (r "^0.10.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.0.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.16") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.160") (f (quote ("derive"))) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "1fqg4a194jiiy9dnzf4xa6g7z11g62xv71b0xnhbqcmnrh4axxz2")))

(define-public crate-sniffnet-1.2.0 (c (n "sniffnet") (v "1.2.0") (d (list (d (n "chrono") (r "^0.4.24") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "dns-lookup") (r "^1.0.8") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.9.0") (f (quote ("tokio" "svg"))) (d #t) (k 0)) (d (n "iced_lazy") (r "^0.6.1") (d #t) (k 0)) (d (n "iced_native") (r "^0.10.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.1.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "blocking"))) (d #t) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (k 0)) (d (n "thousands") (r "^0.2.0") (d #t) (k 0)))) (h "0racldbbf278vns055salp2l7m0cw6cmyxk2r7szsrx23hks8hdb")))

(define-public crate-sniffnet-1.2.1 (c (n "sniffnet") (v "1.2.1") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.9.0") (f (quote ("tokio" "svg"))) (d #t) (k 0)) (d (n "iced_lazy") (r "^0.6.1") (d #t) (k 0)) (d (n "iced_native") (r "^0.10.3") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.1.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.4") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.8.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "blocking" "rustls-tls"))) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.17.0") (d #t) (k 2)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (k 0)) (d (n "winres") (r "^0.1.12") (d #t) (t "cfg(windows)") (k 1)))) (h "0wjvpmcg5ip2wnpb5gz4ryq3x6q21hgi190s3z4z4biv698v8li9")))

(define-public crate-sniffnet-1.2.2 (c (n "sniffnet") (v "1.2.2") (d (list (d (n "chrono") (r "^0.4.26") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.5.1") (d #t) (k 0)) (d (n "dns-lookup") (r "^2.0.2") (d #t) (k 0)) (d (n "etherparse") (r "^0.13.0") (d #t) (k 0)) (d (n "iced") (r "^0.10.0") (f (quote ("tokio" "svg" "advanced" "lazy"))) (d #t) (k 0)) (d (n "indexmap") (r "^2.0.0") (d #t) (k 0)) (d (n "maxminddb") (r "^0.23.0") (d #t) (k 0)) (d (n "pcap") (r "^1.1.0") (d #t) (k 0)) (d (n "plotters") (r "^0.3.5") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.9.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.18") (f (quote ("json" "blocking" "rustls-tls"))) (k 0)) (d (n "rodio") (r "^0.17.1") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.18.1") (d #t) (k 2)) (d (n "serde") (r "^1.0.183") (f (quote ("derive"))) (k 0)) (d (n "winres") (r "^0.1.12") (d #t) (t "cfg(windows)") (k 1)))) (h "19v39a491ns5d42gq541n39pqyjyp9d9a0va3i4vpcr497wjy7ac")))

(define-public crate-sniffnet-1.3.0 (c (n "sniffnet") (v "1.3.0") (d (list (d (n "chrono") (r "^0.4.37") (f (quote ("clock"))) (k 0)) (d (n "confy") (r "^0.6.1") (d #t) (k 0)) (d (n "ctrlc") (r "^3.4.4") (f (quote ("termination"))) (d #t) (k 0)) (d (n "dns-lookup") (r "^2.0.4") (d #t) (k 0)) (d (n "etherparse") (r "^0.14.3") (d #t) (k 0)) (d (n "iced") (r "^0.12.1") (f (quote ("tokio" "svg" "advanced" "lazy"))) (d #t) (k 0)) (d (n "maxminddb") (r "^0.24.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.19.0") (d #t) (k 1)) (d (n "pcap") (r "^1.3.0") (d #t) (k 0)) (d (n "phf") (r "^0.11.2") (d #t) (k 0)) (d (n "phf_codegen") (r "^0.11.2") (d #t) (k 1)) (d (n "phf_shared") (r "^0.11.2") (d #t) (k 0)) (d (n "phf_shared") (r "^0.11.2") (d #t) (k 1)) (d (n "plotters") (r "^0.3.5") (f (quote ("area_series"))) (k 0)) (d (n "plotters-iced") (r "^0.10.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.12.2") (f (quote ("json" "blocking" "rustls-tls"))) (t "cfg(not(target_arch = \"powerpc64\"))") (k 0)) (d (n "reqwest") (r "^0.12.2") (f (quote ("json" "blocking"))) (d #t) (t "cfg(target_arch = \"powerpc64\")") (k 0)) (d (n "rfd") (r "^0.14.1") (d #t) (k 0)) (d (n "rodio") (r "^0.17.3") (f (quote ("mp3"))) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "rustrict") (r "^0.7.24") (f (quote ("censor"))) (k 1)) (d (n "serde") (r "^1.0.197") (f (quote ("derive"))) (k 0)) (d (n "serde_test") (r "^1.0.176") (d #t) (k 2)) (d (n "serial_test") (r "^3.0.0") (k 2)) (d (n "splines") (r "^4.3.1") (d #t) (k 0)) (d (n "toml") (r "^0.8.12") (d #t) (k 0)) (d (n "winres") (r "^0.1.12") (d #t) (t "cfg(windows)") (k 1)))) (h "03b24alby9dqab0mn224zzr8qjp09cb30kc6h497k7k1qjn6dvm7")))

