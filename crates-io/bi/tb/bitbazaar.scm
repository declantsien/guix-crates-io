(define-module (crates-io bi tb bitbazaar) #:use-module (crates-io))

(define-public crate-bitbazaar-0.0.1 (c (n "bitbazaar") (v "0.0.1") (h "0iv4qj3grw3asgkzilfb80gnis2l2j3k9dalg4280b1j67vzjw4h")))

(define-public crate-bitbazaar-0.0.2 (c (n "bitbazaar") (v "0.0.2") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1.0") (d #t) (k 0)) (d (n "fern") (r "^0.6.2") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "once_cell") (r "^1.18.0") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20.0") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "shlex") (r "^1.2.0") (d #t) (k 0)) (d (n "spez") (r "^0.1.2") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "119ydy7fab17wz662mfa4qyac7spap9w8qxjwdmsh5aigymzz5ma") (s 2) (e (quote (("pyo3" "dep:pyo3"))))))

(define-public crate-bitbazaar-0.0.3 (c (n "bitbazaar") (v "0.0.3") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("date-based"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)))) (h "0s6rhyrqjl4pmx19j1662f7ifp89k1sa7zr3qz0kp4y7l6j0hhwk") (s 2) (e (quote (("pyo3" "dep:pyo3"))))))

(define-public crate-bitbazaar-0.0.4 (c (n "bitbazaar") (v "0.0.4") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("date-based"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)))) (h "0yk7mc01gz4bg9yj6dm2xbvfa82bvciw92g16yrd5qjafbbsi5s1") (s 2) (e (quote (("pyo3" "dep:pyo3"))))))

(define-public crate-bitbazaar-0.0.5 (c (n "bitbazaar") (v "0.0.5") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("date-based"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)))) (h "0g5b9mwc2c7d4xgd5qicy8yf8iwj3b55i8hkfyvrw1g7d03mlh43") (s 2) (e (quote (("pyo3" "dep:pyo3"))))))

(define-public crate-bitbazaar-0.0.6 (c (n "bitbazaar") (v "0.0.6") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "fern") (r "^0.6") (f (quote ("date-based"))) (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)))) (h "02mirxhk31xsm66hpi39fyv63r7k38g9bvhw50j3qlbdc0b9ny3c") (s 2) (e (quote (("pyo3" "dep:pyo3"))))))

(define-public crate-bitbazaar-0.0.7 (c (n "bitbazaar") (v "0.0.7") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "1cvbjyjk8j7n21n0k8x2nzfylci2pqbgdmqfmyr6587sb623nnqz") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic"))))))

(define-public crate-bitbazaar-0.0.8 (c (n "bitbazaar") (v "0.0.8") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "153cyb063bnlg6x3awk5zz2s3c1g9x0h3yp36lskkd5hwm87a8kx") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic"))))))

(define-public crate-bitbazaar-0.0.9 (c (n "bitbazaar") (v "0.0.9") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12.1") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "06l0byps35c9672si9fd637k17mypabjy6fwz994gxwggh4pvivp") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic"))))))

(define-public crate-bitbazaar-0.0.10 (c (n "bitbazaar") (v "0.0.10") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "09xs4g0mbrd5ycriwy1f7vymsdmm3mf2hap7lwmdmfrdmlr01ai8") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.11 (c (n "bitbazaar") (v "0.0.11") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "0375ishyzb0smwdndjrjs21fdmb2giaa0v0mp3rhvqzgyhiqkxa9") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.12 (c (n "bitbazaar") (v "0.0.12") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "1lqjip9m8l73hfc5l5k2hl1r7mk0bfmn9753vsy4jfb7qj6w3gxd") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.13 (c (n "bitbazaar") (v "0.0.13") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)))) (h "0iwfyc8vf6gzh0r5pqmf7ngmpkmd68gn7kh6yrpxsgizmcvdnksv") (s 2) (e (quote (("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.14 (c (n "bitbazaar") (v "0.0.14") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("aio" "script"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "16pjw6swlvd52ryfkv8nypafb0wpssxkbcswcs5yz27dykpq8idk") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis") ("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.15 (c (n "bitbazaar") (v "0.0.15") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1d9ym8imrpriyffmhgl89639z1ncj36l54vqvcf36ip55aac26xx") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.16 (c (n "bitbazaar") (v "0.0.16") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0hqzyrs664xi9wcw65y3xb4xbxjzl3fmbji9kpl4f5r642b4mzii") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.17 (c (n "bitbazaar") (v "0.0.17") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0638hhf6gfsns5x7zf914zyrz42qcswyi54p4bji22p65hglj684") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.18 (c (n "bitbazaar") (v "0.0.18") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "09q4s83y44329hnqmdkhjg4nwysd6j9qq6s5rlb3f679wdqfazpr") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.19 (c (n "bitbazaar") (v "0.0.19") (d (list (d (n "aide") (r "^0.13") (f (quote ("axum"))) (o #t) (d #t) (k 0)) (d (n "axum") (r "^0.7") (o #t) (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "pyo3") (r "^0.20") (f (quote ("auto-initialize"))) (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "spez") (r "^0.1") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "055whxk0gf2zznlcsrbj59j3lszjmjmyq2wh2ym9byhv40xhpi63") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("pyo3" "dep:pyo3") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script") ("axum" "dep:axum" "dep:aide"))))))

(define-public crate-bitbazaar-0.0.20 (c (n "bitbazaar") (v "0.0.20") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("nightly" "deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1pf2n94cmyjsl3rrkl1mdkxkrsxd1ksykz6i4f63y7x11p0p2ixx") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script"))))))

(define-public crate-bitbazaar-0.0.21 (c (n "bitbazaar") (v "0.0.21") (d (list (d (n "bitbazaar") (r "^0.0.20") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (d #t) (k 2)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "run_script") (r "^0.10") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "shlex") (r "^1.2") (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1rv4p5pcmi5ab83dspcgzhgmqib7p045amrik34lgcb0jcj8w603") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:run_script"))))))

(define-public crate-bitbazaar-0.0.22 (c (n "bitbazaar") (v "0.0.22") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "16is8kvgkwvbsq4r4vsapaw1r6bwark40jl31x2mz78l1vqnj058") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.23 (c (n "bitbazaar") (v "0.0.23") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0fm4629cm1iw8savyzpv7srxvkwpdbdf7p0b0b4z1pxh4bqd4wim") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.24 (c (n "bitbazaar") (v "0.0.24") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "168ldvbca5f0mk7zq758cxk72ws56f0fnfm2gkqv6hagzzyv9qhw") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.25 (c (n "bitbazaar") (v "0.0.25") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0gknizs909iywy6i6z90qwnb926gci5np3ym670m42qbczjj4547") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.26 (c (n "bitbazaar") (v "0.0.26") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "0s6j3c7j6xlshhf7dbhycq9shdm209aqpw5cgks6v7b13508zjg9") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.27 (c (n "bitbazaar") (v "0.0.27") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "1y4zpdhcg3bdk5x589j5ylz29wdh7bngcbf3f8pncq4jniab7wj0") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.28 (c (n "bitbazaar") (v "0.0.28") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2.1") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("reqwest-client" "reqwest-rustls" "http-proto" "tls"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18.2") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (d #t) (k 2)) (d (n "tonic") (r "^0.9") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6.1") (f (quote ("v4"))) (d #t) (k 2)))) (h "16y2487m0m6aksj13kcw687277bwc06rknr216hjasvim09sk9kz") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:serde" "dep:serde_json" "dep:sha1_smol") ("opentelemetry" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry_sdk" "dep:tonic") ("cli" "dep:homedir" "dep:conch-parser"))))))

(define-public crate-bitbazaar-0.0.29 (c (n "bitbazaar") (v "0.0.29") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1hqk7w0zv4jbch7iiaqayg8ggqbwipsjlca8k1wc4h5n8xbd9754") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol") ("opentelemetry" "dep:tracing-core" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir"))))))

(define-public crate-bitbazaar-0.0.30 (c (n "bitbazaar") (v "0.0.30") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1hmyx1by0a7ci1qjq70ab9w7kv6xy6ybsarcp8bbsgng7n2p4c7g") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol") ("opentelemetry" "dep:tracing-core" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir"))))))

(define-public crate-bitbazaar-0.0.31 (c (n "bitbazaar") (v "0.0.31") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1fbdi2xcannc7n3swwslf9az7sqlr5jrwggna0shnv5h2iw4k8na") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol") ("opentelemetry" "dep:tracing-core" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir"))))))

(define-public crate-bitbazaar-0.0.32 (c (n "bitbazaar") (v "0.0.32") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0ias15figs17jpl3vfz258v1z9abqdda2k4vn65ws89g7kq44zwg") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol") ("opentelemetry" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir"))))))

(define-public crate-bitbazaar-0.0.33 (c (n "bitbazaar") (v "0.0.33") (d (list (d (n "chrono") (r "^0.4") (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (d #t) (k 0)) (d (n "colored") (r "^2.0") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1.18") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (d #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1.10") (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "serial_test") (r "^2.0") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "13094v6676syn40dqb17f0n0qs0gls9c58dalp2f7h8lfmbaw2ms") (s 2) (e (quote (("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol") ("opentelemetry" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir"))))))

(define-public crate-bitbazaar-0.0.34 (c (n "bitbazaar") (v "0.0.34") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0q2rlghk321zw9693nlzp6pgnqhsndgpxspxxhkdpkw3sxgvxcdy") (f (quote (("opentelemetry-http" "opentelemetry" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "opentelemetry" "opentelemetry-otlp/grpc-tonic")))) (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json") ("opentelemetry" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum") ("clap" "dep:clap"))))))

(define-public crate-bitbazaar-0.0.35 (c (n "bitbazaar") (v "0.0.35") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1khg5179l0fsxj5rcg0h0w5ky1khsq02g958djn2h8cwkjgjkxqa") (f (quote (("opentelemetry-http" "opentelemetry" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "opentelemetry" "opentelemetry-otlp/grpc-tonic")))) (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json") ("opentelemetry" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum") ("clap" "dep:clap"))))))

(define-public crate-bitbazaar-0.0.36 (c (n "bitbazaar") (v "0.0.36") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1ibbdimrdczhs20yv5sj1lwqxxfpxsizyzjnn9b8z0zhz162ijab") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum") ("clap" "dep:clap"))))))

(define-public crate-bitbazaar-0.0.37 (c (n "bitbazaar") (v "0.0.37") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1wl29s2jgg1w4li8y9amyiqajr434vlsw0yvvf3ixfidsa8s5h7w") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum") ("clap" "dep:clap"))))))

(define-public crate-bitbazaar-0.0.38 (c (n "bitbazaar") (v "0.0.38") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "clap") (r "^4.4") (f (quote ("derive" "string"))) (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.14") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "redis") (r "^0.24") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "10nnlfcp4b0qy3mv6hk2fdhr7y47klh12fiqpb0cq0anf48jv7v3") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum") ("clap" "dep:clap"))))))

(define-public crate-bitbazaar-0.0.39 (c (n "bitbazaar") (v "0.0.39") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1q8a6kd645v1iqpzmvf29ff0pmdi7074lg86k8di5d6zh2iizpsp") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.40 (c (n "bitbazaar") (v "0.0.40") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1dww84ig6whw6zgv6shm528g9ajmfq9dhmhxrh0frmrahrr60p1b") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.41 (c (n "bitbazaar") (v "0.0.41") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0w4091gipf16cbm4jjfxxmga7p19xql435bz70v4rcxg4px25sli") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.42 (c (n "bitbazaar") (v "0.0.42") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0smasgls8k6zzayya3kww4j8nf3brnhv61n4df8n79jbln7kjdg2") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.43 (c (n "bitbazaar") (v "0.0.43") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1dhjp3ln6rnnjcxa88ygz9vbg47czybwgnxbi97i61fv1q3xs8la") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.44 (c (n "bitbazaar") (v "0.0.44") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0wfzq395nykw9bi9xz3pnv1zhnq8pps6h4qskxdm96d039zv3nf9") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.45 (c (n "bitbazaar") (v "0.0.45") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "14pz88rvglpcplx2r2h94v3lfz3m6w0wvr00wn4si3h8di1a1sh3") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.46 (c (n "bitbazaar") (v "0.0.46") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0w6g9pkrzqiz0x4favj7w8hfgfam82f7wp3s641rxkj51yp6xqwm") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.47 (c (n "bitbazaar") (v "0.0.47") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0jw6jvhp0hl86p7z9x12y6kh2x37fflz2ncrrbga72ri70sfbi6a") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.48 (c (n "bitbazaar") (v "0.0.48") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "1hsz8bd2sgnfaks5m3qv8pnq5wywmgzkb6374ga327hi67yig1b2") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.49 (c (n "bitbazaar") (v "0.0.49") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "futures-timer") (r "^3") (o #t) (d #t) (k 0)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "redis-macros") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1.35") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "0qmxiqp7n25sdy59y1mgcrlq9vb73yc2lswnfwggarf6gg0yfmf4") (s 2) (e (quote (("timing" "dep:comfy-table" "dep:chrono") ("redis" "dep:deadpool-redis" "dep:redis" "dep:redis-macros" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "dep:futures-timer" "dep:chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "dep:chrono" "dep:strum"))))))

(define-public crate-bitbazaar-0.0.50 (c (n "bitbazaar") (v "0.0.50") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "redis-macros") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "08yf7hwqxr0k7zn6d509v3jkpm4g9zy0svhxl2781222n8nf497i") (s 2) (e (quote (("timing" "dep:comfy-table" "chrono") ("redis" "dep:tokio" "dep:deadpool-redis" "dep:redis" "dep:redis-macros" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "chrono" "dep:strum") ("chrono" "dep:chrono" "dep:chrono-humanize"))))))

(define-public crate-bitbazaar-0.0.51 (c (n "bitbazaar") (v "0.0.51") (d (list (d (n "chrono") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "chrono-humanize") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "colored") (r "^2") (d #t) (k 0)) (d (n "comfy-table") (r "^7.1") (o #t) (d #t) (k 0)) (d (n "conch-parser") (r "^0.1.1") (o #t) (d #t) (k 0)) (d (n "deadpool-redis") (r "^0.15") (f (quote ("rt_tokio_1"))) (o #t) (d #t) (k 0)) (d (n "error-stack") (r "^0.4") (d #t) (k 0)) (d (n "futures") (r "^0.3") (o #t) (d #t) (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 2)) (d (n "homedir") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "hostname") (r "^0.3.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "http") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "normpath") (r "^1.1") (o #t) (d #t) (k 0)) (d (n "once_cell") (r "^1") (d #t) (k 0)) (d (n "opentelemetry") (r "^0.21") (f (quote ("trace"))) (o #t) (k 0)) (d (n "opentelemetry-appender-tracing") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry-otlp") (r "^0.14") (f (quote ("logs" "trace" "metrics"))) (o #t) (k 0)) (d (n "opentelemetry-semantic-conventions") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "opentelemetry_sdk") (r "^0.21") (f (quote ("rt-tokio"))) (o #t) (d #t) (k 0)) (d (n "parking_lot") (r "^0.12") (f (quote ("deadlock_detection" "serde"))) (d #t) (k 0)) (d (n "portpicker") (r "^0.1.1") (d #t) (k 2)) (d (n "rand") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "redis") (r "^0.25") (f (quote ("aio" "json"))) (o #t) (k 0)) (d (n "redis-macros") (r "^0.3.0") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (o #t) (d #t) (k 0)) (d (n "regex") (r "^1") (d #t) (k 2)) (d (n "rstest") (r "^0.18") (d #t) (k 2)) (d (n "rustc_version") (r "^0.4.0") (d #t) (k 1)) (d (n "serde") (r "^1") (f (quote ("derive" "rc"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "sha1_smol") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "strum") (r "^0.25") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "sysinfo") (r "^0.30") (o #t) (d #t) (k 0)) (d (n "tempfile") (r "^3.8") (d #t) (k 2)) (d (n "time") (r "^0.3") (f (quote ("local-offset"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (o #t) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("rt-multi-thread" "macros"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (d #t) (k 0)) (d (n "tracing-appender") (r "^0.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tracing-core") (r "^0.1") (d #t) (k 0)) (d (n "tracing-log") (r "^0.2") (o #t) (d #t) (k 0)) (d (n "tracing-opentelemetry") (r "^0.22") (o #t) (d #t) (k 0)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("fmt" "std" "time"))) (d #t) (k 0)) (d (n "tracing-subscriber-wasm") (r "^0.1.0") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (o #t) (d #t) (k 0)) (d (n "uuid") (r "^1.6") (f (quote ("v4"))) (d #t) (k 2)))) (h "03bgvrmnliwmki7ggccm41rqa9avpwsk3pivb53lb7yc186jgxc8") (s 2) (e (quote (("timing" "dep:comfy-table" "chrono") ("system" "dep:sysinfo") ("redis" "dep:tokio" "dep:deadpool-redis" "dep:redis" "dep:redis-macros" "dep:sha1_smol" "dep:serde_json" "dep:rand" "dep:futures" "chrono" "dep:uuid") ("opentelemetry-http" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic" "opentelemetry-otlp/http-proto" "opentelemetry-otlp/reqwest-client") ("opentelemetry-grpc" "dep:tracing-log" "dep:opentelemetry-appender-tracing" "dep:opentelemetry_sdk" "dep:tracing-opentelemetry" "dep:opentelemetry" "dep:opentelemetry-otlp" "dep:opentelemetry-semantic-conventions" "dep:http" "opentelemetry-otlp/grpc-tonic") ("log-filter" "dep:regex") ("cli" "dep:normpath" "dep:conch-parser" "dep:homedir" "chrono" "dep:strum") ("chrono" "dep:chrono" "dep:chrono-humanize"))))))

