(define-module (crates-io bi tm bitmask-core) #:use-module (crates-io))

(define-public crate-bitmask-core-0.1.0 (c (n "bitmask-core") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.16") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "reqwasm") (r "^0.4.1") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "17xkwjzrkas7gqjjc33g9p12cwgrsbdxibpr3sxvi1c3p6m4vf2i")))

(define-public crate-bitmask-core-0.1.1 (c (n "bitmask-core") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.16") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.1.0") (d #t) (k 0)) (d (n "gloo-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0kwa86rj0np29p2gsii6qm5gsib6plmx318qw6pzg5qg8qjc60l4")))

(define-public crate-bitmask-core-0.1.2 (c (n "bitmask-core") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.17.0") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.1.0") (d #t) (k 0)) (d (n "gloo-storage") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "1czdkxrny9dbr2l2ab6pp0wsgqmfpffn5n3kkxbmyfrsbgv5gv92")))

(define-public crate-bitmask-core-0.2.0 (c (n "bitmask-core") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.17.0") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.1.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.6.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "110varp1chk8ahvp6snr4wxspc10bfy7m4jz61w63hyl6hs19ffz")))

(define-public crate-bitmask-core-0.2.1 (c (n "bitmask-core") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.18.0") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "1ki8fi67pcldb9vmfn2rpslwzvxl590k4kyasiy14cxx4ra96lz1")))

(define-public crate-bitmask-core-0.2.2 (c (n "bitmask-core") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.18.0") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0aq7m0v405ipcg7psaamr4xgbqg0slivnzqsxgqm4glqzkvf0sr0")))

(define-public crate-bitmask-core-0.2.3 (c (n "bitmask-core") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.18.0") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "024fwmn0cjf0kr85l2nxww3j2zlwfhips3c11fjpjnx6468wwi9g")))

(define-public crate-bitmask-core-0.3.0 (c (n "bitmask-core") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.18.0") (f (quote ("use-esplora-reqwest" "key-value-db"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0ln2pq7hyxh64v7wfj77mh2cgnf2ip8zq0ir35znvg8kf06d72ik")))

(define-public crate-bitmask-core-0.3.1 (c (n "bitmask-core") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0.44") (d #t) (k 0)) (d (n "base64") (r "^0.13.0") (d #t) (k 0)) (d (n "bdk") (r "^0.18.0") (f (quote ("use-esplora-reqwest" "key-value-db" "async-interface" "reqwest-default-tls"))) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.27.1") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.6") (d #t) (k 0)) (d (n "futures") (r "^0.3.17") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.1") (d #t) (k 0)) (d (n "gloo-net") (r "^0.2.0") (d #t) (k 0)) (d (n "js-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "once_cell") (r "^1.9.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.130") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.68") (d #t) (k 0)) (d (n "sha2") (r "^0.10.1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "wasm-bindgen") (r "^0.2.77") (f (quote ("serde-serialize"))) (d #t) (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.27") (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.13") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.55") (d #t) (k 0)) (d (n "wee_alloc") (r "^0.4.5") (d #t) (k 0)))) (h "0sx8nlqwkvdkz8zvikw315m23fyjwjjfll36xpd5p18dg4fmd9w2")))

(define-public crate-bitmask-core-0.4.0 (c (n "bitmask-core") (v "0.4.0") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.8.0") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "carbonado") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.8.0") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.8.3") (f (quote ("descriptors" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "electrum-client") (r "^0.10.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lnpbp") (r "^0.8.0") (f (quote ("all"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "psbt") (r "^0.8.5") (f (quote ("sign" "miniscript" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb-core") (r "^0.8.0") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb-std") (r "^0.8.0") (f (quote ("serde" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "rgb20") (r "^0.8.0-rc.4") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "stens") (r "^0.7.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.8.1") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "14bkjyksjfrlpvhyfkqdyiwrqphfl0l027q94ww3d09054zh6157") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default"))))))

(define-public crate-bitmask-core-0.4.1 (c (n "bitmask-core") (v "0.4.1") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.8.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "carbonado") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.8.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.8.3") (f (quote ("descriptors" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "electrum-client") (r "=0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lnpbp") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "psbt") (r "^0.8.5") (f (quote ("sign" "miniscript" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb-std") (r "^0.8.1") (f (quote ("serde" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "rgb20") (r "^0.8.0") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.8.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "stens") (r "^0.7.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.8.1") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1zq7cxbl48kz0pg0lkmbin5hvqwjfbm68ak5rcld2pf52f24jzva") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default"))))))

(define-public crate-bitmask-core-0.4.2 (c (n "bitmask-core") (v "0.4.2") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.8.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "carbonado") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.8.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.8.3") (f (quote ("descriptors" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "electrum-client") (r "=0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.20.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "psbt") (r "^0.8.5") (f (quote ("sign" "miniscript" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb-std") (r "^0.8.1") (f (quote ("serde" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "rgb20") (r "^0.8.0") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.8.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "stens") (r "^0.7.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.8.1") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1jp6fxkghn9pyzmyffrlgx1l5gwk7a4z81qf09k5d493rna79s2b") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default"))))))

(define-public crate-bitmask-core-0.4.3 (c (n "bitmask-core") (v "0.4.3") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.8.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "carbonado") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.8.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.8.3") (f (quote ("descriptors" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "electrum-client") (r "=0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.20.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "psbt") (r "^0.8.5") (f (quote ("sign" "miniscript" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb-std") (r "^0.8.1") (f (quote ("serde" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "rgb20") (r "^0.8.0") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.8.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "stens") (r "^0.7.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.8.1") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1alxizmsdmzzvfb1jsrm88sbngkxlimvpsgw4x1fafk8dycagl6a") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default"))))))

(define-public crate-bitmask-core-0.4.4 (c (n "bitmask-core") (v "0.4.4") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.23") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0") (d #t) (k 0)) (d (n "bitcoin") (r "^0.28.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.10.0") (d #t) (k 0)) (d (n "bp-core") (r "^0.8.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.8.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "carbonado") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.8.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.8.3") (f (quote ("descriptors" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "electrum-client") (r "=0.10.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.20.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "psbt") (r "^0.8.5") (f (quote ("sign" "miniscript" "serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb-std") (r "^0.8.1") (f (quote ("serde" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "rgb20") (r "^0.8.0") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.8.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7") (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "stens") (r "^0.7.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.8.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.8.1") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "03g61z0r1mrlng7jsdiy3jblwasi2q2xh3yn33hqgm8ygc42im6v") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default"))))))

(define-public crate-bitmask-core-0.5.0-rc.1 (c (n "bitmask-core") (v "0.5.0-rc.1") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "axum") (r "^0.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.2.3") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.25") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bdk") (r "^0.25.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bech32") (r "^0.9") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "carbonado") (r "^0.1.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "~0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "directories") (r "^4.0") (d #t) (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.3") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lazy_static") (r "^1.4") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.9") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4") (d #t) (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rand") (r "^0.6") (f (quote ("wasm-bindgen"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "regex") (r "^1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "serde") (r "^1") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "~0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3") (d #t) (k 2)) (d (n "web-sys") (r "^0.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0h3lf63shlnhmc4xw50hqfrzak6dl5f81kklray47rm3q6qrj16w") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

(define-public crate-bitmask-core-0.5.0-rc.2 (c (n "bitmask-core") (v "0.5.0-rc.2") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "axum") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.25.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.25.0") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3.5") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "036kwrc7fi6c9ymm0abz0wi38kkhnaayza86k183565fzgc91vni") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

(define-public crate-bitmask-core-0.5.0-rc.3 (c (n "bitmask-core") (v "0.5.0-rc.3") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "axum") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3.5") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0q20h32xqqj3x9c2dczvjyil0mx1fnvcdzc2yrms02dw4bwl06cz") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

(define-public crate-bitmask-core-0.5.0-rc.4 (c (n "bitmask-core") (v "0.5.0-rc.4") (d (list (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "axum") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "base64") (r "^1.0.0") (d #t) (k 0) (p "base64-compat")) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "gloo-console") (r "^0.2.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "payjoin") (r "^0.5.1-alpha") (f (quote ("sender"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "tower-http") (r "^0.3.5") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1gk12pjg7bwncpdpsi4hwpd2ndiyyv4h0xg4cpvhx7p04kj4rpkm") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

(define-public crate-bitmask-core-0.5.0-rc.5 (c (n "bitmask-core") (v "0.5.0-rc.5") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "base64") (r "^1.0.0") (d #t) (k 0) (p "base64-compat")) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "payjoin") (r "^0.5.1-alpha") (f (quote ("sender"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-console") (r "^0.2.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "0x50aphqc98y38ygnzmw5j9d76210aksjalr9y2irb0h2v9i64n5") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

(define-public crate-bitmask-core-0.5.0-rc.6 (c (n "bitmask-core") (v "0.5.0-rc.6") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "base64") (r "^1.0.0") (d #t) (k 0) (p "base64-compat")) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "payjoin") (r "^0.5.1-alpha") (f (quote ("sender"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-console") (r "^0.2.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1mxrzgddmasaqsd5bq7p1x01lha4a3mc46gdjcpjwh7maskpp0nh") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

(define-public crate-bitmask-core-0.5.0 (c (n "bitmask-core") (v "0.5.0") (d (list (d (n "anyhow") (r "^1.0.68") (d #t) (k 0)) (d (n "base64") (r "^1.0.0") (d #t) (k 0) (p "base64-compat")) (d (n "bech32") (r "^0.9.1") (d #t) (k 0)) (d (n "bip39") (r "^1.0.1") (d #t) (k 0)) (d (n "bitcoin") (r "^0.29.2") (f (quote ("base64"))) (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.11.0") (d #t) (k 0)) (d (n "console_error_panic_hook") (r "^0.1.7") (d #t) (k 0)) (d (n "futures") (r "^0.3.25") (d #t) (k 0)) (d (n "getrandom") (r "^0.2.8") (f (quote ("js"))) (d #t) (k 0)) (d (n "hex") (r "^0.4.3") (d #t) (k 0)) (d (n "lightning-invoice") (r "^0.21.0") (d #t) (k 0)) (d (n "log") (r "^0.4.17") (d #t) (k 0)) (d (n "miniscript_crate") (r "^9.0.0") (d #t) (k 0) (p "miniscript")) (d (n "once_cell") (r "^1.17.0") (d #t) (k 0)) (d (n "payjoin") (r "^0.5.1-alpha") (f (quote ("sender"))) (d #t) (k 0)) (d (n "pretty_env_logger") (r "^0.4.0") (d #t) (k 0)) (d (n "regex") (r "^1.7.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11.13") (f (quote ("json"))) (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (d #t) (k 0)) (d (n "serde-encrypt") (r "^0.7.0") (d #t) (k 0)) (d (n "serde_json") (r "^1.0.91") (d #t) (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("macros" "sync"))) (d #t) (k 0)) (d (n "wasm-bindgen-test") (r "^0.3.33") (d #t) (k 2)) (d (n "amplify") (r "^3.13.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum") (r "^0.6.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "axum-macros") (r "^0.3.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface" "reqwest-default-tls" "sqlite-bundled"))) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bitcoin_scripts") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-core") (r "^0.9.0-rc.1") (f (quote ("psbt" "wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "bp-dbc") (r "^0.9.0-rc.1") (f (quote ("wallet"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "commit_verify") (r "^0.9.0-rc.1") (f (quote ("rand"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "deflate") (r "^1.0.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "descriptor-wallet") (r "^0.9.0-rc.1") (f (quote ("descriptors" "serde" "miniscript"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "electrum-client") (r "^0.12.0") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "inflate") (r "^0.4.5") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "lnpbp") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "psbt") (r "^0.9.0-rc.1") (f (quote ("sign" "miniscript" "serde" "construct"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb20") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "rgb_core") (r "^0.9.0-rc.2") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-core")) (d (n "rgb_std") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0) (p "rgb-std")) (d (n "stens") (r "^0.9.0-rc.1") (f (quote ("serde"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "storm-core") (r "^0.9.0-rc.1") (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "strict_encoding") (r "^0.9.0-rc.2") (f (quote ("crypto" "chrono" "bitcoin"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tower-http") (r "^0.3.5") (f (quote ("cors"))) (o #t) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 0)) (d (n "tokio") (r "^1.23.0") (f (quote ("full"))) (d #t) (t "cfg(not(target_arch = \"wasm32\"))") (k 2)) (d (n "bdk") (r "^0.26.0") (f (quote ("use-esplora-async" "async-interface"))) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-console") (r "^0.2.3") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "gloo-net") (r "^0.2.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "js-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "serde-wasm-bindgen") (r "^0.4.5") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen") (r "^0.2.83") (f (quote ("serde-serialize"))) (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "wasm-bindgen-futures") (r "^0.4.33") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)) (d (n "web-sys") (r "^0.3.60") (d #t) (t "cfg(target_arch = \"wasm32\")") (k 0)))) (h "1ppdm35aqsw5pyd50ivkm4xa8ixgz9hsfgpmq2pvyk8dd8x1q9cr") (f (quote (("web") ("sqlite") ("server" "tokio/full" "tower-http/cors") ("default") ("all"))))))

