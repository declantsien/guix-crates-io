(define-module (crates-io bi na binator_json) #:use-module (crates-io))

(define-public crate-binator_json-0.0.0 (c (n "binator_json") (v "0.0.0") (d (list (d (n "binator_base") (r "^0.0.0") (d #t) (k 0)) (d (n "binator_base") (r "^0.0.0") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "binator_context") (r "^0.0.0") (d #t) (k 0)) (d (n "binator_context") (r "^0.0.0") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "binator_core") (r "^0.0.2") (d #t) (k 0)) (d (n "binator_core") (r "^0.0.2") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "binator_number") (r "^0.0.0") (d #t) (k 0)) (d (n "binator_number") (r "^0.0.0") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "binator_utils") (r "^0.0.0") (d #t) (k 0)) (d (n "binator_utils") (r "^0.0.0") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "registry" "local-time" "env-filter" "fmt" "time"))) (k 2)))) (h "18402k185wrn21qs68d3mzdnjhn5bqi9qnpwkbwc9ln7gbv98w7w")))

(define-public crate-binator_json-0.0.1 (c (n "binator_json") (v "0.0.1") (d (list (d (n "binator") (r "^0.3.0") (d #t) (k 0)) (d (n "binator") (r "^0.3.0") (f (quote ("tracing"))) (d #t) (k 2)) (d (n "const_format") (r "^0.2") (f (quote ("const_generics"))) (d #t) (k 0)) (d (n "derive-new") (r "^0.5") (d #t) (k 2)) (d (n "derive_more") (r "^0.99") (d #t) (k 2)) (d (n "env_logger") (r "^0.9") (k 2)) (d (n "paste") (r "^1") (d #t) (k 0)) (d (n "pretty_assertions") (r "^1") (d #t) (k 2)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "test-log") (r "^0.2.10") (f (quote ("trace"))) (d #t) (k 2)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (d #t) (k 2)) (d (n "tracing-subscriber") (r "^0.3") (f (quote ("std" "registry" "local-time" "env-filter" "fmt" "time"))) (k 2)))) (h "0r59aylvbx1kqcm0iqzzkrybwgnligmrqyszim47ifp0z4fscz73")))

