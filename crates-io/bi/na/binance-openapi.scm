(define-module (crates-io bi na binance-openapi) #:use-module (crates-io))

(define-public crate-binance-openapi-0.0.0 (c (n "binance-openapi") (v "0.0.0") (d (list (d (n "base64") (r "^0.21") (d #t) (k 0)) (d (n "chrono") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.3") (d #t) (k 0)) (d (n "color-eyre") (r "^0.6.3") (d #t) (k 1)) (d (n "fs-err") (r "^2.11.0") (d #t) (k 0)) (d (n "fs-err") (r "^2.11.0") (d #t) (k 1)) (d (n "futures") (r "^0.3.30") (d #t) (k 0)) (d (n "prettyplease") (r "^0.2") (d #t) (k 1)) (d (n "progenitor") (r "^0.7") (d #t) (k 0)) (d (n "progenitor") (r "^0.7") (d #t) (k 1)) (d (n "progenitor-client") (r "^0.7") (d #t) (k 0)) (d (n "quote") (r "^1") (d #t) (k 1)) (d (n "rand") (r "^0.8") (d #t) (k 0)) (d (n "regress") (r "^0.4.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json" "stream"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.21") (f (quote ("chrono" "semver" "uuid" "url" "bytes"))) (d #t) (k 1)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 1)) (d (n "serde_path_to_error") (r "^0.1.16") (d #t) (k 1)) (d (n "serde_yaml") (r "^0.9.34") (d #t) (k 1)) (d (n "syn") (r "^2.0") (f (quote ("full"))) (d #t) (k 1)) (d (n "uuid") (r "^1.0.0") (f (quote ("serde" "v4"))) (d #t) (k 0)))) (h "0w6kvhn9167xk8z96npp37lvs7y2vaa3bwypg7kil3z963q58ijn") (f (quote (("genapi") ("default"))))))

