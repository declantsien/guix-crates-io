(define-module (crates-io bi ts bitski-provider) #:use-module (crates-io))

(define-public crate-bitski-provider-0.1.0 (c (n "bitski-provider") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.1.0") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.0") (d #t) (k 0)) (d (n "once_cell") (r "^1.14.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.18") (d #t) (k 0)))) (h "0yiq449d6f9jgllba4y9y8prc4fjjjciy0k13n63n0i4s3p7mnqy") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-bitski-provider-0.2.0 (c (n "bitski-provider") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.0") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.16.0") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.18") (d #t) (k 0)))) (h "1d7qiic6v6a356161w3gm4wddxwcwn26q827hr5716gnrfpisswg") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-bitski-provider-0.2.1 (c (n "bitski-provider") (v "0.2.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.1") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.18") (d #t) (k 0)))) (h "1mlspg833y8lw0q8cypgyq1js5pahyhl3bfpqs8n8p9zrjibqani") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-bitski-provider-0.2.2 (c (n "bitski-provider") (v "0.2.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.2") (d #t) (k 0)) (d (n "cached") (r "^0.43") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.18") (d #t) (k 0)))) (h "0kr185gf9za0h9jicpmay2lnbcf053mkznhq1mbfd7gp92jyh5rm") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-bitski-provider-0.2.3 (c (n "bitski-provider") (v "0.2.3") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.2") (d #t) (k 0)) (d (n "cached") (r "^0.44") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.19") (d #t) (k 0)))) (h "1cclpcgjbkahx8hcd5hw2ianpkinjvrm0jywiqymxn73wsq4lqp9") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-bitski-provider-0.2.4 (c (n "bitski-provider") (v "0.2.4") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.2") (d #t) (k 0)) (d (n "cached") (r "^0.44") (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.19") (d #t) (k 0)))) (h "1gyk65xqc207fykjxwnahvg552bgclg4cvzkjagyxszlfy9ls88p") (s 2) (e (quote (("tracing" "dep:tracing"))))))

(define-public crate-bitski-provider-0.3.0 (c (n "bitski-provider") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.2") (d #t) (k 0)) (d (n "cached") (r "^0.44") (d #t) (k 0)) (d (n "ethers") (r "^2.0") (o #t) (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.19") (d #t) (k 0)))) (h "12zz2jh0zhd4kx1v2ckdym9nyn70bs6ck1y5v8cdln9zsrihqskb") (f (quote (("default" "ethers" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing") ("ethers" "dep:ethers" "dep:async-trait" "dep:thiserror"))))))

(define-public crate-bitski-provider-0.3.1 (c (n "bitski-provider") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "async-trait") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "bitski-chain-models") (r "^0.2.4") (d #t) (k 0)) (d (n "cached") (r "^0.44") (d #t) (k 0)) (d (n "ethers") (r "^2.0.11") (o #t) (d #t) (k 0)) (d (n "jsonrpc-core") (r "^18") (d #t) (k 0)) (d (n "oauth2") (r "^4.3") (d #t) (k 0)) (d (n "once_cell") (r "^1.17.1") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0") (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (o #t) (d #t) (k 0)) (d (n "tracing") (r "^0.1") (o #t) (d #t) (k 0)) (d (n "web3") (r "^0.19") (d #t) (k 0)))) (h "10j1g40vnf3mplhc8zsn3lwzv8z363iq1hx3a4dizf65fasl7bb6") (f (quote (("default" "ethers" "tracing")))) (s 2) (e (quote (("tracing" "dep:tracing") ("ethers" "dep:ethers" "dep:async-trait" "dep:thiserror"))))))

