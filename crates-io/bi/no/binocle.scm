(define-module (crates-io bi no binocle) #:use-module (crates-io))

(define-public crate-binocle-0.1.0 (c (n "binocle") (v "0.1.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.12") (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pixels") (r "^0.6") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.10") (d #t) (k 0)))) (h "1c1hlgbdz44w3qzziky2fjd6350335309hq2xnkmlnnb3gs8m72c") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize"))))))

(define-public crate-binocle-0.1.1 (c (n "binocle") (v "0.1.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.12") (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pixels") (r "^0.6") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.10") (d #t) (k 0)))) (h "0kw06q7dfby3as7n576gpi2radgsbqnk1vjj0bh6c4ds7xdhp6ng") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize"))))))

(define-public crate-binocle-0.1.2 (c (n "binocle") (v "0.1.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.13") (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "pixels") (r "^0.7") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.10") (d #t) (k 0)))) (h "1g7mri6h6cj6cw6wy3xnwad2dsl7gysyid0x5kkk8y4qf36hp543") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize"))))))

(define-public crate-binocle-0.2.0 (c (n "binocle") (v "0.2.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0.0-beta.5") (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.13") (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "pixels") (r "^0.7") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.10") (d #t) (k 0)))) (h "1234rfprsrhcqj9gfmbwjip07bd48ng86f10d3k99qvfp48d7q8j") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize")))) (r "1.56")))

(define-public crate-binocle-0.3.0 (c (n "binocle") (v "0.3.0") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.14") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.13") (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.10") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "pixels") (r "^0.7") (d #t) (k 0)) (d (n "winit") (r "^0.25") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.10") (d #t) (k 0)))) (h "0c0lkp67xvzap979h1k3hbp0h1smqk0kd1y92rfns49pcl9jxbjc") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize")))) (r "1.56")))

(define-public crate-binocle-0.3.1 (c (n "binocle") (v "0.3.1") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.15") (d #t) (k 0)) (d (n "egui_wgpu_backend") (r "^0.14") (d #t) (k 0)) (d (n "egui_winit_platform") (r "^0.12") (d #t) (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "pixels") (r "^0.7") (d #t) (k 0)) (d (n "winit") (r "^0.26") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.11") (d #t) (k 0)))) (h "131ni7lzbz1m5jlal1r1226skr3d0pasqa67hdq1l1wjlcc2kk6n") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize")))) (r "1.66")))

(define-public crate-binocle-0.3.2 (c (n "binocle") (v "0.3.2") (d (list (d (n "anyhow") (r "^1.0") (d #t) (k 0)) (d (n "clap") (r "^3.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "colorgrad") (r "^0.5") (d #t) (k 0)) (d (n "egui") (r "^0.22") (d #t) (k 0)) (d (n "egui-wgpu") (r "^0.22.0") (d #t) (k 0)) (d (n "egui-winit") (r "^0.22") (k 0)) (d (n "env_logger") (r "^0.9") (d #t) (k 0)) (d (n "humansize") (r "^1.1") (d #t) (k 0)) (d (n "log") (r "^0.4") (d #t) (k 0)) (d (n "memmap2") (r "^0.5.0") (d #t) (k 0)) (d (n "pixels") (r "^0.13") (d #t) (k 0)) (d (n "proc-macro2") (r "^1.0.69") (d #t) (k 0)) (d (n "winit") (r "^0.28") (d #t) (k 0)) (d (n "winit_input_helper") (r "^0.14") (d #t) (k 0)))) (h "0p18y39q0j53rqql3fll3i3jvbyw5kpk55m10aqmnfhw5przdxig") (f (quote (("optimize" "log/release_max_level_warn") ("default" "optimize")))) (r "1.66")))

