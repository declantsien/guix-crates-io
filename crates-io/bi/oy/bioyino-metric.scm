(define-module (crates-io bi oy bioyino-metric) #:use-module (crates-io))

(define-public crate-bioyino-metric-0.1.0 (c (n "bioyino-metric") (v "0.1.0") (d (list (d (n "bytes") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.10") (d #t) (k 0)) (d (n "capnpc") (r "^0.10") (d #t) (k 1)) (d (n "combine") (r "^3.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "1bfc7m5pqdl4w7klhdqhrzqxg2b2p1jgcl1pxydn63cnxn33d51l")))

(define-public crate-bioyino-metric-0.2.0 (c (n "bioyino-metric") (v "0.2.0") (d (list (d (n "bytes") (r "^0.4") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.10") (d #t) (k 0)) (d (n "capnpc") (r "^0.10") (d #t) (k 1)) (d (n "combine") (r "^3.6") (d #t) (k 0)) (d (n "failure") (r "^0.1") (d #t) (k 0)) (d (n "failure_derive") (r "^0.1") (d #t) (k 0)) (d (n "lazysort") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (d #t) (k 0)) (d (n "serde_derive") (r "^1.0") (d #t) (k 0)))) (h "0gwwmdz6d2lc8hlyn3prcl3ls66wi3i1hx5izdd4b9b3ls0f2z7n")))

(define-public crate-bioyino-metric-0.3.1 (c (n "bioyino-metric") (v "0.3.1") (d (list (d (n "bytes") (r "^0.5") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.13") (d #t) (k 0)) (d (n "capnpc") (r "^0.13") (d #t) (k 1)) (d (n "combine") (r "^4.0") (d #t) (k 0)) (d (n "lazysort") (r "^0.2") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "017pr2va13zz85yg1l0a7zrkg09riahx059ws70yygrzfv22g6fq")))

(define-public crate-bioyino-metric-0.5.0 (c (n "bioyino-metric") (v "0.5.0") (d (list (d (n "bytes") (r "^1.0") (f (quote ("serde"))) (d #t) (k 0)) (d (n "capnp") (r "^0.14") (d #t) (k 0)) (d (n "capnpc") (r "^0.14") (d #t) (k 1)) (d (n "combine") (r "^4.3") (d #t) (k 0)) (d (n "lazysort") (r "^0.2") (d #t) (k 0)) (d (n "lexical-core") (r "^0.8") (d #t) (k 0)) (d (n "num-traits") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^1.0") (f (quote ("derive"))) (d #t) (k 0)) (d (n "thiserror") (r "^1.0") (d #t) (k 0)))) (h "0zv9qzhnq7mn42caxcvgfxw2rgxcwbwahspsk37n6i2dk01qfds4")))

