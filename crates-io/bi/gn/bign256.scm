(define-module (crates-io bi gn bign256) #:use-module (crates-io))

(define-public crate-bign256-0.13.0 (c (n "bign256") (v "0.13.0") (d (list (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "elliptic-curve") (r "^0.13.5") (f (quote ("hazmat" "sec1"))) (d #t) (k 0)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "primeorder") (r "^0.13.1") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)))) (h "06qdbv9h8vxrb2sjx8l72gyssad8qv3ck5pl81m75ma4hnydxcv4") (f (quote (("std" "alloc" "elliptic-curve/std") ("pkcs8" "elliptic-curve/pkcs8") ("default" "arithmetic" "pkcs8" "std") ("alloc" "elliptic-curve/alloc")))) (s 2) (e (quote (("arithmetic" "dep:primeorder" "elliptic-curve/arithmetic")))) (r "1.65")))

(define-public crate-bign256-0.13.1 (c (n "bign256") (v "0.13.1") (d (list (d (n "belt-hash") (r "^0.1.0") (o #t) (k 0)) (d (n "criterion") (r "^0.5") (d #t) (k 2)) (d (n "crypto-bigint") (r "^0.5.5") (o #t) (d #t) (k 0)) (d (n "elliptic-curve") (r "^0.13.8") (f (quote ("hazmat" "sec1"))) (d #t) (k 0)) (d (n "hex") (r "^0.4") (d #t) (k 2)) (d (n "hex-literal") (r "^0.4") (d #t) (k 2)) (d (n "primeorder") (r "^0.13.5") (o #t) (d #t) (k 0)) (d (n "proptest") (r "^1") (d #t) (k 2)) (d (n "rand_core") (r "^0.6") (f (quote ("getrandom"))) (d #t) (k 2)) (d (n "rfc6979") (r "^0.4") (o #t) (d #t) (k 0)) (d (n "signature") (r "^2") (o #t) (d #t) (k 0)))) (h "1zrfjb9kj80hk4gi1p76mvjnnj9kzzv1xvgcqwc5akjp8faf0q50") (f (quote (("pkcs8" "elliptic-curve/pkcs8") ("default" "arithmetic" "pkcs8" "std" "dsa")))) (s 2) (e (quote (("std" "alloc" "elliptic-curve/std" "signature?/std") ("dsa" "arithmetic" "dep:rfc6979" "dep:signature" "dep:belt-hash" "dep:crypto-bigint") ("arithmetic" "dep:primeorder" "elliptic-curve/arithmetic") ("alloc" "elliptic-curve/alloc" "primeorder?/alloc")))) (r "1.65")))

