(define-module (crates-io bi om biome_js_parser) #:use-module (crates-io))

(define-public crate-biome_js_parser-0.0.1 (c (n "biome_js_parser") (v "0.0.1") (d (list (d (n "biome_console") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_parser") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "1v3fh6k6a8dyvi8bhv529cc2v2vf5kzvqcbwfns4p8x8297i3451") (f (quote (("tests") ("serde" "biome_js_syntax/serde")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.0.2 (c (n "biome_js_parser") (v "0.0.2") (d (list (d (n "biome_console") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_parser") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.2") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0f2l8qz2kgg19ngf4w006dyv0yyh5zni85gkmfsml6l9kxwv3h2r") (f (quote (("tests") ("serde" "biome_js_syntax/serde")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.1.0 (c (n "biome_js_parser") (v "0.1.0") (d (list (d (n "biome_console") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_parser") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.1.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "1n1v8qalzfcaqqj0k19p3zc8q279ldq8a581dvmkz5480p1fh49y") (f (quote (("tests") ("serde" "biome_js_syntax/serde")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.3.1 (c (n "biome_js_parser") (v "0.3.1") (d (list (d (n "biome_console") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_parser") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.3.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-bom") (r "^2.0.3") (d #t) (k 0)))) (h "13p1bvzgl4m89r4nlmy21r2aws7q79y1kh9wr1r2qqzkrqv31vvw") (f (quote (("tests") ("serde" "biome_js_syntax/serde")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.4.0 (c (n "biome_js_parser") (v "0.4.0") (d (list (d (n "biome_console") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_parser") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.4.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-bom") (r "^2.0.3") (d #t) (k 0)))) (h "0yf82h7yc25fdfzdl3wchm523qr3n1x2rmcqm0y635j4qca29kaf") (f (quote (("tests") ("serde" "biome_js_syntax/serde")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.5.0 (c (n "biome_js_parser") (v "0.5.0") (d (list (d (n "biome_console") (r "^0.5.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.5.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.5.0") (d #t) (k 0)) (d (n "biome_parser") (r "^0.5.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.0") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.5.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-bom") (r "^2.0.3") (d #t) (k 0)))) (h "0qmhpja5y84awdy4db5z4mp7rsv7shb4s325aigzdakxak73bar0") (f (quote (("tests") ("serde" "biome_js_syntax/schema")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.5.5 (c (n "biome_js_parser") (v "0.5.5") (d (list (d (n "biome_console") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_parser") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.5.5") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-bom") (r "^2.0.3") (d #t) (k 0)))) (h "08vyalvwkiialmk6r14n3dfqiwx8yg7kfjfv5gfzvj8ncq23q62n") (f (quote (("tests") ("serde" "biome_js_syntax/schema")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.5.6 (c (n "biome_js_parser") (v "0.5.6") (d (list (d (n "biome_console") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_parser") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.5.6") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-bom") (r "^2.0.3") (d #t) (k 0)))) (h "1sp9amjwghy8sxpp15rmwlp93shipfjbv50ma95v5dn3gkxmy339") (f (quote (("tests") ("serde" "biome_js_syntax/schema")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

(define-public crate-biome_js_parser-0.5.7 (c (n "biome_js_parser") (v "0.5.7") (d (list (d (n "biome_console") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_parser") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.5.7") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "drop_bomb") (r "^0.1.5") (d #t) (k 0)) (d (n "expect-test") (r "^1.2.2") (d #t) (k 2)) (d (n "indexmap") (r "^1.9.3") (d #t) (k 0)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-bom") (r "^2.0.3") (d #t) (k 0)))) (h "0bizcwanpmzg5m4qi9jg90wqj5ck1b17m3yifvflhqk4hw1vvskj") (f (quote (("tests") ("serde" "biome_js_syntax/schema")))) (s 2) (e (quote (("schemars" "dep:schemars"))))))

