(define-module (crates-io bi om biome_js_analyze) #:use-module (crates-io))

(define-public crate-biome_js_analyze-0.0.1 (c (n "biome_js_analyze") (v "0.0.1") (d (list (d (n "biome_analyze") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_aria") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_console") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_control_flow") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_semantic") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_json_factory") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.1") (d #t) (k 0)) (d (n "bpaf") (r "^0.9.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "1c469f01llq2258cl8p2vcl62hdfyx83kqc8yyq1jgsnyhv3kd85") (f (quote (("schema" "schemars" "biome_deserialize/schema"))))))

(define-public crate-biome_js_analyze-0.0.2 (c (n "biome_js_analyze") (v "0.0.2") (d (list (d (n "biome_analyze") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_aria") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_console") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_control_flow") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_semantic") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_json_factory") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.2") (d #t) (k 0)) (d (n "bpaf") (r "^0.9.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "055l8x8nj31rjrbzg7yvrqsyzym4rgvla9qdan4v0j1fb70wwy06") (f (quote (("schema" "schemars" "biome_deserialize/schema"))))))

(define-public crate-biome_js_analyze-0.1.0 (c (n "biome_js_analyze") (v "0.1.0") (d (list (d (n "biome_analyze") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_aria") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_console") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_control_flow") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_semantic") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_json_factory") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.1.0") (d #t) (k 0)) (d (n "bpaf") (r "^0.9.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0r3bglr36xpx08bir2m7yz3abgvwgrkww1s036pn6ny9ssbdqlv9") (f (quote (("schema" "schemars" "biome_deserialize/schema"))))))

(define-public crate-biome_js_analyze-0.3.1 (c (n "biome_js_analyze") (v "0.3.1") (d (list (d (n "biome_analyze") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_aria") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_console") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_control_flow") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_semantic") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_json_factory") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.3.1") (d #t) (k 0)) (d (n "bpaf") (r "^0.9.5") (f (quote ("derive"))) (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0qn26lqc6yj0nxznj8l4slyk75500rz00dc5nvccrgcnfjii9j1y") (f (quote (("schema" "schemars" "biome_deserialize/schema"))))))

(define-public crate-biome_js_analyze-0.4.0 (c (n "biome_js_analyze") (v "0.4.0") (d (list (d (n "biome_analyze") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_aria") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_console") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_control_flow") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_semantic") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_json_factory") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.4.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0dxsiqkc9mbwc81kaapnr6rzsqks4lbfs7hhxmgfndil1gw1cvjd") (f (quote (("schema" "schemars" "biome_deserialize/schema"))))))

(define-public crate-biome_js_analyze-0.5.7 (c (n "biome_js_analyze") (v "0.5.7") (d (list (d (n "biome_analyze") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_aria") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_console") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_control_flow") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_deserialize_macros") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_semantic") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_factory") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_project") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.5.7") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "log") (r "^0.4.20") (d #t) (k 0)) (d (n "natord") (r "^1.0.9") (d #t) (k 0)) (d (n "roaring") (r "^0.10.1") (d #t) (k 0)) (d (n "rustc-hash") (r "^1.1.0") (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)))) (h "0i3daxvzqbxixrhdppjl8clv2y59a1kyn4q1mnym9nqhpy0vzpf0") (f (quote (("schema" "schemars" "biome_deserialize/schema"))))))

