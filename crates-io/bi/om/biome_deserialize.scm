(define-module (crates-io bi om biome_deserialize) #:use-module (crates-io))

(define-public crate-biome_deserialize-0.0.1 (c (n "biome_deserialize") (v "0.0.1") (d (list (d (n "biome_console") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "169f11p4cx5scfzabqyh871as3p9aiv37gsamjmjszp735fi1xzg") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.0.2 (c (n "biome_deserialize") (v "0.0.2") (d (list (d (n "biome_console") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.2") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0a5f9cl3k43n9q7l4y6lavbwvgwib1vpz2ryjh0v0x6f6g2lrs9p") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.1.0 (c (n "biome_deserialize") (v "0.1.0") (d (list (d (n "biome_console") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.1.0") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "1sn31628if8rbhvicqk53ywi0wg4inw3mw7r9cimfn4wdfk20h5d") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.3.1 (c (n "biome_deserialize") (v "0.3.1") (d (list (d (n "biome_console") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.3.1") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0jgh0zdn7nf2sz7w7v07dg2vs04q2hvi7irpr1fv0m910cmrr5m9") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.4.0 (c (n "biome_deserialize") (v "0.4.0") (d (list (d (n "biome_console") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.4.0") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0a1b0z7n5sdlc51wkhf586rrmigajcbpvc5m04r7fbk7vfrsw3ik") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.5.5 (c (n "biome_deserialize") (v "0.5.5") (d (list (d (n "biome_console") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_deserialize_macros") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.5.5") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.5") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0pcq25mync73p5mmqw2wbkrsgagnw9yan0hgaq8vyp70m6dlynl6") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.5.6 (c (n "biome_deserialize") (v "0.5.6") (d (list (d (n "biome_console") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_deserialize_macros") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.5.6") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.6") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0i91k5kmxrpqvi7n824hlj8jgyffjsj41z9xn53mszijqrbyd3w1") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.5.7 (c (n "biome_deserialize") (v "0.5.7") (d (list (d (n "biome_console") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_deserialize_macros") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.7") (d #t) (k 0)) (d (n "bitflags") (r "^2.3.1") (d #t) (k 0)) (d (n "indexmap") (r "^1.9.3") (f (quote ("serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)))) (h "0cknnl6czdxq3lzrr31gi24q83d6q8s5dcszkwb4hlah1lk46i2v") (f (quote (("schema" "schemars" "schemars/indexmap"))))))

(define-public crate-biome_deserialize-0.6.0 (c (n "biome_deserialize") (v "0.6.0") (d (list (d (n "biome_console") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_deserialize_macros") (r "^0.6.0") (d #t) (k 0)) (d (n "biome_diagnostics") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_parser") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.7") (d #t) (k 0)) (d (n "bitflags") (r "^2.5.0") (d #t) (k 0)) (d (n "indexmap") (r "^2.2.6") (f (quote ("serde" "serde"))) (d #t) (k 0)) (d (n "schemars") (r "^0.8.19") (f (quote ("indexmap2" "smallvec"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.201") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1.0.117") (o #t) (d #t) (k 0)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new" "serde"))) (o #t) (d #t) (k 0)))) (h "1zpkb4zab4wrgpn5m356mcrl4bbjf6y9wwhdhpc5wnd0ikf1kxnn") (f (quote (("serde" "serde_json") ("schema" "schemars" "schemars/indexmap")))) (s 2) (e (quote (("smallvec" "dep:smallvec"))))))

