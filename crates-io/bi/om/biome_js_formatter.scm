(define-module (crates-io bi om biome_js_formatter) #:use-module (crates-io))

(define-public crate-biome_js_formatter-0.0.1 (c (n "biome_js_formatter") (v "0.0.1") (d (list (d (n "biome_deserialize") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_diagnostics_categories") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_formatter") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.1") (d #t) (k 0)) (d (n "biome_text_size") (r "^0.0.3") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0lkd33xfcd0p5dkaj514x02m4rarjsziigzy7snlz6vcp8yr7wxf") (s 2) (e (quote (("serde" "dep:serde" "schemars"))))))

(define-public crate-biome_js_formatter-0.0.2 (c (n "biome_js_formatter") (v "0.0.2") (d (list (d (n "biome_deserialize") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_diagnostics_categories") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_formatter") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.0.2") (d #t) (k 0)) (d (n "biome_text_size") (r "^0.0.4") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "1md3cvjrxfangv09qa8zgyknl2nwk3n1vijc49lp85lj928w8s79") (s 2) (e (quote (("serde" "dep:serde" "schemars"))))))

(define-public crate-biome_js_formatter-0.1.0 (c (n "biome_js_formatter") (v "0.1.0") (d (list (d (n "biome_deserialize") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_diagnostics_categories") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_formatter") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.1.0") (d #t) (k 0)) (d (n "biome_text_size") (r "^0.1.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.164") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.99") (d #t) (k 2)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0h523zlbpqps8snm4qqmc94k3cn9ajahxjj5xkn6rxk7hqjw14hi") (s 2) (e (quote (("serde" "dep:serde" "schemars"))))))

(define-public crate-biome_js_formatter-0.3.1 (c (n "biome_js_formatter") (v "0.3.1") (d (list (d (n "biome_console") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_diagnostics_categories") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_formatter") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_js_unicode_table") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.3.1") (d #t) (k 0)) (d (n "biome_text_size") (r "^0.3.1") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "0lfvwp8i3i9zc5fy08dkx6sxcfzs3qwwkgmzm5l733736s4bq470") (s 2) (e (quote (("serde" "dep:serde" "schemars"))))))

(define-public crate-biome_js_formatter-0.4.0 (c (n "biome_js_formatter") (v "0.4.0") (d (list (d (n "biome_console") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_diagnostics_categories") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_formatter") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_text_size") (r "^0.4.0") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.4.0") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "072pf1zfl7lfvwhkdp7smq703910j9wmv8gy46a61hvkl571bqyh") (s 2) (e (quote (("serde" "dep:serde" "schemars"))))))

(define-public crate-biome_js_formatter-0.5.7 (c (n "biome_js_formatter") (v "0.5.7") (d (list (d (n "biome_console") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_deserialize") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_deserialize_macros") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_diagnostics_categories") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_formatter") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_factory") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_js_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_json_syntax") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_rowan") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_text_size") (r "^0.5.7") (d #t) (k 0)) (d (n "biome_unicode_table") (r "^0.5.7") (d #t) (k 0)) (d (n "cfg-if") (r "^1.0.0") (d #t) (k 0)) (d (n "countme") (r "^3.0.1") (f (quote ("enable"))) (d #t) (k 2)) (d (n "iai") (r "^0.1.1") (d #t) (k 2)) (d (n "insta") (r "^1.29.0") (f (quote ("glob"))) (d #t) (k 2)) (d (n "quickcheck") (r "^1.0.3") (d #t) (k 2)) (d (n "quickcheck_macros") (r "^1.0.0") (d #t) (k 2)) (d (n "schemars") (r "^0.8.12") (o #t) (d #t) (k 0)) (d (n "serde") (r "^1.0.163") (f (quote ("derive" "derive"))) (o #t) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 2)) (d (n "serde_json") (r "^1.0.96") (d #t) (k 2)) (d (n "smallvec") (r "^1.10.0") (f (quote ("union" "const_new"))) (d #t) (k 0)) (d (n "tracing") (r "^0.1.37") (f (quote ("std"))) (k 0)) (d (n "unicode-width") (r "^0.1.9") (d #t) (k 0)))) (h "1f1vzwn32pnk241hah8rgydiag57xh211sm9lxamb94ggavgihcb") (s 2) (e (quote (("serde" "dep:serde" "schemars"))))))

