(define-module (crates-io bi tc bitcoin-scripting) #:use-module (crates-io))

(define-public crate-bitcoin-scripting-0.1.10-alpha.0 (c (n "bitcoin-scripting") (v "0.1.10-alpha.0") (d (list (d (n "bitcoin-amt") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-cuckoo-cache") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-hash") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-key") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-mem") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-secp256k1") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-serialize") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-sha256") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-string") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-univalue") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-version") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoinsecp256k1-keys") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "serde_derive" "rc"))) (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.10-alpha.0") (d #t) (k 1)))) (h "0pql5zz4knwvx0ngnvg24332nv0kc21165z9j17gcmasksshbmjf")))

(define-public crate-bitcoin-scripting-0.1.12-alpha.0 (c (n "bitcoin-scripting") (v "0.1.12-alpha.0") (d (list (d (n "bitcoin-amt") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-cuckoo-cache") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-hash") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-key") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-mem") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-secp256k1") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-serialize") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-sha256") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-string") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-univalue") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-version") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoinsecp256k1-keys") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "serde_derive" "rc"))) (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.12-alpha.0") (d #t) (k 1)))) (h "02ycc2p732yabcz7136ih9bx7qwjlbmf7wqn8ajcfsk99yprkqmc")))

(define-public crate-bitcoin-scripting-0.1.13-alpha.0 (c (n "bitcoin-scripting") (v "0.1.13-alpha.0") (d (list (d (n "bitcoin-amt") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-cuckoo-cache") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-hash") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-key") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-mem") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-secp256k1") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-serialize") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-sha256") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-string") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-univalue") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-version") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoinsecp256k1-keys") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "serde_derive" "rc"))) (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.13-alpha.0") (d #t) (k 1)))) (h "052vxxzvbh6kn9awxyjx54ps53l1zryzglprjpmfiv4gni4cimxs")))

(define-public crate-bitcoin-scripting-0.1.14-alpha.0 (c (n "bitcoin-scripting") (v "0.1.14-alpha.0") (d (list (d (n "bitcoin-amt") (r "^0.1.14-alpha.0") (d #t) (k 0)) (d (n "bitcoin-cuckoo-cache") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-hash") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-key") (r "^0.1.14-alpha.0") (d #t) (k 0)) (d (n "bitcoin-mem") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-secp256k1") (r "^0.1.14-alpha.0") (d #t) (k 0)) (d (n "bitcoin-serialize") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-sha256") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-string") (r "^0.1.14-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-univalue") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-version") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoinsecp256k1-keys") (r "^0.1.14-alpha.0") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "serde_derive" "rc"))) (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.13-alpha.0") (d #t) (k 1)))) (h "0i7ykv7g8yxp937q0caac0qyh50hz9lcmmw82wn53q7m4sg3jwlx")))

(define-public crate-bitcoin-scripting-0.1.16-alpha.0 (c (n "bitcoin-scripting") (v "0.1.16-alpha.0") (d (list (d (n "bitcoin-amt") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-cuckoo-cache") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-hash") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-key") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-mem") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-secp256k1") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-serialize") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-sha256") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-string") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-univalue") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-version") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoinsecp256k1-keys") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "modular-bitfield") (r "^0.11.2") (d #t) (k 0)) (d (n "serde") (r "^1.0.152") (f (quote ("derive" "serde_derive" "rc"))) (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.16-alpha.0") (d #t) (k 1)))) (h "0rjih02y672i4bzw70d6saf3778b8b6xx7a22wqclm5v5xzw50bx")))

