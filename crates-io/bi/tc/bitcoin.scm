(define-module (crates-io bi tc bitcoin) #:use-module (crates-io))

(define-public crate-bitcoin-0.2.0 (c (n "bitcoin") (v "0.2.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.2") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "03izar0iw3bpcw24c03vl8q4645ynqmsajx6dl49v4yvh1hjk2cn")))

(define-public crate-bitcoin-0.3.1 (c (n "bitcoin") (v "0.3.1") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1qdvjz9mxy7khbj26qknj5da3kylxfqrwl1f90fn3qz0zgx90djr")))

(define-public crate-bitcoin-0.3.2 (c (n "bitcoin") (v "0.3.2") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "11g04zayx8riwjv70pdcga6fz33c92vyfzk00l3agcdxijl3iss6")))

(define-public crate-bitcoin-0.3.3 (c (n "bitcoin") (v "0.3.3") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0y8l01rjp7w0c1mynwaxaxfjl27vhndb8qz5fsk60f0pfwpz8zvw")))

(define-public crate-bitcoin-0.3.4 (c (n "bitcoin") (v "0.3.4") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0601j6d1hrvqjai7r9vd8dlk3x1vxqinwfjvakdmcd0bzr023pq1")))

(define-public crate-bitcoin-0.3.5 (c (n "bitcoin") (v "0.3.5") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0zcx9hbq5b1jbxls3jfjg671fsvl9y1hidgavksa105kv4mgc7dr")))

(define-public crate-bitcoin-0.3.6 (c (n "bitcoin") (v "0.3.6") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1wz3zb9wnfbqz9wdci4qisb23iyc9frk7mlx627fdhhq94ln19zn")))

(define-public crate-bitcoin-0.3.7 (c (n "bitcoin") (v "0.3.7") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0igydkddm4744h5mx76m1rxa98sz4qaxrldlzrhaaqiy805h6jca")))

(define-public crate-bitcoin-0.3.8 (c (n "bitcoin") (v "0.3.8") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0ijk1nw0b98p3qyk1l7qzg2fxbv0pry8jr4v87b29x6wngq7b4my")))

(define-public crate-bitcoin-0.3.9 (c (n "bitcoin") (v "0.3.9") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.3") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1s64ffl5nhaip5c07g866mjvxr888f3mmps5679h2ibw1x918waz")))

(define-public crate-bitcoin-0.3.10 (c (n "bitcoin") (v "0.3.10") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1bw7xvd6s8dliypxxqh46ybpwxmg5r3c1hpnr6dxv698jalzir1r")))

(define-public crate-bitcoin-0.4.0 (c (n "bitcoin") (v "0.4.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.4") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0b23gjk5bcczm4wy229j4h8c1sxbbzl08fzf888r3qx4zka0dk3v")))

(define-public crate-bitcoin-0.4.1 (c (n "bitcoin") (v "0.4.1") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "serde_json") (r "^0.6") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "18zd30hj7jzblrgi761z0dar2qdj7gw5ckhypsdh7m3faj8s7xi1")))

(define-public crate-bitcoin-0.4.2 (c (n "bitcoin") (v "0.4.2") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0d1clddfqng15g18iww9rk83vg0zfm3qakrzsais3hpjl4vdl0gq")))

(define-public crate-bitcoin-0.4.4 (c (n "bitcoin") (v "0.4.4") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0314b67lw92977d2m3mwqbiqkys7yca6m0f9av9mr345n7xwrr18")))

(define-public crate-bitcoin-0.4.5 (c (n "bitcoin") (v "0.4.5") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "eventual") (r "^0.1") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "06psxwi6rcaj2ihdxhs7lkrvw525mcjy8xfma65hclx64z0wmi20")))

(define-public crate-bitcoin-0.5.0 (c (n "bitcoin") (v "0.5.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "05fkxbhbf53aca8572ycdixhh6hzpkj55r063y7vr2xn3gvhxk8i")))

(define-public crate-bitcoin-0.5.1 (c (n "bitcoin") (v "0.5.1") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "155ykz1ijwgb4ja4zn1yyb0qb2r4j1pcsbm30hbbrg6skjw1vngp")))

(define-public crate-bitcoin-0.5.2 (c (n "bitcoin") (v "0.5.2") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1pg06d60hm8aab5pbcvcs5jj3dxym5493nhcqagk6pjm0c6ndn10")))

(define-public crate-bitcoin-0.5.3 (c (n "bitcoin") (v "0.5.3") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1cg2q1xrxsasy0jq81pnl2r9lmyps28xprvv139z53mw6kmzxbv2")))

(define-public crate-bitcoin-0.5.4 (c (n "bitcoin") (v "0.5.4") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (d #t) (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "09zavsdqy7v99p2s06vk7nmavqr4nimc7qm7xzkp0qcjx48wkhza")))

(define-public crate-bitcoin-0.5.5 (c (n "bitcoin") (v "0.5.5") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0rvr56nrkk4dbsi8d27r8wfrpzqmlv0s6jd4kvy2chysxs3vrb7k")))

(define-public crate-bitcoin-0.5.6 (c (n "bitcoin") (v "0.5.6") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "05plwx50nyvkppxqwilnvzf56h9qycdxw4kyv3zdb8wlv3krhpi7")))

(define-public crate-bitcoin-0.5.7 (c (n "bitcoin") (v "0.5.7") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "06zhbcarrb36bakq7hd5imzh1g5mfdyc3fhas7mkbxymz5zc7529")))

(define-public crate-bitcoin-0.5.8 (c (n "bitcoin") (v "0.5.8") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "05y7ky0n5y09znvhzkbzc9bpwzrn654nm9m57ywwivp1n0rvv481")))

(define-public crate-bitcoin-0.5.9 (c (n "bitcoin") (v "0.5.9") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "02w1c79pn7wh0kqlcxc6w5cw9r89gjvp9axrxp2fx6b7swnr50pq")))

(define-public crate-bitcoin-0.5.10 (c (n "bitcoin") (v "0.5.10") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0yx4m8kdi8fzd87xs5bw49mngrsqks8iclmlkv2l05qvg7qdmy1g")))

(define-public crate-bitcoin-0.5.11 (c (n "bitcoin") (v "0.5.11") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1h5dkbhy3f8ggwn27fnd2rxw0icfs2qvh8fsp9bgf24fwnkfq88r")))

(define-public crate-bitcoin-0.6.0 (c (n "bitcoin") (v "0.6.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0vyv4p8xs67cp04r6cg9mas15mb3i8jxjpypl82ah7cx7yhwssql") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.7.0 (c (n "bitcoin") (v "0.7.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "19jvkkfbqz1kj4h8y6ghnmnkcf8hjbx1qigrvp0s26702n9lfal1") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.7.1 (c (n "bitcoin") (v "0.7.1") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "116gg0k04mr8f37czdmrahxpykkb1idhb7h83v70680i6dkfxl7p") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.7.2 (c (n "bitcoin") (v "0.7.2") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "17v8i8d5ybm3by1q8x9128frbkrz1flvwv017zxjkwkrcz42klsr") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.7.3 (c (n "bitcoin") (v "0.7.3") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "1mvxrfpaq2jgwig2lr6ilbd5j54dpysc694sq5ykflc6l2b6arkm") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.7.4 (c (n "bitcoin") (v "0.7.4") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)) (d (n "time") (r "^0.1") (d #t) (k 0)))) (h "0fbh18hkkbbavc57ygyr40akljxkihq1s8ww1dy25alg3m20hy8h") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.8.0 (c (n "bitcoin") (v "0.8.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "11vhng4x77h9a3jxj1vx3phgryym0459fn98fslckjnk5ykzvvfc") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.8.1 (c (n "bitcoin") (v "0.8.1") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "num_cpus") (r "^0.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.5") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1lf2bavfi2sr3q0nn2kdbdlk2dk8qayy46f6sc8yaqwhi9axz5vn") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.9.0 (c (n "bitcoin") (v "0.9.0") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0fwqcq2qds83ivk9fr42j3m0n8kk2jb6mfj071mj7hhkvdkqvapq") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.9.1 (c (n "bitcoin") (v "0.9.1") (d (list (d (n "byteorder") (r "^0.3") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.7") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0p346m57261j7gkd4hvq345m7hhhvj1pjb7d189370r4l90f2s1v") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.0 (c (n "bitcoin") (v "0.10.0") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0q80hsx1f8klcklj0xhlh1ygc7dfyhhbxvxihp4i0api5px821j0") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.1 (c (n "bitcoin") (v "0.10.1") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1a10v5gjhqm20lk9q4yykgrs9534mrrwfxnfcybnpmygmxfsygr3") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.2 (c (n "bitcoin") (v "0.10.2") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1kcj4dwyl0053ljs0j0qj0p61w75brrpmrrxfapgsmidc3zwz7xa") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.3 (c (n "bitcoin") (v "0.10.3") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "17fbbaa8lym2fvl6pjmn0wpicsglidy1grydg9gvvbqprpzhxgw2") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.4 (c (n "bitcoin") (v "0.10.4") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "02s7fzraj9x22f66w9ba7p9mfzhf12s42m7mnmc9j6df6sx57gbv") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.5 (c (n "bitcoin") (v "0.10.5") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0n6alxvclj3x0xbzvzllkw7wp44bggm16jbnirp4wccjq8vcy9c7") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.6 (c (n "bitcoin") (v "0.10.6") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0adr6pldqjfszqigh28nmcvk1m49r9l26ix8ay3l1rn8d8n38z70") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.8 (c (n "bitcoin") (v "0.10.8") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1pwjrggknpvfld72l0ly36a6x46lwlwrz60vn1j20v2fk58q9rqh") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.10.9 (c (n "bitcoin") (v "0.10.9") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "jsonrpc") (r "^0.8") (k 0)) (d (n "num") (r "^0.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.6") (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "035v4vp6x0498xivg2vyzhpnmah2p09acysz8bv9vzc0m5k2v7y1") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.11.0 (c (n "bitcoin") (v "0.11.0") (d (list (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.8") (f (quote ("rand" "serde"))) (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1h1m14j6gx36wig2dmkwzy9n35z84b9a77c41l9iwfhaflfxcncv") (f (quote (("broken_consensus_code"))))))

(define-public crate-bitcoin-0.12.0 (c (n "bitcoin") (v "0.12.0") (d (list (d (n "bitcoin-bech32") (r "^0.5.1") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.9") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0md3qa9a92xs24c8wk84r43a5jj2l6w2022w80vngn0xzfqj3zmq") (f (quote (("fuzztarget" "secp256k1/fuzztarget") ("bitcoinconsenus" "bitcoinconsensus"))))))

(define-public crate-bitcoin-0.13.0 (c (n "bitcoin") (v "0.13.0") (d (list (d (n "bitcoin-bech32") (r "^0.5.1") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.9") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "0kkajgc2ysm81r3hldyaclr7gh7crxk2xgzvq9c978f7nnkn4h5y") (f (quote (("fuzztarget" "secp256k1/fuzztarget") ("bitcoinconsenus" "bitcoinconsensus"))))))

(define-public crate-bitcoin-0.13.1 (c (n "bitcoin") (v "0.13.1") (d (list (d (n "bitcoin-bech32") (r "^0.5.1") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.9") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1pasg4lslxqs595azk9vkiw6z4jxlsirv2bj8sss4jmd5z40vg4h") (f (quote (("fuzztarget" "secp256k1/fuzztarget") ("bitcoinconsenus" "bitcoinconsensus"))))))

(define-public crate-bitcoin-0.13.2 (c (n "bitcoin") (v "0.13.2") (d (list (d (n "bitcoin-bech32") (r "^0.5.1") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "rustc-serialize") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.9") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^0.6") (d #t) (k 0)) (d (n "strason") (r "^0.3") (d #t) (k 0)))) (h "1vma1b8012snmcxybbjw5jqbx8696fa72jwn8jvz3m411262adh0") (f (quote (("fuzztarget" "secp256k1/fuzztarget") ("bitcoinconsenus" "bitcoinconsensus"))))))

(define-public crate-bitcoin-0.14.0 (c (n "bitcoin") (v "0.14.0") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.11") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)))) (h "1a3pa2l8dvq7n75vc5ynz5sy42mdrizm1hfzylq23dwnb9pdvs0n") (f (quote (("serde-decimal" "serde" "strason") ("fuzztarget" "secp256k1/fuzztarget"))))))

(define-public crate-bitcoin-0.14.1 (c (n "bitcoin") (v "0.14.1") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.11") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)))) (h "08dd7a8jf7jahal1bzdhlpbvmaymzmrzdd3y23lmdn411p9vhcs4") (f (quote (("serde-decimal" "serde" "strason") ("fuzztarget" "secp256k1/fuzztarget"))))))

(define-public crate-bitcoin-0.14.2 (c (n "bitcoin") (v "0.14.2") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.11") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)))) (h "0c8dhd6qms5am36w5l3hmigmvf8xwxh0lzpq9jzhxkmdzka3fjw0") (f (quote (("serde-decimal" "serde" "strason") ("fuzztarget" "secp256k1/fuzztarget"))))))

(define-public crate-bitcoin-0.15.0 (c (n "bitcoin") (v "0.15.0") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.11") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)))) (h "00g3llgibf0pyxagq8mjl7909fxqzbpjhwhvvm6869g4pf73iqbq") (f (quote (("serde-decimal" "serde" "strason") ("fuzztarget" "secp256k1/fuzztarget"))))))

(define-public crate-bitcoin-0.15.1 (c (n "bitcoin") (v "0.15.1") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.1") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.11") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)))) (h "0hwxy4ck81n0vrpv307bzdf53s57hzng9pg7qh6jfzan9h1bvh5y") (f (quote (("serde-decimal" "serde" "strason") ("fuzztarget" "secp256k1/fuzztarget"))))))

(define-public crate-bitcoin-0.16.0 (c (n "bitcoin") (v "0.16.0") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "rust-crypto") (r "^0.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)))) (h "1xppnw79gyg3kds9dq9k1q9qdvxwx43h9z5mxdv2pv1f7xqi353z") (f (quote (("unstable") ("serde-decimal" "serde" "strason") ("fuzztarget" "secp256k1/fuzztarget"))))))

(define-public crate-bitcoin-0.17.0 (c (n "bitcoin") (v "0.17.0") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "14hzzsxphpl4h6wazi95cqrpdhivh7xixqiyrrf20q4903851kij") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("serde-decimal" "use-serde" "strason") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.17.1 (c (n "bitcoin") (v "0.17.1") (d (list (d (n "bitcoin-bech32") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "11h8vly8a8m8y15dwsj2vxzhjnl00ajrpya5r9kc6jizr2lsa181") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("serde-decimal" "use-serde" "strason") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.18.0 (c (n "bitcoin") (v "0.18.0") (d (list (d (n "bitcoin-bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "07bgbwzc1dbc6y18vbwir07p2l0283vzvxndvhhxmi40cjp786rq") (f (quote (("use-serde" "serde" "serde_test" "bitcoin_hashes/serde") ("unstable") ("serde-decimal" "use-serde" "strason") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.19.0 (c (n "bitcoin") (v "0.19.0") (d (list (d (n "bech32") (r "^0.7.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "^1") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "0i6z2qiw00f96bnh72lg27l4az4xvh8hbmns7mqlp5vdnszl5c3g") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.19.1 (c (n "bitcoin") (v "0.19.1") (d (list (d (n "bech32") (r "^0.7.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "= 1.0.98") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "= 1.0.98") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "0z4ga71m024s992yc04a4612lc750sajlmhvaws6gc6z9jy6cx50") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.19.2 (c (n "bitcoin") (v "0.19.2") (d (list (d (n "bech32") (r "^0.7.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "< 1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "18snkrd85hnwnqrbnz3mvlragx3cxy28jah3cwdwmhjh54zkblag") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.20.0 (c (n "bitcoin") (v "0.20.0") (d (list (d (n "bech32") (r "^0.7.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "< 1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1j129zjrm3vpxxrdc0hg5dncm23lz2lim0ldfd4ckq0c55jpqcq1") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.18.1 (c (n "bitcoin") (v "0.18.1") (d (list (d (n "bitcoin") (r "^0.19") (d #t) (k 0)) (d (n "bitcoin-bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0ax2jcf3wmn7v081zxyw6zv6n9659j5wqxc5qr8dddyvbh9x7sk4") (f (quote (("use-serde" "serde" "serde_test" "bitcoin_hashes/serde" "bitcoin/use-serde") ("unstable" "bitcoin/unstable") ("serde-decimal" "use-serde" "strason") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget" "bitcoin/fuzztarget"))))))

(define-public crate-bitcoin-0.18.2 (c (n "bitcoin") (v "0.18.2") (d (list (d (n "bitcoin-bech32") (r "^0.9.0") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.16") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "rand") (r "^0.3") (d #t) (k 0)) (d (n "secp256k1") (r "^0.12") (f (quote ("rand"))) (d #t) (k 0)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_test") (r "^1") (o #t) (d #t) (k 0)) (d (n "strason") (r "^0.4") (o #t) (k 0)) (d (n "tempfile") (r "^3") (d #t) (k 2)))) (h "0g945mgbbfs4vyxc8b9q4ambipf53pq2ca87b421gfhkyqspjpnd") (f (quote (("use-serde" "serde" "serde_test" "bitcoin_hashes/serde") ("unstable") ("serde-decimal" "use-serde" "strason") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.21.0 (c (n "bitcoin") (v "0.21.0") (d (list (d (n "bech32") (r "^0.7.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "byteorder") (r "^1.2") (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "< 1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "15a5zdbq6b16alqkprv7yk53bgj634p0in45was9280a0rizjd6w") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde") ("unstable") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.22.0 (c (n "bitcoin") (v "0.22.0") (d (list (d (n "bech32") (r "^0.7.1") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.17") (o #t) (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 2)) (d (n "secp256k1") (r "^0.15") (d #t) (k 0)) (d (n "secp256k1") (r "^0.15") (f (quote ("rand"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "< 1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "16nvp3i6jh4mb0mrpcf6hhp5mymv88zc5d07v4via0ig2zjd8fs8") (f (quote (("use-serde" "hex" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("rand" "secp256k1/rand") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.23.0 (c (n "bitcoin") (v "0.23.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.7.3") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-1") (o #t) (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (o #t) (d #t) (k 0)) (d (n "hex") (r "= 0.3.2") (d #t) (k 2)) (d (n "secp256k1") (r "^0.17.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.17.1") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "< 1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "^1") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "192vz0xmqjsfk47qr0n4mfa62riq50yixms5vfqgnz49zb9cjcka") (f (quote (("use-serde" "hex" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("rand" "secp256k1/rand-std") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.24.0 (c (n "bitcoin") (v "0.24.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.8.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-1") (o #t) (d #t) (k 0)) (d (n "hex") (r "=0.3.2") (d #t) (k 2)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.18.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.18.0") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "<1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1s40pbc2q5wgbywgx9w0s4miy5l70clblb1239acw3195jqswn35") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("rand" "secp256k1/rand-std") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.25.0 (c (n "bitcoin") (v "0.25.0") (d (list (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-1") (o #t) (d #t) (k 0)) (d (n "hex") (r "=0.3.2") (d #t) (k 2)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.19.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.19.0") (f (quote ("rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "<1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "104p4w23wjrn27sy845zd872s9n3rd1100kpvwshkrsfdqnjvj0k") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("rand" "secp256k1/rand-std") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget"))))))

(define-public crate-bitcoin-0.25.1 (c (n "bitcoin") (v "0.25.1") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-1") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.19.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.19.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "<1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1z0iz8a9h4nf1dlw2hbjwzzivhjgddzvx7a5rhhh62i1ql0vlbrh") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("secp-endomorphism" "secp256k1/endomorphism") ("rand" "secp256k1/rand-std") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget") ("default" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.25.2 (c (n "bitcoin") (v "0.25.2") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.0") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-1") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.19.0") (f (quote ("recovery"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.19.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (o #t) (d #t) (k 0)) (d (n "serde_derive") (r "<1.0.99") (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "15bhzg08066v1q0g0zfm4icpfgq68b9pardfrkmz91biy7lrpz5f") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("secp-endomorphism" "secp256k1/endomorphism") ("rand" "secp256k1/rand-std") ("fuzztarget" "secp256k1/fuzztarget" "bitcoin_hashes/fuzztarget") ("default" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.26.0 (c (n "bitcoin") (v "0.26.0") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.7.2") (d #t) (k 0)) (d (n "bitcoin_hashes") (r "^0.9.1") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-1") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20.0") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "03lfyiwqz9hbv6cxfy7vcd25f2rj93is53rv993yfrkd8j5gii8y") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("fuzztarget" "bitcoin_hashes/fuzztarget") ("default" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.26.1 (c (n "bitcoin") (v "0.26.1") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.7.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.9.6") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "177ffp5y3kl7q2f2bnxmafp8k66mvhkjjcsvvkbdmj0gz611259c") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("fuzztarget") ("default" "secp-recovery") ("base64" "base64-compat")))) (y #t)))

(define-public crate-bitcoin-0.26.2 (c (n "bitcoin") (v "0.26.2") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.7.3") (d #t) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.9.6") (d #t) (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20.2") (d #t) (k 0)) (d (n "secp256k1") (r "^0.20.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1wb3yqmrffa04b9zyq2zcx7gkwbgj99xih6599pm04iz5mkyqhk7") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("fuzztarget") ("default" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.27.0 (c (n "bitcoin") (v "0.27.0") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20.2") (k 0)) (d (n "secp256k1") (r "^0.20.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "0r77434c7qy6zzyan286i26v0giv77r76rnq41sia1g3v8kpnhla") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc") ("fuzztarget") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.27.1 (c (n "bitcoin") (v "0.27.1") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.20.2") (k 0)) (d (n "secp256k1") (r "^0.20.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "0kgyhcm2k40gw56av1ycnwzgsf6yfk8d6b9imqamqb34v5mdyhcs") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc") ("fuzztarget") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.28.0-rc.1 (c (n "bitcoin") (v "0.28.0-rc.1") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.21.2") (k 0)) (d (n "secp256k1") (r "^0.21.2") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "0li1a4ryql6if283ylqr5binci9lgkm8vlimgaffvp2nxzw1j6fj") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.28.0-rc.2 (c (n "bitcoin") (v "0.28.0-rc.2") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.22.0") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1zqlyhyf2ifns2vvcnnpfqq0bpq1q35svrvwalhh9vl9l7lc3kgv") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.28.0 (c (n "bitcoin") (v "0.28.0") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.22.0") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1x3cypfawkxdb0ah1vp06wmi18w0cpsz4xdlw9f4ym67wflakcj2") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.28.1 (c (n "bitcoin") (v "0.28.1") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.22.0") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "0sm6qg6al47519sjgpfa734pnlmwvd9j8ryzhaw5bxmswqja7fq5") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.29.0 (c (n "bitcoin") (v "0.29.0") (d (list (d (n "actual-serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1v8zb23927r7mjivj1320zss3g54n583xl4yak0qwwabk0sxylxh") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery")))) (y #t)))

(define-public crate-bitcoin-0.29.1 (c (n "bitcoin") (v "0.29.1") (d (list (d (n "actual-serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "17dgsn4d4lm2gl9b72i94f4iwzpv6qp30s4idwwmzllan7invcww") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery"))))))

(define-public crate-bitcoin-0.29.2 (c (n "bitcoin") (v "0.29.2") (d (list (d (n "actual-serde") (r "^1") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.11.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "secp256k1") (r "^0.24.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "18x8n460ywrg6pf4kv3asa73aa281rkkzzq5nhy5y32v49cym506") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery"))))))

(define-public crate-bitcoin-0.28.2 (c (n "bitcoin") (v "0.28.2") (d (list (d (n "base64-compat") (r "^1.0.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.8.1") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin_hashes") (r "^0.10.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.19.0-3") (o #t) (d #t) (k 0)) (d (n "core2") (r "^0.3.0") (o #t) (k 0)) (d (n "hashbrown") (r "^0.8") (o #t) (d #t) (k 0)) (d (n "ryu") (r "<1.0.5") (d #t) (k 2)) (d (n "secp256k1") (r "^0.22.0") (k 0)) (d (n "secp256k1") (r "^0.22.0") (f (quote ("recovery" "rand-std"))) (d #t) (k 2)) (d (n "serde") (r "^1") (f (quote ("derive"))) (o #t) (d #t) (k 0)) (d (n "serde_json") (r "<1.0.45") (d #t) (k 2)) (d (n "serde_test") (r "^1") (d #t) (k 2)))) (h "1hym2zii2hfly9p1qiqq11vcrs427xyzv8b4g40r4x187ns0zlyl") (f (quote (("use-serde" "serde" "bitcoin_hashes/serde" "secp256k1/serde") ("unstable") ("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand" "secp256k1/rand-std") ("no-std" "hashbrown" "core2/alloc" "bitcoin_hashes/alloc" "secp256k1/alloc") ("default" "std" "secp-recovery") ("base64" "base64-compat"))))))

(define-public crate-bitcoin-0.30.0 (c (n "bitcoin") (v "0.30.0") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin-internals") (r "^0.1.0") (d #t) (k 0) (p "bitcoin-private")) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "0g2zcwfgzvr21aqnmmjpmqiwqijq2d8qgw18h4hgznbbiy24qvxk") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std" "bitcoin-internals/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std") ("rand" "secp256k1/rand") ("no-std" "core2" "bitcoin_hashes/alloc" "bitcoin_hashes/core2" "secp256k1/alloc") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.30.1 (c (n "bitcoin") (v "0.30.1") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin-internals") (r "^0.1.0") (d #t) (k 0) (p "bitcoin-private")) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "0xfxmfjd173ai2lawmpv52fi3z7jiakys3vays2p62mji5rgz6af") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std" "bitcoin-internals/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std") ("rand" "secp256k1/rand") ("no-std" "core2" "bitcoin_hashes/alloc" "bitcoin_hashes/core2" "secp256k1/alloc") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.31.0-rc1 (c (n "bitcoin") (v "0.31.0-rc1") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.10.0-beta") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hashes") (r "^0.13.0") (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.1.1") (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.2.0") (d #t) (k 0) (p "bitcoin-internals")) (d (n "secp256k1") (r "^0.28.0") (f (quote ("hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "0fmffd9y377fri1zwvd4f9r10bhr2fbq5xr1cir2n0bijbanlwzq") (f (quote (("std" "secp256k1/std" "hashes/std" "bech32/std" "internals/std" "hex/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("no-std" "core2" "hashes/alloc" "hashes/core2" "bech32/alloc" "secp256k1/alloc" "hex/alloc" "hex/core2") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.31.0-rc2 (c (n "bitcoin") (v "0.31.0-rc2") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.10.0-beta") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hashes") (r "^0.13.0") (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.1.1") (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.2.0") (d #t) (k 0) (p "bitcoin-internals")) (d (n "secp256k1") (r "^0.28.0") (f (quote ("hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "1blycygacpcqhqigmd3scsw9f66sa88k6vh6h0z1pfhq6b386vxk") (f (quote (("std" "secp256k1/std" "hashes/std" "bech32/std" "internals/std" "hex/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("no-std" "core2" "hashes/alloc" "hashes/core2" "bech32/alloc" "secp256k1/alloc" "hex/alloc" "hex/core2") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.31.0 (c (n "bitcoin") (v "0.31.0") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.10.0-beta") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hashes") (r "^0.13.0") (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.1.1") (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.2.0") (d #t) (k 0) (p "bitcoin-internals")) (d (n "secp256k1") (r "^0.28.0") (f (quote ("hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "0yzcvj5n00l6na25sfgxkankijg3vwa255kmaq865d21ncks0wsr") (f (quote (("std" "secp256k1/std" "hashes/std" "bech32/std" "internals/std" "hex/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("no-std" "core2" "hashes/alloc" "hashes/core2" "bech32/alloc" "secp256k1/alloc" "hex/alloc" "hex/core2") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.30.2 (c (n "bitcoin") (v "0.30.2") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.13.0") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.9.0") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoin-internals") (r "^0.1.0") (d #t) (k 0) (p "bitcoin-private")) (d (n "bitcoin_hashes") (r "^0.12.0") (k 0)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.0") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "secp256k1") (r "^0.27.0") (f (quote ("bitcoin_hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "0qn4s8kcybad606l1fmjqi2libdx36dq0gwx4fg1ir4qhl2aai8r") (f (quote (("std" "secp256k1/std" "bitcoin_hashes/std" "bech32/std" "bitcoin-internals/std") ("serde" "actual-serde" "bitcoin_hashes/serde" "secp256k1/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std") ("rand" "secp256k1/rand") ("no-std" "core2" "bitcoin_hashes/alloc" "bitcoin_hashes/core2" "secp256k1/alloc") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.31.1 (c (n "bitcoin") (v "0.31.1") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.10.0-beta") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hashes") (r "^0.13.0") (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.1.1") (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.2.0") (d #t) (k 0) (p "bitcoin-internals")) (d (n "secp256k1") (r "^0.28.0") (f (quote ("hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "0g77pfn959p4np065bibhshbg2zb8scx4cmyg8szn8azkg0g607x") (f (quote (("std" "secp256k1/std" "hashes/std" "bech32/std" "internals/std" "hex/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("no-std" "core2" "hashes/alloc" "hashes/core2" "bech32/alloc" "secp256k1/alloc" "hex/alloc" "hex/core2") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.31.2 (c (n "bitcoin") (v "0.31.2") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.10.0-beta") (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.20.2-0.5.0") (o #t) (k 0)) (d (n "core2") (r "^0.3.2") (f (quote ("alloc"))) (o #t) (k 0)) (d (n "hashes") (r "^0.13.0") (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.1.1") (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.2.0") (d #t) (k 0) (p "bitcoin-internals")) (d (n "secp256k1") (r "^0.28.0") (f (quote ("hashes"))) (k 0)) (d (n "serde_derive") (r "^1.0.103") (d #t) (k 2)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)))) (h "1bln596yhx3yqjyzb46izj81v0sqpbqa4fm3akm860745wy7i1bc") (f (quote (("std" "secp256k1/std" "hashes/std" "bech32/std" "internals/std" "hex/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("no-std" "core2" "hashes/alloc" "hashes/core2" "bech32/alloc" "secp256k1/alloc" "hex/alloc" "hex/core2") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std"))))))

(define-public crate-bitcoin-0.32.0-rc1 (c (n "bitcoin") (v "0.32.0-rc1") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base58") (r "^0.1.0") (k 0) (p "base58ck")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (f (quote ("alloc"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.105.0") (o #t) (k 0)) (d (n "hashes") (r "^0.14.0") (f (quote ("alloc" "io"))) (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.2.0") (f (quote ("alloc"))) (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.3.0") (f (quote ("alloc"))) (d #t) (k 0) (p "bitcoin-internals")) (d (n "io") (r "^0.1.1") (f (quote ("alloc"))) (k 0) (p "bitcoin-io")) (d (n "ordered") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.29.0") (f (quote ("hashes" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "units") (r "^0.1.0") (f (quote ("alloc"))) (k 0) (p "bitcoin-units")))) (h "0v2z4b661iw7z2fpf0h1svmd0rp9b9bl4x7ank65jyghknx9fk2s") (f (quote (("std" "base58/std" "bech32/std" "hashes/std" "hex/std" "internals/std" "io/std" "secp256k1/std" "units/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde" "units/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std")))) (r "1.56.1")))

(define-public crate-bitcoin-0.32.0 (c (n "bitcoin") (v "0.32.0") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base58") (r "^0.1.0") (k 0) (p "base58ck")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (f (quote ("alloc"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.105.0") (o #t) (k 0)) (d (n "hashes") (r "^0.14.0") (f (quote ("alloc" "io"))) (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.2.0") (f (quote ("alloc"))) (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.3.0") (f (quote ("alloc"))) (d #t) (k 0) (p "bitcoin-internals")) (d (n "io") (r "^0.1.1") (f (quote ("alloc"))) (k 0) (p "bitcoin-io")) (d (n "ordered") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.29.0") (f (quote ("hashes" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "units") (r "^0.1.0") (f (quote ("alloc"))) (k 0) (p "bitcoin-units")))) (h "1sn3cdv83br4nb2n9d8xbwasc1a23cqh9kkyy53455r019syfw3i") (f (quote (("std" "base58/std" "bech32/std" "hashes/std" "hex/std" "internals/std" "io/std" "secp256k1/std" "units/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde" "units/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std")))) (r "1.56.1")))

(define-public crate-bitcoin-0.32.1 (c (n "bitcoin") (v "0.32.1") (d (list (d (n "actual-serde") (r "^1.0.103") (f (quote ("derive" "alloc"))) (o #t) (k 0) (p "serde")) (d (n "base58") (r "^0.1.0") (k 0) (p "base58ck")) (d (n "base64") (r "^0.21.3") (o #t) (d #t) (k 0)) (d (n "bech32") (r "^0.11.0") (f (quote ("alloc"))) (k 0)) (d (n "bincode") (r "^1.3.1") (d #t) (k 2)) (d (n "bitcoinconsensus") (r "^0.105.0") (o #t) (k 0)) (d (n "hashes") (r "^0.14.0") (f (quote ("alloc" "io"))) (k 0) (p "bitcoin_hashes")) (d (n "hex") (r "^0.2.0") (f (quote ("alloc"))) (k 0) (p "hex-conservative")) (d (n "hex_lit") (r "^0.1.1") (d #t) (k 0)) (d (n "internals") (r "^0.3.0") (f (quote ("alloc"))) (d #t) (k 0) (p "bitcoin-internals")) (d (n "io") (r "^0.1.1") (f (quote ("alloc"))) (k 0) (p "bitcoin-io")) (d (n "ordered") (r "^0.2.0") (o #t) (d #t) (k 0)) (d (n "secp256k1") (r "^0.29.0") (f (quote ("hashes" "alloc"))) (k 0)) (d (n "serde_json") (r "^1.0.0") (d #t) (k 2)) (d (n "serde_test") (r "^1.0.19") (d #t) (k 2)) (d (n "units") (r "^0.1.0") (f (quote ("alloc"))) (k 0) (p "bitcoin-units")))) (h "010m44na5yw5vhrrglwspalsnp8ck768qn08hv68xsbhr0s39wsb") (f (quote (("std" "base58/std" "bech32/std" "hashes/std" "hex/std" "internals/std" "io/std" "secp256k1/std" "units/std") ("serde" "actual-serde" "hashes/serde" "secp256k1/serde" "internals/serde" "units/serde") ("secp-recovery" "secp256k1/recovery") ("secp-lowmemory" "secp256k1/lowmemory") ("rand-std" "secp256k1/rand-std" "std") ("rand" "secp256k1/rand") ("default" "std" "secp-recovery") ("bitcoinconsensus-std" "bitcoinconsensus/std" "std")))) (r "1.56.1")))

