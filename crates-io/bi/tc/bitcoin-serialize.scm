(define-module (crates-io bi tc bitcoin-serialize) #:use-module (crates-io))

(define-public crate-bitcoin-serialize-0.1.10-alpha.0 (c (n "bitcoin-serialize") (v "0.1.10-alpha.0") (d (list (d (n "bitcoin-compat") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.10-alpha.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.10-alpha.0") (d #t) (k 1)))) (h "0nz4kcfpdsx50jz0wr8l8w0jk46590jgyhbxpsk7m1nalqgqxfm9")))

(define-public crate-bitcoin-serialize-0.1.12-alpha.0 (c (n "bitcoin-serialize") (v "0.1.12-alpha.0") (d (list (d (n "bitcoin-compat") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.12-alpha.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.12-alpha.0") (d #t) (k 1)))) (h "0fhp3cm2q4vpj6vmssxs576bizsa9hpz5i5sxhd9207nkhk4qc9r")))

(define-public crate-bitcoin-serialize-0.1.13-alpha.0 (c (n "bitcoin-serialize") (v "0.1.13-alpha.0") (d (list (d (n "bitcoin-compat") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.13-alpha.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.13-alpha.0") (d #t) (k 1)))) (h "1q4awpq2zlwb4xzsp2gzx9xx10j1ggjhskr3zl8aaxyhfz15x3db")))

(define-public crate-bitcoin-serialize-0.1.16-alpha.0 (c (n "bitcoin-serialize") (v "0.1.16-alpha.0") (d (list (d (n "bitcoin-compat") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-derive") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-imports") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-primitives") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "bitcoin-support") (r "^0.1.16-alpha.0") (d #t) (k 0)) (d (n "hashbrown") (r "^0.12.1") (d #t) (k 0)) (d (n "lazy_static") (r "^1.4.0") (d #t) (k 0)) (d (n "maplit") (r "^1.0.2") (d #t) (k 0)) (d (n "static_assertions") (r "^1.1.0") (d #t) (k 0)) (d (n "bitcoin-cfg") (r "^0.1.16-alpha.0") (d #t) (k 1)))) (h "0v7cq9nvj6q5ahig559n4ahjpr1hwylp85la7ixx6naxh0h2h36i")))

