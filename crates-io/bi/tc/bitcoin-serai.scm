(define-module (crates-io bi tc bitcoin-serai) #:use-module (crates-io))

(define-public crate-bitcoin-serai-0.1.1 (c (n "bitcoin-serai") (v "0.1.1") (d (list (d (n "bitcoin") (r "^0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "frost") (r "^0.6") (f (quote ("secp256k1"))) (d #t) (k 0) (p "modular-frost")) (d (n "frost") (r "^0.6") (f (quote ("tests"))) (d #t) (k 2) (p "modular-frost")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.12") (f (quote ("arithmetic"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")))) (h "0xn8861ysb1vfrdl2j6c9c4n077kq5pg1c9r9q5cbmjkp2x358nx")))

(define-public crate-bitcoin-serai-0.2.0 (c (n "bitcoin-serai") (v "0.2.0") (d (list (d (n "bitcoin") (r "^0.29") (f (quote ("serde"))) (d #t) (k 0)) (d (n "frost") (r "^0.7") (f (quote ("secp256k1"))) (d #t) (k 0) (p "modular-frost")) (d (n "frost") (r "^0.7") (f (quote ("tests"))) (d #t) (k 2) (p "modular-frost")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.12") (f (quote ("arithmetic"))) (d #t) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.24") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "1jpfh16ib6mj6p8hbg1w1g05vykmz57p5s88908kn48ab2chy541") (f (quote (("hazmat"))))))

(define-public crate-bitcoin-serai-0.3.0 (c (n "bitcoin-serai") (v "0.3.0") (d (list (d (n "bitcoin") (r "^0.30") (f (quote ("serde"))) (d #t) (k 0)) (d (n "frost") (r "^0.8") (f (quote ("secp256k1"))) (d #t) (k 0) (p "modular-frost")) (d (n "hex") (r "^0.4") (d #t) (k 0)) (d (n "k256") (r "^0.13.1") (f (quote ("std" "arithmetic" "bits"))) (k 0)) (d (n "lazy_static") (r "^1") (d #t) (k 0)) (d (n "rand_core") (r "^0.6") (d #t) (k 0)) (d (n "reqwest") (r "^0.11") (f (quote ("json"))) (d #t) (k 0)) (d (n "secp256k1") (r "^0.27") (f (quote ("global-context"))) (d #t) (k 0)) (d (n "serde") (r "^1") (f (quote ("derive"))) (d #t) (k 0)) (d (n "serde_json") (r "^1") (d #t) (k 0)) (d (n "sha2") (r "^0.10") (d #t) (k 0)) (d (n "thiserror") (r "^1") (d #t) (k 0)) (d (n "tokio") (r "^1") (f (quote ("full"))) (d #t) (k 2)) (d (n "transcript") (r "^0.3") (f (quote ("recommended"))) (d #t) (k 0) (p "flexible-transcript")) (d (n "zeroize") (r "^1.5") (d #t) (k 0)))) (h "09i13f4zw5m1ay4k3kbijpkfd8r07906dh2ri428as4ari4q00jc") (f (quote (("hazmat"))))))

